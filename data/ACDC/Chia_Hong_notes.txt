* GXL (Graph eXchange Language)
    * Reference: http://www.gupro.de/GXL/Introduction/section5.html
    * There are many filters for converting GXL documents into local file formats and vice versa. These tools include Bauhaus Resource Graphs [67], DOT (GraphViz) [68], GraLab graphs [69], PROGRES graphs [70], RSF [35], and TA [33].
    * TA (The Tuple Attribute Language)
        * Introduction
            * https://plg.uwaterloo.ca/~holt/papers/ta-intro.htm
    * RSF (Rigi Standard Format)
        * Rigi User’s Manual
            * http://www.rigi.cs.uvic.ca/downloads/rigi/doc/rigi-5.4.4-manual.pdf
        * Rigi Web site
            * http://www.rigi.cs.uvic.ca/index.html
        * Example
            * The Rigi C-Language Parser
                * http://www.softlab.ntua.gr/~kkontog/rigiparse.html
                * The generated file “main.rsf” looks different from the rsf file in ACDC directory
* Experiment:
    * Pygi
        * https://github.com/rpuncel/Pygi
        * Python parser that converts doxygen-generated xml files in RSF (Rigi Standard Format) files
    * arch-prediction-rsfs
        * https://github.com/jgarci40/arch-prediction-rsfs
        * The structure of rsf file in this repo looks similar to ours
        * The recovered architecture files are in the Rigi Standard Format (RSF), where each line in the file is a triple of the following form: contain [module ID m] [entity name e]. This format means that the entity e has been mapped to, or belongs to, module m.
    * Doxygen
        * Download
            * http://www.stack.nl/~dimitri/doxygen/download.html#latestsrc
        * Example
            * http://leochengz.pixnet.net/blog/post/217826270-doxygen%2Bgraphviz