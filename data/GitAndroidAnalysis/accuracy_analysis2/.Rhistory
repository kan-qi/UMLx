#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]]){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]]){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]]){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
classify <- function(data, cutPoints) {
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]]){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
getCutPoints <- function(dataset){
#dataset <- na.omit(modelData$SLOC)
cutPoints <- as.vector(classIntervals(na.omit(dataset), 3)$brks)
cutPoints[1] <- -Inf
cutPoints[length(cutPoints)] <- Inf
lastPoint <- -1;
for(i in 1:length(cutPoints)){
if(cutPoints[i] <= lastPoint){
cutPoints[i] = lastPoint+0.1;
}
lastPoint = cutPoints[i]
}
cutPoints
}
selectProjectsByType <- function(modelData, type){
if(initDate = "early"){
range <- c(l = quantile(modelData$KSLOC, 0), u = quantile(modelData$StartTime, 0.33));
}
else if(initDate = "normal"){
range <- c(l = quantile(modelData$KSLOC, 0.34), u = quantile(modelData$StartTime, 0.66));
}
else if(initDate = "late"){
range <- c(l = quantile(modelData$KSLOC, 0.67), u = quantile(modelData$StartTime, 1.0));
}
selectedRows <- c();
#print(range[1])
for (i in 1:nrow(modelData)) {
modelDataItem <- modelData[i, ]
if(modelDataItem$KSLOC > range[1] && modelDataItem$KSLOC <= range[2]){
selectedRows <- c(selectedRows, i)
}
}
print(selectedRows)
modelData <- modelData[selectedRows,]
}
result <- list()
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]]){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]]){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
}
return(result)
}
getCutPoints <- function(dataset){
#dataset <- na.omit(modelData$SLOC)
cutPoints <- as.vector(classIntervals(na.omit(dataset), 3)$brks)
cutPoints[1] <- -Inf
cutPoints[length(cutPoints)] <- Inf
lastPoint <- -1;
for(i in 1:length(cutPoints)){
if(cutPoints[i] <= lastPoint){
cutPoints[i] = lastPoint+0.1;
}
lastPoint = cutPoints[i]
}
cutPoints
}
selectProjectsByType <- function(modelData, type){
if(initDate = "early"){
range <- c(l = quantile(modelData$KSLOC, 0), u = quantile(modelData$StartTime, 0.33));
}
else if(initDate = "normal"){
range <- c(l = quantile(modelData$KSLOC, 0.34), u = quantile(modelData$StartTime, 0.66));
}
else if(initDate = "late"){
range <- c(l = quantile(modelData$KSLOC, 0.67), u = quantile(modelData$StartTime, 1.0));
}
selectedRows <- c();
#print(range[1])
for (i in 1:nrow(modelData)) {
modelDataItem <- modelData[i, ]
if(modelDataItem$KSLOC > range[1] && modelDataItem$KSLOC <= range[2]){
selectedRows <- c(selectedRows, i)
}
}
print(selectedRows)
modelData <- modelData[selectedRows,]
}
classify <- function(data, cutPoints) {
classifiedDataPoints <- classify(modelData, cutpoints)
View(sig_bs_f)
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
print(sumCoord)
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
}
#dataset <- na.omit(modelData$SLOC)
cutPoints <- as.vector(classIntervals(na.omit(dataset), 3)$brks)
cutpoints = matrix(nrow = 3, ncol = length(sloc_cut_points))
rownames(cutpoints) = c("SLOC", "Duration", "Personnel")
cutpoints["SLOC",] = sloc_cut_points
cutpoints["Duration",] = duration_cut_points
cutpoints["Personnel",] = personnel_cut_points
print(cutpoints)
classifiedDataPoints <- classify(modelData, cutpoints)
cutPoints = cutpoints
#print(cutPoints)
data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
return(result)
print(result)
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
cutPoints = cutpoints
#print(cutPoints)
data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
cutPoints = cutpoints
#print(cutPoints)
data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
print(result)
return(result)
classify <- function(data, cutPoints) {
cutPoints = cutpoints
#print(cutPoints)
data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
print(result)
return(result)
}
classify <- function(data, cutPoints) {
#cutPoints = cutpoints
#print(cutPoints)
#data <- modelData
numVariables <- nrow(cutPoints)
numBins <- ncol(cutPoints) - 1
totalClassifications <- numVariables*numBins - numVariables + 1
levels <- paste("l", 1:totalClassifications, sep = "")
result <- list()
if(nrow(data) > 0){
for (i in 1:nrow(data)) {
sumCoord <- 0
#classifications <- c()
for (p in rownames(cutPoints)) {
#print(p)
#p = "SLOC"
parameterResult <- cut(data[i, p], breaks = cutPoints[p, ], labels = FALSE)
#classifications <- c(classifications, parameterResult)
print(parameterResult)
sumCoord <- sumCoord + parameterResult
}
print(sumCoord)
combinedClass <- paste("l", sumCoord-nrow(cutPoints)+1, sep = "")
if(is.null(result[[combinedClass]])){
result[[combinedClass]] = c()
}
result[combinedClass] <- c(result[combinedClass], data$Project)
}
}
print(result)
return(result)
}
cutpoints = matrix(nrow = 3, ncol = length(sloc_cut_points))
rownames(cutpoints) = c("SLOC", "Duration", "Personnel")
cutpoints["SLOC",] = sloc_cut_points
cutpoints["Duration",] = duration_cut_points
cutpoints["Personnel",] = personnel_cut_points
print(cutpoints)
totalClassifications <- numVariables*numBins - numVariables + 1
classifiedDataPoints <- classify(modelData, cutpoints)
print(classifiedDataPoints)
data
