{"<org.bitcoinj.core.PeerGroup$16: void onSuccess(java.lang.Object)>":["<org.bitcoinj.core.PeerGroup$16: void onSuccess(org.bitcoinj.core.Transaction)>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture waitForPeers(int)>":["<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture waitForPeersOfVersion(int,long)>"],"<ch.qos.logback.classic.joran.action.RootLoggerAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void handleGo()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void setState(de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$16: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,android.os.Handler,int,org.bitcoinj.wallet.Wallet)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void signAndSendPayment(org.spongycastle.crypto.params.KeyParameter)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<de.schildbach.wallet.WalletApplication: int scryptIterationsTarget()>","<de.schildbach.wallet.ui.send.DeriveKeyTask: void deriveKey(org.bitcoinj.wallet.Wallet,java.lang.String)>"],"<androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)>":["<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>"],"<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$PeerAddress getBroadcastBy(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: int getBroadcastByCount()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Wallet$9: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.wallet.Wallet$BalanceFutureRequest,org.bitcoinj.core.Coin)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.ProgressDialogFragment$Observer: void <init>(androidx.fragment.app.FragmentManager)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void escape(java.lang.String,java.lang.StringBuffer)>":["<java.lang.String: char charAt(int)>","<ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>","<ch.qos.logback.core.pattern.util.RegularEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>"],"<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>":["<ch.qos.logback.core.rolling.helper.CompressionMode: void <init>(java.lang.String,int)>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>"],"<org.slf4j.helpers.Util: void report(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<de.schildbach.wallet.ui.WalletActivity: boolean onOptionsItemSelected(android.view.MenuItem)>":["<de.schildbach.wallet.ui.AbstractWalletActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<de.schildbach.wallet.ui.send.SweepWalletActivity: void start(android.content.Context)>","<de.schildbach.wallet.ui.WalletActivity: void handleScan(android.view.View)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<de.schildbach.wallet.ui.Event: void <init>(java.lang.Object)>","<de.schildbach.wallet.ui.Event: de.schildbach.wallet.ui.Event simple()>","<java.lang.Integer: void <clinit>()>","<android.app.Activity: void startActivity(android.content.Intent)>","<de.schildbach.wallet.ui.WalletActivity: void handleSendCoins()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<de.schildbach.wallet.ui.WalletActivity: void handleRequestCoins()>","<android.content.Intent: void <clinit>()>","<de.schildbach.wallet.ui.AddressBookActivity: void start(android.content.Context)>"],"<androidx.fragment.app.Fragment: void performPause()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.fragment.app.Fragment: void onPause()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchPause()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onPause()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onPause()>"],"<org.bitcoinj.utils.MonetaryFormat: java.lang.String code()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.NumberFormatException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2600()>"],"<org.spongycastle.asn1.DERExternal: void setEncoding(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder setClassName(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto build()>"],"<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.Converter compile()>":["<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: java.util.List getOptions()>","<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.Converter compile()>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.pattern.parser.Compiler: void addToList(ch.qos.logback.core.pattern.Converter)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.pattern.parser.FormattingNode: ch.qos.logback.core.pattern.FormatInfo getFormatInfo()>","<ch.qos.logback.core.pattern.parser.Node: java.lang.Object getValue()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode)>","<ch.qos.logback.core.pattern.parser.Compiler: void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>","<ch.qos.logback.core.pattern.parser.CompositeNode: ch.qos.logback.core.pattern.parser.Node getChildNode()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.pattern.LiteralConverter: void <init>(java.lang.String)>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.Internal: void <clinit>()>":["<com.google.protobuf.Internal: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$1: com.google.protobuf.DescriptorProtos$MessageOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void validateReceivingAddress()>":["<de.schildbach.wallet.ui.AddressAndLabel: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String,java.lang.String)>","<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.core.Address: org.bitcoinj.core.NetworkParameters getParametersFromAddress(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>":["<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>"],"<org.bitcoinj.crypto.MnemonicException$MnemonicLengthException: void <init>(java.lang.String)>":["<org.bitcoinj.crypto.MnemonicException: void <init>(java.lang.String)>"],"<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int,com.google.protobuf.WireFormat$1)>":["<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>"],"<org.bitcoinj.wallet.Protos$Script: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>":["<okhttp3.CacheControl: void <clinit>()>","<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>"],"<androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>":["<androidx.lifecycle.LiveData: void <clinit>()>","<androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>","<androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>","<androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)>","<androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()>"],"<okhttp3.internal.platform.Platform: boolean isConscryptPreferred()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.System: void <clinit>()>","<java.security.Security: java.security.Provider[] getProviders()>"],"<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[])>":["<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,long,org.bitcoinj.core.Transaction)>","<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],org.bitcoinj.core.TransactionOutPoint)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$7600()>"],"<org.bitcoinj.crypto.TransactionSignature: byte[] encodeToBitcoin()>":["<java.io.ByteArrayOutputStream: void write(int)>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.bitcoinj.core.ECKey$ECDSASignature: java.io.ByteArrayOutputStream derByteStream()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<com.google.protobuf.DynamicMessage$Builder: void ensureIsMutable()>":["<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet clone()>","<com.google.protobuf.FieldSet: boolean isImmutable()>"],"<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>":["<okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>","<okhttp3.internal.platform.Platform: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService: void access$1600(de.schildbach.wallet.service.BlockchainService)>":["<de.schildbach.wallet.service.BlockchainService: void observeLiveDatasThatAreDependentOnWalletAndBlockchain()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo getSourceCodeInfo()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$16: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,android.os.Handler,int,org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.ui.send.DeriveKeyTask: void <init>(android.os.Handler,int)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void stopBluetoothListening()>":["<android.content.ContextWrapper: boolean stopService(android.content.Intent)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message build()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK build()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.FieldSet buildExtensions()>":["<com.google.protobuf.FieldSet: void makeImmutable()>"],"<com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicIntegerFieldUpdater)>":["<com.google.common.util.concurrent.AggregateFutureState$AtomicHelper: void <init>(com.google.common.util.concurrent.AggregateFutureState$1)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$Script: int access$6102(org.bitcoinj.wallet.Protos$Script,int)>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.ByteString access$5902(org.bitcoinj.wallet.Protos$Script,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: long access$6002(org.bitcoinj.wallet.Protos$Script,long)>"],"<org.bitcoinj.core.ECKey: void <init>(java.security.SecureRandom)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.spongycastle.crypto.params.ECPublicKeyParameters: org.spongycastle.math.ec.ECPoint getQ()>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>","<java.lang.Object: void <init>()>","<org.spongycastle.crypto.generators.ECKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>","<org.spongycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>","<org.spongycastle.crypto.generators.ECKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>","<org.spongycastle.crypto.AsymmetricCipherKeyPair: org.spongycastle.crypto.params.AsymmetricKeyParameter getPublic()>","<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECCurve,byte[])>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<org.spongycastle.crypto.params.ECKeyGenerationParameters: void <init>(org.spongycastle.crypto.params.ECDomainParameters,java.security.SecureRandom)>","<org.spongycastle.crypto.AsymmetricCipherKeyPair: org.spongycastle.crypto.params.AsymmetricKeyParameter getPrivate()>","<org.spongycastle.crypto.generators.ECKeyPairGenerator: void <init>()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getCodeLocation(java.lang.String,char)>":["<ch.qos.logback.classic.spi.PackagingDataCalculator: boolean isFolder(int,java.lang.String)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: java.util.Map requestExchangeRates()>":["<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.json.JSONObject: java.util.Iterator keys()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>","<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>","<org.bitcoinj.utils.ExchangeRate: void <init>(org.bitcoinj.utils.Fiat)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.json.JSONObject: void <clinit>()>","<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: void <clinit>()>","<java.util.TreeMap: void <init>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>","<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<okhttp3.Request$Builder: void <init>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<okhttp3.RealCall: okhttp3.Response execute()>","<org.json.JSONObject: java.lang.String getString(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<java.lang.IllegalArgumentException: java.lang.String getMessage()>","<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>","<okhttp3.Request$Builder: okhttp3.Request build()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<org.json.JSONObject: void <init>(java.lang.String)>","<de.schildbach.wallet.data.ExchangeRate: void <init>(org.bitcoinj.utils.ExchangeRate,java.lang.String)>","<de.schildbach.wallet.data.ExchangeRatesProvider: org.bitcoinj.utils.Fiat parseFiatInexact(java.lang.String,java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<org.bitcoinj.utils.Fiat: int signum()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>"],"<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey$1: void <init>()>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>"],"<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.TransactionBroadcast: com.google.common.util.concurrent.ListenableFuture broadcast()>":["<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture waitForPeers(int)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.PeerGroup: void addPreMessageReceivedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>","<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void <init>(org.bitcoinj.core.TransactionBroadcast)>","<org.bitcoinj.core.TransactionBroadcast: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.util.concurrent.ImmediateFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>","<java.lang.Integer: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.ArrayList: int size()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<ch.qos.logback.classic.pattern.EnsureExceptionHandling: void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter)>":["<ch.qos.logback.classic.LoggerContext: boolean isPackagingDataEnabled()>","<ch.qos.logback.core.pattern.Converter: void setNext(ch.qos.logback.core.pattern.Converter)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter: void <init>()>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void <init>()>","<ch.qos.logback.classic.pattern.EnsureExceptionHandling: boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter)>","<ch.qos.logback.core.pattern.ConverterUtil: ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter)>"],"<com.google.protobuf.CodedInputStream: long readRawLittleEndian64()>":["<com.google.protobuf.CodedInputStream: void refillBuffer(int)>"],"<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node T()>":["<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode C()>","<ch.qos.logback.core.pattern.parser.Parser: void advanceTokenPointer()>","<ch.qos.logback.core.pattern.parser.Node: void <init>(int,java.lang.Object)>","<ch.qos.logback.core.pattern.FormatInfo: ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String)>","<ch.qos.logback.core.pattern.parser.FormattingNode: void setFormatInfo(ch.qos.logback.core.pattern.FormatInfo)>","<ch.qos.logback.core.pattern.parser.Parser: void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String)>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>"],"<org.bitcoinj.core.Block: void parseTransactions(int)>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.core.Message: int getMessageSize()>","<org.bitcoinj.core.Message: long readVarInt()>","<org.bitcoinj.core.Transaction: int getOptimalEncodingMessageSize()>","<org.bitcoinj.core.TransactionConfidence: void setSource(org.bitcoinj.core.TransactionConfidence$Source)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>","<org.bitcoinj.core.BitcoinSerializer: boolean isParseRetainMode()>","<org.bitcoinj.core.VarInt: int sizeOf(long)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<org.slf4j.LoggerFactory: void replayEvents()>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>(int)>","<org.slf4j.LoggerFactory: void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)>","<org.slf4j.helpers.SubstituteLoggerFactory: java.util.concurrent.LinkedBlockingQueue getEventQueue()>","<java.util.concurrent.LinkedBlockingQueue: int drainTo(java.util.Collection,int)>","<org.slf4j.LoggerFactory: void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.util.ArrayList: void clear()>","<java.util.concurrent.LinkedBlockingQueue: int size()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: void setValue(java.lang.Object)>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>":["<com.google.common.collect.ImmutableList$Builder: void <init>()>"],"<org.bitcoinj.core.Utils$Pair: void <init>(int,int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat noCode()>":["<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>"],"<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String getPresentationHeader()>":["<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String getPresentationHeaderPrefix()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.LayoutBase: java.lang.String getPresentationHeader()>","<java.lang.StringBuilder: void <init>()>"],"<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(com.google.protobuf.CodedInputStream)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.CodedInputStream)>"],"<org.bitcoinj.wallet.Wallet: void addTransactionsDependingOn(java.util.Set,java.util.Set)>":["<java.util.LinkedHashMap: java.util.Set keySet()>","<java.util.LinkedHashMap: void <init>()>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>","<java.util.LinkedHashMap: boolean isEmpty()>","<java.util.HashSet: java.util.Iterator iterator()>"],"<ch.qos.logback.core.joran.spi.Interpreter: java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes)>":["<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath)>","<ch.qos.logback.core.joran.spi.Interpreter: java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext)>"],"<com.google.common.collect.MapMakerInternalMap$Strength$1: com.google.common.base.Equivalence defaultEquivalence()>":["<com.google.common.base.Equivalence: com.google.common.base.Equivalence equals()>"],"<org.bitcoin.protocols.payments.Protos$Payment: int getTransactionsCount()>":["<java.util.ArrayList: int size()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionInput)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Wallet: void markKeysAsUsed(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.wallet.KeyChainGroup: void markP2SHAddressAsUsed(org.bitcoinj.core.Address)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromP2SHScript(org.bitcoinj.core.NetworkParameters,org.bitcoinj.script.Script)>","<org.bitcoinj.wallet.KeyChainGroup: void markPubKeyAsUsed(byte[])>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.Message: org.bitcoinj.core.NetworkParameters getParams()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void markPubKeyHashAsUsed(byte[])>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<java.lang.Throwable: java.lang.String toString()>"],"<org.spongycastle.asn1.ASN1Boolean: void <clinit>()>":["<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>","<org.spongycastle.asn1.ASN1Boolean: void <clinit>()>"],"<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable)>":["<com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)>","<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: int getOutputsCount()>":["<java.util.ArrayList: int size()>"],"<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void run()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>"],"<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.service.InactivityNotificationService: void onCreate()>":["<android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>","<java.lang.System: long currentTimeMillis()>","<android.app.IntentService: void startForeground(int,android.app.Notification)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)>","<java.lang.System: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)>","<androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,java.lang.String)>","<android.app.IntentService: android.app.Application getApplication()>","<android.app.IntentService: void onCreate()>"],"<org.spongycastle.asn1.x500.style.BCStyle: org.spongycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)>":["<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1ObjectIdentifier decodeAttrName(java.lang.String,java.util.Hashtable)>"],"<ch.qos.logback.core.util.FileSize: void <init>(long)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$1: org.bitcoinj.wallet.Protos$TransactionOutput parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>","<java.lang.Math: int min(int,int)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>","<androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>"],"<okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])>":["<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"],"<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>":["<com.google.protobuf.UninitializedMessageException: void <init>(java.util.List)>","<com.google.protobuf.MessageReflection: java.util.List findMissingFields(com.google.protobuf.MessageOrBuilder)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder create()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: void <init>()>"],"<org.bitcoinj.wallet.Wallet: void queueOnScriptsChanged(java.util.List,boolean)>":["<org.bitcoinj.wallet.Wallet$8: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,java.util.List,boolean)>","<org.bitcoinj.wallet.Wallet$8: void run()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String toRegex()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>","<ch.qos.logback.core.pattern.LiteralConverter: java.lang.String convert(java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>":["<android.app.Notification$Builder: android.app.Notification$Builder setVisibility(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>","<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>","<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>","<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.app.Notification$Builder: android.app.Notification$Builder setLocalOnly(boolean)>","<java.lang.Integer: java.lang.String toString(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)>","<android.app.Notification$Builder: android.app.Notification$Builder setUsesChronometer(boolean)>","<android.app.Notification$Builder: android.app.Notification$Builder setVibrate(long[])>","<java.util.ArrayList: int size()>","<android.app.Notification$Builder: android.app.Notification$Builder setSortKey(java.lang.String)>","<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>","<java.util.ArrayList: java.lang.Object get(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>","<androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)>","<android.app.Notification$Builder: android.app.Notification$Builder setPublicVersion(android.app.Notification)>","<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>","<android.app.Notification$Builder: android.app.Notification$Builder setNumber(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setProgress(int,int,boolean)>","<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>","<android.os.Bundle: void <clinit>()>","<android.app.Notification$Builder: android.app.Notification$Builder setGroup(java.lang.String)>","<android.app.Notification$Builder: android.app.Notification$Builder setCustomBigContentView(android.widget.RemoteViews)>","<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>","<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>","<android.os.Bundle: void putBoolean(java.lang.String,boolean)>","<java.util.ArrayList: boolean isEmpty()>","<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>","<java.lang.String: void <clinit>()>","<android.os.Bundle: void putString(java.lang.String,java.lang.String)>","<android.os.Build$VERSION: void <clinit>()>","<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri)>","<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>","<android.app.Notification$Builder: android.app.Notification$Builder setContentInfo(java.lang.CharSequence)>","<java.lang.Object: void <init>()>","<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,android.media.AudioAttributes)>","<android.os.Bundle: void putAll(android.os.Bundle)>","<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)>","<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>","<android.app.Notification$Builder: android.app.Notification$Builder setTimeoutAfter(long)>","<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)>","<android.app.Notification$Builder: android.app.Notification$Builder setGroupAlertBehavior(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setRemoteInputHistory(java.lang.CharSequence[])>","<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)>","<java.lang.Integer: void <clinit>()>","<android.app.Notification$Builder: android.app.Notification$Builder addPerson(java.lang.String)>","<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,int)>","<android.app.Notification$Builder: android.app.Notification$Builder setShortcutId(java.lang.String)>","<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>","<android.os.Bundle: void <init>()>","<android.app.Notification$Builder: void <init>(android.content.Context)>","<android.app.Notification$Builder: android.app.Notification$Builder setColorized(boolean)>","<androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()>","<android.app.Notification$Builder: android.app.Notification$Builder setCustomContentView(android.widget.RemoteViews)>","<android.app.Notification$Builder: android.app.Notification$Builder setExtras(android.os.Bundle)>","<android.app.Notification$Builder: android.app.Notification$Builder setGroupSummary(boolean)>","<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>","<java.util.ArrayList: java.util.Iterator iterator()>","<android.app.Notification$Builder: android.app.Notification$Builder setShowWhen(boolean)>","<java.util.ArrayList: void <init>()>","<android.app.Notification$Builder: android.app.Notification$Builder setBadgeIconType(int)>","<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>","<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>","<android.app.Notification$Builder: android.app.Notification$Builder setCategory(java.lang.String)>","<android.text.TextUtils: void <clinit>()>","<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)>","<android.app.Notification$Builder: android.app.Notification$Builder setLights(int,int,int)>","<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)>","<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>"],"<org.spongycastle.asn1.x500.X500NameBuilder: void <init>(org.spongycastle.asn1.x500.X500NameStyle)>":["<java.lang.Object: void <init>()>","<java.util.Vector: void <init>()>"],"<com.google.common.base.Splitter: java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter: java.util.Iterator splittingIterator(java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder mergeFrom(org.bitcoinj.wallet.Protos$PeerAddress)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>":["<androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>","<android.util.Log: int w(java.lang.String,java.lang.String)>","<androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>","<androidx.collection.SparseArrayCompat: void <clinit>()>","<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>","<androidx.collection.SparseArrayCompat: void <init>(int)>","<androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentController: void dispatchCreate()>","<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>","<androidx.collection.SparseArrayCompat: void <init>()>"],"<org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>":["<org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>"],"<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1)>":["<okhttp3.RequestBody: void <init>()>"],"<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void init(ch.qos.logback.classic.LoggerContext,java.lang.Object)>":["<ch.qos.logback.classic.util.ContextSelectorStaticBinder: ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<ch.qos.logback.classic.selector.DefaultContextSelector: void <init>(ch.qos.logback.classic.LoggerContext)>","<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <clinit>()>","<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String)>","<java.lang.IllegalAccessException: void <init>(java.lang.String)>"],"<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Builder newBuilderForType()>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <init>(ch.qos.logback.core.Context)>":["<java.util.HashMap: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$24$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$24)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date innerGetEndOfNextNthPeriod(java.util.Calendar,ch.qos.logback.core.rolling.helper.PeriodicityType,java.util.Date,int)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.util.Calendar: java.util.Date getTime()>","<java.util.Calendar: void setTime(java.util.Date)>","<java.util.Calendar: void set(int,int)>","<java.util.Calendar: int getFirstDayOfWeek()>","<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.rolling.helper.RollingCalendar$1: void <clinit>()>","<java.util.GregorianCalendar: void add(int,int)>"],"<org.bitcoinj.core.Transaction: void setVersion(int)>":["<org.bitcoinj.core.Transaction: void unCache()>"],"<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>","<com.google.common.util.concurrent.MoreExecutors$5: void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture)>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsActivity$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsActivity)>","<de.schildbach.wallet.service.BlockchainService: void start(android.content.Context,boolean)>","<android.app.Activity: void setContentView(int)>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)>"],"<com.google.protobuf.Descriptors$FieldDescriptor: boolean isOptional()>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>"],"<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: java.lang.String transformFileNamePattern2ZipEntry(java.lang.String)>":["<ch.qos.logback.core.rolling.helper.FileFilterUtil: java.lang.String slashify(java.lang.String)>","<ch.qos.logback.core.rolling.helper.FileFilterUtil: java.lang.String afterLastSlash(java.lang.String)>"],"<androidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: java.lang.String trim()>","<androidx.room.RoomDatabase$Builder: void <init>(android.content.Context,java.lang.Class,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder setExpires(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void writeTo(com.google.protobuf.CodedOutputStream)>":["<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>","<com.google.protobuf.CodedOutputStream: void writeInt64(int,long)>","<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>"],"<org.bitcoinj.wallet.DeterministicSeed: boolean isEncrypted()>":["<com.google.common.base.Preconditions: void checkState(boolean)>"],"<de.schildbach.wallet.ui.send.SweepWalletActivity: void start(android.content.Context,org.bitcoinj.core.VersionedChecksummedBytes)>":["<android.app.Activity: void startActivity(android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>","<android.content.Intent: void <clinit>()>"],"<androidx.loader.content.ModernAsyncTask$2: void <init>(androidx.loader.content.ModernAsyncTask)>":["<androidx.loader.content.ModernAsyncTask$WorkerRunnable: void <init>()>"],"<com.google.protobuf.TextFormat$Printer: void printUnknownFields(com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>":["<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.TextFormat$Printer: void printUnknownField(int,int,java.util.List,com.google.protobuf.TextFormat$TextGenerator)>","<com.google.protobuf.TextFormat$Printer: void printUnknownFields(com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>","<com.google.protobuf.TextFormat$TextGenerator: void indent()>","<com.google.protobuf.UnknownFieldSet: java.util.Map asMap()>","<com.google.protobuf.TextFormat$TextGenerator: void outdent()>","<com.google.protobuf.TextFormat$TextGenerator: void print(java.lang.CharSequence)>"],"<androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)>":["<androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)>","<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>"],"<com.google.common.base.Equivalence$Identity: int doHash(java.lang.Object)>":["<java.lang.System: void <clinit>()>","<java.lang.System: int identityHashCode(java.lang.Object)>"],"<org.slf4j.event.EventRecodingLogger: void info(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.AbstractMessage: int hashCode()>":["<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: java.util.Map getAllFields()>","<com.google.protobuf.UnknownFieldSet: int hashCode()>","<com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>","<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.ExtensionRegistry$ExtensionInfo findExtensionByNumber(com.google.protobuf.ExtensionRegistry,com.google.protobuf.Descriptors$Descriptor,int)>":["<com.google.protobuf.ExtensionRegistry: com.google.protobuf.ExtensionRegistry$ExtensionInfo findImmutableExtensionByNumber(com.google.protobuf.Descriptors$Descriptor,int)>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector)>":["<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <clinit>()>"],"<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet clone()>":["<com.google.protobuf.SmallSortedMap$EmptySet$1: boolean hasNext()>","<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.FieldSet: void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>","<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet newFieldSet()>","<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>","<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>","<com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()>","<com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()>","<com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()>"],"<org.spongycastle.asn1.DERApplicationSpecific: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: boolean hasClassName()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void <init>()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask: void requestPaymentRequest(java.lang.String)>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask,java.lang.String)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: android.os.Handler access$200(de.schildbach.wallet.ui.send.RequestPaymentRequestTask)>"],"<com.google.protobuf.Descriptors$FieldDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean)>":["<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getName()>","<com.google.protobuf.Descriptors$Descriptor: java.util.List getOneofs()>","<com.google.protobuf.Descriptors$FieldDescriptor: int getNumber()>","<java.lang.String: void <init>(java.lang.String)>","<java.lang.String: int length()>","<com.google.protobuf.Descriptors: java.lang.String access$1500(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.Descriptors: void <clinit>()>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: int getOneofDeclCount()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type valueOf(com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.DescriptorProtos$DescriptorProto toProto()>","<com.google.protobuf.Descriptors$OneofDescriptor: int access$1808(com.google.protobuf.Descriptors$OneofDescriptor)>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<androidx.fragment.app.BackStackState$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$6200()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint publicPointFromPrivate(java.math.BigInteger)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>","<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>","<org.spongycastle.math.ec.FixedPointCombMultiplier: void <init>()>","<org.spongycastle.math.ec.AbstractECMultiplier: org.spongycastle.math.ec.ECPoint multiply(org.spongycastle.math.ec.ECPoint,java.math.BigInteger)>","<java.math.BigInteger: int bitLength()>","<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>"],"<org.bitcoinj.wallet.Wallet: void addWalletTransactionsToSet(java.util.Set,org.bitcoinj.wallet.WalletTransaction$Pool,java.util.Collection)>":["<org.bitcoinj.wallet.WalletTransaction: void <init>(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>","<java.util.HashSet: boolean add(java.lang.Object)>"],"<de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem: void <init>(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,boolean)>":["<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>","<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat code(int,java.lang.String)>","<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.core.Address getToAddressOfSent(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)>","<org.bitcoinj.wallet.DefaultCoinSelector: boolean isSelectable(org.bitcoinj.core.Transaction)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>","<android.text.format.DateUtils: void <clinit>()>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: int getSpendableCoinbaseDepth()>","<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.core.Address getWalletAddressOfReceived(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)>","<java.lang.Math: int min(int,int)>","<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>","<de.schildbach.wallet.util.WalletUtils: boolean isEntirelySelf(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)>","<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>","<de.schildbach.wallet.Constants: void <clinit>()>","<android.graphics.Typeface: void <clinit>()>","<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>","<de.schildbach.wallet.ui.TransactionsAdapter$ListItem: void <init>()>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatAddress(org.bitcoinj.core.Address,int,int)>","<org.bitcoinj.wallet.Wallet: long getLastBlockSeenTimeSecs()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<org.bitcoinj.core.Coin: int signum()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<de.schildbach.wallet.util.Formats: java.lang.String[] sanitizeMemo(java.lang.String)>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<android.content.Context: java.lang.String getString(int)>","<org.bitcoinj.core.Message: void <clinit>()>","<de.schildbach.wallet.util.Formats: void <clinit>()>","<de.schildbach.wallet.util.WalletUtils: boolean isPayToManyTransaction(org.bitcoinj.core.Transaction)>","<org.bitcoinj.core.Coin: boolean isZero()>"],"<androidx.core.view.ViewCompat: void <clinit>()>":["<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<java.lang.Character: boolean isLetter(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[],int)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.util.Loader$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.MessageSerializer: org.bitcoinj.core.Block makeBlock(byte[])>":["<org.bitcoinj.core.BitcoinSerializer: org.bitcoinj.core.Block makeBlock(byte[],int,int)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>"],"<java.lang.Integer: int lowestOneBit(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidEndTag()>"],"<ch.qos.logback.core.pattern.parser.Parser: void <clinit>()>":["<ch.qos.logback.core.pattern.parser.Parser: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Token: java.lang.String getValue()>","<java.util.HashMap: void <init>()>","<java.lang.String: java.lang.String toString()>","<java.lang.Class: java.lang.String getName()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>"],"<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>":["<ch.qos.logback.classic.joran.JoranConfigurator: void <init>()>","<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)>","<ch.qos.logback.classic.util.ContextInitializer: java.net.URL findConfigFileFromSystemProperties(boolean)>","<ch.qos.logback.core.android.AndroidContextUtil: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.android.AndroidContextUtil: void setupProperties(ch.qos.logback.classic.LoggerContext)>","<ch.qos.logback.classic.util.ContextInitializer: java.net.URL findConfigFileURLFromAssets(boolean)>","<ch.qos.logback.core.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.core.Context)>"],"<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData: void onActive()>":["<org.bitcoinj.utils.Threading: void <clinit>()>"],"<com.squareup.moshi.StandardJsonAdapters$2: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<org.spongycastle.crypto.digests.LongDigest: void update(byte[],int,int)>":["<org.spongycastle.crypto.digests.LongDigest: void update(byte)>","<org.spongycastle.crypto.digests.LongDigest: void processWord(byte[],int)>"],"<ch.qos.logback.core.pattern.parser.CompositeNode: void <init>(java.lang.String)>":["<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void <init>(int,java.lang.Object)>"],"<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash calculateMerkleRoot()>":["<org.bitcoinj.core.Block: java.util.List buildMerkleTree()>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<java.util.ArrayList: java.lang.Object get(int)>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setWeak(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.Wallet$FeeCalculation calculateFee(org.bitcoinj.wallet.SendRequest,org.bitcoinj.core.Coin,java.util.List,boolean,java.util.List)>":["<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionOutput)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.bitcoinj.core.VarInt: int sizeOf(long)>","<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address currentChangeAddress()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin subtract(org.bitcoinj.core.Coin)>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>","<org.bitcoinj.core.InsufficientMoneyException: void <init>(org.bitcoinj.core.Coin)>","<org.bitcoinj.wallet.DefaultCoinSelector: org.bitcoinj.wallet.CoinSelection select(org.bitcoinj.core.Coin,java.util.List)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getValue()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void resetTxInputs(org.bitcoinj.wallet.SendRequest,java.util.List)>","<org.bitcoinj.core.TransactionOutput: boolean isDust()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>","<org.bitcoinj.wallet.Wallet: int estimateBytesForSigning(org.bitcoinj.wallet.CoinSelection)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: int signum()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getMinNonDustValue()>","<org.bitcoinj.wallet.Wallet$FeeCalculation: void <init>(org.bitcoinj.wallet.Wallet$1)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionInput: byte[] getScriptBytes()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<java.util.LinkedList: void <init>(java.util.Collection)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder setMessageSetWireFormat(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okhttp3.HttpUrl$Builder: java.lang.String toString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>","<java.lang.String: boolean isEmpty()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int indexOf(int)>","<okhttp3.HttpUrl: int defaultPort(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<okhttp3.HttpUrl$Builder: int effectivePort()>"],"<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.store.ChainFileLockedException: void <init>(java.lang.String)>":["<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentRequest)>"],"<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher,org.spongycastle.crypto.paddings.BlockCipherPadding)>":["<org.spongycastle.crypto.BufferedBlockCipher: void <init>()>","<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>"],"<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionSigner)>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder setData(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionSigner: boolean hasClassName()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.ByteString getData()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: java.lang.Object access$16600(org.bitcoinj.wallet.Protos$TransactionSigner)>","<org.bitcoinj.wallet.Protos$TransactionSigner: boolean hasData()>","<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner getDefaultInstance()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.FieldSet: void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>"],"<de.schildbach.wallet.WalletApplication: void initNotificationManager()>":["<android.app.Application: java.lang.Object getSystemService(java.lang.String)>","<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<android.net.Uri: void <clinit>()>","<android.net.Uri: android.net.Uri parse(java.lang.String)>","<android.app.Application: java.lang.String getPackageName()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>","<android.media.AudioAttributes$Builder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>","<android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.app.NotificationChannel: void <clinit>()>","<android.app.Application: java.lang.String getString(int)>","<android.os.Build$VERSION: void <clinit>()>","<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setLegacyStreamType(int)>","<android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.Throwable)>":["<java.lang.Exception: void <init>(java.lang.Throwable)>"],"<de.schildbach.wallet.WalletApplication: void getWalletAsync(de.schildbach.wallet.WalletApplication$OnWalletLoadedListener)>":["<de.schildbach.wallet.WalletApplication$3: void <init>(de.schildbach.wallet.WalletApplication,de.schildbach.wallet.WalletApplication$OnWalletLoadedListener)>","<de.schildbach.wallet.WalletApplication$3: void run()>"],"<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>":["<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>","<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: void <init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture)>","<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.TrustedListenableFutureTask create(java.lang.Runnable,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder access$13600()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder create()>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: org.bitcoinj.utils.Fiat parseFiatInexact(java.lang.String,java.lang.String)>":["<java.math.BigDecimal: void <init>(java.lang.String)>","<org.bitcoinj.utils.Fiat: org.bitcoinj.utils.Fiat valueOf(java.lang.String,long)>","<org.bitcoinj.utils.Fiat: void <clinit>()>","<java.math.BigDecimal: java.math.BigDecimal movePointRight(int)>","<java.math.BigDecimal: void <clinit>()>","<java.math.BigDecimal: long longValue()>"],"<org.spongycastle.asn1.DERPrintableString: void <init>(java.lang.String,boolean)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.DERPrintableString: boolean isPrintableString(java.lang.String)>"],"<org.bitcoinj.wallet.WalletProtobufSerializer$1: org.bitcoinj.wallet.Wallet create(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.KeyChainGroup)>":["<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.KeyChainGroup)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.BloomFilter$BloomUpdate: void <clinit>()>":["<org.bitcoinj.core.BloomFilter$BloomUpdate: void <clinit>()>","<org.bitcoinj.core.BloomFilter$BloomUpdate: void <init>(java.lang.String,int)>"],"<com.google.protobuf.SmallSortedMap$1: void <init>(int)>":["<com.google.protobuf.SmallSortedMap: void <init>(int,com.google.protobuf.SmallSortedMap$1)>"],"<org.bitcoinj.wallet.Protos$Key: void initFields()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey getDefaultInstance()>","<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData getDefaultInstance()>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: java.lang.String readString()>":["<java.lang.String: void <clinit>()>","<com.google.protobuf.CodedInputStream: byte[] readRawBytesSlowPath(int)>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<java.lang.String: void <init>(byte[],int,int,java.lang.String)>","<java.lang.String: void <init>(byte[],java.lang.String)>"],"<com.google.common.base.Equivalence$Identity: void <clinit>()>":["<com.google.common.base.Equivalence$Identity: void <init>()>","<com.google.common.base.Equivalence$Identity: void <clinit>()>"],"<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>":["<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoinj.core.PeerGroup: int getMaxConnections()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator()>":["<ch.qos.logback.classic.spi.PackagingDataCalculator: void <clinit>()>","<ch.qos.logback.classic.spi.PackagingDataCalculator: void <init>()>"],"<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>":["<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>"],"<org.bitcoinj.core.Peer: boolean removeOnTransactionBroadcastListener(org.bitcoinj.core.listeners.OnTransactionBroadcastListener)>":["<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>"],"<org.bitcoinj.core.Block: void bitcoinSerializeToStream(java.io.OutputStream)>":["<org.bitcoinj.core.Block: void writeHeader(java.io.OutputStream)>","<org.bitcoinj.core.Block: void writeTransactions(java.io.OutputStream)>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment$3: void <init>(de.schildbach.wallet.ui.ExchangeRatesFragment)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.spi.FilterReply: void <clinit>()>":["<ch.qos.logback.core.spi.FilterReply: void <init>(java.lang.String,int)>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<androidx.lifecycle.LifecycleRegistry: boolean isSynced()>":["<androidx.arch.core.internal.SafeIterableMap: int size()>","<androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()>","<androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>"],"<org.bitcoinj.core.MessageSerializer: org.bitcoinj.core.Transaction makeTransaction(byte[])>":["<org.bitcoinj.core.MessageSerializer: org.bitcoinj.core.Transaction makeTransaction(byte[],int)>"],"<org.bitcoinj.wallet.Wallet: void setKeyRotationTime(java.util.Date)>":["<java.util.Date: long getTime()>","<org.bitcoinj.wallet.Wallet: void setKeyRotationTime(long)>"],"<androidx.fragment.app.Fragment: void performDestroy()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDestroy()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.ui.ExchangeRatesFragment: void onDestroy()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void onDestroy()>","<androidx.fragment.app.Fragment: void onDestroy()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.LiteralByteString: com.google.protobuf.CodedInputStream newCodedInput()>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<org.bitcoin.protocols.payments.Protos$X509Certificates$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.PeerGroup$PeerStartupListener: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.PeerGroup$1)>":["<org.bitcoinj.core.PeerGroup$PeerStartupListener: void <init>(org.bitcoinj.core.PeerGroup)>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$600(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void maybeDecodeKey()>"],"<org.spongycastle.crypto.BufferedBlockCipher: void reset()>":["<org.spongycastle.crypto.modes.CBCBlockCipher: void reset()>"],"<androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>":["<androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>","<java.lang.String: boolean equals(java.lang.Object)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeEncryptionParameters(org.bitcoinj.wallet.Protos$ScryptParameters)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstance()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters buildPartial()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder(org.bitcoinj.wallet.Protos$ScryptParameters)>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.AbstractMessage$Builder: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)>":["<androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)>","<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>"],"<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.core.Address getWalletAddressOfReceived(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.Constants: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$3: void run()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback access$400(de.schildbach.wallet.ui.send.RequestWalletBalanceTask)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$10: void onFail(int,java.lang.Object[])>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: void access$1100(com.google.protobuf.Descriptors$ServiceDescriptor,com.google.protobuf.DescriptorProtos$ServiceDescriptorProto)>":["<com.google.protobuf.Descriptors$ServiceDescriptor: void setProto(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto)>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.protobuf.FieldSet: void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>":["<com.google.protobuf.FieldSet: void verifyType(com.google.protobuf.WireFormat$FieldType,java.lang.Object)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.FieldSet: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData buildPartial()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: org.bitcoinj.crypto.DeterministicKey encryptNonLeaf(org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.wallet.DeterministicKeyChain,org.bitcoinj.crypto.DeterministicKey,com.google.common.collect.ImmutableList)>":["<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey encrypt(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>","<org.bitcoinj.wallet.BasicKeyChain: void importKey(org.bitcoinj.core.ECKey)>"],"<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>":["<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[],int,int)>"],"<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>":["<java.lang.String: int codePointAt(int)>","<java.lang.Character: int charCount(int)>","<java.lang.String: char charAt(int)>","<okio.Buffer: okio.Buffer writeUtf8CodePoint(int)>","<okhttp3.internal.Util: void <clinit>()>","<java.lang.Character: void <clinit>()>","<okhttp3.internal.Util: int decodeHexDigit(char)>","<okio.Buffer: okio.Buffer writeByte(int)>"],"<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedOutputStream: int computeUInt64Size(int,long)>":["<com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>","<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder create()>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: void <init>()>"],"<java.lang.Float: void <clinit>()>":["<java.lang.Float: void <clinit>()>"],"<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,java.lang.String)>":["<java.lang.System: long currentTimeMillis()>","<java.lang.Object: void <init>()>","<android.app.Notification: void <init>()>","<java.lang.System: void <clinit>()>","<java.util.ArrayList: void <init>()>","<android.app.Notification: void <clinit>()>"],"<com.google.protobuf.TextFormat$Parser: com.google.protobuf.TextFormat$Parser$Builder newBuilder()>":["<com.google.protobuf.TextFormat$Parser$Builder: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$Waiter: void setNext(com.google.common.util.concurrent.AbstractFuture$Waiter)>":["<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200()>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$300(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.send.SweepWalletViewModel access$100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$200(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>"],"<androidx.fragment.app.FragmentStatePagerAdapter: void <init>(androidx.fragment.app.FragmentManager)>":["<java.util.ArrayList: void <init>()>","<androidx.viewpager.widget.PagerAdapter: void <init>()>"],"<androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)>":["<de.schildbach.wallet.ui.RequestCoinsFragment: void onSaveInstanceState(android.os.Bundle)>","<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>","<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>"],"<com.google.common.base.AbstractIterator: boolean tryToComputeNext()>":["<com.google.common.base.Splitter$SplittingIterator: java.lang.Object computeNext()>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$Segment: boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment)>"],"<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>":["<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.DEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.DEROctetStringParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.BERTaggedObjectParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.BERSequenceParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.BERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BERSetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>","<org.spongycastle.asn1.DERSequenceParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.BERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.DERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.DERSetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.BERApplicationSpecificParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BERApplicationSpecificParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.DERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.DERExternalParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.BEROctetStringParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>","<org.spongycastle.asn1.DERExternalParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BERTaggedObjectParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$7500()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>":["<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>"],"<androidx.loader.content.AsyncTaskLoader: boolean onCancelLoad()>":["<androidx.loader.content.ModernAsyncTask: boolean cancel(boolean)>","<androidx.loader.content.CursorLoader: void cancelLoadInBackground()>"],"<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.AbstractMessageLite$Builder: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setChainCode(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object setValue(java.lang.Object)>":["<com.google.protobuf.SmallSortedMap: void access$200(com.google.protobuf.SmallSortedMap)>"],"<de.schildbach.wallet.offline.DirectPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback)>":["<android.os.Handler: void <init>(android.os.Looper)>","<java.lang.Object: void <init>()>","<android.os.Looper: android.os.Looper myLooper()>"],"<de.schildbach.wallet.ui.scan.CameraManager$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>":["<org.bitcoinj.core.Sha256Hash: void <init>(byte[])>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(int)>":["<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractService: void <clinit>()>":["<com.google.common.util.concurrent.AbstractService$2: void <init>()>","<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenerCallQueue$Event terminatedEvent(com.google.common.util.concurrent.Service$State)>","<com.google.common.util.concurrent.Service$State: void <clinit>()>","<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenerCallQueue$Event stoppingEvent(com.google.common.util.concurrent.Service$State)>","<com.google.common.util.concurrent.AbstractService$1: void <init>()>","<com.google.common.util.concurrent.AbstractService: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable: void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String[])>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.lang.String: char charAt(int)>","<com.google.common.base.Splitter$2: void <init>(java.lang.String)>","<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy)>","<com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>","<java.lang.String: int length()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object)>":["<java.lang.NullPointerException: void <init>()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.util.DynamicClassLoadingException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.util.IncompatibleClassException: void <init>(java.lang.Class,java.lang.Class)>","<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>"],"<androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>":["<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<androidx.fragment.app.FragmentContainer: void <init>()>"],"<org.bitcoinj.script.Script: boolean isSentToAddress()>":["<java.util.LinkedList: int size()>","<java.util.ArrayList: int size()>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>":["<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<org.spongycastle.util.Arrays: byte[] clone(byte[])>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>(int)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>"],"<org.bitcoinj.wallet.Wallet: void upgradeToDeterministic(org.spongycastle.crypto.params.KeyParameter)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain upgradeToDeterministic(long,org.spongycastle.crypto.params.KeyParameter)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>":["<com.google.common.primitives.Longs: int compare(long,long)>"],"<de.schildbach.wallet.ui.RequestCoinsActivity: void onAttachedToWindow()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void setShowWhenLocked(boolean)>"],"<dummyMainClass: de.schildbach.wallet.WalletBalanceWidgetProvider dummyMainMethod_de_schildbach_wallet_WalletBalanceWidgetProvider(android.content.Intent)>":["<de.schildbach.wallet.WalletBalanceWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void <init>()>"],"<androidx.loader.content.ModernAsyncTask$Status: void <clinit>()>":["<androidx.loader.content.ModernAsyncTask$Status: void <clinit>()>","<androidx.loader.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.TransactionOutput)>":["<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>","<org.bitcoinj.core.Transaction: void unCache()>","<org.bitcoinj.core.ChildMessage: void adjustLength(int,int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>"],"<de.schildbach.wallet.util.GenericUtils: java.lang.String currencySymbol(java.lang.String)>":["<java.util.Currency: java.util.Currency getInstance(java.lang.String)>"],"<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>":["<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>"],"<okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>":["<java.lang.ArrayIndexOutOfBoundsException: void <init>()>"],"<com.google.common.primitives.UnsignedBytes: java.util.Comparator lexicographicalComparatorJavaImpl()>":["<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$6200()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<de.schildbach.wallet.util.Formats: void <clinit>()>":["<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>","<de.schildbach.wallet.util.Formats: void <clinit>()>"],"<org.bitcoinj.core.Transaction: void bitcoinSerializeToStream(java.io.OutputStream)>":["<org.bitcoinj.core.VarInt: byte[] encode()>","<org.bitcoinj.core.Utils: void <clinit>()>","<java.io.ByteArrayOutputStream: void write(byte[])>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.VarInt: void <init>(long)>","<org.bitcoinj.core.Utils: void uint32ToByteStreamLE(long,java.io.OutputStream)>","<java.util.ArrayList: int size()>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.service.BlockchainService$6$ActivityHistoryEntry: void <init>(de.schildbach.wallet.service.BlockchainService$6,int,int)>":["<java.lang.Object: void <init>()>"],"<androidx.recyclerview.widget.OrientationHelper: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1)>":["<androidx.recyclerview.widget.OrientationHelper: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.protobuf.Descriptors$EnumDescriptor: void access$1000(com.google.protobuf.Descriptors$EnumDescriptor,com.google.protobuf.DescriptorProtos$EnumDescriptorProto)>":["<com.google.protobuf.Descriptors$EnumDescriptor: void setProto(com.google.protobuf.DescriptorProtos$EnumDescriptorProto)>"],"<okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)>":["<okio.Util: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>","<java.lang.IllegalAccessError: void <init>(java.lang.String)>","<okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<java.lang.String: java.lang.String substring(int,int)>","<okio.Buffer: okio.Buffer write(byte[],int,int)>"],"<androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()>":["<androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)>","<java.util.NoSuchElementException: void <init>()>","<androidx.collection.MapCollections$ArrayIterator: boolean hasNext()>"],"<org.bitcoinj.wallet.Protos$Extension: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeField(int,com.google.protobuf.UnknownFieldSet$Field)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.UnknownFieldSet$Builder: boolean hasField(int)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder addField(int,com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder getFieldBuilder(int)>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder mergeFrom(com.google.protobuf.UnknownFieldSet$Field)>"],"<ch.qos.logback.classic.spi.ThrowableProxy: void calculatePackagingData()>":["<ch.qos.logback.classic.spi.PackagingDataCalculator: void calculate(ch.qos.logback.classic.spi.IThrowableProxy)>","<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator()>"],"<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(java.util.Date)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>","<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>","<java.util.Locale: void <clinit>()>","<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>"],"<java.lang.Long: int numberOfLeadingZeros(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.util.Duration: void <clinit>()>":["<ch.qos.logback.core.util.Duration: void <clinit>()>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>"],"<org.bitcoinj.utils.ExponentialBackoff: void <init>(org.bitcoinj.utils.ExponentialBackoff$Params)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.utils.ExponentialBackoff: void trackSuccess()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder create()>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: void <init>()>"],"<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>":["<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableListIterator emptyListIterator()>"],"<com.squareup.moshi.JsonReader: com.squareup.moshi.JsonReader of(okio.BufferedSource)>":["<com.squareup.moshi.JsonUtf8Reader: void <init>(okio.BufferedSource)>","<com.squareup.moshi.JsonUtf8Reader: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: ch.qos.logback.core.rolling.helper.PeriodicityType computePeriodicityType()>":["<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date innerGetEndOfThisPeriod(java.util.Calendar,ch.qos.logback.core.rolling.helper.PeriodicityType,java.util.Date)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>","<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>","<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>","<java.util.Date: void <init>(long)>","<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>","<java.util.Locale: void <clinit>()>","<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>"],"<org.bitcoinj.utils.ExponentialBackoff: void trackSuccess()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.utils.ExponentialBackoff$Params: float access$000(org.bitcoinj.utils.ExponentialBackoff$Params)>","<org.bitcoinj.core.Utils: long currentTimeMillis()>"],"<com.google.protobuf.CodedOutputStream: void <init>(byte[],int,int)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setPaymentDetailsVersion(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)>"],"<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.Ordering: void <init>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.RepeatedFieldBuilder getLocationFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder access$16100()>"],"<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String)>":["<com.google.protobuf.Descriptors$FieldDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$EnumDescriptor: com.google.protobuf.Message toProto()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Message toProto()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<com.google.protobuf.Descriptors$EnumValueDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$ServiceDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Message toProto()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Exception: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$EnumValueDescriptor: com.google.protobuf.Message toProto()>","<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.Message toProto()>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.Descriptors$EnumDescriptor: java.lang.String getFullName()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$ServiceDescriptor: com.google.protobuf.Message toProto()>"],"<de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener: void <init>(de.schildbach.wallet.data.WalletBalanceLiveData,de.schildbach.wallet.data.WalletBalanceLiveData$1)>":["<de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener: void <init>(de.schildbach.wallet.data.WalletBalanceLiveData)>"],"<org.bitcoinj.wallet.Protos$Transaction$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Transaction$1: org.bitcoinj.wallet.Protos$Transaction parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>"],"<androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>":["<androidx.collection.SparseArrayCompat: void <clinit>()>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean isValidBranchID(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence build()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence buildPartial()>"],"<com.google.protobuf.TextFormat: long parseInt64(java.lang.String)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: long parseInteger(java.lang.String,boolean,boolean)>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$ExtendableBuilder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<org.spongycastle.asn1.DERT61String: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.core.Coin: boolean isGreaterThan(org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>"],"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void <init>(android.view.View)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<org.bitcoinj.script.Script$VerifyFlag: void <clinit>()>":["<org.bitcoinj.script.Script$VerifyFlag: void <init>(java.lang.String,int)>","<org.bitcoinj.script.Script$VerifyFlag: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: boolean isWatching()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<org.bitcoinj.wallet.BasicKeyChain$State: void <clinit>()>","<java.util.LinkedList: boolean isEmpty()>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.BasicKeyChain$State isWatching()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder access$23200()>"],"<org.bitcoinj.crypto.PBKDF2SHA512: byte[] INT(int)>":["<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>"],"<de.schildbach.wallet.ui.scan.CameraManager: boolean getTorchEnabled(android.hardware.Camera)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedOutputStream: void writeInt64(int,long)>":["<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>","<com.google.protobuf.CodedOutputStream: void writeInt64NoTag(long)>"],"<org.spongycastle.asn1.DERSequenceGenerator: void close()>":["<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.spongycastle.asn1.DERGenerator: void writeDEREncoded(int,byte[])>"],"<androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>":["<java.util.ConcurrentModificationException: void <init>()>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<com.google.common.io.BaseEncoding$Alphabet: com.google.common.io.BaseEncoding$Alphabet lowerCase()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.io.BaseEncoding$Alphabet: boolean hasLowerCase()>","<com.google.common.io.BaseEncoding$Alphabet: boolean hasUpperCase()>","<com.google.common.base.Ascii: char toLowerCase(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>"],"<androidx.collection.SparseArrayCompat: void <clinit>()>":["<java.lang.Object: void <init>()>","<androidx.collection.SparseArrayCompat: void <clinit>()>"],"<org.json.JSONObject: java.lang.String getString(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>":["<com.google.common.collect.MapMakerInternalMap$Segment: void runCleanup()>","<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void access$700(de.schildbach.wallet.ui.scan.ScanActivity)>":["<de.schildbach.wallet.ui.scan.ScanActivity: void maybeTriggerSceneTransition()>"],"<com.squareup.okhttp.Protocol: void <init>(java.lang.String,int,java.lang.String)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusListenerList()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.core.Block: org.bitcoinj.core.Block cloneAsHeader()>":["<org.bitcoinj.core.Block: void copyBitcoinHeaderTo(org.bitcoinj.core.Block)>","<org.bitcoinj.core.Block: void <init>(org.bitcoinj.core.NetworkParameters,long)>","<org.bitcoinj.core.Block: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>"],"<org.bitcoinj.core.Context: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.lang.ThreadLocal: void <init>()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: void <clinit>()>":["<androidx.fragment.app.FragmentTransition: void <clinit>()>","<android.os.Build$VERSION: void <clinit>()>","<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()>","<androidx.fragment.app.FragmentTransitionCompat21: void <init>()>"],"<ch.qos.logback.core.OutputStreamAppender: void closeOutputStream()>":["<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<java.io.OutputStream: void close()>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void close()>","<ch.qos.logback.core.OutputStreamAppender: void encoderClose()>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1: com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>":["<androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)>"],"<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes deriveChildKeyBytesFromPrivate(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: byte[] getPrivKeyBytes33()>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>","<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>","<org.bitcoinj.crypto.ChildNumber: int i()>","<org.bitcoinj.crypto.DeterministicKey: boolean hasPrivKey()>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.crypto.ChildNumber: boolean isHardened()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void assertLessThanN(java.math.BigInteger,java.lang.String)>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<java.math.BigInteger: byte[] toByteArray()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes: void <init>(byte[],byte[])>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<org.bitcoinj.crypto.HDUtils: byte[] hmacSha512(byte[],byte[])>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger getPrivKey()>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint getPubKeyPoint()>","<org.bitcoinj.crypto.HDKeyDerivation: void assertNonZero(java.math.BigInteger,java.lang.String)>","<org.bitcoinj.crypto.DeterministicKey: byte[] getChainCode()>","<java.math.BigInteger: void <init>(int,byte[])>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.send.SweepWalletActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$1: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.WalletActivity: android.content.Intent getIntent()>","<android.os.Handler: void <init>(android.os.Looper)>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<de.schildbach.wallet.ui.ExchangeRatesActivity: android.content.Intent getIntent()>","<android.os.HandlerThread: android.os.Looper getLooper()>","<android.os.HandlerThread: void <init>(java.lang.String,int)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$6: void run()>","<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.RequestCoinsActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.ProgressDialogFragment$Observer: void <init>(androidx.fragment.app.FragmentManager)>","<de.schildbach.wallet.ui.send.SendCoinsActivity: android.content.Intent getIntent()>","<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.scan.ScanActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.AddressBookActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: android.content.Intent getIntent()>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<android.os.HandlerThread: void run()>","<androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)>","<android.os.HandlerThread: void start()>"],"<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)>":["<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>","<androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)>","<androidx.collection.SimpleArrayMap: void clear()>","<java.lang.String: boolean equals(java.lang.Object)>","<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>","<androidx.collection.ArrayMap: void <init>()>","<androidx.collection.ArrayMap: java.util.Set keySet()>","<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<androidx.collection.SimpleArrayMap: boolean isEmpty()>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getNestedTypeFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>"],"<org.spongycastle.asn1.DERIA5String: boolean isIA5String(java.lang.String)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>"],"<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void run()>":["<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>","<org.bitcoinj.core.TransactionBroadcast$ConfidenceChange: void <init>(org.bitcoinj.core.TransactionBroadcast,org.bitcoinj.core.TransactionBroadcast$1)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.TransactionBroadcast: org.bitcoinj.core.PeerGroup access$600(org.bitcoinj.core.TransactionBroadcast)>","<java.util.ArrayList: java.util.List subList(int,int)>","<org.bitcoinj.core.TransactionBroadcast: com.google.common.util.concurrent.SettableFuture access$500(org.bitcoinj.core.TransactionBroadcast)>","<org.bitcoinj.core.TransactionBroadcast: void <clinit>()>","<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.TransactionBroadcast: int access$300(org.bitcoinj.core.TransactionBroadcast)>","<org.bitcoinj.core.PeerGroup: boolean removePreMessageReceivedEventListener(org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.Collections: void shuffle(java.util.List,java.util.Random)>","<java.util.ArrayList: int size()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.core.TransactionBroadcast: org.bitcoinj.core.listeners.PreMessageReceivedEventListener access$900(org.bitcoinj.core.TransactionBroadcast)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<java.lang.Math: double ceil(double)>","<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.TransactionBroadcast: org.slf4j.Logger access$400()>","<org.bitcoinj.core.TransactionBroadcast: int access$700(org.bitcoinj.core.TransactionBroadcast)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<java.lang.Math: long max(long,long)>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.TransactionBroadcast: int access$302(org.bitcoinj.core.TransactionBroadcast,int)>","<org.bitcoinj.core.TransactionBroadcast: org.bitcoinj.core.Transaction access$100(org.bitcoinj.core.TransactionBroadcast)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.Double: boolean isNaN(double)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Context: void <clinit>()>","<java.lang.Math: long round(double)>","<java.lang.Double: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>":["<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>"],"<com.google.protobuf.AbstractMessage: boolean compareFields(java.util.Map,java.util.Map)>":["<java.util.TreeMap: boolean containsKey(java.lang.Object)>","<java.util.TreeMap: int size()>","<java.util.TreeMap: java.util.Set keySet()>","<java.util.TreeMap: java.lang.Object get(java.lang.Object)>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.AbstractMessage: boolean compareBytes(java.lang.Object,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>":["<android.os.Build$VERSION: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script$Builder newBuilderForType()>"],"<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.GeneratedMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17000()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void maybeMarkCurrentAddressAsUsed(org.bitcoinj.core.Address)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.Address freshAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Address: boolean isP2SHAddress()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<java.util.EnumMap: java.util.Set entrySet()>","<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<androidx.fragment.app.FragmentTransaction: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()>":["<androidx.loader.content.ModernAsyncTask$Status: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)>":["<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void <init>(android.app.Application)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder access$5500()>":["<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder create()>"],"<org.bitcoinj.core.Block: void parse()>":["<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[],int,int)>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrapReversed(byte[])>","<org.bitcoinj.core.Block: void parseTransactions(int)>","<org.bitcoinj.core.Message: long readUint32()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.BitcoinSerializer: boolean isParseRetainMode()>","<org.bitcoinj.core.Message: org.bitcoinj.core.Sha256Hash readHash()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Transaction makeTxProto(org.bitcoinj.wallet.WalletTransaction)>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setVersion(int)>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setValue(long)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setTransactionOutPointHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setPool(org.bitcoinj.wallet.Protos$Transaction$Pool)>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setFiatValue(long)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setPurpose(org.bitcoinj.wallet.Protos$Transaction$Purpose)>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addBlockHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addTransactionInput(org.bitcoinj.wallet.Protos$TransactionInput$Builder)>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Transaction$Pool getProtoPool(org.bitcoinj.wallet.WalletTransaction)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setSequence(int)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addTransactionOutput(org.bitcoinj.wallet.Protos$TransactionOutput$Builder)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer: com.google.protobuf.ByteString hashToByteString(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setFiatCurrencyCode(java.lang.String)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setMemo(java.lang.String)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setScriptBytes(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setScriptBytes(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setSpentByTransactionIndex(int)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction build()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setLockTime(int)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setSpentByTransactionHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void writeConfidence(org.bitcoinj.wallet.Protos$Transaction$Builder,org.bitcoinj.core.TransactionConfidence,org.bitcoinj.wallet.Protos$TransactionConfidence$Builder)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setExchangeRate(org.bitcoinj.wallet.Protos$ExchangeRate$Builder)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addBlockRelativityOffsets(int)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setTransactionOutPointIndex(int)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setValue(long)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setUpdatedAt(long)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setCoinValue(long)>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink$1: void <init>(de.schildbach.wallet.ui.CurrencyCalculatorLink)>":["<java.lang.Object: void <init>()>"],"<androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)>":["<androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>"],"<okio.Buffer: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnStart()>":["<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: int decryptBlock(byte[],int,byte[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.engines.AESFastEngine: int processBlock(byte[],int,byte[],int)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void requestWalletBalance()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void requestWalletBalance(android.content.res.AssetManager,org.bitcoinj.core.Address)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$10: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<android.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()>","<androidx.fragment.app.Fragment: java.lang.String getString(int)>"],"<de.schildbach.wallet.service.BlockchainService$6: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<java.util.LinkedList: void <init>()>","<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder setName(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.service.UpgradeWalletService: void onCreate()>":["<java.lang.System: long currentTimeMillis()>","<android.app.IntentService: void startForeground(int,android.app.Notification)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)>","<java.lang.System: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)>","<androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,java.lang.String)>","<android.app.IntentService: android.app.Application getApplication()>","<android.app.IntentService: void onCreate()>"],"<de.schildbach.wallet.data.WalletBalanceLiveData: void <init>(de.schildbach.wallet.WalletApplication)>":["<de.schildbach.wallet.data.WalletBalanceLiveData: void <init>(de.schildbach.wallet.WalletApplication,org.bitcoinj.wallet.Wallet$BalanceType)>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Output getRefundTo(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDetach()>":["<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>","<androidx.fragment.app.Fragment: void onDetach()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>":["<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Class: java.lang.Package getPackage()>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity$4: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <clinit>()>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <init>()>"],"<com.google.common.base.Objects: int hashCode(java.lang.Object[])>":["<java.util.Arrays: int hashCode(java.lang.Object[])>"],"<de.schildbach.wallet.ui.WalletActivity$15: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsActivity: void start(android.content.Context,de.schildbach.wallet.data.PaymentIntent)>"],"<com.google.protobuf.MessageReflection$MergeTarget$ContainerType: void <clinit>()>":["<com.google.protobuf.MessageReflection$MergeTarget$ContainerType: void <init>(java.lang.String,int)>","<com.google.protobuf.MessageReflection$MergeTarget$ContainerType: void <clinit>()>"],"<ch.qos.logback.classic.joran.action.ConditionalIncludeAction: void <init>()>":["<ch.qos.logback.core.joran.action.AbstractIncludeAction: void <init>()>"],"<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void <init>(java.lang.String,byte[])>":["<de.schildbach.wallet.ui.InputParser: void <init>()>"],"<okhttp3.Request$Builder: okhttp3.Request build()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okhttp3.Request: void <init>(okhttp3.Request$Builder)>"],"<java.lang.String: java.lang.String substring(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block createGenesis(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Block: void <init>(org.bitcoinj.core.NetworkParameters,long)>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,byte[])>","<org.bitcoinj.core.Block: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.TransactionOutput)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.script.Script: void writeBytes(java.io.OutputStream,byte[])>","<org.bitcoinj.core.Block: void addTransaction(org.bitcoinj.core.Transaction)>","<java.io.ByteArrayOutputStream: void write(int)>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<java.io.ByteArrayOutputStream: void <init>()>","<org.bitcoinj.script.Script: void <clinit>()>","<org.bitcoinj.core.TransactionInput: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionInput)>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>","<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[])>"],"<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger getPrivKey()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger findOrDerivePrivateKey()>"],"<de.schildbach.wallet.ui.AlertDialogsFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.AlertDialogsFragment: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.lang.Class: java.lang.String getName()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters build()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters buildPartial()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>":["<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.util.ArrayList: boolean isEmpty()>","<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.MessageReflection: void eagerlyMergeMessageSetExtension(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistry$ExtensionInfo,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.MessageReflection$MergeTarget)>":["<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseMessage(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<org.bitcoinj.wallet.Protos$Tag$1: void <init>()>","<org.bitcoinj.wallet.Protos$Tag: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$Tag: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>","<org.bitcoinj.core.TransactionOutput: int getIndex()>"],"<com.google.protobuf.CodedInputStream: double readDouble()>":["<java.lang.Double: double longBitsToDouble(long)>","<com.google.protobuf.CodedInputStream: long readRawLittleEndian64()>","<java.lang.Double: void <clinit>()>"],"<ch.qos.logback.core.pattern.Converter: void setNext(ch.qos.logback.core.pattern.Converter)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<org.json.JSONObject: java.util.Iterator keys()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.GeneratedMessage getMessage(int,boolean)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15900()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>","<java.util.LinkedHashMap: void <init>(java.util.Map)>"],"<de.schildbach.wallet.service.BlockchainService$3: void onChanged(de.schildbach.wallet.data.ExchangeRate)>":["<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidgets(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<ch.qos.logback.core.util.ExecutorServiceUtil$1: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>","<java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeConfidence(org.bitcoinj.wallet.Protos$TransactionConfidence)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstance()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence buildPartial()>"],"<org.bitcoinj.core.PeerGroup$17: void <clinit>()>":["<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <clinit>()>","<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: org.bitcoinj.core.PeerGroup$FilterRecalculateMode[] values()>","<java.lang.Enum: int ordinal()>","<org.bitcoinj.core.PeerGroup$17: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.Compressor$1: void <clinit>()>":["<ch.qos.logback.core.rolling.helper.CompressionMode: ch.qos.logback.core.rolling.helper.CompressionMode[] values()>","<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>","<ch.qos.logback.core.rolling.helper.Compressor$1: void <clinit>()>"],"<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>":["<okhttp3.OkHttpClient: java.util.List interceptors()>","<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>","<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)>","<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>","<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>","<okhttp3.OkHttpClient: int writeTimeoutMillis()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>","<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>","<okhttp3.OkHttpClient: int connectTimeoutMillis()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: void <init>()>","<okhttp3.OkHttpClient: int readTimeoutMillis()>","<okhttp3.OkHttpClient: java.util.List networkInterceptors()>","<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>","<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addRDN(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>":["<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: org.spongycastle.asn1.ASN1Encodable stringToValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>","<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addRDN(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>"],"<org.bitcoinj.core.TransactionBroadcast: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.TransactionBroadcast: void <clinit>()>","<java.util.Random: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis$Analyzer: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.RegularImmutableList: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder addRefundTo(org.bitcoin.protocols.payments.Protos$Output)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: void ensureRefundToIsMutable()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12700()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<androidx.lifecycle.ViewModelStore: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<ch.qos.logback.core.util.StatusListenerConfigHelper: ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String)>":["<java.io.IOException: void printStackTrace()>","<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context)>","<java.lang.Throwable: void printStackTrace()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<org.spongycastle.crypto.ec.CustomNamedCurves: void defineCurveWithOID(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x9.X9ECParametersHolder)>":["<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: boolean isConsistent()>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<ch.qos.logback.classic.Logger: void error(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: java.lang.String toString()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<java.lang.IllegalStateException: java.lang.String getMessage()>","<org.bitcoinj.wallet.Wallet: void isConsistentOrThrow()>"],"<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>"],"<com.google.protobuf.Descriptors$DescriptorPool: void addPackage(java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>":["<com.google.protobuf.Descriptors$DescriptorPool$PackageDescriptor: void <init>(java.lang.String,java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int lastIndexOf(int)>","<java.lang.String: int length()>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$DescriptorPool: void addPackage(java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)>":["<androidx.fragment.app.FragmentTransition$4: void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)>","<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>","<android.graphics.Rect: void <init>()>","<android.graphics.Rect: void <clinit>()>","<androidx.collection.ArrayMap: java.util.Collection values()>","<androidx.collection.SimpleArrayMap: boolean isEmpty()>","<androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)>","<androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)>","<androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder access$3100()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder create()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder create()>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void <init>()>"],"<com.google.common.base.Ticker$1: long read()>":["<com.google.common.base.Platform: void <clinit>()>","<com.google.common.base.Platform: long systemNanoTime()>"],"<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>":["<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>","<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>"],"<org.bitcoinj.utils.ExchangeRate: void <init>(org.bitcoinj.utils.Fiat)>":["<org.bitcoinj.utils.ExchangeRate: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.utils.Fiat)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner buildPartial()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.RuleStore,ch.qos.logback.core.joran.spi.ElementPath)>":["<ch.qos.logback.core.joran.spi.InterpretationContext: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter)>","<java.util.ArrayList: void <init>(int)>","<java.lang.Object: void <init>()>","<ch.qos.logback.core.joran.spi.EventPlayer: void <init>(ch.qos.logback.core.joran.spi.Interpreter)>","<ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter)>","<java.util.Stack: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest buildPartial()>"],"<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder access$14100()>"],"<com.google.common.collect.MapMakerInternalMap$Strength$2: com.google.common.base.Equivalence defaultEquivalence()>":["<com.google.common.base.Equivalence: com.google.common.base.Equivalence identity()>"],"<ch.qos.logback.core.util.StatusPrinter: void appendThrowable(java.lang.StringBuilder,java.lang.Throwable)>":["<java.lang.String: char charAt(int)>","<java.lang.String: boolean startsWith(java.lang.String)>","<java.lang.Character: boolean isDigit(char)>","<ch.qos.logback.core.CoreConstants: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String[] convert(java.lang.Throwable)>","<java.lang.Character: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void setKeyRotationTime(long)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(long)>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<org.bitcoinj.wallet.Wallet: void saveNow()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: void access$700(com.google.protobuf.Descriptors$ServiceDescriptor)>":["<com.google.protobuf.Descriptors$ServiceDescriptor: void crossLink()>"],"<ch.qos.logback.core.util.COWArrayList: void addIfAbsent(java.lang.Object)>":["<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>","<ch.qos.logback.core.util.COWArrayList: void markAsStale()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>":["<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>","<java.util.LinkedList: java.util.Iterator iterator()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: boolean access$000(de.schildbach.wallet.offline.AcceptBluetoothService,org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.offline.AcceptBluetoothService: boolean handleTx(org.bitcoinj.core.Transaction)>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentToMe(org.bitcoinj.core.TransactionBag)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>":["<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>"],"<org.bitcoinj.core.Transaction$2: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder access$3700()>"],"<androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>":["<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.io.File,java.lang.String)>"],"<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FieldOptions$1: com.google.protobuf.DescriptorProtos$FieldOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.base.MoreObjects$ToStringHelper: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>(com.google.common.base.MoreObjects$1)>"],"<com.google.common.collect.Maps: com.google.common.base.Function valueFunction()>":["<com.google.common.collect.Maps$EntryFunction: void <clinit>()>"],"<org.bitcoinj.core.NetworkParameters: int hashCode()>":["<com.google.common.base.Objects: int hashCode(java.lang.Object[])>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder setTime(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$1: com.google.protobuf.DescriptorProtos$ServiceOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.Splitter$5: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void initFields()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$1: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.asn1.DERNumericString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<com.google.common.base.Preconditions: void checkState(boolean)>":["<java.lang.IllegalStateException: void <init>()>"],"<androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>":["<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>","<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>"],"<com.google.common.base.CharMatcher$Digit: void <clinit>()>":["<com.google.common.base.CharMatcher$Digit: void <init>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Digit: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>":["<com.google.protobuf.SmallSortedMap: java.lang.Object get(java.lang.Object)>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void access$000(de.schildbach.wallet.data.SelectedExchangeRateLiveData,java.lang.Object)>":["<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>"],"<ch.qos.logback.core.joran.action.IncludeAction: void <init>()>":["<ch.qos.logback.core.joran.action.AbstractIncludeAction: void <init>()>"],"<dummyMainClass: androidx.core.content.FileProvider dummyMainMethod_androidx_core_content_FileProvider(android.content.Intent)>":["<androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>","<androidx.core.content.FileProvider: void <init>()>","<androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>","<androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>","<java.lang.String: void <clinit>()>","<androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)>","<androidx.core.content.FileProvider: void <clinit>()>","<androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>","<androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>","<androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>"],"<androidx.collection.MapCollections: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$MethodOptions: void initFields()>","<com.google.protobuf.DescriptorProtos$MethodOptions$1: void <init>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$PeerAddress: boolean hasIpAddress()>","<org.bitcoinj.wallet.Protos$PeerAddress: boolean hasPort()>","<org.bitcoinj.wallet.Protos$PeerAddress: boolean hasServices()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.script.Script: boolean isSentToMultiSig()>":["<org.bitcoinj.script.Script: void <clinit>()>","<org.bitcoinj.script.Script: int decodeFromOpN(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Wallet: boolean isEncrypted()>":["<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.Protos$Wallet$EncryptionType getEncryptionType()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.RiskAnalysis$Result analyzeIsFinal()>":["<org.bitcoinj.core.Transaction: boolean hasRelativeLockTime()>","<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.core.Transaction: boolean isOptInFullRBF()>","<org.bitcoinj.core.Transaction: boolean isFinal(int,long)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.RiskAnalysis$Result: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.TransactionConfidence$Source getSource()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.wallet.Wallet: long getLastBlockSeenTimeSecs()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>","<org.bitcoinj.wallet.Wallet: int getLastBlockSeenHeight()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.common.io.BaseEncoding$Base64Encoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>":["<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>"],"<java.lang.Thread: void setDaemon(boolean)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)>":["<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>","<androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()>"],"<org.bitcoinj.wallet.Wallet: void updateForSpends(org.bitcoinj.core.Transaction,boolean)>":["<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.HashMap: java.util.Collection values()>","<org.bitcoinj.wallet.Wallet: void maybeMovePool(org.bitcoinj.core.Transaction,java.lang.String)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.TransactionInput$ConnectionResult: void <clinit>()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.TransactionInput getSpentBy()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.HashSet: boolean remove(java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionInput$ConnectMode: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: boolean isMineOrWatched(org.bitcoinj.core.TransactionBag)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>"],"<java.lang.StringBuffer: java.lang.StringBuffer append(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.FieldSet: boolean isInitialized()>":["<com.google.protobuf.FieldSet: boolean isInitialized(java.util.Map$Entry)>","<com.google.protobuf.SmallSortedMap$EmptySet$1: boolean hasNext()>","<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>","<com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()>","<com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()>","<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>","<com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()>"],"<com.google.protobuf.CodedOutputStream: int computeEnumSize(int,int)>":["<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>","<com.google.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>"],"<de.schildbach.wallet.service.BlockchainService$4: void onChanged(org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.store.BlockStore access$1500(de.schildbach.wallet.service.BlockchainService)>","<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.core.CheckpointManager: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void access$1600(de.schildbach.wallet.service.BlockchainService)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.store.BlockStore access$1502(de.schildbach.wallet.service.BlockchainService,org.bitcoinj.store.BlockStore)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock getChainHead()>","<de.schildbach.wallet.service.BlockchainService: org.slf4j.Logger access$1200()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.BlockChain: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.Wallet,org.bitcoinj.store.BlockStore)>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<org.bitcoinj.core.CheckpointManager: void checkpoint(org.bitcoinj.core.NetworkParameters,java.io.InputStream,org.bitcoinj.store.BlockStore,long)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.BlockChain access$902(de.schildbach.wallet.service.BlockchainService,org.bitcoinj.core.BlockChain)>","<java.io.File: boolean delete()>","<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.data.WalletLiveData access$1300(de.schildbach.wallet.service.BlockchainService)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<android.app.Service: android.content.res.AssetManager getAssets()>","<de.schildbach.wallet.service.BlockchainService: java.io.File access$1400(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.store.SPVBlockStore: void <clinit>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.store.SPVBlockStore: void <init>(org.bitcoinj.core.NetworkParameters,java.io.File)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.io.File: boolean exists()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$1: org.bitcoin.protocols.payments.Protos$PaymentRequest parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.math.LongMath: long checkedPow(long,int)>":["<com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)>","<com.google.common.math.MathPreconditions: int checkNonNegative(java.lang.String,int)>","<com.google.common.math.LongMath: long checkedMultiply(long,long)>","<java.lang.AssertionError: void <init>()>","<com.google.common.math.LongMath: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<okhttp3.Request: void <init>(okhttp3.Request$Builder)>":["<java.lang.Object: void <init>()>","<okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.Headers$Builder: okhttp3.Headers build()>"],"<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>":["<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey getParent()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.ChildNumber getChildNumber()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.utils.Fiat: java.lang.String toString()>":["<java.lang.Long: java.lang.String toString(long)>","<java.lang.Long: void <clinit>()>"],"<ch.qos.logback.core.android.AndroidContextUtil: void setupProperties(ch.qos.logback.classic.LoggerContext)>":["<ch.qos.logback.classic.LoggerContext: void putProperties(java.util.Properties)>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getPackageName()>","<java.util.Properties: void <init>()>","<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getVersionCode()>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getVersionName()>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getMountedExternalStorageDirectoryPath()>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getFilesDirectoryPath()>"],"<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>"],"<ch.qos.logback.core.OutputStreamAppender: void encoderClose()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] footerBytes()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.OutputStreamAppender: void writeBytes(byte[])>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$200(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>"],"<org.bitcoinj.core.Message: void adjustLength(int,int)>":["<org.bitcoinj.core.VarInt: int sizeOf(long)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$18)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: int getAddressHeader()>","<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(int,byte[])>"],"<com.google.common.collect.RegularImmutableSet: void <clinit>()>":["<com.google.common.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int,int)>","<com.google.common.collect.RegularImmutableSet: void <clinit>()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<com.google.common.base.CharMatcher$JavaLowerCase: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread: void stopAccepting()>":["<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode SINGLE()>":["<ch.qos.logback.core.pattern.parser.Parser: void advanceTokenPointer()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getNextToken()>","<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void <init>(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void setOptions(java.util.List)>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$8: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.Fragment: void initState()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<android.util.SparseArray: void put(int,java.lang.Object)>"],"<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>":["<android.os.Bundle: void putInt(java.lang.String,int)>","<android.os.Bundle: void <init>()>","<android.app.Notification$Action$Builder: android.app.Notification$Action$Builder setAllowGeneratedReplies(boolean)>","<android.os.Bundle: void <init>(android.os.Bundle)>","<android.app.Notification$Action$Builder: android.app.Notification$Action$Builder addExtras(android.os.Bundle)>","<androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.os.Bundle: void <clinit>()>","<android.os.Bundle: void putBoolean(java.lang.String,boolean)>","<android.app.Notification$Action$Builder: android.app.Notification$Action build()>","<android.app.Notification$Action$Builder: android.app.Notification$Action$Builder setSemanticAction(int)>","<android.app.Notification$Action$Builder: android.app.Notification$Action$Builder addRemoteInput(android.app.RemoteInput)>","<android.app.Notification$Builder: android.app.Notification$Builder addAction(android.app.Notification$Action)>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>","<android.app.Notification$Action$Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>"],"<de.schildbach.wallet.ui.WalletAddressesFragment: void <init>()>":["<de.schildbach.wallet.ui.FancyListFragment: void <init>()>"],"<com.google.protobuf.GeneratedMessage: java.util.Map getAllFields()>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: java.util.Map getAllFieldsMutable()>"],"<ch.qos.logback.core.pattern.util.RegularEscapeUtil: java.lang.String formatEscapeCharsForListing(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture startAsync()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.bitcoinj.core.PeerGroup$8: void <init>(org.bitcoinj.core.PeerGroup)>","<java.util.concurrent.CountDownLatch: void countDown()>"],"<ch.qos.logback.classic.spi.ClassPackagingData: void <init>(java.lang.String,java.lang.String,boolean)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message build()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates build()>"],"<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1EncodableVector buildDEREncodableVector(org.spongycastle.asn1.DefiniteLengthInputStream)>":["<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>","<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1EncodableVector buildEncodableVector()>"],"<org.bitcoinj.core.PeerGroup$3: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<java.lang.ArrayIndexOutOfBoundsException: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.IndexOutOfBoundsException: void <init>()>"],"<ch.qos.logback.core.joran.spi.Interpreter: java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext)>":["<java.util.ArrayList: void <init>(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Throwable: java.lang.Throwable getCause()>","<java.lang.IllegalStateException: java.lang.String getMessage()>"],"<org.bitcoinj.net.discovery.HttpDiscovery: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.net.discovery.HttpDiscovery$Details,com.squareup.okhttp.OkHttpClient)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>"],"<okhttp3.CipherSuite$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String)>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>"],"<org.spongycastle.asn1.x500.AttributeTypeAndValue: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.ASN1Object: void <init>()>"],"<androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)>":["<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<androidx.collection.SparseArrayCompat: void <init>()>":["<androidx.collection.SparseArrayCompat: void <init>(int)>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<de.schildbach.wallet.Configuration: void <init>(android.content.SharedPreferences,android.content.res.Resources)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Peer$1: void <init>(org.bitcoinj.core.Peer)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$10: boolean utxoSpentBy(java.util.Set,org.bitcoinj.core.UTXO)>":["<java.util.HashSet: java.util.Iterator iterator()>"],"<okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<de.schildbach.wallet.Configuration: void updateLastVersionCode(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<de.schildbach.wallet.Configuration: void <clinit>()>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>":["<org.spongycastle.crypto.modes.CBCBlockCipher: int decryptBlock(byte[],int,byte[],int)>","<org.spongycastle.crypto.modes.CBCBlockCipher: int encryptBlock(byte[],int,byte[],int)>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>":["<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>","<androidx.collection.SparseArrayCompat: int size()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$4: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$15: void handlePrivateKey(org.bitcoinj.core.VersionedChecksummedBytes)>":["<de.schildbach.wallet.ui.send.SweepWalletActivity: void start(android.content.Context,org.bitcoinj.core.VersionedChecksummedBytes)>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getCodeLocation(java.lang.Class)>":["<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getCodeLocation(java.lang.String,char)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: org.bitcoinj.wallet.Protos$TransactionConfidence$Source valueOf(int)>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void initFields()>","<com.google.protobuf.CodedInputStream: long readInt64()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: org.bitcoinj.wallet.Protos$TransactionConfidence$Type valueOf(int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.hash.HashCode$BytesHashCode: void <init>(byte[])>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.hash.HashCode: void <init>()>"],"<com.google.protobuf.TextFormat$Printer: void printFieldValue(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: java.lang.String escapeDoubleQuotesAndBackslashes(java.lang.String)>","<com.google.protobuf.TextFormat: java.lang.String unsignedToString(int)>","<com.google.protobuf.TextFormat: java.lang.String escapeText(java.lang.String)>","<com.google.protobuf.TextFormat: java.lang.String unsignedToString(long)>","<com.google.protobuf.TextFormat$Printer: void print(com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator)>","<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.ByteString)>","<com.google.protobuf.TextFormat: java.lang.String escapeBytes(byte[])>","<com.google.protobuf.TextFormat$3: void <clinit>()>","<com.google.protobuf.TextFormat$TextGenerator: void print(java.lang.CharSequence)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13400()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder access$1300()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder create()>"],"<org.spongycastle.asn1.ASN1TaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: void <init>()>":["<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.lifecycle.LifecycleRegistry$1: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Enum: int ordinal()>"],"<org.bitcoinj.wallet.Protos$Transaction$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$EncryptedData: int access$2002(org.bitcoinj.wallet.Protos$EncryptedData,int)>","<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.ByteString access$1802(org.bitcoinj.wallet.Protos$EncryptedData,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.ByteString access$1902(org.bitcoinj.wallet.Protos$EncryptedData,com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.TransactionOutput)>":["<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.TransactionOutput)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getValue()>","<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>","<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,long,org.bitcoinj.core.Transaction)>","<org.bitcoinj.core.TransactionInput: void <clinit>()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Transaction getParentTransaction()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.TransactionOutput: int getIndex()>","<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<ch.qos.logback.core.joran.spi.ElementPath: void push(java.lang.String)>":["<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.GeneratedMessage: void <init>()>":["<com.google.protobuf.AbstractMessage: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setIssuedSubkeys(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.reflect.Modifier: boolean isStatic(int)>","<androidx.fragment.app.BackStackRecord: void addOp(androidx.fragment.app.BackStackRecord$Op)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.BackStackRecord$Op: void <init>(int,androidx.fragment.app.Fragment)>","<java.lang.reflect.Modifier: boolean isPublic(int)>"],"<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String,boolean)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.DERIA5String: boolean isIA5String(java.lang.String)>"],"<com.google.common.base.AbstractIterator: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.util.concurrent.ForwardingFuture: void <init>()>":["<com.google.common.collect.ForwardingObject: void <init>()>"],"<org.spongycastle.math.ec.FixedPointUtil: org.spongycastle.math.ec.FixedPointPreCompInfo getFixedPointPreCompInfo(org.spongycastle.math.ec.PreCompInfo)>":["<org.spongycastle.math.ec.FixedPointPreCompInfo: void <init>()>"],"<org.bitcoinj.core.PeerAddress: void <init>(org.bitcoinj.core.NetworkParameters,java.net.InetAddress,int)>":["<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>","<org.bitcoinj.core.PeerAddress: void <init>(java.net.InetAddress,int,int)>"],"<ch.qos.logback.classic.joran.action.LoggerAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: void resetBlockchain(android.content.Context)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>","<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<org.bitcoinj.script.Script: void parse(byte[])>":["<java.util.ArrayList: void <init>(int)>","<java.io.ByteArrayInputStream: int read()>","<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[],int)>","<org.bitcoinj.script.Script: void <clinit>()>","<java.io.ByteArrayInputStream: int read(byte[],int,int)>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<java.io.ByteArrayInputStream: void <init>(byte[])>","<org.bitcoinj.script.ScriptChunk: boolean equals(java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.io.ByteArrayInputStream: int available()>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity: void onActivityResult(int,int,android.content.Intent)>":["<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void <init>(de.schildbach.wallet.ui.SendCoinsQrActivity,java.lang.String)>","<android.app.Activity: void finish()>","<de.schildbach.wallet.ui.InputParser$StringInputParser: void parse()>"],"<org.bitcoinj.params.TestNet3Params: org.bitcoinj.params.TestNet3Params get()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: void <init>()>"],"<org.bitcoinj.core.Message: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture: java.lang.String userObjectToString(java.lang.Object)>":["<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: boolean hasIntegerTokenCOnverter()>":["<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.IntegerTokenConverter getIntegerTokenConverter()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.lang.String sslCertificateFingerprint(java.security.cert.Certificate)>":["<com.google.common.hash.AbstractByteHasher: com.google.common.hash.Hasher putBytes(byte[])>","<com.google.common.hash.HashCode: java.lang.String toString()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<com.google.common.hash.Hashing: void <clinit>()>","<com.google.common.hash.MessageDigestHashFunction: com.google.common.hash.Hasher newHasher()>","<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>","<com.google.common.hash.Hashing: com.google.common.hash.HashFunction sha256()>"],"<com.google.common.util.concurrent.Uninterruptibles: void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object)>":["<java.lang.Thread: void interrupt()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>"],"<com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>":["<java.lang.String: int hashCode()>","<com.google.common.collect.Hashing: int smear(int)>"],"<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Wallet: boolean isPendingTransactionRelevant(org.bitcoinj.core.Transaction)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.Wallet: java.util.EnumSet getContainingPools(org.bitcoinj.core.Transaction)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: boolean isTransactionRelevant(org.bitcoinj.core.Transaction)>"],"<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>":["<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)>"],"<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>":["<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher,org.spongycastle.crypto.paddings.BlockCipherPadding)>","<org.spongycastle.crypto.paddings.PKCS7Padding: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: int getEnd()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setEnd(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstance()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setStart(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: boolean hasStart()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: boolean hasEnd()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: int getStart()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1: void onFail(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$18$1)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.Fragment: java.lang.String getString(int)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1: void onResult(boolean)>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$8: void run()>":["<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>","<de.schildbach.wallet.ui.scan.ScanActivity: android.os.Handler access$600(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.ScanActivity: de.schildbach.wallet.ui.scan.CameraManager access$200(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager: void close()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>"],"<ch.qos.logback.classic.spi.TurboFilterList: void <init>()>":["<java.util.concurrent.CopyOnWriteArrayList: void <init>()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(byte[])>":["<org.spongycastle.util.Arrays: byte[] clone(byte[])>","<java.lang.StringBuffer: java.lang.StringBuffer append(long)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.StringBuffer: java.lang.String toString()>","<java.lang.StringBuffer: void <init>()>","<java.math.BigInteger: void <clinit>()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<java.math.BigInteger: java.math.BigInteger valueOf(long)>","<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"],"<org.spongycastle.asn1.DERGeneralString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard: void <init>(com.google.common.util.concurrent.AbstractService)>":["<com.google.common.util.concurrent.AbstractService: void <clinit>()>","<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Monitor access$000(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.Monitor$Guard: void <init>(com.google.common.util.concurrent.Monitor)>"],"<okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>":["<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.String: int length()>","<java.lang.String: int indexOf(int,int)>","<java.lang.String: java.lang.String substring(int,int)>"],"<org.spongycastle.asn1.BERSequenceParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.io.IOException: java.lang.String getMessage()>","<org.spongycastle.asn1.BERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>"],"<androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.DescriptorProtos$1: com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor)>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$FileDescriptor access$23602(com.google.protobuf.Descriptors$FileDescriptor)>"],"<de.schildbach.wallet.ui.InputParser$StreamInputParser: void parse()>":["<com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void error(int,java.lang.Object[])>","<java.lang.String: boolean equals(java.lang.Object)>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<de.schildbach.wallet.ui.InputParser: void parseAndHandlePaymentRequest(byte[])>","<com.google.common.io.ByteStreams: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.InputParser: org.slf4j.Logger access$000()>","<java.io.ByteArrayOutputStream: void close()>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<java.io.IOException: java.lang.String getMessage()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void error(int,java.lang.Object[])>","<java.io.ByteArrayOutputStream: void <init>()>","<de.schildbach.wallet.ui.InputParser: void cannotClassify(java.lang.String)>","<java.lang.Throwable: java.lang.String getMessage()>","<java.io.IOException: void printStackTrace()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.InputParser: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos$Key$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Key$1: org.bitcoinj.wallet.Protos$Key parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<okhttp3.internal.Util: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)>","<java.lang.String: char charAt(int)>","<java.lang.System: void <clinit>()>","<okhttp3.internal.Util: void <clinit>()>","<java.util.Arrays: void fill(byte[],int,int,byte)>","<java.lang.AssertionError: void <init>()>","<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>","<okhttp3.internal.Util: int decodeHexDigit(char)>","<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>"],"<com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()>":["<com.google.protobuf.SmallSortedMap$EmptySet: void <clinit>()>","<com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator access$700()>"],"<com.google.protobuf.CodedOutputStream: int computeInt64Size(int,long)>":["<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>","<com.google.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress buildPartial()>"],"<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Object: void <init>()>","<java.lang.System: void <clinit>()>"],"<com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>":["<com.lambdaworks.crypto.SCrypt: void smix(byte[],int,int,int,byte[],byte[])>","<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>","<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>","<com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>"],"<com.lambdaworks.crypto.SCrypt: void blockmix_salsa8(byte[],int,int,int)>":["<com.lambdaworks.crypto.SCrypt: void blockxor(byte[],int,byte[],int,int)>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<com.lambdaworks.crypto.SCrypt: void salsa20_8(byte[])>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<org.bitcoinj.wallet.Protos$ExchangeRate: void initFields()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.CodedInputStream: long readInt64()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>"],"<com.squareup.moshi.internal.Util: void checkNotPrimitive(java.lang.reflect.Type)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Class: boolean isPrimitive()>"],"<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void init()>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void handleAllCompleted()>","<java.util.AbstractCollection: boolean isEmpty()>","<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>","<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void <init>(com.google.common.util.concurrent.AggregateFuture$RunningState,int,com.google.common.util.concurrent.ListenableFuture)>"],"<java.lang.String: java.lang.String substring(int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.io.BaseEncoding$DecodingException: void <init>(java.lang.String)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$2: boolean handleTx(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<de.schildbach.wallet.offline.AcceptBluetoothService: boolean access$000(de.schildbach.wallet.offline.AcceptBluetoothService,org.bitcoinj.core.Transaction)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$9: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createP2SHOutputScript(byte[])>":["<org.bitcoinj.script.ScriptBuilder: void <init>()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder data(byte[])>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script build()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder op(int)>"],"<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.io.InputStream)>":["<com.google.protobuf.CodedInputStream: void <init>(java.io.InputStream)>"],"<ch.qos.logback.classic.util.ContextInitializer: java.net.URL findConfigFileFromSystemProperties(boolean)>":["<java.net.URL: void <init>(java.lang.String)>","<java.net.URL: java.lang.String toString()>","<ch.qos.logback.core.util.Loader: java.net.URL getResource(java.lang.String,java.lang.ClassLoader)>","<java.io.File: java.net.URI toURI()>","<java.io.File: boolean isFile()>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<ch.qos.logback.classic.util.ContextInitializer: void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.lang.String)>","<java.io.File: boolean exists()>","<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String)>","<ch.qos.logback.core.util.Loader: void <clinit>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: void aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>":["<java.lang.ThreadLocal: java.lang.Object get()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: boolean isAcquiredByCurrentThread()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12700()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$TransactionInput: void initFields()>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.CodedInputStream: long readInt64()>"],"<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>":["<ch.qos.logback.core.rolling.helper.PeriodicityType: void <init>(java.lang.String,int)>","<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1ObjectIdentifier decodeAttrName(java.lang.String,java.util.Hashtable)>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: boolean startsWith(java.lang.String)>","<org.spongycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>","<java.util.Hashtable: java.lang.Object get(java.lang.Object)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$Descriptor: java.lang.String getName()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: java.lang.String getName()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$000()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object)>":["<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.content.DialogInterface$OnClickListener access$3100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void setLookaheadSize(int)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.DeterministicKeyChain: int calcDefaultLookaheadThreshold()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.core.TransactionInput$ConnectMode: void <clinit>()>":["<org.bitcoinj.core.TransactionInput$ConnectMode: void <init>(java.lang.String,int)>","<org.bitcoinj.core.TransactionInput$ConnectMode: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent: byte[] base64UrlDecode(java.lang.String)>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>"],"<ch.qos.logback.core.joran.action.NewRuleAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<de.schildbach.wallet.WalletApplication$2: void <init>(de.schildbach.wallet.WalletApplication,com.google.common.util.concurrent.SettableFuture)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Utils: byte[] copyOf(byte[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Math: int min(int,int)>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.ASN1Sequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>"],"<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>":["<org.spongycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int)>","<org.spongycastle.asn1.BERTaggedObjectParser: void <init>(boolean,int,org.spongycastle.asn1.ASN1StreamParser)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>","<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readIndef(int)>","<org.spongycastle.asn1.ASN1InputStream: int readTagNumber(java.io.InputStream,int)>","<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>","<org.spongycastle.asn1.DERSequenceParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.BERApplicationSpecificParser: void <init>(int,org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>","<java.io.IOException: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1StreamParser: void set00Check(boolean)>","<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String,java.lang.Throwable)>","<org.spongycastle.asn1.DEROctetStringParser: void <init>(org.spongycastle.asn1.DefiniteLengthInputStream)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.spongycastle.asn1.DefiniteLengthInputStream: void <clinit>()>","<org.spongycastle.asn1.BEROctetStringParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.DERSetParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.DERExternalParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int)>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,byte[])>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPaymentURL: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractService$3: void <init>(com.google.common.util.concurrent.Service$State)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>":["<androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()>"],"<org.spongycastle.asn1.ASN1Enumerated: org.spongycastle.asn1.ASN1Enumerated fromOctetString(byte[])>":["<org.spongycastle.util.Arrays: byte[] clone(byte[])>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1Enumerated: void <init>(byte[])>","<org.spongycastle.asn1.ASN1Enumerated: void <clinit>()>"],"<org.slf4j.impl.StaticLoggerBinder: java.lang.String getLoggerFactoryClassStr()>":["<java.lang.Object: java.lang.Class getClass()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: void <init>(java.lang.String,java.util.TimeZone,java.util.Locale)>":["<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>","<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>","<ch.qos.logback.core.rolling.helper.RollingCalendar: ch.qos.logback.core.rolling.helper.PeriodicityType computePeriodicityType()>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: void <init>()>":["<android.content.ContentProvider: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromIntentExtras(android.os.Bundle)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateStateFrom(de.schildbach.wallet.data.PaymentIntent)>","<androidx.fragment.app.Fragment: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: void <init>()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setValue(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.core.joran.GenericConfigurator: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions buildPartial()>":["<com.google.protobuf.DescriptorProtos$FieldOptions: java.util.List access$15602(com.google.protobuf.DescriptorProtos$FieldOptions,java.util.List)>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$CType access$15002(com.google.protobuf.DescriptorProtos$FieldOptions,com.google.protobuf.DescriptorProtos$FieldOptions$CType)>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean access$15202(com.google.protobuf.DescriptorProtos$FieldOptions,boolean)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions: java.lang.Object access$15402(com.google.protobuf.DescriptorProtos$FieldOptions,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean access$15502(com.google.protobuf.DescriptorProtos$FieldOptions,boolean)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean access$15302(com.google.protobuf.DescriptorProtos$FieldOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean access$15102(com.google.protobuf.DescriptorProtos$FieldOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FieldOptions: int access$15702(com.google.protobuf.DescriptorProtos$FieldOptions,int)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>":["<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>","<com.google.protobuf.CodedOutputStream: void writeMessageNoTag(com.google.protobuf.MessageLite)>"],"<org.bitcoinj.core.Utils: byte[] bigIntegerToBytes(java.math.BigInteger,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Math: int min(int,int)>","<java.lang.System: void <clinit>()>","<java.math.BigInteger: byte[] toByteArray()>"],"<com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite getEmptyRegistry()>":["<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>"],"<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>":["<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>","<okhttp3.HttpUrl: void <clinit>()>","<java.lang.String: int length()>"],"<androidx.recyclerview.widget.RecyclerView$LayoutManager: void <init>()>":["<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>","<java.lang.Object: void <init>()>","<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>","<androidx.recyclerview.widget.ViewBoundsCheck: void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder create()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: void <init>()>"],"<java.lang.Boolean: boolean parseBoolean(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message build()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output build()>"],"<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function)>":["<com.google.common.util.concurrent.AbstractTransformFuture: void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object)>"],"<org.bitcoinj.core.ProtocolException: void <init>(java.lang.Exception)>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.Exception)>"],"<org.bitcoinj.core.Base58: byte[] decode(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<org.bitcoinj.core.Base58: void <clinit>()>","<org.bitcoinj.core.Base58: byte divmod(byte[],int,int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedInputStream: void refillBuffer(int)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>","<com.google.protobuf.CodedInputStream: boolean tryRefillBuffer(int)>"],"<de.schildbach.wallet.ui.InputParser: de.schildbach.wallet.data.PaymentIntent parsePaymentRequest(byte[])>":["<org.bitcoinj.protocols.payments.PaymentSession: boolean isExpired()>","<org.bitcoinj.protocols.payments.PaymentSession: java.util.List getOutputs()>","<org.bitcoinj.protocols.payments.PaymentSession: java.lang.String getMemo()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>","<de.schildbach.wallet.data.PaymentIntent: void <init>(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.data.PaymentIntent$Output: de.schildbach.wallet.data.PaymentIntent$Output valueOf(org.bitcoinj.protocols.payments.PaymentProtocol$Output)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentSession: byte[] getMerchantData()>","<com.google.common.hash.Hashing: com.google.common.hash.HashFunction sha256()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidNetwork: void <init>(java.lang.String)>","<com.google.common.hash.AbstractHashFunction: com.google.common.hash.HashCode hashBytes(byte[])>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>","<de.schildbach.wallet.data.PaymentIntent$Output: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: boolean hasPaymentUrl()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPaymentURL: void <init>(java.lang.String)>","<org.bitcoinj.protocols.payments.PaymentSession: org.bitcoinj.core.NetworkParameters getNetworkParameters()>","<de.schildbach.wallet.data.PaymentIntent$Standard: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$Expired: void <init>(java.lang.String)>","<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: void <init>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest parseFrom(byte[])>","<de.schildbach.wallet.data.PaymentIntent: boolean isSupportedPaymentUrl()>","<java.lang.String: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode$BytesHashCode: byte[] asBytes()>","<java.lang.StringBuilder: void <init>()>","<java.util.Date: void <init>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData verifyPaymentRequestPki(org.bitcoin.protocols.payments.Protos$PaymentRequest,java.security.KeyStore)>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentSession parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>","<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore getKeyStore()>","<org.bitcoinj.protocols.payments.PaymentSession: java.lang.String getPaymentUrl()>","<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>","<com.google.common.hash.Hashing: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentSession: java.util.Date getExpires()>"],"<com.google.protobuf.Descriptors$DescriptorPool$DescriptorIntPair: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionOutput: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>"],"<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>":["<java.lang.Object: boolean equals(java.lang.Object)>"],"<com.google.common.collect.Maps$EntryFunction$2: void <init>(java.lang.String,int)>":["<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int,com.google.common.collect.Maps$1)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addExtension(org.bitcoinj.wallet.Protos$Extension$Builder)>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureExtensionIsMutable()>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension build()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>"],"<androidx.loader.content.Loader: void stopLoading()>":["<androidx.loader.content.CursorLoader: void onStopLoading()>"],"<androidx.fragment.app.FragmentActivity: void onBackPressed()>":["<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()>","<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>","<android.os.Build$VERSION: void <clinit>()>","<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>","<android.app.Activity: void onBackPressed()>"],"<ch.qos.logback.core.FileAppender: void start()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>","<ch.qos.logback.core.FileAppender: void setAppend(boolean)>","<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>","<ch.qos.logback.core.FileAppender: void <clinit>()>","<ch.qos.logback.core.OutputStreamAppender: void start()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.FileAppender: boolean isAppend()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.rolling.RollingFileAppender: java.lang.String getFile()>","<ch.qos.logback.core.OutputStreamAppender: void setOutputStream(java.io.OutputStream)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.FileAppender: boolean openFile(java.lang.String)>","<ch.qos.logback.core.NOPOutputStream: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<ch.qos.logback.core.FileAppender: java.lang.String getAbsoluteFilePath(java.lang.String)>","<ch.qos.logback.core.FileAppender: boolean checkForFileCollisionInPreviousFileAppenders()>"],"<org.bitcoinj.core.Utils: java.lang.String join(java.lang.Iterable)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>"],"<com.google.common.base.CharMatcher$Whitespace: void <clinit>()>":["<com.google.common.base.CharMatcher$Whitespace: void <init>()>","<com.google.common.base.CharMatcher$Whitespace: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<java.lang.Integer: int numberOfLeadingZeros(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.String: int length()>"],"<de.schildbach.wallet.service.InactivityNotificationService: void handleDismiss()>":["<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()>":["<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<com.google.protobuf.RepeatedFieldBuilder: void ensureMutableMessageList()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment: void onCreate(android.os.Bundle)>":["<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)>","<androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)>","<de.schildbach.wallet.Configuration: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>","<de.schildbach.wallet.ui.ExchangeRatesFragment$1: void <init>(de.schildbach.wallet.ui.ExchangeRatesFragment)>","<de.schildbach.wallet.ui.ExchangeRatesFragment$3: void <init>(de.schildbach.wallet.ui.ExchangeRatesFragment)>","<de.schildbach.wallet.ui.ExchangeRatesAdapter: void <init>(android.content.Context,de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener)>","<de.schildbach.wallet.ui.ExchangeRatesFragment$2: void <init>(de.schildbach.wallet.ui.ExchangeRatesFragment)>","<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>"],"<ch.qos.logback.classic.spi.ThrowableProxyUtil: void indent(java.lang.StringBuilder,int)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"],"<dummyMainClass: de.schildbach.wallet.ui.SendCoinsQrActivity dummyMainMethod_de_schildbach_wallet_ui_SendCoinsQrActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.SendCoinsQrActivity: void <init>()>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1$1: void onClick(android.content.DialogInterface,int)>","<de.schildbach.wallet.ui.SendCoinsQrActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void <init>(de.schildbach.wallet.ui.SendCoinsQrActivity,java.lang.String)>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1$1: void <init>(de.schildbach.wallet.ui.SendCoinsQrActivity$1)>","<de.schildbach.wallet.ui.SendCoinsQrActivity: void onActivityResult(int,int,android.content.Intent)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$21900()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: void maybeForceBuilderInitialization()>"],"<java.lang.String: java.lang.String valueOf(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Transaction: java.lang.String toString()>":["<org.bitcoinj.core.Transaction: java.lang.String toString(org.bitcoinj.core.AbstractBlockChain)>"],"<org.slf4j.helpers.Util: java.lang.Class getCallingClass()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()>","<java.lang.Class: java.lang.String getName()>","<org.slf4j.helpers.Util$ClassContextSecurityManager: java.lang.Class[] getClassContext()>","<org.slf4j.helpers.Util: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[],int,int,byte[],int,int)>":["<org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: int access$3602(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange,int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: int access$3502(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange,int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: int access$3402(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange,int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.InterpretationContext: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter)>":["<java.util.HashMap: void <init>(int)>","<java.util.ArrayList: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>","<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void <init>()>","<java.util.Stack: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder(org.bitcoinj.wallet.Protos$TransactionConfidence)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getPkiTypeBytes()>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.ByteString: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Tag: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$Tag: boolean hasData()>","<org.bitcoinj.wallet.Protos$Tag: boolean hasTag()>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumOptions)>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$EnumOptions: boolean hasDeprecated()>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder setDeprecated(boolean)>","<com.google.protobuf.DescriptorProtos$EnumOptions: boolean getAllowAlias()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$EnumOptions: boolean getDeprecated()>","<com.google.protobuf.DescriptorProtos$EnumOptions: java.util.List access$16600(com.google.protobuf.DescriptorProtos$EnumOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: boolean hasAllowAlias()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: boolean isEmpty()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder setAllowAlias(boolean)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<com.squareup.okhttp.CipherSuite: void <clinit>()>":["<com.squareup.okhttp.CipherSuite: void <clinit>()>","<com.squareup.okhttp.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>"],"<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>":["<android.util.SparseArray: int size()>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addTags(org.bitcoinj.wallet.Protos$Tag$Builder)>":["<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag build()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTagsIsMutable()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<java.lang.String: int compareTo(java.lang.Object)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes: void <init>(byte[],byte[])>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: void initFields()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10400()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()>":["<androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>"],"<com.google.common.collect.RegularImmutableMap: void <clinit>()>":["<com.google.common.collect.RegularImmutableMap: void <init>(int[],java.lang.Object[],int)>","<com.google.common.collect.RegularImmutableMap: void <clinit>()>","<com.google.common.collect.ImmutableMap: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicSeed: org.bitcoinj.wallet.DeterministicSeed encrypt(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.crypto.EncryptedData encrypt(byte[],org.spongycastle.crypto.params.KeyParameter)>","<org.bitcoinj.wallet.DeterministicSeed: byte[] getMnemonicAsBytes()>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.EncryptedData,long)>"],"<com.google.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)>":["<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>","<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>","<java.util.ArrayList: java.lang.Object remove(int)>","<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.util.Map$Entry)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.AbstractMap: boolean isEmpty()>","<com.google.protobuf.SmallSortedMap: void checkMutable()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy)>":["<ch.qos.logback.core.CoreConstants: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.classic.spi.ThrowableProxyUtil: void indent(java.lang.StringBuilder,int)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printIgnoredCount(java.lang.StringBuilder,int)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printStackLine(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.StackTraceElementProxy)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: boolean isIgnoredStackTraceLine(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: org.bitcoinj.wallet.Protos$TransactionConfidence$Type valueOf(int)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>"],"<com.google.protobuf.TextFormat$Printer: com.google.protobuf.TextFormat$Printer access$200(com.google.protobuf.TextFormat$Printer,boolean)>":["<com.google.protobuf.TextFormat$Printer: com.google.protobuf.TextFormat$Printer setEscapeNonAscii(boolean)>"],"<androidx.fragment.app.Fragment: void onDestroy()>":["<androidx.lifecycle.ViewModelStore: void clear()>","<android.app.Activity: boolean isChangingConfigurations()>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>"],"<ch.qos.logback.core.joran.spi.InterpretationContext: void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent)>":["<java.util.ArrayList: java.util.Iterator iterator()>"],"<org.spongycastle.math.ec.FixedPointCombMultiplier: void <init>()>":["<org.spongycastle.math.ec.AbstractECMultiplier: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setCcGenericServices(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.KeyChainGroup: java.util.List freshKeys(org.bitcoinj.wallet.KeyChain$KeyPurpose,int)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"],"<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)>"],"<androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)>":["<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(androidx.fragment.app.BackStackRecord,boolean)>","<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: void add(int,java.lang.Object)>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>"],"<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[])>":["<com.google.common.collect.RegularImmutableMap: void <init>(int[],java.lang.Object[],int)>","<com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>","<com.google.common.collect.RegularImmutableMap: int[] createHashTable(java.lang.Object[],int,int,int)>","<com.google.common.collect.RegularImmutableMap: void <clinit>()>","<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>","<com.google.common.collect.ImmutableSet: int chooseTableSize(int)>","<com.google.common.collect.ImmutableMap: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition$1: void <init>(java.util.ArrayList)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.data.PaymentIntent: boolean isSupportedPaymentUrl()>":["<de.schildbach.wallet.data.PaymentIntent: boolean isHttpPaymentUrl()>","<de.schildbach.wallet.data.PaymentIntent: boolean isBluetoothPaymentUrl()>"],"<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,byte[])>":["<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.core.VarInt: int sizeOf(long)>","<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>","<org.bitcoinj.params.AbstractBitcoinNetParams: boolean hasMaxMoney()>","<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Coin: int signum()>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>"],"<org.bitcoinj.core.listeners.AbstractPeerDataEventListener: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DynamicMessage: boolean isInitialized(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet)>":["<com.google.protobuf.FieldSet: boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.FieldSet: boolean isInitialized()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: void <init>()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.content.DialogInterface$OnClickListener access$3100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractService$IsStoppedGuard: void <init>(com.google.common.util.concurrent.AbstractService)>":["<com.google.common.util.concurrent.AbstractService: void <clinit>()>","<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Monitor access$000(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.Monitor$Guard: void <init>(com.google.common.util.concurrent.Monitor)>"],"<androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig build()>":["<androidx.recyclerview.widget.AsyncDifferConfig$Builder: void <clinit>()>","<androidx.recyclerview.widget.AsyncDifferConfig: void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback)>","<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$13300()>"],"<com.google.common.collect.NaturalOrdering: void <init>()>":["<com.google.common.collect.Ordering: void <init>()>"],"<androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)>":["<java.util.WeakHashMap: java.util.Set keySet()>","<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>","<java.util.WeakHashMap: boolean isEmpty()>","<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>"],"<androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>":["<androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)>","<java.lang.String: boolean equals(java.lang.Object)>","<android.database.MatrixCursor: void addRow(java.lang.Object[])>","<androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)>","<java.lang.String: void <clinit>()>","<androidx.core.content.FileProvider: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<android.database.MatrixCursor: void <init>(java.lang.String[],int)>","<java.lang.Long: void <clinit>()>","<androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)>"],"<com.squareup.moshi.StandardJsonAdapters$7: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<ch.qos.logback.core.pattern.DynamicConverter: ch.qos.logback.core.Context getContext()>":["<ch.qos.logback.core.spi.ContextAwareBase: ch.qos.logback.core.Context getContext()>"],"<org.bitcoinj.script.Script: void <init>(byte[],long)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.script.Script: void parse(byte[])>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isKleeneStar(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <clinit>()>"],"<org.bitcoinj.crypto.DeterministicKey: boolean isPubKeyOnly()>":["<org.bitcoinj.crypto.DeterministicKey: boolean isPubKeyOnly()>","<org.bitcoinj.core.ECKey: boolean isPubKeyOnly()>"],"<org.spongycastle.asn1.IndefiniteLengthInputStream: void setEofOn00(boolean)>":["<org.spongycastle.asn1.IndefiniteLengthInputStream: boolean checkForEof()>"],"<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.KeyChainGroup fromProtobufEncrypted(org.bitcoinj.core.NetworkParameters,java.util.List,org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.wallet.KeyChainFactory)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<java.util.ArrayList: boolean isEmpty()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List fromProtobuf(java.util.List,org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.wallet.KeyChainFactory)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: void extractFollowingKeychains(java.util.List)>","<org.bitcoinj.wallet.KeyChainGroup: java.util.EnumMap createCurrentKeysMap(java.util.List)>","<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.BasicKeyChain,java.util.List,java.util.EnumMap,org.bitcoinj.crypto.KeyCrypter)>","<java.util.LinkedList: boolean isEmpty()>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.BasicKeyChain fromProtobufEncrypted(java.util.List,org.bitcoinj.crypto.KeyCrypter)>"],"<com.google.common.base.Splitter$2$1: int separatorStart(int)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setMemo(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.classic.util.ContextInitializer: java.net.URL getResource(java.lang.String,java.lang.ClassLoader,boolean)>":["<ch.qos.logback.classic.util.ContextInitializer: void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.lang.String)>"],"<com.google.protobuf.WireFormat$FieldType$2: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>":["<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int,com.google.protobuf.WireFormat$1)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$500(de.schildbach.wallet.ui.send.SweepWalletFragment,de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void setState(de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>"],"<com.google.common.collect.MapMakerInternalMap: void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference)>":["<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)>"],"<okio.Okio: okio.BufferedSource buffer(okio.Source)>":["<okio.RealBufferedSource: void <init>(okio.Source)>"],"<org.bitcoinj.wallet.Wallet: boolean isPubKeyHashMine(byte[])>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.RequestCoinsFragment$4: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<de.schildbach.wallet.ui.RequestCoinsFragment$5: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)>","<androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)>","<de.schildbach.wallet.ui.RequestCoinsFragment$2: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment$3: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void restoreInstanceState(android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment$1: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>","<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment$6: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$TransactionOutput: int access$8502(org.bitcoinj.wallet.Protos$TransactionOutput,int)>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.ByteString access$8402(org.bitcoinj.wallet.Protos$TransactionOutput,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.ByteString access$8302(org.bitcoinj.wallet.Protos$TransactionOutput,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionOutput: long access$8202(org.bitcoinj.wallet.Protos$TransactionOutput,long)>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: int access$8602(org.bitcoinj.wallet.Protos$TransactionOutput,int)>"],"<org.slf4j.impl.StaticLoggerBinder: org.slf4j.ILoggerFactory getLoggerFactory()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<ch.qos.logback.classic.util.ContextSelectorStaticBinder: ch.qos.logback.classic.selector.ContextSelector getContextSelector()>","<ch.qos.logback.classic.selector.DefaultContextSelector: ch.qos.logback.classic.LoggerContext getLoggerContext()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>"],"<com.google.protobuf.AbstractMessage$Builder: void <init>()>":["<com.google.protobuf.AbstractMessageLite$Builder: void <init>()>"],"<okio.Timeout: void <clinit>()>":["<okio.Timeout$1: void <init>()>","<okio.Timeout: void <clinit>()>"],"<ch.qos.logback.classic.joran.action.LevelAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<de.schildbach.wallet.util.Bluetooth: java.lang.String getBluetoothMac(java.lang.String)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: int indexOf(int)>","<de.schildbach.wallet.util.Bluetooth: boolean isBluetoothUrl(java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>"],"<ch.qos.logback.core.util.StatusPrinter: void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context)>":["<ch.qos.logback.core.util.StatusPrinter: void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long)>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>":["<com.google.protobuf.WireFormat: int makeTag(int,int)>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.WalletFiles autosaveToFile(java.io.File,long,java.util.concurrent.TimeUnit,org.bitcoinj.wallet.WalletFiles$Listener)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.wallet.WalletFiles: void setListener(org.bitcoinj.wallet.WalletFiles$Listener)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.WalletFiles: void <clinit>()>","<org.bitcoinj.wallet.WalletFiles: void <init>(org.bitcoinj.wallet.Wallet,java.io.File,long,java.util.concurrent.TimeUnit)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1900(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void handleCancel()>"],"<ch.qos.logback.classic.selector.DefaultContextSelector: void <init>(ch.qos.logback.classic.LoggerContext)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>":["<com.google.common.base.Equivalence$Identity: boolean doEquivalent(java.lang.Object,java.lang.Object)>","<com.google.common.base.Equivalence$Equals: boolean doEquivalent(java.lang.Object,java.lang.Object)>"],"<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.data.AbstractWalletLiveData$2: void <init>(de.schildbach.wallet.data.AbstractWalletLiveData)>":["<android.content.BroadcastReceiver: void <init>()>"],"<org.bitcoinj.wallet.Wallet: long getLastBlockSeenTimeSecs()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.slf4j.event.SubstituteLoggingEvent: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1: com.google.protobuf.DescriptorProtos$FieldDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>":["<java.lang.Exception: void <init>(java.lang.Throwable)>"],"<org.bitcoinj.core.StoredBlock: void <clinit>()>":["<org.bitcoinj.core.StoredBlock: void <clinit>()>"],"<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>":["<java.util.logging.Level: void <clinit>()>","<java.lang.Throwable: void <init>(java.lang.String)>","<okhttp3.internal.platform.Platform: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<org.spongycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>":["<org.spongycastle.asn1.IndefiniteLengthInputStream: void setEofOn00(boolean)>"],"<org.bitcoin.protocols.payments.Protos$Output$1: org.bitcoin.protocols.payments.Protos$Output parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>"],"<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>":["<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>","<androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)>","<java.lang.Class: boolean isInstance(java.lang.Object)>","<androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)>","<androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)>"],"<androidx.fragment.app.FragmentActivity: void onDestroy()>":["<androidx.lifecycle.ViewModelStore: void clear()>","<android.app.Activity: boolean isChangingConfigurations()>","<androidx.fragment.app.FragmentController: void dispatchDestroy()>","<android.app.Activity: void onDestroy()>"],"<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: org.bitcoinj.wallet.Protos$Wallet$EncryptionType[] values()>":["<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<com.google.common.io.BaseEncoding$Alphabet: boolean equals(java.lang.Object)>":["<java.util.Arrays: boolean equals(char[],char[])>"],"<com.google.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.google.protobuf.ByteString)>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>"],"<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>":["<com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)>"],"<org.bitcoinj.core.UnsafeByteArrayOutputStream: byte[] toByteArray()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: byte[] copyOf(byte[],int)>"],"<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>":["<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>"],"<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableCollection values()>":["<com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableCollection createValues()>"],"<okio.AsyncTimeout$Watchdog: void <init>()>":["<java.lang.Thread: void setDaemon(boolean)>","<java.lang.Thread: void <init>(java.lang.String)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>":["<java.lang.System: long currentTimeMillis()>","<de.schildbach.wallet.data.ExchangeRatesProvider: de.schildbach.wallet.data.ExchangeRate bestExchangeRate(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.Long: java.lang.Long valueOf(long)>","<de.schildbach.wallet.util.GenericUtils: java.lang.String currencySymbol(java.lang.String)>","<java.lang.Long: void <clinit>()>","<android.database.MatrixCursor: void <init>(java.lang.String[])>","<java.lang.String: boolean contains(java.lang.CharSequence)>","<java.lang.String: int hashCode()>","<java.util.TreeMap: java.util.Set entrySet()>","<java.lang.System: void <clinit>()>","<java.lang.String: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.util.Locale: void <clinit>()>","<de.schildbach.wallet.data.ExchangeRatesProvider: java.util.Map requestExchangeRates()>","<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<android.database.MatrixCursor: android.database.MatrixCursor$RowBuilder newRow()>"],"<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500Name build()>":["<java.util.Vector: java.lang.Object elementAt(int)>","<java.util.Vector: int size()>","<org.spongycastle.asn1.x500.X500Name: void <clinit>()>","<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.X500NameStyle,org.spongycastle.asn1.x500.RDN[])>"],"<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getEncryptedDataFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$EncryptedData getEncryptedData()>"],"<org.slf4j.LoggerFactory: void emitReplayWarning(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: void report(java.lang.String)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: boolean onKeyDown(int,android.view.KeyEvent)>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>","<de.schildbach.wallet.ui.scan.ScanActivity$5: void run()>","<de.schildbach.wallet.ui.scan.ScanActivity$5: void <init>(de.schildbach.wallet.ui.scan.ScanActivity,int)>"],"<com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable iterable()>":["<com.google.protobuf.SmallSortedMap$EmptySet: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: java.util.List getStoredOutputsFromUTXOProvider()>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoinj.wallet.Wallet: java.util.List getImportedKeys()>","<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>":["<java.lang.NullPointerException: void <init>()>","<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(java.io.InputStream,boolean,org.bitcoinj.wallet.WalletExtension[])>":["<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Wallet parseToProto(java.io.InputStream)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.WalletExtension[],org.bitcoinj.wallet.Protos$Wallet,boolean)>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.String getNetworkIdentifier()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.NetworkParameters fromID(java.lang.String)>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>","<androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: void <init>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.wallet.DeterministicKeyChain)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey getParent()>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.wallet.DeterministicKeyChain: com.google.common.collect.ImmutableList getAccountPath()>","<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList concat(java.util.List,java.util.List)>","<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey encrypt(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicKey: void <init>(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.BasicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter)>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>","<org.bitcoinj.crypto.DeterministicHierarchy: void <init>(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.DeterministicKeyChain: org.bitcoinj.crypto.DeterministicKey encryptNonLeaf(org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.wallet.DeterministicKeyChain,org.bitcoinj.crypto.DeterministicKey,com.google.common.collect.ImmutableList)>","<org.bitcoinj.wallet.DeterministicKeyChain: int calcDefaultLookaheadThreshold()>","<org.bitcoinj.wallet.BasicKeyChain: void importKey(org.bitcoinj.core.ECKey)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>","<com.google.common.collect.RegularImmutableList: int size()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: org.bitcoinj.wallet.DeterministicSeed encrypt(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<org.bitcoinj.wallet.BasicKeyChain: java.util.List getKeys()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey dropPrivateBytes()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setEncryptionType(org.bitcoinj.wallet.Protos$Wallet$EncryptionType)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment self()>"],"<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: int indexOf(java.lang.String,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<org.spongycastle.asn1.DERGenerator: void <init>(java.io.OutputStream)>":["<org.spongycastle.asn1.ASN1Generator: void <init>(java.io.OutputStream)>"],"<com.google.protobuf.CodedInputStream: void <init>(com.google.protobuf.LiteralByteString)>":["<java.lang.Object: void <init>()>","<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.LiteralByteString: int getOffsetIntoBytes()>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>"],"<androidx.fragment.app.FragmentController: void dispatchActivityCreated()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()>"],"<androidx.lifecycle.LifecycleService: void onStart(android.content.Intent,int)>":["<androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnStart()>","<android.app.Service: void onStart(android.content.Intent,int)>"],"<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoinj.core.PeerGroup: void setFastCatchupTimeSecs(long)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.net.FilterMerger: org.bitcoinj.core.BloomFilter getLastFilter()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.BlockChain: boolean shouldVerifyTransactions()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$6: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<de.schildbach.wallet.util.Bluetooth: java.lang.String getAddress(android.bluetooth.BluetoothAdapter)>":["<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MethodOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity: android.animation.AnimatorSet buildEnterAnimation(android.view.View)>":["<de.schildbach.wallet.ui.WalletActivity$11: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>","<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>","<android.view.animation.DecelerateInterpolator: void <init>()>","<android.animation.AnimatorSet: void <init>()>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>","<de.schildbach.wallet.ui.WalletActivity$10: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>","<de.schildbach.wallet.ui.WalletActivity$12: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>","<android.os.Build$VERSION: void <clinit>()>","<de.schildbach.wallet.ui.WalletActivity$13: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<android.app.Activity: android.view.Window getWindow()>"],"<com.google.common.collect.FluentIterable$3$1: void <init>(com.google.common.collect.FluentIterable$3,int)>":["<com.google.common.collect.AbstractIndexedListIterator: void <init>(int)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters buildPartial()>"],"<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>":["<okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>","<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>","<java.lang.String: char charAt(int)>","<okhttp3.internal.Util: void <clinit>()>","<java.util.ArrayList: void clear()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<okhttp3.internal.platform.ConscryptPlatform: java.security.Provider getProvider()>":["<org.conscrypt.Conscrypt: org.conscrypt.Conscrypt$ProviderBuilder newProviderBuilder()>"],"<org.bitcoinj.wallet.KeyChainGroup: java.lang.String toString(boolean)>":["<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.ECKey: void <clinit>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<org.bitcoinj.wallet.BasicKeyChain: java.util.List getKeys()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.LinkedList: java.util.Iterator iterator()>","<java.util.Collections: void sort(java.util.List,java.util.Comparator)>","<java.util.Collections: void <clinit>()>"],"<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>":["<androidx.collection.SparseArrayCompat: void gc()>"],"<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>":["<com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>"],"<okhttp3.HttpUrl$Builder: int parsePort(java.lang.String,int,int)>":["<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <init>(org.bitcoinj.wallet.Wallet,android.os.Handler)>":["<android.os.Handler: void <init>(android.os.Looper)>","<java.lang.Object: void <init>()>","<android.os.Looper: android.os.Looper myLooper()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet buildPartial()>":["<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18002(org.bitcoinj.wallet.Protos$Wallet,java.util.List)>","<org.bitcoinj.wallet.Protos$Wallet: long access$18802(org.bitcoinj.wallet.Protos$Wallet,long)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18102(org.bitcoinj.wallet.Protos$Wallet,java.util.List)>","<org.bitcoinj.wallet.Protos$Wallet: int access$17802(org.bitcoinj.wallet.Protos$Wallet,int)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18902(org.bitcoinj.wallet.Protos$Wallet,java.util.List)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$EncryptionType access$18302(org.bitcoinj.wallet.Protos$Wallet,org.bitcoinj.wallet.Protos$Wallet$EncryptionType)>","<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$Wallet: int access$18502(org.bitcoinj.wallet.Protos$Wallet,int)>","<org.bitcoinj.wallet.Protos$Wallet: long access$17902(org.bitcoinj.wallet.Protos$Wallet,long)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString access$17702(org.bitcoinj.wallet.Protos$Wallet,com.google.protobuf.ByteString)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18602(org.bitcoinj.wallet.Protos$Wallet,java.util.List)>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.Object access$17602(org.bitcoinj.wallet.Protos$Wallet,java.lang.Object)>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$ScryptParameters access$18402(org.bitcoinj.wallet.Protos$Wallet,org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.Object access$18702(org.bitcoinj.wallet.Protos$Wallet,java.lang.Object)>","<org.bitcoinj.wallet.Protos$Wallet: int access$19102(org.bitcoinj.wallet.Protos$Wallet,int)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18202(org.bitcoinj.wallet.Protos$Wallet,java.util.List)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$19002(org.bitcoinj.wallet.Protos$Wallet,java.util.List)>"],"<org.spongycastle.asn1.ASN1Boolean: void <init>(byte[])>":["<org.spongycastle.util.Arrays: byte[] clone(byte[])>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1Boolean: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder toBuilder()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder(org.bitcoinj.wallet.Protos$ExchangeRate)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder()>"],"<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void handleAllCompleted()>":["<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: java.lang.Object combine(java.util.List)>","<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>"],"<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>":["<java.util.concurrent.CopyOnWriteArrayList: int size()>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>","<ch.qos.logback.classic.spi.TurboFilterList: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<ch.qos.logback.core.util.COWArrayList: void refreshCopyIfNecessary()>":["<ch.qos.logback.core.util.COWArrayList: void refreshCopy()>","<ch.qos.logback.core.util.COWArrayList: boolean isFresh()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder setMemo(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.BasicKeyChain: boolean hasKey(org.bitcoinj.core.ECKey)>":["<org.bitcoinj.core.ECKey: byte[] getPubKey()>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: void writeRawBytes(byte[],int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<com.google.protobuf.CodedOutputStream: void refreshBuffer()>","<java.lang.System: void <clinit>()>","<java.io.DataOutputStream: void write(byte[],int,int)>","<java.io.FileOutputStream: void write(byte[],int,int)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: int access$18502(com.google.protobuf.DescriptorProtos$ServiceOptions,int)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: boolean access$18302(com.google.protobuf.DescriptorProtos$ServiceOptions,boolean)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: java.util.List access$18402(com.google.protobuf.DescriptorProtos$ServiceOptions,java.util.List)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<ch.qos.logback.core.joran.event.SaxEventRecorder: void handleError(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.core.joran.spi.JoranException: void <init>(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.core.joran.event.SaxEventRecorder: void addError(java.lang.String,java.lang.Throwable)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder create()>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: void <init>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$19900()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<okhttp3.RealCall$1: void <init>(okhttp3.RealCall)>":["<okio.AsyncTimeout: void <init>()>"],"<de.schildbach.wallet.ui.scan.CameraManager: void <init>()>":["<java.lang.Object: void <init>()>","<android.hardware.Camera$CameraInfo: void <init>()>"],"<org.bitcoinj.core.Transaction: boolean isCoinBase()>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>":["<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>":["<androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener: void <init>(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: boolean shouldRunOnHWLayer(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>","<androidx.fragment.app.FragmentManagerImpl: android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>"],"<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker weakKeys()>":["<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>","<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength)>"],"<androidx.collection.SparseArrayCompat: void delete(int)>":["<androidx.collection.SparseArrayCompat: void <clinit>()>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$5: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.CodedInputStream: long readUInt64()>","<org.bitcoin.protocols.payments.Protos$Output: void initFields()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.Descriptors$FileDescriptor: void crossLink()>":["<com.google.protobuf.Descriptors$Descriptor: void access$600(com.google.protobuf.Descriptors$Descriptor)>","<com.google.protobuf.Descriptors$ServiceDescriptor: void access$700(com.google.protobuf.Descriptors$ServiceDescriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor: void access$800(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onDestroyView()>":["<androidx.fragment.app.Fragment: void onDestroyView()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: boolean getExchangeDirection()>","<de.schildbach.wallet.Configuration: void setLastExchangeDirection(boolean)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$5: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setServices(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.spongycastle.asn1.ASN1Set: void sort()>":["<org.spongycastle.asn1.ASN1Set: byte[] getEncoded(org.spongycastle.asn1.ASN1Encodable)>","<java.util.Vector: java.lang.Object elementAt(int)>","<java.util.Vector: int size()>","<org.spongycastle.asn1.ASN1Set: boolean lessThanOrEqual(byte[],byte[])>","<java.util.Vector: void setElementAt(java.lang.Object,int)>"],"<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: void <init>()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.core.Transaction: boolean hasRelativeLockTime()>":["<org.bitcoinj.core.Transaction: java.util.List getInputs()>"],"<okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int indexOf(int)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>":["<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.AbstractMessage: java.lang.String toString()>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: java.lang.String printToString(com.google.protobuf.MessageOrBuilder)>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.Address freshAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>":["<org.bitcoinj.wallet.KeyChainGroup: void maybeLookaheadScripts()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.DeterministicKey freshKey(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromP2SHScript(org.bitcoinj.core.NetworkParameters,org.bitcoinj.script.Script)>","<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean)>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object readPrimitiveField(com.google.protobuf.CodedInputStream,com.google.protobuf.WireFormat$FieldType,boolean)>":["<com.google.protobuf.FieldSet: java.lang.Object readPrimitiveField(com.google.protobuf.CodedInputStream,com.google.protobuf.WireFormat$FieldType,boolean)>","<com.google.protobuf.FieldSet: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: org.slf4j.Logger access$1200()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>"],"<com.squareup.moshi.JsonReader: void pushScope(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.util.Arrays: int[] copyOf(int[],int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<java.lang.StringBuilder: void <init>()>","<com.squareup.moshi.JsonReader: java.lang.String getPath()>","<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.FieldSet: void mergeFrom(com.google.protobuf.FieldSet)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.UnknownFieldSet access$400(com.google.protobuf.DynamicMessage)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DynamicMessage$Builder: void ensureIsMutable()>","<com.google.protobuf.DynamicMessage: com.google.protobuf.Descriptors$Descriptor access$200(com.google.protobuf.DynamicMessage)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.Descriptors$FieldDescriptor[] access$500(com.google.protobuf.DynamicMessage)>","<com.google.protobuf.FieldSet: void clearField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.FieldSet access$300(com.google.protobuf.DynamicMessage)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder access$2400()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder create()>"],"<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.bitcoinj.crypto.LazyECPoint)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$19400()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void onCurrencyChange()>":["<java.lang.String: void <clinit>()>","<androidx.loader.content.CursorLoader: void setSelectionArgs(java.lang.String[])>","<androidx.loader.content.Loader: void forceLoad()>"],"<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>":["<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <init>(java.lang.String,int,com.google.protobuf.Descriptors$FieldDescriptor$JavaType)>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>"],"<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>":["<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>","<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: boolean access$16400()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setKeyRotationTime(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.core.joran.action.TimestampAction: void <clinit>()>":["<ch.qos.logback.core.joran.action.TimestampAction: void <clinit>()>"],"<ch.qos.logback.core.BasicStatusManager: boolean checkForPresence(java.util.List,java.lang.Class)>":["<java.util.ArrayList: java.util.Iterator iterator()>"],"<ch.qos.logback.core.util.COWArrayList: void refreshCopy()>":["<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>","<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>"],"<org.json.JSONObject: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>":["<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: int hashCode()>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<com.google.common.collect.Hashing: int smear(int)>","<com.google.common.hash.HashCode: int hashCode()>","<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<org.bitcoinj.core.PeerAddress: int hashCode()>","<java.io.File: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<com.google.common.collect.RegularImmutableSet: void <clinit>()>","<org.bitcoinj.wallet.DeterministicSeed: int hashCode()>","<java.lang.Enum: boolean equals(java.lang.Object)>","<java.io.File: int hashCode()>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<com.google.common.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int,int)>","<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>","<okhttp3.HttpUrl: int hashCode()>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: int hashCode()>","<com.google.common.collect.ImmutableSet: int chooseTableSize(int)>","<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: int hashCode()>","<org.bitcoinj.core.NetworkParameters: int hashCode()>","<java.util.AbstractList: int hashCode()>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: int hashCode()>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<java.lang.String: int hashCode()>","<org.bitcoinj.core.Transaction: int hashCode()>","<com.google.protobuf.AbstractMessage: int hashCode()>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<java.lang.Enum: int hashCode()>","<org.bitcoinj.crypto.DeterministicKey: int hashCode()>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object,int)>","<java.lang.String: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<java.lang.Object: int hashCode()>","<de.schildbach.wallet.ui.AddressAndLabel: int hashCode()>","<com.google.common.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: int hashCode()>","<com.google.common.collect.ImmutableSet: boolean shouldTrim(int,int)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>","<java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>"],"<com.google.protobuf.DynamicMessage$Builder: void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.DynamicMessage$1)>":["<com.google.protobuf.DynamicMessage$Builder: void <init>(com.google.protobuf.Descriptors$Descriptor)>"],"<de.schildbach.wallet.ui.InputParser: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.ui.InputParser: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionImpl: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()>":["<java.lang.Thread: java.lang.Thread currentThread()>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message buildPartial()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo buildPartial()>"],"<org.bitcoinj.wallet.Protos$Transaction$Purpose: org.bitcoinj.wallet.Protos$Transaction$Purpose valueOf(int)>":["<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>":["<com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<com.google.common.base.Throwables: void <clinit>()>","<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: java.lang.Object run()>","<sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>","<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>":["<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: boolean onCreate()>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>","<de.schildbach.wallet.WalletApplication: java.lang.String httpUserAgent(java.lang.String)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.TreeMap: void <init>()>","<android.content.ContentProvider: android.content.Context getContext()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.Logging: void init(java.io.File)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void <clinit>()>":["<java.util.Vector: void <init>(int)>","<ch.qos.logback.core.joran.spi.Interpreter: void <clinit>()>"],"<org.slf4j.helpers.SubstituteLoggerFactory: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>","<java.util.concurrent.LinkedBlockingQueue: void <init>()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder mergeFrom(org.bitcoinj.wallet.Protos$Extension)>":["<org.bitcoinj.wallet.Protos$Extension: boolean hasId()>","<org.bitcoinj.wallet.Protos$Extension: boolean hasMandatory()>","<org.bitcoinj.wallet.Protos$Extension: java.lang.Object access$14500(org.bitcoinj.wallet.Protos$Extension)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setMandatory(boolean)>","<org.bitcoinj.wallet.Protos$Extension: boolean hasData()>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setData(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension getDefaultInstance()>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.ByteString getData()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$Extension: boolean getMandatory()>"],"<com.google.common.util.concurrent.AbstractService$4: void <init>(com.google.common.util.concurrent.Service$State)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder mergeFrom(com.google.protobuf.Message)>"],"<de.schildbach.wallet.util.CrashReporter$ExceptionHandler: void <init>(java.lang.Thread$UncaughtExceptionHandler)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.TransactionOutput)>":["<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,long,org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Sha256Hash getParentTransactionHash()>","<org.bitcoinj.core.TransactionOutput: int getIndex()>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>":["<de.schildbach.wallet.ui.AbstractWalletActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<de.schildbach.wallet.ui.Event: void <init>(java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>":["<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<java.lang.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)>","<com.google.common.collect.Iterators$ConcatenatedIterator: java.lang.Object next()>","<com.google.common.collect.Iterators$ConcatenatedIterator: boolean hasNext()>"],"<de.schildbach.wallet.data.WalletBalanceLiveData: void <init>(de.schildbach.wallet.WalletApplication,org.bitcoinj.wallet.Wallet$BalanceType)>":["<de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener: void <init>(de.schildbach.wallet.data.WalletBalanceLiveData,de.schildbach.wallet.data.WalletBalanceLiveData$1)>","<de.schildbach.wallet.data.AbstractWalletLiveData: void <init>(de.schildbach.wallet.WalletApplication)>"],"<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>":["<java.util.ArrayDeque: boolean add(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<androidx.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>":["<androidx.lifecycle.ProcessLifecycleOwner: void <clinit>()>","<androidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)>"],"<de.schildbach.wallet.ui.send.SweepWalletActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.service.BlockchainService: void start(android.content.Context,boolean)>","<android.app.Activity: void setContentView(int)>"],"<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)>":["<java.util.ArrayList: boolean isEmpty()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)>"],"<okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)>":["<okio.SegmentPool: void recycle(okio.Segment)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>","<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okio.Buffer: byte[] readByteArray(long)>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<okio.Util: void checkOffsetAndCount(long,long,long)>","<okio.Util: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<okio.Segment: okio.Segment pop()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder mergeFrom(org.bitcoinj.wallet.Protos$Script)>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$17400()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity$7: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<org.bitcoinj.wallet.Wallet: java.lang.String toString(boolean,boolean,boolean,org.bitcoinj.core.AbstractBlockChain)>":["<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(long)>","<org.bitcoinj.wallet.Wallet: long getEarliestKeyCreationTime()>","<org.bitcoinj.wallet.Wallet: boolean isWatching()>","<java.util.HashMap: java.util.Collection values()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(java.util.Date)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.Wallet: void toStringHelper(java.lang.StringBuilder,java.util.Map,org.bitcoinj.core.AbstractBlockChain,java.util.Comparator)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Sha256Hash getLastBlockSeenHash()>","<org.bitcoinj.wallet.KeyChainGroup: java.lang.String toString(boolean)>","<org.bitcoinj.wallet.Wallet: int getLastBlockSeenHeight()>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>","<org.bitcoinj.core.Utils: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.Wallet: java.util.Date getLastBlockSeenTime()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: java.util.Date getKeyRotationTime()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.util.HashSet: boolean isEmpty()>","<java.util.HashMap: int size()>","<org.bitcoinj.core.Message: void <clinit>()>","<java.util.HashSet: java.util.Iterator iterator()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<androidx.core.content.FileProvider$SimplePathStrategy: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask: void <init>(java.lang.Runnable)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void <init>()>"],"<org.bitcoinj.wallet.Wallet: void maybeUpgradeToHD()>":["<org.bitcoinj.wallet.Wallet: void maybeUpgradeToHD(org.spongycastle.crypto.params.KeyParameter)>"],"<org.bitcoinj.core.Transaction: boolean isMature()>":["<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: int getDepthInBlocks()>","<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.TransactionConfidence$ConfidenceType getConfidenceType()>","<org.bitcoinj.core.NetworkParameters: int getSpendableCoinbaseDepth()>","<org.bitcoinj.core.Transaction: boolean isCoinBase()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getMinNonDustValue(org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>"],"<com.google.protobuf.Descriptors: void <clinit>()>":["<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<com.google.protobuf.Descriptors: void <clinit>()>","<java.util.logging.Logger: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos$FileOptions: boolean isInitialized()>":["<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean extensionsAreInitialized()>","<com.google.protobuf.DescriptorProtos$FileOptions: int getUninterpretedOptionCount()>"],"<com.google.protobuf.ExtensionRegistryLite: boolean isEagerlyParseMessageSets()>":["<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>"],"<androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>":["<android.os.Bundle: void putBoolean(java.lang.String,boolean)>","<androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])>","<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>","<android.os.Bundle: void <init>(android.os.Bundle)>","<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.os.Bundle: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates parseFrom(com.google.protobuf.ByteString)>":["<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumOptions$1: com.google.protobuf.DescriptorProtos$EnumOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<java.lang.Object: boolean equals(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setTransactionOutPointIndex(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag build()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setId(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2200()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableListIterator emptyListIterator()>":["<com.google.common.collect.Iterators$ArrayItr: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void initFields()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder toBuilder()>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MessageOptions)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions buildPartial()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<okhttp3.internal.tls.BasicCertificateChainCleaner: void <init>(okhttp3.internal.tls.TrustRootIndex)>":["<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)>"],"<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Map$Entry next()>":["<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()>","<com.google.protobuf.SmallSortedMap: java.util.List access$400(com.google.protobuf.SmallSortedMap)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<com.google.protobuf.CodedInputStream: int readTag()>":["<com.google.protobuf.WireFormat: int getTagFieldNumber(int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidTag()>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.CodedInputStream: boolean isAtEnd()>"],"<org.bitcoinj.core.CheckpointManager: java.io.InputStream openStream(org.bitcoinj.core.NetworkParameters)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>"],"<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>":["<java.util.Arrays: byte[] copyOf(byte[],int)>","<com.google.common.hash.HashCode: com.google.common.hash.HashCode fromBytesNoCopy(byte[])>","<com.google.common.hash.HashCode: void <clinit>()>","<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void checkNotDone()>"],"<de.schildbach.wallet.ui.InputParser: java.util.regex.Pattern access$100()>":["<de.schildbach.wallet.ui.InputParser: void <clinit>()>"],"<com.google.protobuf.UnknownFieldSet$Parser: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.wallet.MarriedKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter)>":["<java.util.LinkedHashMap: void <init>()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String)>":["<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.io.IOException: void printStackTrace()>","<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>","<java.lang.Throwable: void printStackTrace()>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: com.google.protobuf.Message toProto()>":["<com.google.protobuf.Descriptors$ServiceDescriptor: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto toProto()>"],"<com.google.protobuf.MessageReflection: boolean mergeFieldFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.MessageReflection$MergeTarget,int)>":["<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget$ContainerType getContainerType()>","<com.google.protobuf.MessageReflection$1: void <clinit>()>","<com.google.protobuf.CodedInputStream: void popLimit(int)>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object readPrimitiveField(com.google.protobuf.CodedInputStream,com.google.protobuf.WireFormat$FieldType,boolean)>","<com.google.protobuf.FieldSet: int getWireFormatForFieldType(com.google.protobuf.WireFormat$FieldType,boolean)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.ExtensionRegistry$ExtensionInfo findExtensionByNumber(com.google.protobuf.ExtensionRegistry,com.google.protobuf.Descriptors$Descriptor,int)>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseMessage(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<com.google.protobuf.UnknownFieldSet$Builder: boolean mergeFieldFrom(int,com.google.protobuf.CodedInputStream)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<com.google.protobuf.WireFormat: int getTagFieldNumber(int)>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.MessageReflection$MergeTarget$ContainerType: void <clinit>()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<java.lang.String: void <init>(java.lang.String)>","<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.WireFormat$FieldType: void <clinit>()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseGroup(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.google.protobuf.WireFormat: int getTagWireType(int)>","<com.google.protobuf.MessageReflection: void mergeMessageSetExtensionFromCodedStream(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.MessageReflection$MergeTarget)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<com.google.protobuf.CodedInputStream: int getBytesUntilLimit()>"],"<org.bitcoinj.wallet.Protos$Extension$1: org.bitcoinj.wallet.Protos$Extension parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicSeed: java.lang.String toHexString()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>"],"<androidx.loader.app.LoaderManager: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6100()>"],"<org.bitcoinj.core.NetworkParameters: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>"],"<com.google.protobuf.Descriptors$FileDescriptor: void <init>(java.lang.String,com.google.protobuf.Descriptors$Descriptor)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder setName(java.lang.String)>","<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getFullName()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder setPackage(java.lang.String)>","<com.google.protobuf.Descriptors$DescriptorPool: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.DescriptorProtos$DescriptorProto toProto()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto build()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<com.google.protobuf.Descriptors$DescriptorPool: void addPackage(java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$DescriptorPool: void <init>(com.google.protobuf.Descriptors$FileDescriptor[],boolean)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder addMessageType(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseDelimitedFrom(java.io.InputStream)>":["<com.google.protobuf.AbstractParser: void <clinit>()>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,long,org.bitcoinj.core.Sha256Hash)>":["<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>":["<com.google.common.base.AbstractIterator: boolean hasNext()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.AbstractIterator: java.lang.Object next()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.common.base.Splitter: java.util.Iterator splittingIterator(java.lang.CharSequence)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$10: void onResult(java.util.Set)>":["<org.bitcoinj.wallet.Wallet: void addWalletTransaction(org.bitcoinj.wallet.WalletTransaction)>","<java.util.TreeSet: boolean add(java.lang.Object)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: org.slf4j.Logger access$700()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$000(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<org.bitcoinj.wallet.Wallet: java.lang.String toString(boolean,boolean,boolean,org.bitcoinj.core.AbstractBlockChain)>","<org.bitcoinj.wallet.Wallet: void clearTransactions(int)>","<java.util.HashMap: java.util.Collection values()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.WalletApplication access$1200(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<org.bitcoinj.wallet.WalletTransaction: void <init>(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: java.util.Set getTransactions(boolean)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.send.SweepWalletViewModel access$100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.Wallet getWallet()>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Sha256Hash)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: java.util.Comparator access$1300()>","<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,byte[])>","<de.schildbach.wallet.ui.send.SweepWalletFragment$10: boolean utxoSpentBy(java.util.Set,org.bitcoinj.core.UTXO)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.TransactionOutput)>","<androidx.fragment.app.Fragment: void <clinit>()>","<org.bitcoinj.core.Coin: void <clinit>()>","<java.util.TreeSet: void <init>(java.util.Comparator)>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<java.util.HashMap: void <init>()>","<org.bitcoinj.core.TransactionConfidence: void setConfidenceType(org.bitcoinj.core.TransactionConfidence$ConfidenceType)>","<java.util.TreeSet: java.util.Iterator iterator()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<java.util.HashSet: java.util.Iterator iterator()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.core.Transaction: void clearInputs()>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Transaction: void unCache()>","<java.util.ArrayList: void clear()>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>"],"<com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>":["<com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>","<com.google.common.base.Throwables: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<org.bitcoinj.core.Message: long readVarInt()>":["<org.bitcoinj.core.Message: long readVarInt(int)>"],"<com.google.protobuf.SmallSortedMap$1: void makeImmutable()>":["<com.google.protobuf.SmallSortedMap: boolean isImmutable()>","<com.google.protobuf.SmallSortedMap$EmptySet$1: boolean hasNext()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.SmallSortedMap: void makeImmutable()>","<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()>","<com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()>","<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>","<com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()>"],"<com.google.common.hash.HashCode: void <clinit>()>":["<java.lang.String: char[] toCharArray()>","<com.google.common.hash.HashCode: void <clinit>()>"],"<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture: void <init>(java.lang.Throwable)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void startForResult(android.app.Activity,android.view.View,int)>":["<de.schildbach.wallet.ui.scan.ScanActivity: void startForResult(android.app.Activity,int)>","<androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>","<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>","<android.os.Build$VERSION: void <clinit>()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$3: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>":["<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>","<java.io.ByteArrayInputStream: int read(byte[],int,int)>","<org.spongycastle.asn1.ASN1OctetString: java.io.InputStream getOctetStream()>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>","<org.spongycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read(byte[],int,int)>","<org.spongycastle.asn1.DEROctetStringParser: java.io.InputStream getOctetStream()>"],"<org.spongycastle.asn1.ASN1Null: void <init>()>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>":["<android.content.Intent: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.bluetooth.BluetoothAdapter access$1500(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<android.content.Intent: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: void writeRawByte(int)>":["<com.google.protobuf.CodedOutputStream: void writeRawByte(byte)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.CodedOutputStream: void writeEnumNoTag(int)>":["<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: java.util.List parseTransactionsFromPaymentMessage(org.bitcoinj.core.NetworkParameters,org.bitcoin.protocols.payments.Protos$Payment)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>(int)>","<org.bitcoin.protocols.payments.Protos$Payment: java.util.List getTransactionsList()>","<org.bitcoinj.core.MessageSerializer: org.bitcoinj.core.Transaction makeTransaction(byte[])>","<org.bitcoin.protocols.payments.Protos$Payment: int getTransactionsCount()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.MessageSerializer getDefaultSerializer()>"],"<ch.qos.logback.classic.Logger: ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level)>":["<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: boolean access$2600()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.bitcoinj.script.Script: org.bitcoinj.core.Address getToAddress(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.script.Script: org.bitcoinj.core.Address getToAddress(org.bitcoinj.core.NetworkParameters,boolean)>"],"<com.google.protobuf.WireFormat$JavaType: void <init>(java.lang.String,int,java.lang.Object)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Wallet: java.util.LinkedList calculateAllSpendCandidatesFromUTXOProvider(boolean)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: java.util.List getStoredOutputsFromUTXOProvider()>","<org.bitcoinj.wallet.Wallet$FreeStandingTransactionOutput: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.UTXO,int)>","<java.util.HashMap: java.util.Collection values()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.util.LinkedList: boolean remove(java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.NetworkParameters: int getSpendableCoinbaseDepth()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)>":["<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>","<android.transition.TransitionSet: void <init>()>"],"<ch.qos.logback.core.FileAppender: boolean openFile(java.lang.String)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.io.File: java.lang.String getAbsolutePath()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.util.FileSize: long getSize()>","<ch.qos.logback.core.OutputStreamAppender: void setOutputStream(java.io.OutputStream)>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void setContext(ch.qos.logback.core.Context)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<ch.qos.logback.core.FileAppender: java.lang.String getAbsoluteFilePath(java.lang.String)>","<ch.qos.logback.core.util.FileUtil: boolean createMissingParentDirectories(java.io.File)>","<ch.qos.logback.core.recovery.ResilientFileOutputStream: void <init>(java.io.File,boolean,long)>"],"<androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)>":["<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>","<androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)>","<androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<androidx.core.view.ViewCompat: void <clinit>()>","<androidx.collection.SimpleArrayMap: int size()>"],"<de.schildbach.wallet.WalletApplication: android.content.pm.PackageInfo packageInfo()>":["<android.app.Application: java.lang.String getPackageName()>","<android.app.Application: android.content.pm.PackageManager getPackageManager()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<androidx.lifecycle.Lifecycling: void <clinit>()>":["<androidx.lifecycle.Lifecycling: void <clinit>()>","<java.util.HashMap: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates build()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: boolean isInitialized()>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>()>":["<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>"],"<androidx.lifecycle.LifecycleService: void <init>()>":["<android.app.Service: void <init>()>","<androidx.lifecycle.ServiceLifecycleDispatcher: void <init>(androidx.lifecycle.LifecycleOwner)>"],"<org.bitcoinj.utils.ExchangeRate: org.bitcoinj.utils.Fiat coinToFiat(org.bitcoinj.core.Coin)>":["<org.bitcoinj.utils.Fiat: org.bitcoinj.utils.Fiat valueOf(java.lang.String,long)>","<org.bitcoinj.utils.Fiat: void <clinit>()>","<java.math.BigInteger: void <clinit>()>","<java.math.BigInteger: java.math.BigInteger valueOf(long)>","<java.lang.ArithmeticException: void <init>(java.lang.String)>"],"<com.google.protobuf.Descriptors: java.lang.String computeFullName(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>":["<com.google.protobuf.Descriptors$FileDescriptor: java.lang.String getPackage()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getFullName()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin parseCoin(java.lang.String)>":["<java.math.BigDecimal: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>","<java.math.BigDecimal: java.math.BigDecimal movePointRight(int)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoinj.core.Coin: void <clinit>()>","<java.math.BigDecimal: java.math.BigInteger toBigIntegerExact()>","<java.math.BigDecimal: void <clinit>()>"],"<org.spongycastle.asn1.DERNull: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>","<org.spongycastle.asn1.DERNull: void <clinit>()>"],"<java.lang.Long: long highestOneBit(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Character: int digit(char,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstance(com.google.protobuf.Descriptors$Descriptor)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.GeneratedMessage: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onAttach(android.content.Context)>":["<de.schildbach.wallet.data.AppDatabase: void <clinit>()>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<de.schildbach.wallet.ui.AbstractWalletActivity: de.schildbach.wallet.WalletApplication getWalletApplication()>","<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>","<de.schildbach.wallet.data.AppDatabase: de.schildbach.wallet.data.AppDatabase getDatabase(android.content.Context)>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>","<android.app.Application: android.content.ContentResolver getContentResolver()>"],"<androidx.arch.core.internal.SafeIterableMap$DescendingIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>":["<androidx.arch.core.internal.SafeIterableMap$ListIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>"],"<de.schildbach.wallet.ui.AddressAndLabel: int hashCode()>":["<com.google.common.base.Objects: int hashCode(java.lang.Object[])>"],"<org.bitcoinj.core.PeerGroup$ChainDownloadSpeedCalculator: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.PeerGroup$1)>":["<org.bitcoinj.core.PeerGroup$ChainDownloadSpeedCalculator: void <init>(org.bitcoinj.core.PeerGroup)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest buildPartial()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: int access$3302(org.bitcoin.protocols.payments.Protos$PaymentRequest,int)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString access$3702(org.bitcoin.protocols.payments.Protos$PaymentRequest,com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString access$3502(org.bitcoin.protocols.payments.Protos$PaymentRequest,com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.Object access$3402(org.bitcoin.protocols.payments.Protos$PaymentRequest,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString access$3602(org.bitcoin.protocols.payments.Protos$PaymentRequest,com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: int access$3802(org.bitcoin.protocols.payments.Protos$PaymentRequest,int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>":["<java.lang.System: void <clinit>()>","<java.io.IOException: void printStackTrace()>","<java.lang.Throwable: void printStackTrace()>"],"<androidx.core.app.ActivityCompat$1: void run()>":["<android.content.ContextWrapper: java.lang.String getPackageName()>","<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>","<de.schildbach.wallet.ui.scan.ScanActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>"],"<org.bitcoinj.script.Script: byte[] getProgram()>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.io.ByteArrayOutputStream: void <init>()>","<java.util.Arrays: byte[] copyOf(byte[],int)>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<java.util.LinkedList: java.util.Iterator iterator()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>","<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.ECKey: boolean equals(java.lang.Object)>"],"<java.lang.Thread: void interrupt()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13900()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Source$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.Constants: void <clinit>()>","<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void <init>(de.schildbach.wallet.ui.CurrencyAmountView,de.schildbach.wallet.ui.CurrencyAmountView)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getMaxPrecisionFormat()>","<de.schildbach.wallet.Configuration: boolean getLastExchangeDirection()>","<org.bitcoinj.utils.MonetaryFormat: java.lang.String code()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setExchangeDirection(boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,android.content.Context)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void <init>(android.view.View)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder access$10600()>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder create()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask: void send(org.bitcoin.protocols.payments.Protos$Payment)>":["<de.schildbach.wallet.offline.DirectPaymentTask: android.os.Handler access$300(de.schildbach.wallet.offline.DirectPaymentTask)>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask$1: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask,org.bitcoin.protocols.payments.Protos$Payment)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: int readInt32()>":["<com.google.protobuf.CodedInputStream: int readRawVarint32()>"],"<com.google.common.base.Equivalence$Identity: void <init>()>":["<com.google.common.base.Equivalence: void <init>()>"],"<com.google.common.base.CharMatcher$Invisible: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Invisible: void <clinit>()>","<com.google.common.base.CharMatcher$Invisible: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionSignersFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.common.base.Splitter$2: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>"],"<androidx.collection.MapCollections$KeySet: void <init>(androidx.collection.MapCollections)>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnCreate()>":["<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1: void run()>":["<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask: java.lang.String access$100(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask)>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.Integer: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.Constants: void <clinit>()>","<okhttp3.Request$Builder: void <init>()>","<okhttp3.RealCall: okhttp3.Response execute()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.InputParser$StreamInputParser: void parse()>","<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onFail(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: org.slf4j.Logger access$000()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<okhttp3.Request$Builder: okhttp3.Request build()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<okhttp3.CacheControl$Builder: void <init>()>","<okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)>","<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1,java.lang.String,java.io.InputStream)>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>"],"<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener: void <init>(de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData)>":["<java.lang.Object: void <init>()>"],"<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$1: void <init>()>":["<java.lang.ThreadLocal: void <init>()>"],"<com.google.common.base.AbstractIterator: java.lang.Object next()>":["<com.google.common.base.AbstractIterator: boolean hasNext()>","<java.util.NoSuchElementException: void <init>()>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<de.schildbach.wallet.ui.InputParser$StreamInputParser: void <init>(java.lang.String,java.io.InputStream)>":["<de.schildbach.wallet.ui.InputParser: void <init>()>"],"<androidx.lifecycle.ViewModelProviders: android.app.Application checkApplication(android.app.Activity)>":["<android.app.Activity: android.app.Application getApplication()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.util.WalletUtils$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.CheckpointManager: void <init>(org.bitcoinj.core.NetworkParameters,java.io.InputStream)>":["<java.io.BufferedInputStream: void <init>(java.io.InputStream)>","<org.bitcoinj.core.CheckpointManager: org.bitcoinj.core.Sha256Hash readBinary(java.io.InputStream)>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.CheckpointManager: void <clinit>()>","<java.io.BufferedInputStream: int read()>","<org.bitcoinj.core.CheckpointManager: java.io.InputStream openStream(org.bitcoinj.core.NetworkParameters)>","<java.lang.String: char charAt(int)>","<java.util.TreeMap: void <init>()>","<java.io.BufferedInputStream: void reset()>","<java.io.BufferedInputStream: void mark(int)>","<java.io.IOException: void <init>(java.lang.String)>","<org.bitcoinj.core.CheckpointManager: org.bitcoinj.core.Sha256Hash readTextual(java.io.InputStream)>"],"<org.bitcoinj.core.Peer: void versionHandshakeComplete()>":["<org.bitcoinj.net.AbstractTimeoutHandler: void setTimeoutEnabled(boolean)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Peer$4: void run()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Peer: void <clinit>()>","<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.PeerSocketHandler: void close()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Peer$4: void <init>(org.bitcoinj.core.Peer,org.bitcoinj.utils.ListenerRegistration)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<ch.qos.logback.classic.LoggerContext: void setName(java.lang.String)>":["<ch.qos.logback.core.ContextBase: void setName(java.lang.String)>","<ch.qos.logback.classic.LoggerContext: void updateLoggerContextVO()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<java.util.concurrent.atomic.AtomicReferenceArray: int length()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>","<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>"],"<org.spongycastle.crypto.engines.AESFastEngine: int processBlock(byte[],int,byte[],int)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>","<org.spongycastle.crypto.engines.AESFastEngine: void unpackBlock(byte[],int)>","<org.spongycastle.crypto.engines.AESFastEngine: void packBlock(byte[],int)>","<org.spongycastle.crypto.engines.AESFastEngine: void encryptBlock(int[][])>","<org.spongycastle.crypto.engines.AESFastEngine: void decryptBlock(int[][])>","<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>"],"<com.google.common.base.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread: void run()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.io.DataOutputStream: void close()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<de.schildbach.wallet.offline.AcceptBluetoothService$1: boolean handleTx(org.bitcoinj.core.Transaction)>","<java.io.DataOutputStream: void <init>(java.io.OutputStream)>","<java.util.concurrent.atomic.AtomicBoolean: boolean get()>","<java.io.DataInputStream: void <init>(java.io.InputStream)>","<java.io.DataInputStream: void close()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<java.io.DataInputStream: int readInt()>","<java.io.DataOutputStream: void writeBoolean(boolean)>","<java.io.DataInputStream: void readFully(byte[])>"],"<de.schildbach.wallet.data.PaymentIntent$Output: boolean hasAmount()>":["<org.bitcoinj.core.Coin: int signum()>"],"<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: void <init>(java.lang.String,int,int,int)>","<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Pool$1: void <init>()>","<org.bitcoinj.wallet.Protos$Transaction$Pool: org.bitcoinj.wallet.Protos$Transaction$Pool[] values()>"],"<androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)>":["<android.os.Build$VERSION: void <clinit>()>","<java.io.File: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.ElementPath: ch.qos.logback.core.joran.spi.ElementPath duplicate()>":["<java.util.ArrayList: boolean addAll(java.util.Collection)>","<ch.qos.logback.core.joran.spi.ElementPath: void <init>()>"],"<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>"],"<okhttp3.internal.Util: java.util.List immutableList(java.util.List)>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Collections: void <clinit>()>"],"<com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding lowerCase()>":["<com.google.common.io.BaseEncoding$Alphabet: com.google.common.io.BaseEncoding$Alphabet lowerCase()>","<com.google.common.io.BaseEncoding$Base16Encoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>"],"<com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>":["<com.google.protobuf.Utf8: int partialIsValidUtf8(byte[],int,int)>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void run()>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void access$300(com.google.common.util.concurrent.AggregateFuture$RunningState)>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void access$200(com.google.common.util.concurrent.AggregateFuture$RunningState,int,java.util.concurrent.Future)>"],"<com.google.common.util.concurrent.AggregateFutureState: void <init>(int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoin.protocols.payments.Protos$1)>"],"<ch.qos.logback.classic.util.LoggerNameUtil: int getSeparatorIndexOf(java.lang.String,int)>":["<java.lang.String: int indexOf(int,int)>"],"<com.google.common.base.Splitter: com.google.common.base.Splitter on(com.google.common.base.CharMatcher)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy)>","<com.google.common.base.Splitter$1: void <init>(com.google.common.base.CharMatcher)>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date getNextTriggeringDate(java.util.Date)>":["<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date getEndOfNextNthPeriod(java.util.Date,int)>"],"<ch.qos.logback.core.joran.JoranConfiguratorBase: void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter)>":["<ch.qos.logback.core.joran.spi.Interpreter: void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction)>","<ch.qos.logback.core.joran.action.NestedComplexPropertyIA: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.joran.action.NestedBasicPropertyIA: void <init>()>"],"<com.google.protobuf.Descriptors$DescriptorPool: void <init>(com.google.protobuf.Descriptors$FileDescriptor[],boolean)>":["<java.lang.Object: void <init>()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.HashSet: void <init>()>","<java.util.HashMap: void <init>()>","<com.google.protobuf.Descriptors$DescriptorPool: void addPackage(java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>","<java.util.HashSet: java.util.Iterator iterator()>","<com.google.protobuf.Descriptors$DescriptorPool: void importPublicDependencies(com.google.protobuf.Descriptors$FileDescriptor)>"],"<org.slf4j.event.Level: void <init>(java.lang.String,int,int,java.lang.String)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.TransactionBroadcast: org.slf4j.Logger access$400()>":["<org.bitcoinj.core.TransactionBroadcast: void <clinit>()>"],"<org.bitcoinj.core.Block: void setDifficultyTarget(long)>":["<org.bitcoinj.core.Block: void unCacheHeader()>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createP2SHOutputScript(org.bitcoinj.script.Script)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createP2SHOutputScript(byte[])>","<org.bitcoinj.core.Utils: byte[] sha256hash160(byte[])>","<org.bitcoinj.script.Script: byte[] getProgram()>"],"<org.bitcoinj.utils.Threading$2: void execute(java.lang.Runnable)>":["<org.bitcoinj.core.Peer$2: void run()>","<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void run()>","<com.google.common.util.concurrent.Futures$CallbackListener: void run()>","<com.google.common.util.concurrent.AbstractTransformFuture: void run()>","<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void run()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void run()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getPublicDependency(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.spongycastle.asn1.DERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.core.Block: void writeHeader(java.io.OutputStream)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.io.ByteArrayOutputStream: void write(byte[])>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getMerkleRoot()>","<org.bitcoinj.core.Utils: void uint32ToByteStreamLE(long,java.io.OutputStream)>","<org.bitcoinj.core.Sha256Hash: byte[] getReversedBytes()>","<org.bitcoinj.core.UnsafeByteArrayOutputStream: void write(byte[],int,int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void requestFocusFirst()>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: void requestFocus()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isPayeePlausible()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isPasswordPlausible()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isAmountPlausible()>","<androidx.fragment.app.Fragment: void <clinit>()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean everythingPlausible()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onCreate(android.os.Bundle)>":["<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>","<de.schildbach.wallet.ui.WalletActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.integration.android.BitcoinIntegration: byte[] paymentRequestFromIntent(android.content.Intent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateStateFrom(de.schildbach.wallet.data.PaymentIntent)>","<android.os.HandlerThread: android.os.Looper getLooper()>","<de.schildbach.wallet.ui.ProgressDialogFragment$Observer: void <init>(androidx.fragment.app.FragmentManager)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$10: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$6: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.scan.ScanActivity: android.content.Intent getIntent()>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)>","<android.os.HandlerThread: void start()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$7: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent blank()>","<android.os.Handler: void <init>(android.os.Looper)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$9: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<java.lang.String: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.ExchangeRatesActivity: android.content.Intent getIntent()>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<android.os.HandlerThread: void <init>(java.lang.String,int)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromBitcoinUri(android.net.Uri)>","<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.RequestCoinsActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromIntentExtras(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsActivity: android.content.Intent getIntent()>","<java.lang.IllegalArgumentException: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$8: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromIntentUri(java.lang.String,android.net.Uri)>","<de.schildbach.wallet.ui.AddressBookActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: android.content.Intent getIntent()>","<android.os.HandlerThread: void run()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$5: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)>","<de.schildbach.wallet.util.Nfc: byte[] extractMimePayload(java.lang.String,android.nfc.NdefMessage)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromPaymentRequest(java.lang.String,byte[])>"],"<ch.qos.logback.core.joran.spi.Interpreter: void endElement(java.lang.String,java.lang.String,java.lang.String)>":["<ch.qos.logback.core.joran.spi.Interpreter: java.lang.String getTagName(java.lang.String,java.lang.String)>","<ch.qos.logback.core.joran.spi.ElementPath: boolean equals(java.lang.Object)>","<ch.qos.logback.core.joran.spi.ElementPath: void pop()>","<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>","<ch.qos.logback.core.joran.spi.Interpreter: void <clinit>()>","<java.util.Stack: java.lang.Object pop()>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>":["<com.google.protobuf.MessageReflection$ExtensionAdapter: void <init>(com.google.protobuf.FieldSet)>","<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.MessageReflection: boolean mergeFieldFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.MessageReflection$MergeTarget,int)>"],"<com.google.protobuf.UnknownFieldSet: boolean equals(java.lang.Object)>":["<java.util.AbstractMap: boolean equals(java.lang.Object)>"],"<de.schildbach.wallet.ui.RequestCoinsActivity$1: void <init>(de.schildbach.wallet.ui.RequestCoinsActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script buildPartial()>"],"<com.google.common.base.CharMatcher$FastMatcher: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<org.bitcoinj.script.Script: int decodeFromOpN(int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$7$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity$7,android.graphics.Rect,android.graphics.RectF,int,boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions build()>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>"],"<org.spongycastle.util.Strings: byte[] toUTF8ByteArray(char[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.io.ByteArrayOutputStream: void <init>()>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.spongycastle.util.Strings: void toUTF8ByteArray(char[],java.io.OutputStream)>"],"<ch.qos.logback.core.joran.action.NestedComplexPropertyIA: void <init>()>":["<ch.qos.logback.core.joran.action.ImplicitAction: void <init>()>","<java.util.Stack: void <init>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.RiskAnalysis$Result analyzeIsStandard()>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.NetworkParameters getNetworkParameters()>","<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <clinit>()>","<java.lang.String: boolean equals(java.lang.Object)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.RiskAnalysis$Result: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation isStandard(org.bitcoinj.core.Transaction)>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath)>":["<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath)>"],"<com.google.protobuf.GeneratedMessage: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$200(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.CodedInputStream: double readDouble()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <clinit>()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.CodedInputStream: long readUInt64()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void initFields()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.CodedInputStream: long readInt64()>"],"<ch.qos.logback.core.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.core.Context)>":["<ch.qos.logback.core.util.OptionHelper: boolean isEmpty(java.lang.String)>","<ch.qos.logback.core.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.core.Context,java.lang.String)>","<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionInputFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: java.lang.Object getValue()>":["<com.google.common.collect.MapMakerInternalMap$1: java.lang.Object get()>","<java.lang.ref.WeakReference: java.lang.Object get()>"],"<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>":["<java.lang.Object: java.lang.Object clone()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void initFields()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: java.lang.Object coerceType(java.lang.Object)>"],"<okio.Okio: void <clinit>()>":["<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<okio.Okio: void <clinit>()>","<java.util.logging.Logger: void <clinit>()>"],"<de.schildbach.wallet.Constants$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.slf4j.LoggerFactory: void failedBinding(java.lang.Throwable)>":["<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.Util: void <clinit>()>"],"<okio.AsyncTimeout: void enter()>":["<okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okio.Timeout: boolean hasDeadline()>","<okio.AsyncTimeout: void <clinit>()>","<okio.Timeout: long timeoutNanos()>","<okio.Timeout: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14500()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>"],"<androidx.fragment.app.FragmentTransition$FragmentContainerTransition: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.DeterministicKey: byte[] getIdentifier()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.ECKey: byte[] getPubKey()>","<org.bitcoinj.core.Utils: byte[] sha256hash160(byte[])>"],"<org.bitcoinj.core.Address: boolean isAcceptableVersion(org.bitcoinj.core.NetworkParameters,int)>":["<org.bitcoinj.core.NetworkParameters: int[] getAcceptableAddressCodes()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FieldOptions)>":["<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FieldOptions)>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message build()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest build()>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionImpl$2: void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.Event: void <init>(java.lang.Object)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMaker: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>":["<java.lang.Enum: int compareTo(java.lang.Enum)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void initFields()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)>":["<androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>","<androidx.fragment.app.Fragment$2: boolean onHasView()>","<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)>","<androidx.fragment.app.Fragment$2: android.view.View onFindViewById(int)>","<androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)>","<androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)>","<androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)>","<androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)>"],"<org.bitcoinj.wallet.Wallet$DustySendRequested: void <init>()>":["<org.bitcoinj.wallet.Wallet$CompletionException: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.base.Stopwatch: java.lang.String toString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<com.google.common.base.Stopwatch: java.util.concurrent.TimeUnit chooseUnit(long)>","<java.lang.Double: boolean isNaN(double)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Stopwatch: long elapsedNanos()>","<java.lang.Double: void <clinit>()>","<com.google.common.base.Stopwatch: java.lang.String abbreviate(java.util.concurrent.TimeUnit)>","<com.google.common.base.Platform: void <clinit>()>","<com.google.common.base.Platform: java.lang.String formatCompact4Digits(double)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void initFields()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1: void <init>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2900()>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1$1: void <init>(de.schildbach.wallet.ui.SendCoinsQrActivity$1)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(boolean)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$1: void <init>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.Iterators: boolean elementsEqual(java.util.Iterator,java.util.Iterator)>":["<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.utils.VersionTally: void <init>(org.bitcoinj.core.NetworkParameters)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.core.NetworkParameters: int getMajorityWindow()>"],"<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void <init>(androidx.lifecycle.LifecycleRegistry,androidx.lifecycle.Lifecycle$Event)>","<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>","<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void run()>"],"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>":["<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>"],"<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<de.schildbach.wallet.ui.monitor.PeerListFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>"],"<org.bitcoinj.net.AbstractTimeoutHandler: void setSocketTimeout(int)>":["<org.bitcoinj.net.AbstractTimeoutHandler: void resetTimeout()>"],"<okio.Buffer: okio.Buffer write(byte[])>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<okio.Buffer: okio.Buffer write(byte[],int,int)>"],"<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>":["<java.util.AbstractList: java.util.Iterator iterator()>","<com.google.common.base.Joiner: java.lang.String join(java.util.Iterator)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.common.collect.FluentIterable$3: java.util.Iterator iterator()>","<java.util.LinkedList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>"],"<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>":["<java.lang.String: java.lang.String trim()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.core.Peer: void addPreMessageReceivedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.Descriptors$Descriptor: void setProto(com.google.protobuf.DescriptorProtos$DescriptorProto)>":["<com.google.protobuf.Descriptors$EnumDescriptor: void access$1000(com.google.protobuf.Descriptors$EnumDescriptor,com.google.protobuf.DescriptorProtos$EnumDescriptorProto)>","<com.google.protobuf.Descriptors$Descriptor: void setProto(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.Descriptors$FieldDescriptor: void access$1200(com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.DescriptorProtos$FieldDescriptorProto)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level)>":["<ch.qos.logback.classic.Level: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture: void <init>()>":["<com.google.common.util.concurrent.FluentFuture: void <init>()>"],"<org.bitcoinj.core.Message: int getMessageSize()>":["<java.lang.Object: java.lang.Class getClass()>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>":["<okhttp3.ResponseBody: void <init>()>"],"<org.bitcoinj.wallet.DeterministicUpgradeRequiredException: void <init>()>":["<java.lang.RuntimeException: void <init>()>"],"<com.google.common.base.CharMatcher: void <clinit>()>":["<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaDigit()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher any()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaLetterOrDigit()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher whitespace()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher invisible()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaUpperCase()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaLetter()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaLowerCase()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher breakingWhitespace()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher digit()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher singleWidth()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher none()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher ascii()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaIsoControl()>"],"<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.LoggerFactory: void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)>":["<org.slf4j.LoggerFactory: void emitSubstitutionWarning()>","<org.slf4j.LoggerFactory: void emitReplayWarning(int)>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<java.lang.Object: java.lang.Object clone()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.data.TimeLiveData: void onActive()>":["<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>","<java.util.Date: void <init>()>","<android.content.IntentFilter: void <init>(java.lang.String)>","<android.content.IntentFilter: void <clinit>()>"],"<ch.qos.logback.classic.spi.ThrowableProxyUtil: ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[])>":["<ch.qos.logback.classic.spi.StackTraceElementProxy: void <init>(java.lang.StackTraceElement)>"],"<com.google.protobuf.Descriptors$MethodDescriptor: void <init>(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$ServiceDescriptor,int)>":["<com.google.protobuf.Descriptors$ServiceDescriptor: java.lang.String getFullName()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<org.bitcoinj.wallet.Protos$Script: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Script$1: void <init>()>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: void <init>(boolean)>"],"<java.lang.Character: boolean isJavaIdentifierStart(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.CharMatcher$Whitespace: void <init>()>":["<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>"],"<org.bitcoinj.core.ECKey$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.spi.AppenderAttachableImpl: void <clinit>()>":["<java.lang.System: long currentTimeMillis()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.spi.AppenderAttachableImpl: void <clinit>()>"],"<de.schildbach.wallet.integration.android.BitcoinIntegration: void transactionHashToResult(android.content.Intent,java.lang.String)>":["<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: java.util.List access$4602(org.bitcoin.protocols.payments.Protos$X509Certificates,java.util.List)>"],"<org.bitcoinj.wallet.BasicKeyChain$State: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.net.discovery.MultiplexingDiscovery: org.bitcoinj.net.discovery.MultiplexingDiscovery forServices(org.bitcoinj.core.NetworkParameters,long)>":["<org.bitcoinj.core.NetworkParameters: org.bitcoinj.net.discovery.HttpDiscovery$Details[] getHttpSeeds()>","<com.squareup.okhttp.OkHttpClient: void <init>()>","<org.bitcoinj.net.discovery.MultiplexingDiscovery: void <clinit>()>","<org.bitcoinj.net.discovery.HttpDiscovery: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.net.discovery.HttpDiscovery$Details,com.squareup.okhttp.OkHttpClient)>","<com.squareup.okhttp.OkHttpClient: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>","<org.bitcoinj.core.NetworkParameters: java.lang.String[] getDnsSeeds()>","<org.bitcoinj.net.discovery.MultiplexingDiscovery: void <init>(org.bitcoinj.core.NetworkParameters,java.util.List)>","<org.bitcoinj.net.discovery.HttpDiscovery: void <clinit>()>","<org.bitcoinj.net.discovery.DnsDiscovery$DnsSeedDiscovery: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>"],"<com.google.common.collect.ImmutableMap$Builder: void <init>(int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void markPubKeyAsUsed(byte[])>":["<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.KeyChainGroup: void maybeMarkCurrentKeyAsUsed(org.bitcoinj.crypto.DeterministicKey)>"],"<com.google.common.base.Splitter$2: java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter$2: com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void <init>()>":["<java.io.OutputStream: void <init>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate buildPartial()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void run()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void executeDryrun()>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<org.bitcoin.protocols.payments.Protos$Payment: int getRefundToCount()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>":["<java.lang.String: byte[] getBytes(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<com.google.protobuf.LiteralByteString: void <init>(byte[])>"],"<okhttp3.HttpUrl: void <clinit>()>":["<okhttp3.HttpUrl: void <clinit>()>"],"<org.spongycastle.crypto.digests.GeneralDigest: void finish()>":["<org.spongycastle.crypto.digests.GeneralDigest: void update(byte)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: void processBlock()>","<org.spongycastle.crypto.digests.RIPEMD160Digest: void processLength(long)>"],"<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$2: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask,int,java.lang.Object[])>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatHash(java.lang.String,int,int)>":["<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatHash(java.lang.String,java.lang.String,int,int,char)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>"],"<org.bitcoinj.core.AbstractBlockChain: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.AbstractBlockChain: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<com.squareup.moshi.MapJsonAdapter: void <clinit>()>":["<com.squareup.moshi.MapJsonAdapter$1: void <init>()>","<com.squareup.moshi.MapJsonAdapter: void <clinit>()>"],"<de.schildbach.wallet.util.Qr: byte[] decodeDecompressBinary(java.lang.String)>":["<de.schildbach.wallet.util.Base43: byte[] decode(java.lang.String)>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<java.io.ByteArrayInputStream: void <init>(byte[])>","<de.schildbach.wallet.util.Base43: void <clinit>()>","<java.io.ByteArrayOutputStream: void close()>","<java.util.zip.GZIPInputStream: void close()>","<java.lang.String: java.lang.String substring(int)>","<java.io.ByteArrayOutputStream: void write(byte[],int,int)>","<java.io.InputStream: int read(byte[])>","<java.lang.String: char charAt(int)>","<java.io.ByteArrayOutputStream: void <init>()>","<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>","<java.io.FilterInputStream: int read(byte[])>","<java.io.ByteArrayInputStream: void close()>"],"<org.bitcoinj.core.ECKey: boolean isWatching()>":["<org.bitcoinj.core.ECKey: boolean isEncrypted()>","<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>","<org.bitcoinj.crypto.DeterministicKey: boolean isPubKeyOnly()>","<org.bitcoinj.core.ECKey: boolean isPubKeyOnly()>"],"<ch.qos.logback.core.joran.spi.ElementPath: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.String: java.lang.String[] split(java.lang.String)>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.String: int length()>"],"<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: void initFields()>","<com.google.protobuf.CodedInputStream: long readInt64()>"],"<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>":["<java.util.ArrayList: int size()>"],"<androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)>":["<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean)>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void setLookaheadThreshold(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput build()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput buildPartial()>"],"<com.google.protobuf.SmallSortedMap$EmptySet$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setHash(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.core.OutputStreamAppender: void encoderInit()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] headerBytes()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.OutputStreamAppender: void writeBytes(byte[])>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<com.google.protobuf.DescriptorProtos$FileOptions: int getUninterpretedOptionCount()>":["<java.util.ArrayList: int size()>"],"<de.schildbach.wallet.WalletApplication: org.slf4j.Logger access$000()>":["<de.schildbach.wallet.WalletApplication: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService$7: void startup()>":["<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.PeerGroup: void setMaxConnections(int)>","<de.schildbach.wallet.util.CrashReporter: void saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)>","<org.bitcoinj.core.PeerGroup: void startBlockChainDownload(org.bitcoinj.core.listeners.PeerDataEventListener)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.BlockChain access$900(de.schildbach.wallet.service.BlockchainService)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.PeerGroup access$2000(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService: android.os.PowerManager$WakeLock access$2100(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: void addWallet(org.bitcoinj.wallet.Wallet)>","<de.schildbach.wallet.service.BlockchainService: org.slf4j.Logger access$1200()>","<org.bitcoinj.core.PeerGroup: void addPeerDiscovery(org.bitcoinj.net.discovery.PeerDiscovery)>","<org.bitcoinj.core.PeerGroup: void addDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener access$2300(de.schildbach.wallet.service.BlockchainService)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService$7$1: void <init>(de.schildbach.wallet.service.BlockchainService$7,boolean,java.lang.String,boolean,int)>","<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void setPeerDiscoveryTimeoutMillis(long)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.data.WalletLiveData access$1300(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.AbstractBlockChain)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void error(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<org.bitcoinj.core.PeerGroup: void addConnectedEventListener(org.bitcoinj.core.listeners.PeerConnectedEventListener)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.Configuration access$300(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: void setUserAgent(java.lang.String,java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.PeerGroup access$2002(de.schildbach.wallet.service.BlockchainService,org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup: void setDownloadTxDependencies(int)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.WalletApplication access$2200(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: void setConnectTimeoutMillis(int)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.listeners.PeerDataEventListener access$2400(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture startAsync()>"],"<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>"],"<java.lang.StringBuffer: void setLength(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.pattern.parser.Node: void <init>(int,java.lang.Object)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey deriveChild(java.util.List,boolean,boolean,org.bitcoinj.crypto.ChildNumber)>":["<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey deriveChild(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>"],"<ch.qos.logback.core.pattern.FormatInfo: ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<ch.qos.logback.core.pattern.FormatInfo: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask: void onResult(boolean)>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.offline.DirectPaymentTask$1: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask,boolean)>"],"<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<androidx.fragment.app.FragmentController: void dispatchStart()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStart()>"],"<org.bitcoinj.wallet.Wallet: boolean isPayToScriptHashMine(byte[])>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$3200(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void requestPaymentRequest()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$10: void onFail(int,java.lang.Object[])>":["<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$400(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.send.SweepWalletViewModel access$100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SweepWalletFragment$10$1: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment$10)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder clearLastSeenBlockHash()>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet getDefaultInstance()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getLastSeenBlockHash()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(int)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>"],"<ch.qos.logback.core.recovery.RecoveryCoordinator: void <clinit>()>":["<ch.qos.logback.core.recovery.RecoveryCoordinator: void <clinit>()>"],"<com.google.common.hash.AbstractByteHasher: com.google.common.hash.Hasher putBytes(byte[])>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.hash.AbstractByteHasher: void update(byte[])>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4000()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoinj.core.Coin: void <clinit>()>":["<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat postfixCode()>","<com.google.common.math.LongMath: long pow(long,int)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat noCode()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<com.google.common.math.LongMath: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat repeatOptionalDecimals(int,int)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder op(int,int)>":["<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[])>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder addChunk(int,org.bitcoinj.script.ScriptChunk)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>"],"<java.lang.Throwable: void printStackTrace()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.BufferedBlockCipher: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.String: java.lang.String[] split(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Block: void unCacheTransactions()>":["<org.bitcoinj.core.Block: void unCacheHeader()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printIgnoredCount(java.lang.StringBuilder,int)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<androidx.lifecycle.EmptyActivityLifecycleCallbacks: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])>":["<com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[],int)>"],"<androidx.core.app.NotificationCompat$Action$Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>":["<android.os.Bundle: void <init>()>","<androidx.core.app.NotificationCompat$Action$Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean)>","<android.os.Bundle: void <clinit>()>"],"<java.lang.String: boolean startsWith(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.loader.app.LoaderManagerImpl: void markForRedelivery()>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>"],"<com.google.common.util.concurrent.AbstractTransformFuture: void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>":["<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat shift(int)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat optionalDecimals(int[])>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat repeatOptionalDecimals(int,int)>","<org.bitcoinj.utils.MonetaryFormat: void <init>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$1: org.bitcoin.protocols.payments.Protos$PaymentDetails parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPrivateAndPrecalculatedPublic(byte[],byte[])>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.spongycastle.math.ec.ECPoint)>","<java.math.BigInteger: void <init>(int,byte[])>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$7500()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.script.Script: void <clinit>()>":["<java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[],int)>","<org.bitcoinj.script.Script: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.spongycastle.crypto.digests.RIPEMD160Digest: int doFinal(byte[],int)>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: void reset()>","<org.spongycastle.crypto.digests.RIPEMD160Digest: void unpackWord(int,byte[],int)>","<org.spongycastle.crypto.digests.GeneralDigest: void finish()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation isOutputStandard(org.bitcoinj.core.TransactionOutput)>":["<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.scan.ScanActivity$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>","<androidx.core.content.ContextCompat: void <clinit>()>","<android.os.HandlerThread: android.os.Looper getLooper()>","<de.schildbach.wallet.util.OnFirstPreDraw: void <clinit>()>","<androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>","<de.schildbach.wallet.util.OnFirstPreDraw: void listen(android.view.View,de.schildbach.wallet.util.OnFirstPreDraw$Callback)>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>","<android.app.Activity: void <clinit>()>","<android.app.Activity: void setRequestedOrientation(int)>","<android.graphics.drawable.ColorDrawable: void <init>(int)>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.scan.ScanActivity: android.content.Intent getIntent()>","<android.os.HandlerThread: void start()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<android.app.Activity: android.view.View findViewById(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<android.os.Handler: void <init>(android.os.Looper)>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<android.os.HandlerThread: void <init>(java.lang.String,int)>","<androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>","<de.schildbach.wallet.ui.scan.ScanActivity$2: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>","<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>","<java.lang.String: void <clinit>()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<android.os.HandlerThread: void run()>","<android.os.Build$VERSION: void <clinit>()>","<android.app.Activity: void setContentView(int)>","<android.app.Activity: android.view.Window getWindow()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity$3: void <init>(de.schildbach.wallet.ui.scan.ScanActivity,int,int)>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>":["<java.util.ArrayList: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumValueOptions)>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueOptions)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: void <clinit>()>":["<ch.qos.logback.classic.spi.PackagingDataCalculator: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder mergeFrom(com.google.protobuf.Message)>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()>":["<androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()>"],"<com.squareup.moshi.ArrayJsonAdapter$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)>":["<androidx.collection.ArraySet: int size()>","<androidx.collection.ArraySet: java.lang.Object valueAt(int)>"],"<org.slf4j.helpers.SubstituteLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>":["<org.slf4j.helpers.SubstituteLogger: void <init>(java.lang.String,java.util.Queue,boolean)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>":["<okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)>","<okhttp3.internal.tls.BasicCertificateChainCleaner: void <init>(okhttp3.internal.tls.TrustRootIndex)>","<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)>"],"<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.room.RoomDatabase$JournalMode: void <clinit>()>":["<androidx.room.RoomDatabase$JournalMode: void <init>(java.lang.String,int)>","<androidx.room.RoomDatabase$JournalMode: void <clinit>()>"],"<java.lang.Integer: int parseInt(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$19600()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <init>(java.lang.String,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>":["<java.lang.SecurityException: void <init>(java.lang.String)>","<androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)>","<androidx.core.content.FileProvider: void <clinit>()>","<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>"],"<ch.qos.logback.classic.selector.DefaultContextSelector: ch.qos.logback.classic.LoggerContext getLoggerContext()>":["<ch.qos.logback.classic.selector.DefaultContextSelector: ch.qos.logback.classic.LoggerContext getDefaultLoggerContext()>"],"<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>"],"<com.google.common.collect.Iterators$9: void <init>(java.lang.Object)>":["<com.google.common.collect.UnmodifiableIterator: void <init>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor: boolean isPackable()>":["<com.google.protobuf.WireFormat$FieldType: boolean isPackable()>","<com.google.protobuf.WireFormat$FieldType$1: boolean isPackable()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.WireFormat$FieldType getLiteType()>","<com.google.protobuf.WireFormat$FieldType$2: boolean isPackable()>","<com.google.protobuf.WireFormat$FieldType$3: boolean isPackable()>","<com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>","<com.google.protobuf.WireFormat$FieldType$4: boolean isPackable()>"],"<org.bitcoinj.wallet.Protos$Wallet: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.core.app.NotificationCompatJellybean: void <clinit>()>":["<java.lang.Object: void <init>()>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.ExtensionRegistry: void <clinit>()>":["<com.google.protobuf.ExtensionRegistry: void <init>(boolean)>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<com.google.protobuf.ExtensionRegistry: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$ServiceOptions)>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: boolean hasDeprecated()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: boolean getDeprecated()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder setDeprecated(boolean)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: java.util.List access$18400(com.google.protobuf.DescriptorProtos$ServiceOptions)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions getDefaultInstance()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<de.schildbach.wallet.service.BootstrapReceiver: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.service.BootstrapReceiver: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.spongycastle.asn1.BERApplicationSpecificParser: void <init>(int,org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity: void handleRequestCoins()>":["<android.app.Activity: void startActivity(android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Output$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <init>(java.lang.Object)>":["<com.google.common.util.concurrent.ImmediateFuture: void <init>()>"],"<androidx.fragment.app.OneShotPreDrawListener: void <init>(android.view.View,java.lang.Runnable)>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.Throwables: void <clinit>()>":["<com.google.common.base.Throwables: void <clinit>()>","<com.google.common.base.Throwables: java.lang.reflect.Method getGetMethod()>","<com.google.common.base.Throwables: java.lang.Object getJLA()>","<com.google.common.base.Throwables: java.lang.reflect.Method getSizeMethod()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void handleDecrypt()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$6: void run()>","<android.os.Handler: boolean post(java.lang.Runnable)>"],"<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(com.google.protobuf.LiteralByteString)>":["<com.google.protobuf.CodedInputStream: void <init>(com.google.protobuf.LiteralByteString)>","<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>"],"<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <init>(java.lang.String,int,com.google.protobuf.Descriptors$FieldDescriptor$JavaType)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.Descriptors$FieldDescriptor: void crossLink()>":["<com.google.protobuf.TextFormat: long parseInt64(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$FieldDescriptor$JavaType getJavaType()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: int getNumber()>","<com.google.protobuf.Descriptors$FieldDescriptor: boolean isPackable()>","<com.google.protobuf.TextFormat: com.google.protobuf.ByteString unescapeBytes(java.lang.CharSequence)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<java.lang.Double: java.lang.Double valueOf(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$1: void <clinit>()>","<com.google.protobuf.TextFormat: long parseUInt64(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$Descriptor getContainingType()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.TextFormat: int parseInt32(java.lang.String)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: java.lang.Object access$2100(com.google.protobuf.Descriptors$FieldDescriptor$JavaType)>","<java.util.Collections: java.util.List emptyList()>","<java.lang.Float: java.lang.Float valueOf(float)>","<com.google.protobuf.TextFormat: void <clinit>()>","<java.lang.String: void <clinit>()>","<java.lang.Float: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>","<java.lang.Double: void <clinit>()>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <clinit>()>","<java.lang.Boolean: void <clinit>()>","<java.lang.Float: java.lang.Float valueOf(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: boolean isOptional()>","<java.lang.Enum: int ordinal()>","<com.google.protobuf.Descriptors$Descriptor: boolean isExtensionNumber(int)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.Descriptors$DescriptorPool: com.google.protobuf.Descriptors$GenericDescriptor lookupSymbol(java.lang.String,com.google.protobuf.Descriptors$GenericDescriptor,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter)>","<com.google.protobuf.Descriptors$DescriptorPool: void addFieldByNumber(com.google.protobuf.Descriptors$FieldDescriptor)>","<java.lang.String: boolean equals(java.lang.Object)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,java.lang.Throwable,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<java.util.Collections: void <clinit>()>","<java.lang.String: void <init>(java.lang.String)>","<com.google.protobuf.TextFormat: int parseUInt32(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: boolean isExtension()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean getMessageSetWireFormat()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$FieldDescriptor$Type getType()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.lang.Double: java.lang.Double valueOf(double)>"],"<com.squareup.moshi.JsonScope: java.lang.String getPath(int,int[],java.lang.String[],int[])>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.params.UnitTestParams: org.bitcoinj.params.UnitTestParams get()>":["<org.bitcoinj.params.UnitTestParams: void <init>()>"],"<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag$Builder newBuilderForType()>"],"<androidx.collection.MapCollections$ArrayIterator: void <init>(androidx.collection.MapCollections,int)>":["<androidx.collection.ArrayMap$1: int colGetSize()>","<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DERIA5String: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.spongycastle.asn1.BERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.ASN1Sequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>"],"<androidx.recyclerview.widget.OrientationHelper: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<java.lang.Object: void <init>()>","<android.graphics.Rect: void <init>()>","<android.graphics.Rect: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$1000()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,long,org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void requestWalletBalance(android.content.res.AssetManager,org.bitcoinj.core.Address)>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$1: void <init>(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,android.content.res.AssetManager,org.bitcoinj.core.Address)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$1: void run()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable: boolean access$1200(com.google.protobuf.Descriptors$FileDescriptor)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: boolean supportFieldPresence(com.google.protobuf.Descriptors$FileDescriptor)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setIsFollowing(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okhttp3.internal.Util: void <clinit>()>":["<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>","<java.lang.String: void <clinit>()>","<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util$1: void <init>()>","<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>","<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>","<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>","<okio.ByteString: okio.ByteString decodeHex(java.lang.String)>","<okio.ByteString: void <clinit>()>"],"<org.spongycastle.math.ec.FixedPointUtil: org.spongycastle.math.ec.FixedPointPreCompInfo precompute(org.spongycastle.math.ec.ECPoint,int)>":["<org.spongycastle.math.ec.FixedPointPreCompInfo: void setPreComp(org.spongycastle.math.ec.ECPoint[])>","<org.spongycastle.math.ec.FixedPointPreCompInfo: org.spongycastle.math.ec.ECPoint[] getPreComp()>","<org.spongycastle.math.ec.ECPoint: void <clinit>()>","<org.spongycastle.math.ec.FixedPointUtil: int getCombSize(org.spongycastle.math.ec.ECCurve)>","<org.spongycastle.math.ec.FixedPointPreCompInfo: void setWidth(int)>","<org.spongycastle.math.ec.FixedPointUtil: org.spongycastle.math.ec.FixedPointPreCompInfo getFixedPointPreCompInfo(org.spongycastle.math.ec.PreCompInfo)>"],"<de.schildbach.wallet.util.CrashReporter: void saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)>":["<java.io.FileOutputStream: void <init>(java.io.File,boolean)>","<java.io.PrintWriter: void <init>(java.io.Writer)>","<de.schildbach.wallet.util.CrashReporter: void appendTrace(java.io.PrintWriter,java.lang.Throwable)>","<java.io.PrintWriter: void close()>","<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>","<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<java.io.PrintWriter: void println(java.lang.String)>","<java.nio.charset.StandardCharsets: void <clinit>()>","<java.lang.String: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder create()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void <init>()>"],"<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>","<org.spongycastle.asn1.ASN1OutputStream: void write(byte[])>"],"<okhttp3.HttpUrl$Builder: int effectivePort()>":["<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: int defaultPort(java.lang.String)>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: void <init>(int)>":["<java.lang.Object: void <init>()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setN(long)>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setSalt(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters build()>","<org.bitcoinj.crypto.KeyCrypterScrypt: byte[] randomSalt()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder()>"],"<org.bitcoinj.crypto.BIP38PrivateKey: org.bitcoinj.crypto.BIP38PrivateKey fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<org.bitcoinj.crypto.BIP38PrivateKey: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16900()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.spongycastle.crypto.paddings.PKCS7Padding: int padCount(byte[])>":["<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock deserializeCompact(org.bitcoinj.core.NetworkParameters,java.nio.ByteBuffer)>":["<org.bitcoinj.core.MessageSerializer: org.bitcoinj.core.Block makeBlock(byte[])>","<org.bitcoinj.core.StoredBlock: void <init>(org.bitcoinj.core.Block,java.math.BigInteger,int)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.MessageSerializer getDefaultSerializer()>","<java.math.BigInteger: void <init>(int,byte[])>","<org.bitcoinj.core.StoredBlock: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void signAndSendPayment(org.spongycastle.crypto.params.KeyParameter)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void setState(de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void sendPayment(org.bitcoinj.wallet.SendRequest,org.bitcoinj.core.Coin)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$17: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,org.bitcoinj.wallet.SendRequest,org.bitcoinj.core.Coin)>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>","<org.bitcoinj.utils.MonetaryFormat: java.lang.CharSequence format(org.bitcoinj.core.Monetary)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: org.bitcoinj.core.Coin getAmount()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: org.bitcoinj.utils.ExchangeRate getExchangeRate()>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<com.google.protobuf.LazyStringArrayList: java.util.List getUnderlyingElements()>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Collections: void <clinit>()>"],"<com.google.protobuf.SmallSortedMap$EntryIterator: boolean hasNext()>":["<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()>","<com.google.protobuf.SmallSortedMap: java.util.List access$400(com.google.protobuf.SmallSortedMap)>","<java.util.ArrayList: int size()>"],"<org.spongycastle.math.ec.FixedPointPreCompInfo: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DefaultCoinSelector$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>":["<java.util.LinkedList: java.lang.Object[] toArray()>","<com.google.common.collect.SingletonImmutableSet: boolean isPartialView()>","<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>","<com.google.common.collect.RegularImmutableSet: boolean isPartialView()>"],"<org.spongycastle.math.ec.WNafUtil: void <clinit>()>":["<org.spongycastle.math.ec.WNafUtil: void <clinit>()>"],"<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)>"],"<java.lang.Object: java.lang.Class getClass()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>":["<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>","<androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)>"],"<java.lang.Class: java.lang.Class getComponentType()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Payment: boolean access$5900()>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder addExtensionRange(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureExtensionRangeIsMutable()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>":["<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.MessageSerializer,int)>"],"<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedInputStream: void readGroup(int,com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<com.google.protobuf.WireFormat: int makeTag(int,int)>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okio.Buffer: okio.Buffer writeByte(int)>":["<okio.Buffer: okio.Segment writableSegment(int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.content.DialogInterface$OnClickListener access$3100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable concatNoDefensiveCopy(java.lang.Iterable[])>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.FluentIterable$3: void <init>(java.lang.Iterable[])>"],"<de.schildbach.wallet.service.BlockchainService: void start(android.content.Context,boolean)>":["<android.view.ContextThemeWrapper: android.content.ComponentName startService(android.content.Intent)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.Message)>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$1: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService,android.bluetooth.BluetoothAdapter)>":["<de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread: void <init>(android.bluetooth.BluetoothAdapter)>"],"<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch start()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<com.google.common.base.Ticker$1: long read()>"],"<org.bitcoinj.core.AbstractBlockChain: void <init>(org.bitcoinj.core.Context,java.util.List,org.bitcoinj.store.BlockStore)>":["<java.util.LinkedHashMap: void <init>()>","<org.bitcoinj.core.AbstractBlockChain: void <clinit>()>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.AbstractBlockChain: void addReorganizeListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.ReorganizeListener)>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<org.bitcoinj.core.StoredBlock: int getHeight()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.utils.VersionTally: void <init>(org.bitcoinj.core.NetworkParameters)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Context: org.bitcoinj.core.NetworkParameters getParams()>","<org.bitcoinj.core.AbstractBlockChain: void addNewBestBlockListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.NewBestBlockListener)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.utils.VersionTally: void initialize(org.bitcoinj.store.BlockStore,org.bitcoinj.core.StoredBlock)>","<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock getChainHead()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.bitcoinj.core.AbstractBlockChain: void addTransactionReceivedListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.TransactionReceivedInBlockListener)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.utils.ExponentialBackoff$Params: void <init>(long,float,long)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.lang.Object: void <init>()>"],"<androidx.fragment.app.Fragment: android.content.Context getContext()>":["<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>"],"<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>":["<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureFieldIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>":["<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>","<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>"],"<com.google.protobuf.CodedInputStream: void ensureAvailable(int)>":["<com.google.protobuf.CodedInputStream: void refillBuffer(int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: java.lang.String getActiveFileName()>":["<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix()>","<ch.qos.logback.core.rolling.RollingPolicyBase: java.lang.String getParentsRawFileProperty()>"],"<org.json.JSONObject: void <clinit>()>":["<org.json.JSONObject: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.FieldSet access$400(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.FieldSet buildExtensions()>"],"<org.bitcoinj.crypto.DeterministicKey: int getFingerprint()>":["<org.bitcoinj.crypto.DeterministicKey: byte[] getIdentifier()>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>":["<com.google.common.base.Joiner$2: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2100(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: java.util.List getImportedKeys()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.KeyChainGroup: java.util.List getImportedKeys()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$EncryptedData getEncryptedDeterministicSeed()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider$1: void <init>(de.schildbach.wallet.WalletBalanceWidgetProvider,android.content.Context,android.appwidget.AppWidgetManager,int[],android.content.BroadcastReceiver$PendingResult)>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>","<java.lang.Enum: int ordinal()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,android.bluetooth.BluetoothAdapter)>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void maybeForceBuilderInitialization()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails getDefaultInstance()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[])>":["<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[],int,int)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onFail(int,java.lang.Object[])>"],"<androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$24: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)>":["<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"],"<java.lang.Character: boolean isJavaIdentifierPart(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.rolling.RollingFileAppender: boolean innerCheckForFileNamePatternCollisionInPreviousRFA(ch.qos.logback.core.rolling.helper.FileNamePattern)>":["<ch.qos.logback.core.FileAppender: void addErrorForCollision(java.lang.String,java.lang.String,java.lang.String)>","<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: boolean equals(java.lang.Object)>","<ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String getName()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$4: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>":["<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<ch.qos.logback.classic.LoggerContext: void putProperties(java.util.Properties)>":["<java.util.Properties: java.util.Set stringPropertyNames()>","<java.util.Properties: java.lang.String getProperty(java.lang.String)>","<ch.qos.logback.core.ContextBase: void putProperty(java.lang.String,java.lang.String)>","<ch.qos.logback.classic.LoggerContext: void updateLoggerContextVO()>"],"<com.google.protobuf.CodedInputStream: byte[] readRawBytesSlowPath(int)>":["<com.google.protobuf.CodedInputStream: void ensureAvailable(int)>","<com.google.protobuf.CodedInputStream: void skipRawBytes(int)>","<com.google.protobuf.Internal: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException negativeSize()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.Math: int min(int,int)>","<java.lang.System: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int read(byte[],int,int)>","<java.io.FileInputStream: int read(byte[],int,int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>"],"<org.bitcoinj.wallet.BasicKeyChain: void checkKeyEncryptionStateMatches(org.bitcoinj.core.ECKey)>":["<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>","<org.bitcoinj.crypto.KeyCrypterException: void <init>(java.lang.String)>","<org.bitcoinj.crypto.KeyCrypterScrypt: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: void <init>(de.schildbach.wallet.ui.CurrencyAmountView,de.schildbach.wallet.ui.CurrencyAmountView)>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink$2: void <init>(de.schildbach.wallet.ui.CurrencyCalculatorLink)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink$1: void <init>(de.schildbach.wallet.ui.CurrencyCalculatorLink)>","<java.lang.Object: void <init>()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void update()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<com.google.common.util.concurrent.AggregateFutureState$AtomicHelper: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.ECKey: org.bitcoinj.core.Address toAddress(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.core.ECKey: byte[] getPubKeyHash()>","<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>"],"<androidx.collection.SparseArrayCompat: void <init>(int)>":["<java.lang.Object: void <init>()>","<androidx.collection.ContainerHelpers: int idealIntArraySize(int)>","<androidx.collection.ContainerHelpers: void <clinit>()>"],"<androidx.loader.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>":["<androidx.loader.content.AsyncTaskLoader: void <init>(android.content.Context)>","<androidx.loader.content.Loader$ForceLoadContentObserver: void <init>(androidx.loader.content.Loader)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Script getWatchedScript(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<okhttp3.RealCall: void cancel()>":["<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getDeterministicKeyFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$DeterministicKey getDeterministicKey()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<de.schildbach.wallet.data.PaymentIntent: boolean isBluetoothPaymentUrl()>":["<de.schildbach.wallet.util.Bluetooth: boolean isBluetoothUrl(java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder setTag(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.spongycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<java.io.EOFException: void <init>()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<java.io.FilterInputStream: int read()>","<org.spongycastle.asn1.LimitedInputStream: void <init>(java.io.InputStream,int)>","<org.spongycastle.asn1.IndefiniteLengthInputStream: boolean checkForEof()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script build()>":["<org.bitcoinj.wallet.Protos$Script: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script buildPartial()>"],"<de.schildbach.wallet.ui.scan.CameraManager: void setTorch(boolean)>":["<de.schildbach.wallet.ui.scan.CameraManager: boolean getTorchEnabled(android.hardware.Camera)>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager: void setTorchEnabled(android.hardware.Camera,boolean)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getMessageTypeCount()>":["<java.util.ArrayList: int size()>"],"<com.google.common.collect.Hashing: int smear(int)>":["<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int rotateLeft(int,int)>"],"<com.google.common.collect.RegularImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>":["<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList()>","<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>":["<androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>","<androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>","<java.lang.String: boolean equals(java.lang.Object)>","<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>","<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: int onGetWindowAnimations()>","<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.animation.Animator)>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float)>","<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>","<androidx.fragment.app.Fragment: int getNextAnim()>","<androidx.fragment.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>","<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasWindowAnimations()>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float)>"],"<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.Message toProto()>":["<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.DescriptorProtos$DescriptorProto toProto()>"],"<org.bitcoinj.core.PeerGroup$8: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>":["<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>"],"<com.google.protobuf.WireFormat$JavaType: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>","<com.google.protobuf.WireFormat$JavaType: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.WireFormat$JavaType: void <init>(java.lang.String,int,java.lang.Object)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.Float: java.lang.Float valueOf(float)>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<java.lang.Integer: void <clinit>()>","<java.lang.Float: void <clinit>()>","<java.lang.Double: java.lang.Double valueOf(double)>","<java.lang.Double: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<com.google.protobuf.FieldSet: boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.SmallSortedMap: java.lang.Object get(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Wallet: void writeTo(com.google.protobuf.CodedOutputStream)>":["<org.bitcoinj.wallet.Protos$Wallet: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>","<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getDescriptionBytes()>","<com.google.protobuf.CodedOutputStream: void writeEnum(int,int)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getNetworkIdentifierBytes()>","<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.CodedOutputStream: void writeInt64(int,long)>","<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>","<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: int getNumber()>"],"<org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String unescape(java.lang.String)>":["<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.StringBuffer: java.lang.String toString()>","<java.lang.StringBuffer: int length()>","<java.lang.StringBuffer: void setLength(int)>","<org.spongycastle.asn1.x500.style.IETFUtils: int convertHex(char)>","<org.spongycastle.asn1.x500.style.IETFUtils: boolean isHexDigit(char)>","<java.lang.StringBuffer: char charAt(int)>","<java.lang.StringBuffer: void <init>(int)>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.ui.send.DeriveKeyTask: void <clinit>()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.AbstractParser: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16000()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves: void defineCurve(java.lang.String,org.spongycastle.asn1.x9.X9ECParametersHolder)>":["<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>"],"<okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor setLevel(okhttp3.logging.HttpLoggingInterceptor$Level)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: java.lang.Object getValue()>":["<com.google.common.collect.MapMakerInternalMap$1: java.lang.Object get()>","<java.lang.ref.WeakReference: java.lang.Object get()>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode C()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.pattern.parser.Parser: void advanceTokenPointer()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode SINGLE()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>","<ch.qos.logback.core.pattern.parser.Parser: void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String)>"],"<org.bitcoinj.core.PeerGroup$LocalhostCheckState: void <clinit>()>":["<org.bitcoinj.core.PeerGroup$LocalhostCheckState: void <init>(java.lang.String,int)>","<org.bitcoinj.core.PeerGroup$LocalhostCheckState: void <clinit>()>"],"<org.slf4j.LoggerFactory: boolean isAndroid()>":["<java.lang.String: java.lang.String toLowerCase()>","<org.slf4j.helpers.Util: void <clinit>()>","<java.lang.String: boolean contains(java.lang.CharSequence)>","<org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.bitcoinj.wallet.SendRequest: void <init>()>":["<org.bitcoinj.core.Context: org.bitcoinj.core.Context get()>","<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <clinit>()>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.Context: boolean isEnsureMinRequiredFee()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.Context: org.bitcoinj.core.Coin getFeePerKb()>"],"<androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()>":["<androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()>"],"<com.google.common.collect.ImmutableList$SubList: void <init>(com.google.common.collect.ImmutableList,int,int)>":["<com.google.common.collect.ImmutableList: void <init>()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)>":["<androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)>"],"<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void <init>()>":["<ch.qos.logback.core.rolling.helper.RenameUtil: void <clinit>()>","<ch.qos.logback.core.util.FileSize: void <clinit>()>","<ch.qos.logback.core.util.FileSize: void <init>(long)>","<ch.qos.logback.core.rolling.RollingPolicyBase: void <init>()>","<ch.qos.logback.core.rolling.helper.RenameUtil: void <init>()>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)>":["<android.app.Activity: boolean isFinishing()>"],"<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okhttp3.Request: okhttp3.HttpUrl url()>","<java.util.ArrayList: int size()>","<java.lang.AssertionError: void <init>()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.IndexOutOfBoundsException: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean access$6500()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.SingleFieldBuilder getPaymentFieldBuilder()>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1$1: void onClick(android.content.DialogInterface,int)>":["<android.app.Activity: void finish()>"],"<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>":["<androidx.arch.core.internal.SafeIterableMap$Entry: void <init>(java.lang.Object,java.lang.Object)>"],"<com.google.common.util.concurrent.AbstractListeningExecutorService: void <init>()>":["<java.util.concurrent.AbstractExecutorService: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(org.bitcoinj.wallet.Protos$EncryptedData)>":["<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.ByteString getInitialisationVector()>","<org.bitcoinj.wallet.Protos$EncryptedData: boolean hasEncryptedPrivateKey()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.ByteString getEncryptedPrivateKey()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder setInitialisationVector(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$EncryptedData: boolean hasInitialisationVector()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData getDefaultInstance()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder setEncryptedPrivateKey(com.google.protobuf.ByteString)>"],"<com.google.protobuf.Descriptors$EnumDescriptor: void setProto(com.google.protobuf.DescriptorProtos$EnumDescriptorProto)>":["<com.google.protobuf.Descriptors$EnumValueDescriptor: void access$2400(com.google.protobuf.Descriptors$EnumValueDescriptor,com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto)>"],"<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>":["<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1: void run()>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationEnd(android.view.animation.Animation)>","<androidx.core.view.ViewCompat: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1: void <init>(androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener)>"],"<de.schildbach.wallet.ui.WalletActivity$15: void handleDirectTransaction(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.WalletApplication: void processDirectTransaction(org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.WalletActivity: de.schildbach.wallet.WalletApplication access$200(de.schildbach.wallet.ui.WalletActivity)>"],"<org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>":["<java.lang.String: void <clinit>()>","<java.lang.String: void <init>(char[])>","<java.lang.String: char[] toCharArray()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<org.bitcoinj.wallet.Wallet$BalanceType: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask: void decodePrivateKey(org.bitcoinj.crypto.BIP38PrivateKey,java.lang.String)>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1: void <init>(de.schildbach.wallet.ui.send.DecodePrivateKeyTask,org.bitcoinj.crypto.BIP38PrivateKey,java.lang.String)>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1: void run()>"],"<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread: void <init>(android.bluetooth.BluetoothServerSocket)>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>","<java.lang.Thread: void <init>()>"],"<com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>":["<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>","<com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite)>"],"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable: void <init>(de.schildbach.wallet.ui.scan.ScanActivity,android.hardware.Camera)>":["<java.lang.Object: void <init>()>","<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable)>"],"<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)>":["<androidx.fragment.app.FragmentController: void <init>(androidx.fragment.app.FragmentHostCallback)>"],"<org.bitcoinj.wallet.BasicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter)>":["<java.util.LinkedHashMap: void <init>()>","<java.lang.Object: void <init>()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>"],"<org.bitcoinj.core.BlockChain: void rollbackBlockStore(int)>":["<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.AbstractBlockChain: void setChainHead(org.bitcoinj.core.StoredBlock)>","<org.bitcoinj.core.StoredBlock: int getHeight()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock getPrev(org.bitcoinj.store.BlockStore)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock getChainHead()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.store.SPVBlockStore: void put(org.bitcoinj.core.StoredBlock)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handleDirectTransaction(org.bitcoinj.core.Transaction)>":["<android.app.Activity: android.app.Application getApplication()>","<de.schildbach.wallet.WalletApplication: void processDirectTransaction(org.bitcoinj.core.Transaction)>","<android.app.Activity: void finish()>"],"<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>":["<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String,java.lang.Throwable)>","<org.spongycastle.asn1.BERTaggedObjectParser: void <init>(boolean,int,org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.BERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.ASN1InputStream: int readTagNumber(java.io.InputStream,int)>","<org.spongycastle.asn1.BERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BERSetParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.BERSequenceParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>","<org.spongycastle.asn1.BERApplicationSpecificParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive buildObject(int,int,int)>","<org.spongycastle.asn1.DERExternalParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.BEROctetStringParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.DERExternalParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.BERTaggedObjectParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.ASN1InputStream: int readLength()>","<org.spongycastle.asn1.BERApplicationSpecificParser: void <init>(int,org.spongycastle.asn1.ASN1StreamParser)>","<java.io.FilterInputStream: int read()>","<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>","<java.io.IOException: void <init>(java.lang.String)>"],"<com.google.protobuf.TextFormat: java.lang.String unsignedToString(long)>":["<java.lang.Long: java.lang.String toString(long)>","<java.math.BigInteger: void <clinit>()>","<java.lang.Long: void <clinit>()>","<java.math.BigInteger: java.math.BigInteger valueOf(long)>"],"<org.bitcoinj.core.PeerAddress: int hashCode()>":["<com.google.common.base.Objects: int hashCode(java.lang.Object[])>","<java.lang.Integer: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<de.schildbach.wallet.service.InactivityNotificationService: void startMaybeShowNotification(android.content.Context)>":["<androidx.core.content.ContextCompat: void <clinit>()>","<androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Class: java.lang.String getCanonicalName()>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>":["<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>","<androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>","<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>","<androidx.loader.app.LoaderManagerImpl: void <clinit>()>"],"<org.bitcoinj.wallet.WalletFiles: void saveLater()>":["<java.util.concurrent.ScheduledThreadPoolExecutor: boolean isShutdown()>","<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>","<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>"],"<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>":["<java.util.ArrayDeque: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Tag getTags(int)>","<org.bitcoinj.wallet.Protos$Wallet: int getWatchedScriptCount()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Transaction getTransaction(int)>","<org.bitcoinj.wallet.Protos$Wallet: int getKeyCount()>","<org.bitcoinj.wallet.Protos$Wallet: int getTagsCount()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasEncryptionParameters()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean isInitialized()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Script getWatchedScript(int)>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Extension getExtension(int)>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$TransactionSigner getTransactionSigners(int)>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$ScryptParameters getEncryptionParameters()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Key getKey(int)>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasNetworkIdentifier()>","<org.bitcoinj.wallet.Protos$Wallet: int getExtensionCount()>","<org.bitcoinj.wallet.Protos$Wallet: int getTransactionCount()>","<org.bitcoinj.wallet.Protos$Wallet: int getTransactionSignersCount()>"],"<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>"],"<com.google.common.util.concurrent.AbstractFuture: java.lang.String pendingToString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<com.google.common.util.concurrent.AbstractFuture: java.lang.String userObjectToString(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeFrom(org.bitcoinj.wallet.Protos$Transaction)>"],"<ch.qos.logback.core.joran.action.ImplicitAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>"],"<org.spongycastle.asn1.x500.style.RFC4519Style: void <init>()>":["<org.spongycastle.asn1.x500.style.RFC4519Style: void <clinit>()>","<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: void <init>()>","<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: java.util.Hashtable copyHashTable(java.util.Hashtable)>"],"<org.bitcoinj.wallet.Protos$Extension$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Extension$1: org.bitcoinj.wallet.Protos$Extension parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.collect.MapMakerInternalMap: int hash(java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap: int rehash(int)>","<com.google.common.base.Equivalence: int hash(java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap: void <clinit>()>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.scan.ScanActivity: void startForResult(android.app.Activity,int)>","<android.app.Activity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>"],"<org.bitcoinj.protocols.payments.PaymentSession: java.lang.String getMemo()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getMemo()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasMemo()>"],"<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()>","<androidx.fragment.app.Fragment: void instantiateChildFragmentManager()>","<androidx.fragment.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4800()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500Name: void <clinit>()>":["<org.spongycastle.asn1.x500.style.BCStyle: void <clinit>()>","<org.spongycastle.asn1.x500.X500Name: void <clinit>()>"],"<com.google.common.hash.Hashing: com.google.common.hash.HashFunction sha256()>":["<com.google.common.hash.Hashing$Sha256Holder: void <clinit>()>"],"<org.spongycastle.asn1.DERSequenceParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.spongycastle.asn1.DERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<java.io.IOException: java.lang.String getMessage()>"],"<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>":["<java.util.Vector: void addElement(java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.core.Transaction: int hashCode()>":["<org.bitcoinj.core.Sha256Hash: int hashCode()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>"],"<com.google.common.base.Splitter$2: com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter$2$1: void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence)>"],"<org.bitcoinj.core.Coin: boolean isPositive()>":["<org.bitcoinj.core.Coin: int signum()>"],"<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent$1: void <init>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<com.google.common.io.BaseEncoding: void <clinit>()>","<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base64Url()>","<org.slf4j.LoggerFactory: void <clinit>()>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding omitPadding()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void askConfirmSweep(org.bitcoinj.core.ECKey)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$8: void run()>","<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: int importKeys(org.bitcoinj.core.ECKey[])>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void setState(de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>","<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.KeyChainGroup)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void <clinit>()>"],"<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>":["<androidx.fragment.app.OneShotPreDrawListener: void <init>(android.view.View,java.lang.Runnable)>"],"<com.google.protobuf.Descriptors$MethodDescriptor: void access$2600(com.google.protobuf.Descriptors$MethodDescriptor)>":["<com.google.protobuf.Descriptors$MethodDescriptor: void crossLink()>"],"<com.google.common.util.concurrent.AggregateFuture: void init(com.google.common.util.concurrent.AggregateFuture$RunningState)>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void access$100(com.google.common.util.concurrent.AggregateFuture$RunningState)>"],"<org.slf4j.event.Level: void <clinit>()>":["<org.slf4j.event.Level: void <init>(java.lang.String,int,int,java.lang.String)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.WireFormat$FieldType$3: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>":["<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int,com.google.protobuf.WireFormat$1)>"],"<de.schildbach.wallet.util.CrashReporter: boolean hasSavedCrashTrace()>":["<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<java.io.File: boolean exists()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoin.protocols.payments.Protos$Payment: boolean access$5200()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.RepeatedFieldBuilder getRefundToFieldBuilder()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService$6: void onChanged(java.util.Date)>":["<de.schildbach.wallet.service.BlockchainService: java.util.concurrent.atomic.AtomicInteger access$1700(de.schildbach.wallet.service.BlockchainService)>","<android.app.Service: void stopSelf()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<java.util.LinkedList: int size()>","<java.util.LinkedList: java.lang.Object remove(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<java.lang.StringBuilder: int length()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.BlockChain access$900(de.schildbach.wallet.service.BlockchainService)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)>","<de.schildbach.wallet.service.BlockchainService: int access$1900()>","<de.schildbach.wallet.service.BlockchainService: org.slf4j.Logger access$1200()>","<java.util.LinkedList: java.util.Iterator iterator()>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.LinkedList: void add(int,java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService$6$ActivityHistoryEntry: void <init>(de.schildbach.wallet.service.BlockchainService$6,int,int)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionSigner$1: org.bitcoinj.wallet.Protos$TransactionSigner parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<dummyMainClass: de.schildbach.wallet.ui.AddressBookActivity dummyMainMethod_de_schildbach_wallet_ui_AddressBookActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.AddressBookActivity: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentActivity: void onResume()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.AddressBookActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>"],"<de.schildbach.wallet.WalletApplication$1: void <init>(de.schildbach.wallet.WalletApplication,android.content.pm.PackageInfo)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.BasicStatusManager: boolean add(ch.qos.logback.core.status.StatusListener)>":["<ch.qos.logback.core.BasicStatusManager: boolean checkForPresence(java.util.List,java.lang.Class)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String)>":["<ch.qos.logback.core.pattern.parser.Parser: void advanceTokenPointer()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.pattern.parser.CompositeNode: void setChildNode(ch.qos.logback.core.pattern.parser.Node)>","<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void setOptions(java.util.List)>","<ch.qos.logback.core.pattern.parser.CompositeNode: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node E()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getNextToken()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: void parse()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node parse()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>","<ch.qos.logback.core.pattern.parser.Parser: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String escapeRightParantesis(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil: void <init>()>","<ch.qos.logback.core.rolling.helper.FileNamePattern: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$3: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setPool(org.bitcoinj.wallet.Protos$Transaction$Pool)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setData(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.RepeatedFieldBuilder getBroadcastByFieldBuilder()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean access$9200()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.DeterministicKey freshKey(org.bitcoinj.wallet.KeyChain$KeyPurpose)>":["<org.bitcoinj.wallet.KeyChainGroup: java.util.List freshKeys(org.bitcoinj.wallet.KeyChain$KeyPurpose,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails buildPartial()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: int access$2402(org.bitcoin.protocols.payments.Protos$PaymentDetails,int)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: long access$2002(org.bitcoin.protocols.payments.Protos$PaymentDetails,long)>","<java.util.Collections: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.util.List access$1802(org.bitcoin.protocols.payments.Protos$PaymentDetails,java.util.List)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.Object access$2102(org.bitcoin.protocols.payments.Protos$PaymentDetails,java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.Object access$1702(org.bitcoin.protocols.payments.Protos$PaymentDetails,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.Object access$2202(org.bitcoin.protocols.payments.Protos$PaymentDetails,java.lang.Object)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.ByteString access$2302(org.bitcoin.protocols.payments.Protos$PaymentDetails,com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: long access$1902(org.bitcoin.protocols.payments.Protos$PaymentDetails,long)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<org.bitcoinj.core.PeerGroup: void <init>(org.bitcoinj.core.Context,org.bitcoinj.core.AbstractBlockChain,org.bitcoinj.net.ClientConnectionManager,com.subgraph.orchid.TorClient)>":["<java.lang.Object: void <init>()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<org.bitcoinj.core.PeerGroup$3: void <init>(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.VersionMessage: void <init>(org.bitcoinj.core.NetworkParameters,int)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<java.util.concurrent.CopyOnWriteArraySet: void <init>()>","<org.bitcoinj.core.Context: org.bitcoinj.core.NetworkParameters getParams()>","<java.util.concurrent.CountDownLatch: void <init>(int)>","<java.util.HashSet: void <init>()>","<org.bitcoinj.utils.ExponentialBackoff: void <init>(org.bitcoinj.utils.ExponentialBackoff$Params)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>","<org.bitcoinj.params.RegTestParams: org.bitcoinj.core.Block getGenesisBlock()>","<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListeningScheduledExecutorService createPrivateExecutor()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.core.PeerGroup$2: void <init>(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.net.FilterMerger: void <init>(double)>","<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<org.bitcoinj.core.PeerGroup$1: void <init>(org.bitcoinj.core.PeerGroup)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.core.PeerGroup$4: void <init>(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup$PeerStartupListener: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.PeerGroup$1)>","<org.bitcoinj.core.PeerGroup$LocalhostCheckState: void <clinit>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<org.bitcoinj.core.PeerGroup$6: void <init>(org.bitcoinj.core.PeerGroup)>","<com.google.common.collect.Maps: java.util.HashMap newHashMap()>","<java.util.HashMap: void <init>()>","<org.bitcoinj.utils.ExponentialBackoff$Params: void <init>(long,float,long)>","<org.bitcoinj.core.PeerGroup$PeerListener: void <init>(org.bitcoinj.core.PeerGroup)>","<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block getGenesisBlock()>","<org.bitcoinj.core.Block: long getTimeSeconds()>"],"<com.lambdaworks.jni.JarLibraryLoader$1: void <clinit>()>":["<java.lang.Enum: int ordinal()>","<com.lambdaworks.jni.JarLibraryLoader$1: void <clinit>()>","<com.lambdaworks.jni.Platform$OS: com.lambdaworks.jni.Platform$OS[] values()>","<com.lambdaworks.jni.Platform$OS: void <clinit>()>"],"<java.lang.IndexOutOfBoundsException: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<org.bitcoinj.core.VersionMessage: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>"],"<androidx.fragment.app.FragmentActivity: void onStop()>":["<android.app.Activity: void onStop()>","<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>","<androidx.fragment.app.FragmentController: void dispatchStop()>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: android.net.Uri contentUri(java.lang.String,boolean)>":["<java.lang.StringBuilder: java.lang.String toString()>","<android.net.Uri: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<android.net.Uri: android.net.Uri parse(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[])>":["<java.lang.Throwable: void <init>(java.lang.String)>","<ch.qos.logback.classic.spi.StackTraceElementProxy: void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData)>","<ch.qos.logback.classic.spi.PackagingDataCalculator: void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader)>","<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>","<ch.qos.logback.classic.spi.STEUtil: int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[])>","<ch.qos.logback.classic.spi.PackagingDataCalculator: ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader)>"],"<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>"],"<de.schildbach.wallet.offline.DirectPaymentTask: org.slf4j.Logger access$100()>":["<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.loader.content.CursorLoader: void cancelLoadInBackground()>":["<androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()>"],"<org.bitcoinj.wallet.Wallet: void completeTx(org.bitcoinj.wallet.SendRequest)>":["<org.bitcoinj.core.Transaction: void shuffleOutputs()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<org.bitcoinj.wallet.Wallet$ExceededMaxTransactionSize: void <init>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionOutput)>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.wallet.Wallet$CouldNotAdjustDownwards: void <init>()>","<org.bitcoinj.core.Transaction: void setMemo(java.lang.String)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.Wallet$FeeCalculation calculateFee(org.bitcoinj.wallet.SendRequest,org.bitcoinj.core.Coin,java.util.List,boolean,java.util.List)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin subtract(org.bitcoinj.core.Coin)>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<java.util.ArrayList: void <init>(java.util.Collection)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getValue()>","<java.util.LinkedList: int size()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<org.bitcoinj.script.Script: boolean isOpReturn()>","<org.bitcoinj.core.TransactionOutput: boolean isDust()>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void setSource(org.bitcoinj.core.TransactionConfidence$Source)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.TransactionOutput)>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void signTransaction(org.bitcoinj.wallet.SendRequest)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput getOutput(long)>","<org.bitcoinj.wallet.Wallet$MultipleOpReturnRequested: void <init>()>","<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Wallet$DustySendRequested: void <init>()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <clinit>()>","<org.bitcoinj.wallet.DefaultCoinSelector: org.bitcoinj.wallet.CoinSelection select(org.bitcoinj.core.Coin,java.util.List)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.Transaction: void setPurpose(org.bitcoinj.core.Transaction$Purpose)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: boolean adjustOutputDownwardsForFee(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.CoinSelection,org.bitcoinj.core.Coin,boolean)>","<org.bitcoinj.wallet.Wallet: java.util.List calculateAllSpendCandidates(boolean,boolean)>","<org.bitcoinj.core.Transaction: void setExchangeRate(org.bitcoinj.utils.ExchangeRate)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.params.RegTestParams: void <clinit>()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.RegTestParams: void <clinit>()>","<java.math.BigInteger: void <init>(java.lang.String,int)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>"],"<org.bitcoinj.core.TransactionOutput: boolean isWatched(org.bitcoinj.core.TransactionBag)>":["<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: boolean isWatchedScript(org.bitcoinj.script.Script)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>","<java.lang.Throwable: java.lang.String toString()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)>":["<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>"],"<de.schildbach.wallet.service.BlockchainService$7: void onChanged(java.util.Set)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.PeerGroup access$2000(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService$7: void startup()>","<de.schildbach.wallet.service.BlockchainService$7: void shutdown()>","<de.schildbach.wallet.service.BlockchainService: void access$1000(de.schildbach.wallet.service.BlockchainService)>"],"<org.bitcoinj.core.Context: void enableStrictMode()>":["<org.bitcoinj.core.Context: void <clinit>()>"],"<org.bitcoinj.net.AbstractTimeoutHandler$1: void run()>":["<org.bitcoinj.core.Peer: void timeoutOccurred()>"],"<org.bitcoinj.core.PeerGroup$PeerStartupListener: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.BasicStatusManager: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>()>","<ch.qos.logback.core.helpers.CyclicBuffer: void <init>(int)>","<ch.qos.logback.core.spi.LogbackLock: void <init>()>"],"<org.bitcoinj.crypto.KeyCrypterException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Long: java.lang.Long valueOf(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.crypto.HDDerivationException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.InsufficientMoneyException: void <init>(org.bitcoinj.core.Coin,java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void access$100(com.google.common.util.concurrent.AggregateFuture$RunningState)>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void init()>"],"<com.google.common.hash.AbstractHashFunction: com.google.common.hash.HashCode hashBytes(byte[])>":["<com.google.common.hash.AbstractHashFunction: com.google.common.hash.HashCode hashBytes(byte[],int,int)>"],"<androidx.lifecycle.LifecycleRegistry: void sync()>":["<android.util.Log: int w(java.lang.String,java.lang.String)>","<androidx.lifecycle.LifecycleRegistry: boolean isSynced()>","<androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>","<java.lang.Enum: int compareTo(java.lang.Enum)>","<androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>","<androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()>","<java.lang.ref.WeakReference: java.lang.Object get()>","<androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>"],"<org.bitcoinj.wallet.KeyChainGroup: void addAndActivateHDChain(org.bitcoinj.wallet.DeterministicKeyChain)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void setLookaheadSize(int)>","<org.bitcoinj.wallet.DeterministicKeyChain: void addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener,java.util.concurrent.Executor)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.DeterministicKeyChain: void setLookaheadThreshold(int)>","<java.util.LinkedList: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: java.util.List getListeners()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<okio.RealBufferedSink: void <init>(okio.Sink)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<okio.Buffer: void <init>()>","<java.lang.Object: void <init>()>","<okio.Buffer: void <clinit>()>"],"<ch.qos.logback.core.joran.action.StatusListenerAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoinj.wallet.Wallet: int addWatchedScripts(java.util.List)>":["<java.util.HashSet: boolean remove(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.HashSet: boolean contains(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void saveNow()>","<org.bitcoinj.wallet.Wallet: void queueOnScriptsChanged(java.util.List,boolean)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<okhttp3.ConnectionSpec: void <clinit>()>":["<okhttp3.ConnectionSpec: void <clinit>()>","<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>","<okhttp3.TlsVersion: void <clinit>()>","<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>","<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>","<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>","<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>","<okhttp3.CipherSuite: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)>":["<androidx.fragment.app.FragmentTransitionCompat21$2: void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)>","<android.transition.TransitionSet: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>"],"<org.bitcoinj.utils.Fiat: org.bitcoinj.utils.Fiat valueOf(java.lang.String,long)>":["<org.bitcoinj.utils.Fiat: void <clinit>()>","<org.bitcoinj.utils.Fiat: void <init>(java.lang.String,long)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>"],"<com.google.common.base.Preconditions: int checkElementIndex(int,int,java.lang.String)>":["<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>","<com.google.common.base.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setCtype(com.google.protobuf.DescriptorProtos$FieldOptions$CType)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.core.Base58: java.lang.String encode(byte[])>":["<org.bitcoinj.core.Base58: void <clinit>()>","<java.util.Arrays: byte[] copyOf(byte[],int)>","<org.bitcoinj.core.Base58: byte divmod(byte[],int,int,int)>","<java.lang.String: void <clinit>()>","<java.lang.String: void <init>(char[],int,int)>"],"<com.google.protobuf.Descriptors$Descriptor: void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>":["<com.google.protobuf.Descriptors$OneofDescriptor: void <init>(com.google.protobuf.DescriptorProtos$OneofDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$OneofDescriptor getContainingOneof()>","<com.google.protobuf.Descriptors: java.lang.String access$1500(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>","<com.google.protobuf.Descriptors: void <clinit>()>","<com.google.protobuf.Descriptors$OneofDescriptor: int getFieldCount()>","<com.google.protobuf.Descriptors$OneofDescriptor: com.google.protobuf.Descriptors$FieldDescriptor[] access$1700(com.google.protobuf.Descriptors$OneofDescriptor)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$OneofDescriptor: com.google.protobuf.Descriptors$FieldDescriptor[] access$1702(com.google.protobuf.Descriptors$OneofDescriptor,com.google.protobuf.Descriptors$FieldDescriptor[])>","<com.google.protobuf.Descriptors$EnumDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$Descriptor: void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$OneofDescriptor: int access$1808(com.google.protobuf.Descriptors$OneofDescriptor)>","<com.google.protobuf.Descriptors$OneofDescriptor: int access$1802(com.google.protobuf.Descriptors$OneofDescriptor,int)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList append(java.util.List,org.bitcoinj.crypto.ChildNumber)>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.RegularImmutableList: void <clinit>()>"],"<okio.Okio: okio.AsyncTimeout timeout(java.net.Socket)>":["<okio.Okio$4: void <init>(java.net.Socket)>"],"<ch.qos.logback.core.NOPOutputStream: void <init>()>":["<java.io.OutputStream: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$1: com.google.protobuf.DescriptorProtos$FieldOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.squareup.moshi.ClassJsonAdapter$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int)>","<java.io.ByteArrayInputStream: void <init>(byte[])>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$8700()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsActivity: void onCreate(android.os.Bundle)>":["<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<de.schildbach.wallet.ui.RequestCoinsActivity$1: void <init>(de.schildbach.wallet.ui.RequestCoinsActivity)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<android.app.Activity: void setContentView(int)>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$4700()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: void ensureTransactionsIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.protobuf.FieldSet: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap newFieldMap(int)>"],"<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>":["<de.schildbach.wallet.Configuration: int getBtcPrecision()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat shift(int)>","<de.schildbach.wallet.Configuration: int getBtcShift()>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat repeatOptionalDecimals(int,int)>","<org.bitcoinj.utils.MonetaryFormat: void <init>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>"],"<com.google.protobuf.LazyField: void <init>(com.google.protobuf.MessageLite,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.ByteString)>":["<com.google.protobuf.LazyFieldLite: void <init>(com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.ByteString)>"],"<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.utils.BaseTaggableObject: java.util.Map getTags()>":["<com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>","<com.google.common.collect.Maps: java.util.HashMap newHashMap()>"],"<androidx.lifecycle.Lifecycling: androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<androidx.lifecycle.Lifecycling: void <clinit>()>","<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver)>","<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])>","<androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>","<androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>","<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$7600()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup$5: void run()>":["<org.bitcoinj.core.PeerGroup: java.util.concurrent.CountDownLatch access$500(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<com.google.common.util.concurrent.Uninterruptibles: void awaitUninterruptibly(java.util.concurrent.CountDownLatch)>"],"<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder smallNum(int)>":["<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder smallNum(int,int)>","<java.util.LinkedList: int size()>"],"<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String)>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <clinit>()>":["<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <init>(java.lang.String,int)>"],"<org.spongycastle.crypto.params.ECKeyGenerationParameters: void <init>(org.spongycastle.crypto.params.ECDomainParameters,java.security.SecureRandom)>":["<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>","<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>"],"<ch.qos.logback.core.util.EnvUtil: void <clinit>()>":["<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>","<ch.qos.logback.core.util.EnvUtil: void <clinit>()>"],"<ch.qos.logback.classic.LoggerContext: void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level)>":["<java.util.ArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.core.PeerGroup: void addDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>":["<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void addDisconnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>"],"<androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<org.bitcoinj.core.TransactionConfidence: void setAppearedAtChainHeight(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void setConfidenceType(org.bitcoinj.core.TransactionConfidence$ConfidenceType)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean access$20300()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveChildKey(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>":["<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes deriveChildKeyBytesFromPublic(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber,org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode)>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: boolean hasPrivKey()>","<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECCurve,byte[])>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList append(java.util.List,org.bitcoinj.crypto.ChildNumber)>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.LazyECPoint,java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes deriveChildKeyBytesFromPrivate(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<java.math.BigInteger: void <init>(int,byte[])>"],"<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int)>":["<com.google.common.collect.ImmutableList: void <init>()>"],"<com.google.common.math.MathPreconditions: int checkNonNegative(java.lang.String,int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<de.schildbach.wallet.data.WalletBalanceLiveData: void onWalletInactive(org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.data.WalletBalanceLiveData: void removeWalletListener(org.bitcoinj.wallet.Wallet)>"],"<com.google.common.util.concurrent.AbstractExecutionThreadService$1: void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService)>":["<com.google.common.util.concurrent.AbstractService: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder create()>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: int getSerializedSize()>":["<com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>","<org.bitcoin.protocols.payments.Protos$Payment: java.util.List getTransactionsList()>","<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<java.util.ArrayList: int size()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.ByteString getMemoBytes()>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder setInitialisationVector(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getMerkleRoot()>":["<org.bitcoinj.core.Block: void unCacheHeader()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash calculateMerkleRoot()>"],"<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)>":["<okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)>","<okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.protobuf.ByteString: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails buildPartial()>"],"<org.bitcoinj.core.Transaction: int getOptimalEncodingMessageSize()>":["<org.bitcoinj.core.Message: int getMessageSize()>"],"<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values()>":["<java.lang.Object: java.lang.Object clone()>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder access$13600()>"],"<com.google.common.util.concurrent.AbstractFuture: void removeWaiter(com.google.common.util.concurrent.AbstractFuture$Waiter)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void <clinit>()>"],"<androidx.arch.core.executor.ArchTaskExecutor$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(java.lang.String,java.lang.String,java.lang.Character)>":["<java.lang.String: char[] toCharArray()>","<com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>","<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>"],"<org.bitcoinj.wallet.Wallet: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void <clinit>()>"],"<org.spongycastle.asn1.ASN1Set: byte[] getEncoded(org.spongycastle.asn1.ASN1Encodable)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.io.ByteArrayOutputStream: void <init>()>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>","<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier fromOctetString(byte[])>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(byte[])>","<org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>","<org.spongycastle.asn1.ASN1ObjectIdentifier: byte[] getBody()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>":["<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData: void onInactive()>","<de.schildbach.wallet.data.TimeLiveData: void onActive()>","<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void onActive()>","<androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>","<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void onInactive()>","<de.schildbach.wallet.data.AbstractWalletLiveData: void onActive()>","<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData: void onActive()>","<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void onInactive()>","<de.schildbach.wallet.data.TimeLiveData: void onInactive()>","<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void onActive()>","<de.schildbach.wallet.data.AbstractWalletLiveData: void onInactive()>"],"<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int read(byte[],int,int)>":["<java.lang.Math: int min(int,int)>","<java.io.FilterInputStream: int read(byte[],int,int)>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: sun.misc.Unsafe run()>":["<java.lang.NoSuchFieldError: void <init>(java.lang.String)>","<java.lang.Class: boolean isInstance(java.lang.Object)>","<java.lang.Class: java.lang.Object cast(java.lang.Object)>","<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>"],"<com.google.common.base.Platform$JdkPatternCompiler: void <init>(com.google.common.base.Platform$1)>":["<com.google.common.base.Platform$JdkPatternCompiler: void <init>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void maybeMarkCurrentKeyAsUsed(org.bitcoinj.crypto.DeterministicKey)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.DeterministicKey freshKey(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.util.EnumMap: java.util.Set entrySet()>","<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension getDefaultInstanceForType()>"],"<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>":["<androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <clinit>()>":["<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <clinit>()>"],"<com.google.protobuf.UninitializedMessageException: void <init>(java.util.List)>":["<com.google.protobuf.UninitializedMessageException: java.lang.String buildDescription(java.util.List)>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo build()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo buildPartial()>"],"<com.google.protobuf.TextFormat: int parseUInt32(java.lang.String)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: long parseInteger(java.lang.String,boolean,boolean)>"],"<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>":["<org.slf4j.helpers.NOPLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>","<org.slf4j.helpers.SubstituteLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>","<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>","<org.slf4j.LoggerFactory: void <clinit>()>","<ch.qos.logback.classic.LoggerContext: org.slf4j.Logger getLogger(java.lang.String)>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date innerGetEndOfThisPeriod(java.util.Calendar,ch.qos.logback.core.rolling.helper.PeriodicityType,java.util.Date)>":["<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date innerGetEndOfNextNthPeriod(java.util.Calendar,ch.qos.logback.core.rolling.helper.PeriodicityType,java.util.Date,int)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onEmptyWalletFailed()>":["<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(int)>"],"<java.lang.String: void <init>(byte[],java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.MessageReflection$MergeTarget$ContainerType: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder toBuilder()>":["<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilder(org.bitcoinj.wallet.Protos$Wallet)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<ch.qos.logback.core.status.StatusUtil: boolean containsMatch(long,int,java.lang.String)>":["<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusList()>","<ch.qos.logback.core.status.StatusUtil: java.util.List filterStatusListByTimeThreshold(java.util.List,long)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$18$1)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.crypto.engines.AESFastEngine: void encryptBlock(int[][])>":["<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>"],"<com.google.protobuf.LazyStringArrayList: boolean addAll(int,java.util.Collection)>":["<com.google.protobuf.UnmodifiableLazyStringList: java.util.List getUnderlyingElements()>","<com.google.protobuf.LazyStringArrayList: java.util.List getUnderlyingElements()>","<java.util.ArrayList: boolean addAll(int,java.util.Collection)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>"],"<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: void setCreationTimeSeconds(long)>","<org.bitcoinj.crypto.DeterministicHierarchy: void <init>(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.wallet.DeterministicSeed: byte[] getSeedBytes()>","<org.bitcoinj.wallet.DeterministicKeyChain: int calcDefaultLookaheadThreshold()>","<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey createMasterPrivateKey(byte[])>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>","<org.bitcoinj.wallet.DeterministicKeyChain: com.google.common.collect.ImmutableList getAccountPath()>","<org.bitcoinj.wallet.DeterministicSeed: boolean isEncrypted()>","<com.google.common.collect.RegularImmutableList: int size()>","<org.bitcoinj.wallet.DeterministicKeyChain: void addToBasicChain(org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.wallet.DeterministicKeyChain: void initializeHierarchyUnencrypted(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.BasicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter)>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.wallet.DeterministicSeed: long getCreationTimeSeconds()>"],"<com.google.common.base.Joiner: java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[])>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.Joiner$3: void <init>(java.lang.Object[],java.lang.Object,java.lang.Object)>"],"<ch.qos.logback.core.android.AndroidContextUtil: void <init>()>":["<ch.qos.logback.core.android.AndroidContextUtil: android.content.ContextWrapper getContext()>","<ch.qos.logback.core.android.AndroidContextUtil: void <init>(android.content.ContextWrapper)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstance()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.Event: de.schildbach.wallet.ui.Event simple()>","<de.schildbach.wallet.ui.scan.ScanActivity: void maybeOpenCamera()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL)>":["<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void <init>()>","<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context)>","<ch.qos.logback.core.ContextBase: void putObject(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void setMainURL(java.net.URL)>","<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstanceForType()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getName()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$1: org.bitcoinj.wallet.Protos$DeterministicKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<ch.qos.logback.core.joran.action.Action: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<okhttp3.RealCall: okhttp3.Response execute()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okhttp3.EventListener: void callStart(okhttp3.Call)>","<okhttp3.RealCall: void captureCallStackTrace()>","<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>","<okhttp3.RealCall: java.io.IOException timeoutExit(java.io.IOException)>","<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>","<okio.AsyncTimeout: void enter()>","<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>","<okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)>","<java.io.IOException: void <init>(java.lang.String)>","<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>"],"<org.slf4j.event.EventRecodingLogger: void error(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture: java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable)>":["<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>","<java.util.concurrent.CancellationException: void <init>(java.lang.String)>"],"<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<org.bitcoinj.wallet.BasicKeyChain: void importKey(org.bitcoinj.core.ECKey)>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.wallet.BasicKeyChain: void importKeyLocked(org.bitcoinj.core.ECKey)>","<org.bitcoinj.wallet.BasicKeyChain: boolean hasKey(org.bitcoinj.core.ECKey)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: void checkKeyEncryptionStateMatches(org.bitcoinj.core.ECKey)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<org.bitcoinj.wallet.BasicKeyChain: void queueOnKeysAdded(java.util.List)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$11400()>"],"<de.schildbach.wallet.util.Base43: void <clinit>()>":["<java.lang.String: char[] toCharArray()>","<de.schildbach.wallet.util.Base43: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder toBuilder()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilder(org.bitcoin.protocols.payments.Protos$PaymentRequest)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$4: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>":["<android.animation.AnimatorListenerAdapter: void <init>()>"],"<de.schildbach.wallet.service.BootstrapReceiver: void onReceive(android.content.Context,android.content.Intent)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.InactivityNotificationService: void startMaybeShowNotification(android.content.Context)>","<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.service.BlockchainService: void scheduleStart(de.schildbach.wallet.WalletApplication)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<de.schildbach.wallet.service.UpgradeWalletService: void <clinit>()>","<de.schildbach.wallet.service.UpgradeWalletService: void startUpgrade(android.content.Context)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.service.BootstrapReceiver: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()>":["<android.app.Activity: android.view.Window getWindow()>"],"<androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)>":["<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder access$17100()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder create()>"],"<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void <init>(ch.qos.logback.core.rolling.helper.FileNamePattern,ch.qos.logback.core.rolling.helper.RollingCalendar)>":["<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: boolean computeParentCleaningFlag(ch.qos.logback.core.rolling.helper.FileNamePattern)>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture: java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable)>","<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>"],"<java.lang.StringBuffer: char charAt(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.params.ECPublicKeyParameters: void <init>(org.spongycastle.math.ec.ECPoint,org.spongycastle.crypto.params.ECDomainParameters)>":["<org.spongycastle.crypto.params.ECKeyParameters: void <init>(boolean,org.spongycastle.crypto.params.ECDomainParameters)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>","<java.lang.ref.ReferenceQueue: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$Tag$Builder: void maybeForceBuilderInitialization()>"],"<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int doFinal(byte[],int)>":["<org.spongycastle.crypto.BufferedBlockCipher: void reset()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>","<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>","<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>","<org.spongycastle.crypto.paddings.PKCS7Padding: int padCount(byte[])>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.paddings.PKCS7Padding: int addPadding(byte[],int)>","<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$11500()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$1: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Type$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<org.bitcoinj.core.ECKey: org.bitcoinj.crypto.LazyECPoint compressPoint(org.bitcoinj.crypto.LazyECPoint)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint compressPoint(org.spongycastle.math.ec.ECPoint)>","<org.bitcoinj.crypto.LazyECPoint: org.spongycastle.math.ec.ECPoint get()>","<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECPoint)>","<org.bitcoinj.crypto.LazyECPoint: boolean isCompressed()>"],"<ch.qos.logback.core.recovery.RecoveryCoordinator: long getCurrentTime()>":["<java.lang.System: long currentTimeMillis()>","<ch.qos.logback.core.recovery.RecoveryCoordinator: void <clinit>()>","<java.lang.System: void <clinit>()>"],"<ch.qos.logback.classic.Level: void <clinit>()>":["<java.lang.Integer: void <clinit>()>","<ch.qos.logback.classic.Level: void <init>(int,java.lang.String)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<com.google.protobuf.Internal: java.lang.String toStringUtf8(byte[])>":["<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.String: void <clinit>()>","<java.lang.String: void <init>(byte[],java.lang.String)>"],"<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <clinit>()>":["<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <clinit>()>","<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.Block: void addTransaction(org.bitcoinj.core.Transaction,boolean)>":["<org.bitcoinj.core.Message: void adjustLength(int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.bitcoinj.core.Block: void unCacheTransactions()>","<java.util.ArrayList: void <init>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean isCoinBase()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder access$6500()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance()>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <clinit>()>"],"<ch.qos.logback.classic.Logger: void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>":["<ch.qos.logback.classic.spi.LoggingEvent: void setMarker(org.slf4j.Marker)>","<ch.qos.logback.classic.Logger: void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent)>","<ch.qos.logback.classic.spi.LoggingEvent: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])>"],"<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script getDefaultInstanceForType()>"],"<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int)>":["<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.PeerGroup: org.slf4j.Logger access$200()>":["<org.bitcoinj.core.PeerGroup: void <clinit>()>"],"<org.bitcoinj.utils.MonetaryFormat: java.lang.CharSequence format(org.bitcoinj.core.Monetary)>":["<org.bitcoinj.core.Coin: int smallestUnitExponent()>","<org.bitcoinj.utils.Fiat: long getValue()>","<java.lang.Character: boolean isDigit(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.Coin: long getValue()>","<com.google.common.math.LongMath: long checkedPow(long,int)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.utils.MonetaryFormat: java.lang.String code()>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder insert(int,long)>","<com.google.common.math.LongMath: long checkedMultiply(long,long)>","<java.lang.StringBuilder: void setCharAt(int,char)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.lang.Character: void <clinit>()>","<com.google.common.math.LongMath: void <clinit>()>","<com.google.common.math.LongMath: long divide(long,long,java.math.RoundingMode)>","<java.lang.StringBuilder: void setLength(int)>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: int length()>","<org.bitcoinj.utils.Fiat: int smallestUnitExponent()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: char charAt(int)>","<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.String: void <clinit>()>","<java.lang.Math: long abs(long)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"],"<java.lang.String: java.lang.String toLowerCase()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)>":["<java.lang.Object: void <init>()>","<java.util.HashMap: java.util.Set entrySet()>","<java.util.HashMap: void <init>()>","<java.util.ArrayList: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>":["<java.io.ByteArrayOutputStream: void write(byte[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.ByteArrayOutputStream: void <init>()>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void <init>()>":["<java.util.ArrayList: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>":["<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>","<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<dummyMainClass: androidx.lifecycle.ProcessLifecycleOwnerInitializer dummyMainMethod_androidx_lifecycle_ProcessLifecycleOwnerInitializer(android.content.Intent)>":["<androidx.lifecycle.ProcessLifecycleOwnerInitializer: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: void <init>()>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: int delete(android.net.Uri,java.lang.String,java.lang.String[])>","<java.lang.String: void <clinit>()>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: java.lang.String getType(android.net.Uri)>"],"<org.bitcoinj.crypto.HDKeyDerivation: void assertLessThanN(java.math.BigInteger,java.lang.String)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>","<org.bitcoinj.crypto.HDDerivationException: void <init>(java.lang.String)>","<java.math.BigInteger: int compareTo(java.math.BigInteger)>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Sha256Hash getLastBlockSeenHash()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.common.collect.Maps$EntryFunction$1: void <init>(java.lang.String,int)>":["<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int,com.google.common.collect.Maps$1)>"],"<de.schildbach.wallet.ui.InputParser$StringInputParser: void <init>(java.lang.String)>":["<de.schildbach.wallet.ui.InputParser: void <init>()>"],"<java.lang.String: java.lang.String valueOf(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.hash.AbstractHashFunction: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.AddressBookActivity: void start(android.content.Context)>":["<android.app.Activity: void startActivity(android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaDigit()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaDigit: void <clinit>()>"],"<okio.Buffer: int read(byte[],int,int)>":["<okio.Util: void <clinit>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<okio.SegmentPool: void recycle(okio.Segment)>","<java.lang.Math: int min(int,int)>","<java.lang.System: void <clinit>()>","<okio.Segment: okio.Segment pop()>","<okio.Util: void checkOffsetAndCount(long,long,long)>"],"<androidx.lifecycle.ProcessLifecycleOwner$3: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>":["<androidx.lifecycle.EmptyActivityLifecycleCallbacks: void <init>()>"],"<org.bitcoinj.wallet.Wallet: void clearTransactions()>":["<java.util.HashSet: void clear()>","<java.util.HashMap: void clear()>"],"<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getTCL()>":["<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>","<java.lang.Thread: java.lang.Thread currentThread()>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.CodedInputStream)>":["<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.UnknownFieldSet$Builder: boolean mergeFieldFrom(int,com.google.protobuf.CodedInputStream)>"],"<androidx.fragment.app.FragmentController: void dispatchResume()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchResume()>"],"<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.String getAndroidSystemProperty(java.lang.String)>":["<ch.qos.logback.core.android.SystemPropertiesProxy: java.lang.String get(java.lang.String,java.lang.String)>","<ch.qos.logback.core.android.SystemPropertiesProxy: void <clinit>()>","<ch.qos.logback.core.android.SystemPropertiesProxy: ch.qos.logback.core.android.SystemPropertiesProxy getInstance()>"],"<androidx.room.RoomDatabase$MigrationContainer: void addMigration(androidx.room.migration.Migration)>":["<android.util.Log: int w(java.lang.String,java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<androidx.collection.SparseArrayCompat: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>","<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>","<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.collection.SparseArrayCompat: void <init>()>"],"<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>":["<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<ch.qos.logback.core.encoder.EncoderBase: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder create()>":["<org.bitcoinj.wallet.Protos$Tag$Builder: void <init>()>"],"<com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableCollection createValues()>":["<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: void <init>(java.lang.Object[],int,int)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$2100()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.squareup.okhttp.internal.RouteDatabase: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.LinkedHashSet: void <init>()>"],"<org.bitcoinj.wallet.DeterministicSeed: void <init>(byte[],java.util.List,long)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<ch.qos.logback.core.joran.spi.ElementPath: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>()>"],"<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnDestroy()>":["<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>"],"<com.google.common.collect.Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>":["<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable concat(java.lang.Iterable,java.lang.Iterable)>"],"<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>":["<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.CharMatcher$Digit: char[] nines()>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>"],"<org.spongycastle.asn1.DERSetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<java.io.IOException: java.lang.String getMessage()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>","<org.spongycastle.asn1.DERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>"],"<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger getEventRecordingLogger()>":["<org.slf4j.event.EventRecodingLogger: void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue)>"],"<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.BackStackRecord$Op: void <init>(int,androidx.fragment.app.Fragment)>","<androidx.fragment.app.BackStackRecord: void addOp(androidx.fragment.app.BackStackRecord$Op)>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentFromMe(org.bitcoinj.core.TransactionBag)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.Wallet: java.util.Map getTransactionPool(org.bitcoinj.wallet.WalletTransaction$Pool)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>"],"<org.bitcoinj.store.SPVBlockStore$2: void <init>(org.bitcoinj.store.SPVBlockStore)>":["<java.util.LinkedHashMap: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput buildPartial()>"],"<de.schildbach.wallet.ui.ExchangeRatesActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<android.app.Activity: void setContentView(int)>"],"<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>":["<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <init>(java.lang.String,int)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueOptions)>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder setDeprecated(boolean)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: boolean hasDeprecated()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: boolean getDeprecated()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: java.util.List access$17500(com.google.protobuf.DescriptorProtos$EnumValueOptions)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.IntegerTokenConverter getIntegerTokenConverter()>":["<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>"],"<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>":["<java.lang.Object: void <init>()>","<java.lang.StringBuffer: void <init>()>"],"<okhttp3.Dns$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$DescriptorProto)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureNestedTypeIsMutable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getFieldFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: boolean hasName()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.lang.Object access$4000(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getNestedTypeFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureExtensionIsMutable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4100(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4400(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4300(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getOneofDeclFieldBuilder()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureOneofDeclIsMutable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstance()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4200(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionRangeFieldBuilder()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4600(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: boolean hasOptions()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureEnumTypeIsMutable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4500(com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureFieldIsMutable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureExtensionRangeIsMutable()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>":["<java.util.LinkedList: java.lang.Object[] toArray()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>","<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>","<com.google.common.collect.RegularImmutableList: boolean isPartialView()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asList()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<java.util.ArrayList: java.lang.Object[] toArray()>","<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>","<com.google.common.collect.ImmutableList$SubList: boolean isPartialView()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder newBuilder()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder access$1300()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addTransactionInput(org.bitcoinj.wallet.Protos$TransactionInput$Builder)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureTransactionInputIsMutable()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput build()>"],"<org.bitcoinj.core.TransactionInput$ConnectionResult: void <clinit>()>":["<org.bitcoinj.core.TransactionInput$ConnectionResult: void <clinit>()>","<org.bitcoinj.core.TransactionInput$ConnectionResult: void <init>(java.lang.String,int)>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat negativeSign(char)>":["<java.lang.Character: boolean isDigit(char)>","<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<java.lang.Character: void <clinit>()>"],"<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>":["<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>"],"<com.google.protobuf.CodedInputStream: void <init>(byte[],int,int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15000()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$Output getOutputs(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.spongycastle.asn1.DefiniteLengthInputStream: void <clinit>()>":["<org.spongycastle.asn1.DefiniteLengthInputStream: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.DeterministicSeed: byte[] getMnemonicAsBytes()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: java.lang.String join(java.lang.Iterable)>","<com.google.common.base.Charsets: void <clinit>()>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<com.google.protobuf.UnknownFieldSet: void <init>(java.util.Map,com.google.protobuf.UnknownFieldSet$1)>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder getFieldBuilder(int)>","<java.util.AbstractMap: boolean isEmpty()>"],"<com.lambdaworks.jni.Platform$OS: void <init>(java.lang.String,int,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Enum: void <init>(java.lang.String,int)>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<java.lang.RuntimeException: void <init>()>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener: void <init>(android.view.View)>":["<android.animation.AnimatorListenerAdapter: void <init>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,java.lang.String,java.lang.String)>":["<de.schildbach.wallet.offline.DirectPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void <init>()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.spongycastle.asn1.x9.X9ObjectIdentifiers: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)>","<org.spongycastle.asn1.x9.X9ObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<org.bitcoinj.core.ChildMessage: void unCache()>":["<org.bitcoinj.core.Block: void unCache()>","<org.bitcoinj.core.Transaction: void unCache()>","<org.bitcoinj.core.Message: void unCache()>"],"<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>()>":["<java.lang.SecurityManager: void <init>()>"],"<androidx.collection.ContainerHelpers: int idealIntArraySize(int)>":["<androidx.collection.ContainerHelpers: int idealByteArraySize(int)>","<androidx.collection.ContainerHelpers: void <clinit>()>"],"<com.google.protobuf.DynamicMessage: java.util.Map getAllFields()>":["<com.google.protobuf.FieldSet: java.util.Map getAllFields()>"],"<ch.qos.logback.core.ContextBase: void initCollisionMaps()>":["<ch.qos.logback.core.ContextBase: void putObject(java.lang.String,java.lang.Object)>","<java.util.HashMap: void <init>()>"],"<org.bitcoinj.uri.BitcoinURI: java.lang.Object getParameterByName(java.lang.String)>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>"],"<androidx.lifecycle.ClassesInfoCache: void <clinit>()>":["<androidx.lifecycle.ClassesInfoCache: void <init>()>","<androidx.lifecycle.ClassesInfoCache: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$10300()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain upgradeToDeterministic(long,org.spongycastle.crypto.params.KeyParameter)>":["<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>","<org.bitcoinj.wallet.AllRandomKeysRotating: void <init>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findOldestKeyAfter(long)>","<java.util.LinkedList: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(byte[],java.lang.String,long)>","<java.util.LinkedList: boolean isEmpty()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.DeterministicKeyChain: org.bitcoinj.wallet.DeterministicKeyChain toEncrypted(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<org.bitcoinj.wallet.DeterministicUpgradeRequiresPassword: void <init>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: int numKeys()>"],"<com.squareup.moshi.CollectionJsonAdapter: void <clinit>()>":["<com.squareup.moshi.CollectionJsonAdapter: void <clinit>()>","<com.squareup.moshi.CollectionJsonAdapter$1: void <init>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onAttach(android.content.Context)>":["<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>","<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>","<de.schildbach.wallet.ui.AbstractWalletActivity: de.schildbach.wallet.WalletApplication getWalletApplication()>","<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>","<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean isInitialized()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasSerializedPaymentDetails()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address freshReceiveAddress()>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address freshAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <clinit>()>"],"<androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<androidx.recyclerview.widget.OrientationHelper$2: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getFieldFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.core.PeerGroup: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<de.schildbach.wallet.util.CrashReporter: void init(java.io.File)>":["<de.schildbach.wallet.util.CrashReporter$ExceptionHandler: void <init>(java.lang.Thread$UncaughtExceptionHandler)>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.io.File,java.lang.String)>","<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>"],"<com.google.common.util.concurrent.Uninterruptibles: void awaitUninterruptibly(java.util.concurrent.CountDownLatch)>":["<java.lang.Thread: void interrupt()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.util.concurrent.CountDownLatch: void await()>"],"<org.bitcoinj.core.BitcoinSerializer: org.bitcoinj.core.Transaction makeTransaction(byte[],int,int,byte[])>":["<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrapReversed(byte[])>","<org.bitcoinj.core.Transaction: void setHash(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>"],"<com.google.common.io.ByteStreams$1: void <init>()>":["<java.io.OutputStream: void <init>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void createAndActivateNewHDChain()>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: void addAndActivateHDChain(org.bitcoinj.wallet.DeterministicKeyChain)>","<java.security.SecureRandom: void <init>()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(java.security.SecureRandom)>"],"<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>","<com.google.common.io.BaseEncoding: byte[] decodeChecked(java.lang.CharSequence)>"],"<com.google.protobuf.Descriptors$DescriptorPool: void addEnumValueByNumber(com.google.protobuf.Descriptors$EnumValueDescriptor)>":["<com.google.protobuf.Descriptors$EnumValueDescriptor: int getNumber()>","<com.google.protobuf.Descriptors$DescriptorPool$DescriptorIntPair: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,int)>","<com.google.protobuf.Descriptors$EnumValueDescriptor: com.google.protobuf.Descriptors$EnumDescriptor getType()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.lifecycle.ViewModelStore: void <init>()>","<androidx.fragment.app.Fragment: android.content.Context getContext()>"],"<com.google.protobuf.UnknownFieldSet: int hashCode()>":["<java.util.AbstractMap: int hashCode()>"],"<de.schildbach.wallet.ui.AddressAndLabel: void <clinit>()>":["<de.schildbach.wallet.ui.AddressAndLabel: void <clinit>()>","<de.schildbach.wallet.ui.AddressAndLabel$1: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type valueOf(int)>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture: void complete(com.google.common.util.concurrent.AbstractFuture)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractTransformFuture: void afterDone()>","<com.google.common.util.concurrent.AggregateFuture: void afterDone()>","<com.google.common.util.concurrent.AbstractFuture: void afterDone()>","<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener clearListeners(com.google.common.util.concurrent.AbstractFuture$Listener)>","<com.google.common.util.concurrent.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.util.concurrent.AbstractFuture: void releaseWaiters()>","<com.google.common.util.concurrent.TrustedListenableFutureTask: void afterDone()>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.util.WalletUtils$MonospaceSpan: void <init>()>":["<android.text.style.TypefaceSpan: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$8700()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.util.concurrent.Service$State$4: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.classic.android.LogcatAppender: void <init>()>":["<ch.qos.logback.core.UnsynchronizedAppenderBase: void <init>()>"],"<org.bitcoinj.wallet.BasicKeyChain: void addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener,java.util.concurrent.Executor)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.service.UpgradeWalletService: void <clinit>()>":["<de.schildbach.wallet.service.UpgradeWalletService: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData verifyPaymentRequestPki(org.bitcoin.protocols.payments.Protos$PaymentRequest,java.security.KeyStore)>":["<java.security.Signature: java.security.Signature getInstance(java.lang.String)>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPkiData: void <init>(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>","<org.bitcoinj.crypto.X509Utils: java.lang.String getDisplayNameFromCertificate(java.security.cert.X509Certificate,boolean)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.ByteString: byte[] toByteArray()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getPkiData()>","<com.google.protobuf.LiteralByteString: java.io.InputStream newInput()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: java.util.List getCertificateList()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: int getCertificateCount()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>","<java.util.ArrayList: java.lang.Object get(int)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates parseFrom(com.google.protobuf.ByteString)>","<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.Exception,java.util.List)>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPkiData: void <init>(java.lang.Exception)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setSignature(com.google.protobuf.ByteString)>","<com.google.protobuf.ByteString: void <clinit>()>","<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder toBuilder()>","<org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData: void <init>(java.lang.String,java.security.PublicKey,java.security.cert.TrustAnchor,org.bitcoinj.protocols.payments.PaymentProtocol$1)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getSignature()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest build()>","<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPkiType: void <init>(java.lang.String)>","<com.google.protobuf.AbstractMessageLite: byte[] toByteArray()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.Exception)>"],"<java.lang.StringBuffer: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.DERExternalParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Utils: boolean isWindows()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.System: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: boolean isAtEnd()>":["<com.google.protobuf.CodedInputStream: boolean tryRefillBuffer(int)>"],"<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.spongycastle.math.ec.ECPoint)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.math.BigInteger: boolean equals(java.lang.Object)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECPoint)>"],"<com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>":["<com.google.common.math.IntMath$1: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.math.RoundingMode: void <clinit>()>","<java.lang.Math: int abs(int)>","<com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>","<java.lang.AssertionError: void <init>()>","<java.lang.ArithmeticException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$8: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.Maps$EntryFunction: void <clinit>()>":["<com.google.common.collect.Maps$EntryFunction: void <clinit>()>","<com.google.common.collect.Maps$EntryFunction$2: void <init>(java.lang.String,int)>","<com.google.common.collect.Maps$EntryFunction$1: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$X509Certificates)>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: java.util.List access$4600(org.bitcoin.protocols.payments.Protos$X509Certificates)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: void ensureCertificateIsMutable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<okhttp3.RealCall$1: void timedOut()>":["<okhttp3.RealCall: void cancel()>"],"<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.core.Address getToAddressOfSent(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.Constants: void <clinit>()>"],"<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void <init>()>":["<android.database.Observable: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.ECKey: void <init>()>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.core.ECKey: void <init>(java.security.SecureRandom)>"],"<androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>":["<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>":["<de.schildbach.wallet.ui.scan.ScanActivity: void maybeOpenCamera()>"],"<de.schildbach.wallet.data.PaymentIntent: boolean isHttpPaymentRequestUrl()>":["<de.schildbach.wallet.util.GenericUtils: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getPaymentUrl()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<org.spongycastle.crypto.engines.AESFastEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.crypto.engines.AESFastEngine: int[][] generateWorkingKey(byte[],boolean)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1: void <init>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void initFields()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>":["<com.google.protobuf.SingleFieldBuilder: void markDirty()>"],"<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.store.SPVBlockStore: void initNewStore(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.store.SPVBlockStore: void setRingCursor(java.nio.ByteBuffer,int)>","<java.lang.String: byte[] getBytes(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.Block: java.math.BigInteger getWork()>","<org.bitcoinj.core.StoredBlock: void <clinit>()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Block cloneAsHeader()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.StoredBlock: void <init>(org.bitcoinj.core.Block,java.math.BigInteger,int)>","<org.bitcoinj.store.SPVBlockStore: void put(org.bitcoinj.core.StoredBlock)>","<org.bitcoinj.store.SPVBlockStore: void setChainHead(org.bitcoinj.core.StoredBlock)>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block getGenesisBlock()>"],"<com.google.protobuf.AbstractMessage: boolean compareBytes(java.lang.Object,java.lang.Object)>":["<com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>","<java.util.Arrays: boolean equals(byte[],byte[])>","<com.google.protobuf.AbstractMessage: com.google.protobuf.ByteString toByteString(java.lang.Object)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean isValidIdentifier(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: boolean access$500()>":["<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$17: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,org.bitcoinj.wallet.SendRequest,org.bitcoinj.core.Coin)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentController: void dispatchPause()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchPause()>"],"<java.lang.Character: int charCount(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPkiType: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Wallet$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: java.lang.String getMemo()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Double: boolean isNaN(double)>","<java.lang.System: void <clinit>()>","<java.security.GeneralSecurityException: void <init>(java.lang.String)>","<java.lang.Double: void <clinit>()>","<java.lang.Math: double ceil(double)>","<java.lang.Math: double pow(double,double)>"],"<com.google.common.util.concurrent.Monitor: void <init>(boolean)>":["<java.lang.Object: void <init>()>","<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>"],"<org.bitcoinj.wallet.Protos$Wallet: int getTransactionSignersCount()>":["<java.util.ArrayList: int size()>"],"<androidx.fragment.app.Fragment: void performStart()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.Fragment: void onStart()>","<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchStart()>"],"<org.spongycastle.crypto.params.ECKeyParameters: void <init>(boolean,org.spongycastle.crypto.params.ECDomainParameters)>":["<org.spongycastle.crypto.params.AsymmetricKeyParameter: void <init>(boolean)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setSerializedPaymentDetails(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$EncryptedData$1: org.bitcoinj.wallet.Protos$EncryptedData parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.io.BaseEncoding$Alphabet: boolean hasLowerCase()>":["<com.google.common.base.Ascii: boolean isLowerCase(char)>"],"<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)>":["<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>"],"<com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<java.lang.Object: java.lang.Object clone()>","<java.util.Collections: void <clinit>()>"],"<com.google.common.collect.Iterators$ConcatenatedIterator: void <init>(java.util.Iterator)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void handleSweep()>":["<org.bitcoinj.wallet.SendRequest: org.bitcoinj.wallet.SendRequest emptyWallet(org.bitcoinj.core.Address)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void sendCoinsOffline(org.bitcoinj.wallet.SendRequest)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void setState(de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>","<de.schildbach.wallet.ui.send.FeeCategory: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment,org.bitcoinj.wallet.Wallet,android.os.Handler)>","<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.Wallet getWallet()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address freshReceiveAddress()>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void <init>()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<com.google.protobuf.LazyStringArrayList: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstance()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder access$1400()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchPause()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<ch.qos.logback.core.pattern.parser.Compiler: void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>":["<android.content.IntentFilter: int countActions()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: void <init>(android.content.IntentFilter,android.content.BroadcastReceiver)>","<java.util.ArrayList: void <init>(int)>","<android.content.IntentFilter: java.lang.String getAction(int)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask: void <init>(android.os.Handler)>":["<java.lang.Object: void <init>()>","<android.os.Handler: void <init>(android.os.Looper)>","<android.os.Looper: android.os.Looper myLooper()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.ByteString access$16702(org.bitcoinj.wallet.Protos$TransactionSigner,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionSigner: int access$16802(org.bitcoinj.wallet.Protos$TransactionSigner,int)>","<org.bitcoinj.wallet.Protos$TransactionSigner: java.lang.Object access$16602(org.bitcoinj.wallet.Protos$TransactionSigner,java.lang.Object)>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<org.bitcoinj.wallet.SendRequest: java.lang.String toString()>":["<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)>","<com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper omitNullValues()>","<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>"],"<com.google.common.util.concurrent.MoreExecutors$5: void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: java.util.List getFragments()>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.lang.Object clone()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.lambdaworks.jni.JarLibraryLoader: void <init>()>":["<com.lambdaworks.jni.JarLibraryLoader: void <init>(java.security.CodeSource,java.lang.String)>","<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>"],"<com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void complete(com.google.common.util.concurrent.AbstractFuture)>","<com.google.common.util.concurrent.AbstractFuture$Failure: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1: void <init>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.BasicKeyChain: java.util.Map serializeToEditableProtobufs()>":["<java.util.LinkedHashMap: void <init>()>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.Protos$Key$Builder serializeEncryptableItem(org.bitcoinj.crypto.EncryptableItem)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<java.util.LinkedHashMap: java.util.Collection values()>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setPublicKey(com.google.protobuf.ByteString)>"],"<okhttp3.CookieJar$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.util.List)>":["<ch.qos.logback.core.joran.JoranConfiguratorBase: void buildInterpreter()>","<ch.qos.logback.core.ContextBase: java.lang.Object getConfigurationLock()>","<ch.qos.logback.core.joran.spi.EventPlayer: void play(java.util.List)>","<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.EventPlayer getEventPlayer()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<com.google.common.collect.MapMakerInternalMap$Strength$2: void <init>(java.lang.String,int)>":["<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.lifecycle.LiveData$LifecycleBoundObserver: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>":["<androidx.lifecycle.LiveData$ObserverWrapper: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)>"],"<androidx.loader.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<ch.qos.logback.core.FileAppender: java.lang.String getAbsoluteFilePath(java.lang.String)>":["<ch.qos.logback.core.util.FileUtil: java.lang.String prefixRelativePath(java.lang.String,java.lang.String)>","<java.io.File: boolean isAbsolute()>","<ch.qos.logback.core.ContextBase: java.lang.String getProperty(java.lang.String)>","<ch.qos.logback.core.util.EnvUtil: boolean isAndroidOS()>","<java.io.File: void <clinit>()>","<ch.qos.logback.core.util.EnvUtil: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstance()>","<com.google.protobuf.LazyStringArrayList: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstance()>"],"<com.google.protobuf.CodedOutputStream: int computeInt32Size(int,int)>":["<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>","<com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>"],"<org.bitcoinj.wallet.Protos$Transaction$Purpose: org.bitcoinj.wallet.Protos$Transaction$Purpose[] values()>":["<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureServiceIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPublicOnly(byte[])>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>","<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.spongycastle.math.ec.ECPoint)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$1: org.bitcoinj.wallet.Protos$ScryptParameters parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.HDKeyDerivation$1: void <clinit>()>":["<org.bitcoinj.crypto.HDKeyDerivation$1: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode[] values()>","<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <clinit>()>","<java.lang.Enum: int ordinal()>"],"<dummyMainClass: de.schildbach.wallet.ui.send.SendCoinsActivity dummyMainMethod_de_schildbach_wallet_ui_send_SendCoinsActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDetach()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsActivity: boolean onCreateOptionsMenu(android.view.Menu)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onResume()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<androidx.fragment.app.Fragment: void onStart()>","<de.schildbach.wallet.ui.send.SendCoinsActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsActivity: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onResume()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDestroyView()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onPause()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void onStop()>","<de.schildbach.wallet.ui.send.SendCoinsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDestroy()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onCreate(android.os.Bundle)>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>":["<java.lang.Object: void <init>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: void notifyCoinsReceived(org.bitcoinj.core.Address,org.bitcoinj.core.Coin,org.bitcoinj.core.Sha256Hash)>":["<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)>","<android.net.Uri: android.net.Uri parse(java.lang.String)>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.LinkedList: boolean isEmpty()>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.app.PendingIntent: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>","<java.util.LinkedList: java.util.Iterator iterator()>","<android.content.Intent: void <clinit>()>","<java.lang.System: long currentTimeMillis()>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>","<android.net.Uri: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)>","<java.lang.StringBuilder: int length()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<java.util.LinkedList: boolean contains(java.lang.Object)>","<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>","<java.lang.System: void <clinit>()>","<android.app.Service: java.lang.String getString(int,java.lang.Object[])>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)>","<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,java.lang.String)>","<android.app.Service: java.lang.String getPackageName()>"],"<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>":["<java.io.PrintWriter: void print(java.lang.String)>","<java.io.PrintWriter: void println(boolean)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.ArrayList: boolean isEmpty()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.io.PrintWriter: void println(java.lang.Object)>","<java.io.PrintWriter: void println(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.io.PrintWriter: void print(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<com.google.common.net.InetAddresses: byte[] textToNumericFormatV6(java.lang.String)>":["<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>","<java.lang.String: int length()>","<com.google.common.net.InetAddresses: void <clinit>()>","<com.google.common.net.InetAddresses: short parseHextet(java.lang.String)>"],"<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.protocols.payments.PaymentSession: byte[] getMerchantData()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.ByteString getMerchantData()>","<com.google.protobuf.ByteString: byte[] toByteArray()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasMerchantData()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureWeakDependencyIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: void maybeForceBuilderInitialization()>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector)>","<java.util.HashMap: java.util.Set keySet()>"],"<org.spongycastle.asn1.DLSequence: int getBodyLength()>":["<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>"],"<ch.qos.logback.core.pattern.LiteralConverter: void <init>(java.lang.String)>":["<ch.qos.logback.core.pattern.Converter: void <init>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher none()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$None: void <clinit>()>"],"<org.spongycastle.crypto.digests.SHA512Digest: void reset()>":["<org.spongycastle.crypto.digests.LongDigest: void reset()>"],"<androidx.fragment.app.BackStackRecord: boolean isEmpty()>":["<java.util.ArrayList: boolean isEmpty()>"],"<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>":["<java.lang.NullPointerException: void <init>()>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.protobuf.RepeatedFieldBuilder: void onChanged()>","<com.google.common.collect.RegularImmutableList: int size()>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.protobuf.RepeatedFieldBuilder: void ensureMutableMessageList()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>","<com.google.protobuf.RepeatedFieldBuilder: void incrementModCounts()>","<java.util.ArrayList: int size()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>"],"<ch.qos.logback.core.ContextBase: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>":["<ch.qos.logback.core.util.ExecutorServiceUtil: void <clinit>()>","<ch.qos.logback.core.util.ExecutorServiceUtil: java.util.concurrent.ScheduledExecutorService newScheduledExecutorService()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateView()>":["<de.schildbach.wallet.WalletApplication: int maxConnectedPeers()>","<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bind(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setNextFocusId(int)>","<androidx.fragment.app.Fragment: android.view.View getView()>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>","<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatAddress(org.bitcoinj.core.Address,int,int)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: java.lang.String getString(int)>","<de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem: void <init>(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,boolean)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setEnabled(boolean)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<de.schildbach.wallet.data.AddressBookEntry: java.util.Map asMap(java.util.List)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: android.view.View activeTextView()>","<de.schildbach.wallet.ui.send.FeeCategory: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: java.lang.CharSequence format(org.bitcoinj.core.Monetary)>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean everythingPlausible()>"],"<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent 'from'(java.lang.String,java.lang.String,org.bitcoinj.core.Coin)>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<de.schildbach.wallet.data.PaymentIntent: void <init>(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent$Output[] buildSimplePayTo(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher invisible()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Invisible: void <clinit>()>"],"<de.schildbach.wallet.ui.InputParser: void parseAndHandlePaymentRequest(byte[])>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.WalletActivity$15: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.WalletActivity$14: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.InputParser: void <clinit>()>","<de.schildbach.wallet.ui.InputParser: de.schildbach.wallet.data.PaymentIntent parsePaymentRequest(byte[])>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>"],"<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>":["<com.google.protobuf.CodedOutputStream: void <init>(java.io.OutputStream,byte[])>"],"<com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding omitPadding()>":["<com.google.common.io.BaseEncoding$Base64Encoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>"],"<okhttp3.HttpUrl: boolean equals(java.lang.Object)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<org.bitcoinj.wallet.Protos$EncryptedData: void initFields()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<ch.qos.logback.classic.util.DefaultNestedComponentRules: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>":["<ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>","<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void add(java.lang.Class,java.lang.String,java.lang.Class)>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder access$000()>":["<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder create()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.wallet.DeterministicSeed: void <init>(org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.EncryptedData,long)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder addField(int,com.google.protobuf.UnknownFieldSet$Field)>":["<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.util.TreeMap: void <init>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.util.AbstractMap: boolean isEmpty()>"],"<androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)>":["<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>","<android.os.Bundle: void <init>()>","<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.os.Bundle: void <clinit>()>","<android.util.Log: int e(java.lang.String,java.lang.String)>","<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>"],"<androidx.fragment.app.Fragment: java.lang.String getString(int)>":["<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>"],"<java.lang.String: void <init>(char[],int,int)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.util.Set keySet()>"],"<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>":["<com.google.common.collect.MapMakerInternalMap$Strength$1: com.google.common.base.Equivalence defaultEquivalence()>","<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>","<com.google.common.collect.MapMakerInternalMap$Strength$2: com.google.common.base.Equivalence defaultEquivalence()>","<com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>"],"<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator: void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View)>":["<android.view.animation.AnimationSet: void <init>(boolean)>","<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator: void run()>","<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>"],"<com.google.common.collect.ImmutableMap$Builder: void sortEntries()>":["<java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>","<com.google.common.collect.Maps: com.google.common.base.Function valueFunction()>","<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>","<com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>","<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)>"],"<org.bitcoinj.core.Peer$1: java.lang.Object apply(java.lang.Object)>":["<org.bitcoinj.core.Peer$1: org.bitcoinj.core.Peer apply(java.util.List)>"],"<org.bitcoinj.core.PeerGroup: void setDownloadTxDependencies(int)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.core.PeerGroup$5: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint getPointWithCompression(org.spongycastle.math.ec.ECPoint,boolean)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(boolean)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void initFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$1: void <init>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Peer: java.lang.String toString()>":["<org.bitcoinj.core.PeerSocketHandler: org.bitcoinj.core.PeerAddress getAddress()>","<org.bitcoinj.core.PeerAddress: java.lang.String toString()>"],"<org.bitcoinj.signers.LocalTransactionSigner: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.signers.LocalTransactionSigner: void <clinit>()>","<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>","<org.bitcoinj.script.Script$VerifyFlag: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: void skipRawBytes(int)>":["<com.google.protobuf.CodedInputStream: void skipRawBytesSlowPath(int)>"],"<org.spongycastle.asn1.x509.X509ObjectIdentifiers: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<org.spongycastle.asn1.x509.X509ObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onFailure(java.lang.Exception)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$400(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<java.lang.Throwable: java.lang.String toString()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$500(de.schildbach.wallet.ui.send.SweepWalletFragment,de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>"],"<okhttp3.internal.Util$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.Ticker: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$7: void onSuccess(org.bitcoinj.core.ECKey)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: org.slf4j.Logger access$700()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.send.SweepWalletViewModel access$100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$800(de.schildbach.wallet.ui.send.SweepWalletFragment,org.bitcoinj.core.ECKey)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>"],"<com.google.common.hash.MessageDigestHashFunction: void <init>(java.lang.String,java.lang.String)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>","<com.google.common.hash.MessageDigestHashFunction: boolean supportsClone(java.security.MessageDigest)>","<com.google.common.hash.AbstractHashFunction: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder setEncryptedPrivateKey(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8800()>"],"<com.google.protobuf.CodedOutputStream: void writeRawBytes(com.google.protobuf.ByteString)>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.CodedOutputStream: void writeRawBytes(com.google.protobuf.ByteString,int,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<androidx.lifecycle.Lifecycle: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int)>":["<com.google.protobuf.CodedInputStream: void <init>(byte[],int,int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>"],"<com.google.common.base.CharMatcher$JavaDigit: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaDigit: void <clinit>()>","<com.google.common.base.CharMatcher$JavaDigit: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.script.Script makeP2SHOutputScript(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.wallet.DeterministicKeyChain)>":["<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createP2SHOutputScript(org.bitcoinj.script.Script)>"],"<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>"],"<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage$Builder newBuilderForType()>":["<com.google.protobuf.DynamicMessage$Builder: void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.DynamicMessage$1)>"],"<com.google.common.base.CharMatcher$JavaLetterOrDigit: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message buildPartial()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange buildPartial()>"],"<de.schildbach.wallet.WalletApplication$3: void <init>(de.schildbach.wallet.WalletApplication,de.schildbach.wallet.WalletApplication$OnWalletLoadedListener)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.FieldSet: java.lang.Object cloneIfMutable(java.lang.Object)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData: void <init>(java.lang.String,java.security.PublicKey,java.security.cert.TrustAnchor,org.bitcoinj.protocols.payments.PaymentProtocol$1)>":["<org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData: void <init>(java.lang.String,java.security.PublicKey,java.security.cert.TrustAnchor)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean isInitialized()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean hasPayment()>","<org.bitcoin.protocols.payments.Protos$Payment: boolean isInitialized()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$Payment getPayment()>"],"<com.google.common.base.CharMatcher$Is: void <init>(char)>":["<com.google.common.base.CharMatcher$FastMatcher: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(com.google.protobuf.Message)>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: int onGetWindowAnimations()>":["<android.app.Activity: android.view.Window getWindow()>"],"<org.bitcoinj.core.Base58: void <clinit>()>":["<org.bitcoinj.core.Base58: void <clinit>()>","<java.lang.String: char[] toCharArray()>","<java.util.Arrays: void fill(int[],int)>"],"<com.google.common.base.Present: void <init>(java.lang.Object)>":["<com.google.common.base.Optional: void <init>()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidgets(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>":["<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>","<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<android.content.ComponentName: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidgets(android.content.Context,android.appwidget.AppWidgetManager,int[],org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>"],"<ch.qos.logback.core.joran.GenericConfigurator: void registerSafeConfiguration(java.util.List)>":["<ch.qos.logback.core.ContextBase: void putObject(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.core.PeerSocketHandler: void close()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.ui.DividerItemDecoration: void setOrientation(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)>":["<java.util.ConcurrentModificationException: void <init>()>","<androidx.collection.SimpleArrayMap: void allocArrays(int)>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$10: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.PeerGroup: void setUserAgent(java.lang.String,java.lang.String,java.lang.String)>":["<org.bitcoinj.core.VersionMessage: void appendToSubVer(java.lang.String,java.lang.String,java.lang.String)>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<org.bitcoinj.core.PeerGroup: void setVersionMessage(org.bitcoinj.core.VersionMessage)>","<org.bitcoinj.core.PeerGroup: void updateVersionMessageRelayTxesBeforeFilter(org.bitcoinj.core.VersionMessage)>","<org.bitcoinj.core.VersionMessage: void <init>(org.bitcoinj.core.NetworkParameters,int)>"],"<org.bitcoinj.protocols.payments.PaymentSession: void parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.util.List getOutputsList()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasSerializedPaymentDetails()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: int getPaymentDetailsVersion()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.NetworkParameters fromPmtProtocolID(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: int getOutputsCount()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidNetwork: void <init>(java.lang.String)>","<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.params.MainNetParams: org.bitcoinj.params.MainNetParams get()>","<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getNetwork()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasNetwork()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getSerializedPaymentDetails()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails build()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: void <clinit>()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString)>","<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>","<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidVersion: void <init>(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidOutputs: void <init>(java.lang.String)>","<org.bitcoinj.params.AbstractBitcoinNetParams: boolean hasMaxMoney()>"],"<org.bitcoinj.wallet.Protos$Extension: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<com.google.protobuf.MessageReflection: void findMissingFields(com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>":["<com.google.protobuf.SmallSortedMap: java.util.Set entrySet()>","<com.google.protobuf.GeneratedMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DynamicMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DynamicMessage: java.util.Map getAllFields()>","<java.lang.String: int length()>","<java.lang.String: void <init>(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DynamicMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.SmallSortedMap$EntrySet: java.util.Iterator iterator()>","<com.google.protobuf.SmallSortedMap$EntryIterator: boolean hasNext()>","<com.google.protobuf.MessageReflection: java.lang.String subMessagePrefix(java.lang.String,com.google.protobuf.Descriptors$FieldDescriptor,int)>","<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.GeneratedMessage: java.util.Map getAllFields()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.MessageReflection: void findMissingFields(com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>","<com.google.protobuf.SmallSortedMap$EntryIterator: java.lang.Object next()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.util.Map getAllFields()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<com.google.protobuf.Descriptors$Descriptor: void access$900(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.DescriptorProtos$DescriptorProto)>":["<com.google.protobuf.Descriptors$Descriptor: void setProto(com.google.protobuf.DescriptorProtos$DescriptorProto)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.slf4j.helpers.Util: boolean safeGetBooleanSystemProperty(java.lang.String)>":["<org.slf4j.helpers.Util: void <clinit>()>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>","<org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaUpperCase()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaUpperCase: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: int importKeys(java.util.List)>":["<org.bitcoinj.wallet.BasicKeyChain: int importKeys(java.util.List)>"],"<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.BERFactory: void <clinit>()>":["<org.spongycastle.asn1.BERFactory: void <clinit>()>","<org.spongycastle.asn1.BERSequence: void <init>()>","<org.spongycastle.asn1.BERSet: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onInsufficientMoney(org.bitcoinj.core.Coin)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$500(de.schildbach.wallet.ui.send.SweepWalletFragment,de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void showInsufficientMoneyDialog()>"],"<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)>":["<androidx.lifecycle.Lifecycling: void <clinit>()>","<java.lang.Object: void <init>()>","<androidx.lifecycle.Lifecycling: androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)>"],"<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>"],"<org.bitcoinj.core.Peer$1: org.bitcoinj.core.Peer apply(java.util.List)>":["<com.google.common.collect.RegularImmutableList: int size()>","<java.util.LinkedList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.ArrayList: int size()>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>"],"<com.lambdaworks.crypto.SCrypt: void salsa20_8(byte[])>":["<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<com.lambdaworks.crypto.SCrypt: int R(int,int)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<okhttp3.RealCall: void captureCallStackTrace()>":["<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>","<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>","<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>","<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>","<okhttp3.internal.platform.Platform: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$8: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,int,org.bitcoinj.core.MessageSerializer,int)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Transaction: void parse()>","<org.bitcoinj.core.TransactionOutput: void parse()>","<org.bitcoinj.core.TransactionOutPoint: void parse()>","<org.bitcoinj.core.BitcoinSerializer: boolean isParseRetainMode()>","<org.bitcoinj.core.Block: void parse()>","<org.bitcoinj.core.TransactionInput: void parse()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean access$10200()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.core.PeerGroup$6: void go()>":["<org.bitcoinj.core.PeerGroup: java.util.Map access$400(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.bitcoinj.core.PeerGroup: int discoverPeers()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.utils.ExponentialBackoff: long getRetryTime()>","<org.bitcoinj.core.PeerGroup: int access$902(org.bitcoinj.core.PeerGroup,int)>","<org.bitcoinj.core.PeerGroup: boolean access$600(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup: boolean access$1300(org.bitcoinj.core.PeerGroup)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer connectTo(org.bitcoinj.core.PeerAddress,boolean,int)>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>","<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer connectToLocalHost()>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.utils.ExponentialBackoff: void trackFailure()>","<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>","<java.util.PriorityQueue: boolean add(java.lang.Object)>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.utils.ExponentialBackoff access$1200(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.Utils: long currentTimeMillis()>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.core.PeerGroup: boolean access$700(org.bitcoinj.core.PeerGroup)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<java.lang.Long: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: int getMaxConnections()>","<org.bitcoinj.core.PeerGroup$6: void run()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.utils.ExponentialBackoff: void trackSuccess()>","<org.bitcoinj.core.PeerGroup: boolean access$800(org.bitcoinj.core.PeerGroup)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.lang.Math: long max(long,long)>","<org.bitcoinj.core.PeerGroup: int access$1400(org.bitcoinj.core.PeerGroup)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<org.bitcoinj.core.PeerGroup: int access$1100(org.bitcoinj.core.PeerGroup)>","<java.util.PriorityQueue: boolean isEmpty()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.PriorityQueue: java.lang.Object peek()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.PeerGroup: java.util.PriorityQueue access$1000(org.bitcoinj.core.PeerGroup)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.PeerGroup: org.slf4j.Logger access$200()>","<java.util.PriorityQueue: java.lang.Object poll()>"],"<org.spongycastle.asn1.sec.SECObjectIdentifiers: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<org.spongycastle.asn1.sec.SECObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)>","<org.spongycastle.asn1.x9.X9ObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<androidx.fragment.app.Fragment: void instantiateChildFragmentManager()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment$2: void <init>(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$2800()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$3: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.offline.AcceptBluetoothService$3: void onChanged(org.bitcoinj.wallet.Wallet)>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void <init>(de.schildbach.wallet.ui.SendCoinsQrActivity,java.lang.String)>":["<de.schildbach.wallet.ui.SendCoinsQrActivity$1$1: void <init>(de.schildbach.wallet.ui.SendCoinsQrActivity$1)>","<de.schildbach.wallet.ui.InputParser$StringInputParser: void <init>(java.lang.String)>"],"<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix()>":["<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String convert(java.lang.Object)>"],"<org.bitcoinj.wallet.Wallet: void queueOnCoinsSent(org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>":["<org.bitcoinj.wallet.Wallet$6: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.Wallet$6: void run()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.data.PaymentIntent$Standard: void <clinit>()>":["<de.schildbach.wallet.data.PaymentIntent$Standard: void <init>(java.lang.String,int)>","<de.schildbach.wallet.data.PaymentIntent$Standard: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest parseFrom(byte[])>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(byte[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.Stopwatch: java.util.concurrent.TimeUnit chooseUnit(long)>":["<java.util.concurrent.TimeUnit: void <clinit>()>"],"<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage$Builder getBuilder()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.SingleFieldBuilder: void onChanged()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message getDefaultInstanceForType()>"],"<androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)>":["<androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)>"],"<androidx.fragment.app.FragmentActivity: void onPostResume()>":["<androidx.fragment.app.FragmentActivity: void onResumeFragments()>","<android.os.Handler: void removeMessages(int)>","<android.app.Activity: void onPostResume()>","<androidx.fragment.app.FragmentController: boolean execPendingActions()>"],"<ch.qos.logback.core.util.COWArrayList: void <init>(java.lang.Object[])>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>","<java.lang.Object: void <init>()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder setName(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$Extension: java.lang.Object access$14502(org.bitcoinj.wallet.Protos$Extension,java.lang.Object)>","<org.bitcoinj.wallet.Protos$Extension: boolean access$14702(org.bitcoinj.wallet.Protos$Extension,boolean)>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.ByteString access$14602(org.bitcoinj.wallet.Protos$Extension,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Extension: int access$14802(org.bitcoinj.wallet.Protos$Extension,int)>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>"],"<com.google.common.collect.MapMakerInternalMap: boolean containsKey(java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: boolean containsKey(java.lang.Object,int)>","<com.google.common.collect.MapMakerInternalMap: int hash(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Script: boolean access$5700()>":["<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()>":["<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureExtensionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>":["<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: org.slf4j.Logger access$500()>":["<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<com.squareup.okhttp.OkHttpClient: void <clinit>()>":["<com.squareup.okhttp.Protocol: void <clinit>()>","<com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>","<com.squareup.okhttp.OkHttpClient$1: void <init>()>","<com.squareup.okhttp.OkHttpClient: void <clinit>()>","<com.squareup.okhttp.internal.Util: void <clinit>()>","<com.squareup.okhttp.ConnectionSpec: void <clinit>()>","<com.squareup.okhttp.internal.Internal: void <clinit>()>"],"<de.schildbach.wallet.util.WalletUtils: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<de.schildbach.wallet.util.WalletUtils$1: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$3: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.core.ECKey$KeyIsEncryptedException)>":["<java.lang.Object: void <init>()>"],"<okhttp3.internal.proxy.NullProxySelector: void <init>()>":["<java.net.ProxySelector: void <init>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.SingleFieldBuilder getExchangeRateFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$ExchangeRate getExchangeRate()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>"],"<de.schildbach.wallet.service.UpgradeWalletService: void maybeUpgradeToSecureChain(org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.service.UpgradeWalletService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.service.BlockchainService: void start(android.content.Context,boolean)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>"],"<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>":["<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>","<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>","<androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>","<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>","<androidx.fragment.app.FragmentManagerImpl: void burpActive()>","<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>"],"<com.google.protobuf.RepeatedFieldBuilder: void clear()>":["<com.google.protobuf.RepeatedFieldBuilder: void incrementModCounts()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.RepeatedFieldBuilder: void onChanged()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet build()>"],"<com.google.common.collect.ImmutableCollection: void <clinit>()>":["<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void loadExtensions(org.bitcoinj.wallet.Wallet,org.bitcoinj.wallet.WalletExtension[],org.bitcoinj.wallet.Protos$Wallet)>":["<org.bitcoinj.wallet.Wallet: void deserializeExtension(org.bitcoinj.wallet.WalletExtension,byte[])>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List getExtensionList()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.util.HashMap: void putAll(java.util.Map)>","<java.util.HashMap: void <init>()>","<org.bitcoinj.wallet.Wallet: java.util.Map getExtensions()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder supportsTlsExtensions(boolean)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder access$300()>":["<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder create()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange build()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>"],"<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>":["<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>","<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.common.util.concurrent.AbstractFuture: boolean cancel(boolean)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>","<java.util.concurrent.CancellationException: void <init>(java.lang.String)>","<com.google.common.util.concurrent.AbstractFuture: void interruptTask()>","<com.google.common.util.concurrent.AbstractFuture: void complete(com.google.common.util.concurrent.AbstractFuture)>"],"<com.google.common.util.concurrent.AbstractExecutionThreadService: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.common.util.concurrent.AbstractExecutionThreadService$1: void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService)>"],"<org.bitcoinj.wallet.Wallet$CompletionException: void <init>()>":["<java.lang.RuntimeException: void <init>()>"],"<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void execute(java.lang.Runnable)>":["<com.google.common.util.concurrent.MoreExecutors$5$1: void run()>","<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void run()>","<org.bitcoinj.core.Peer$2: void run()>","<com.google.common.util.concurrent.Futures$CallbackListener: void run()>","<com.google.common.util.concurrent.AbstractTransformFuture: void run()>","<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void run()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void run()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension buildPartial()>"],"<com.google.common.base.Joiner$3: void <init>(java.lang.Object[],java.lang.Object,java.lang.Object)>":["<java.util.AbstractList: void <init>()>"],"<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String)>":["<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String,boolean)>"],"<de.schildbach.wallet.service.BlockchainService$7: void shutdown()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.data.WalletLiveData access$1300(de.schildbach.wallet.service.BlockchainService)>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture stopAsync()>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.PeerGroup access$2000(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: boolean removeConnectedEventListener(org.bitcoinj.core.listeners.PeerConnectedEventListener)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService: android.os.PowerManager$WakeLock access$2100(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.PeerGroup access$2002(de.schildbach.wallet.service.BlockchainService,org.bitcoinj.core.PeerGroup)>","<de.schildbach.wallet.service.BlockchainService: org.slf4j.Logger access$1200()>","<org.bitcoinj.core.PeerGroup: boolean removeDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener access$2300(de.schildbach.wallet.service.BlockchainService)>","<org.bitcoinj.core.PeerGroup: void removeWallet(org.bitcoinj.wallet.Wallet)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void shutdown()>":["<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.base.Platform: long systemNanoTime()>":["<java.lang.System: long nanoTime()>","<java.lang.System: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.X500NameStyle,org.spongycastle.asn1.x500.RDN[])>":["<org.spongycastle.asn1.ASN1Object: void <init>()>"],"<androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)>":["<androidx.fragment.app.FragmentTransitionImpl$2: void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)>","<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>"],"<java.lang.String: byte[] getBytes(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.BlockChain: void doSetChainHead(org.bitcoinj.core.StoredBlock)>":["<org.bitcoinj.store.SPVBlockStore: void setChainHead(org.bitcoinj.core.StoredBlock)>"],"<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask: void send(org.bitcoin.protocols.payments.Protos$Payment)>":["<de.schildbach.wallet.offline.DirectPaymentTask: android.os.Handler access$300(de.schildbach.wallet.offline.DirectPaymentTask)>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1: void run()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask,org.bitcoin.protocols.payments.Protos$Payment)>"],"<com.lambdaworks.crypto.SCrypt: byte[] scrypt(byte[],byte[],int,int,int,int)>":["<com.lambdaworks.crypto.SCrypt: byte[] scryptN(byte[],byte[],int,int,int,int)>","<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>"],"<com.google.common.collect.ImmutableList$Itr: java.lang.Object get(int)>":["<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object get(int)>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>"],"<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters)>":["<java.util.ArrayList: void <init>()>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<de.schildbach.wallet.ui.WalletActivity$12: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Pool$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void handleLiteralState(char,java.util.List,java.lang.StringBuffer)>":["<ch.qos.logback.core.pattern.parser.TokenStream: void addValuedToken(int,java.lang.StringBuffer,java.util.List)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.TokenStream: void escape(java.lang.String,java.lang.StringBuffer)>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>"],"<de.schildbach.wallet.WalletApplication: void processDirectTransaction(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void receivePending(org.bitcoinj.core.Transaction,java.util.List)>","<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.Wallet getWallet()>","<de.schildbach.wallet.service.BlockchainService: void broadcastTransaction(android.content.Context,org.bitcoinj.core.Transaction)>","<org.bitcoinj.wallet.Wallet: boolean isTransactionRelevant(org.bitcoinj.core.Transaction)>"],"<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatHash(java.lang.String,java.lang.String,int,int,char)>":["<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>","<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>","<android.text.SpannableStringBuilder: void <init>()>","<android.text.SpannableStringBuilder: int length()>","<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>","<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>","<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>","<de.schildbach.wallet.util.WalletUtils$MonospaceSpan: void <init>()>"],"<androidx.lifecycle.ProcessLifecycleOwner$2: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask,org.bitcoinj.wallet.SendRequest)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DeterministicSeed: void <init>(byte[],java.lang.String,long)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<org.bitcoinj.crypto.MnemonicCode: byte[] toSeed(java.util.List,java.lang.String)>","<org.bitcoinj.crypto.MnemonicCode: java.util.List toMnemonic(byte[])>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<okio.AsyncTimeout: void <clinit>()>":["<java.util.concurrent.TimeUnit: void <clinit>()>","<okio.AsyncTimeout: void <clinit>()>","<okio.Timeout: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void commitTx(org.bitcoinj.core.Transaction)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: boolean maybeCommitTx(org.bitcoinj.core.Transaction)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setSource(org.bitcoinj.wallet.Protos$TransactionConfidence$Source)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder setMessage(com.google.protobuf.GeneratedMessage)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.SingleFieldBuilder: void onChanged()>","<com.google.protobuf.GeneratedMessage$Builder: void dispose()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$9: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>":["<java.lang.Object: void <init>()>","<com.google.zxing.qrcode.QRCodeReader: void <init>()>","<com.google.zxing.qrcode.QRCodeReader: void <clinit>()>","<java.util.EnumMap: void <init>(java.lang.Class)>"],"<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void <init>(androidx.arch.core.internal.SafeIterableMap)>","<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.common.base.Equivalence$Equals: void <init>()>":["<com.google.common.base.Equivalence: void <init>()>"],"<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>":["<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>","<java.lang.String: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>","<androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()>","<androidx.collection.SparseArrayCompat: int keyAt(int)>","<androidx.collection.SparseArrayCompat: int size()>","<androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getServiceCount()>":["<java.util.ArrayList: int size()>"],"<com.squareup.okhttp.ConnectionSpec: void <init>(com.squareup.okhttp.ConnectionSpec$Builder)>":["<com.squareup.okhttp.ConnectionSpec$Builder: boolean access$300(com.squareup.okhttp.ConnectionSpec$Builder)>","<java.lang.Object: void <init>()>","<com.squareup.okhttp.ConnectionSpec$Builder: boolean access$000(com.squareup.okhttp.ConnectionSpec$Builder)>","<com.squareup.okhttp.ConnectionSpec$Builder: java.lang.String[] access$100(com.squareup.okhttp.ConnectionSpec$Builder)>","<com.squareup.okhttp.ConnectionSpec$Builder: java.lang.String[] access$200(com.squareup.okhttp.ConnectionSpec$Builder)>"],"<com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>":["<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>","<com.google.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.google.protobuf.ByteString)>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$19300()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureWatchedScriptIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.protobuf.AbstractParser: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.Monitor$Guard: void <init>(com.google.common.util.concurrent.Monitor)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<java.lang.Object: void <init>()>","<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>","<com.google.common.util.concurrent.Monitor: java.util.concurrent.locks.ReentrantLock access$000(com.google.common.util.concurrent.Monitor)>"],"<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: boolean isShutdown()>":["<java.util.concurrent.ScheduledThreadPoolExecutor: boolean isShutdown()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean isValidBranchID(java.lang.String,int)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getDependency(int)>":["<com.google.protobuf.LazyStringArrayList: java.lang.Object get(int)>","<com.google.protobuf.UnmodifiableLazyStringList: java.lang.Object get(int)>"],"<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>":["<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterScrypt: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.EncryptedData: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionMessage: boolean equals(java.lang.Object)>","<java.io.File: boolean equals(java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.LazyECPoint: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<java.math.BigInteger: boolean equals(java.lang.Object)>","<com.google.common.io.BaseEncoding$Alphabet: boolean equals(java.lang.Object)>","<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>"],"<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder cipherSuites(com.squareup.okhttp.CipherSuite[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder cipherSuites(java.lang.String[])>","<java.lang.String: void <clinit>()>"],"<org.bitcoinj.core.WrongNetworkException: void <init>(int,int[])>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.util.Arrays: java.lang.String toString(int[])>","<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.DERIA5String: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint compressPoint(org.spongycastle.math.ec.ECPoint)>":["<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint getPointWithCompression(org.spongycastle.math.ec.ECPoint,boolean)>","<org.bitcoinj.core.ECKey: void <clinit>()>"],"<org.slf4j.helpers.NamedLoggerBase: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>":["<androidx.lifecycle.LiveData: void <clinit>()>","<androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>","<androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$1: void run()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: org.slf4j.Logger access$100()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.squareup.moshi.Moshi$Builder: com.squareup.moshi.Moshi build()>","<java.net.Socket: void connect(java.net.SocketAddress,int)>","<java.util.HashSet: boolean add(java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void onResult(java.util.Set)>","<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.Class)>","<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.util.LinkedList: int size()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okio.Okio: void <clinit>()>","<org.bitcoinj.core.Coin: void <clinit>()>","<okio.RealBufferedSink: void flush()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.util.List access$000(java.io.InputStream)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.String: void <clinit>()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest: void <init>(java.lang.String,java.lang.String[])>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createOutputScript(org.bitcoinj.core.Address)>","<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(okio.BufferedSource)>","<okio.Okio: okio.BufferedSink buffer(okio.Sink)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.IOException: java.lang.String getMessage()>","<org.bitcoinj.core.UTXO: void <init>(org.bitcoinj.core.Sha256Hash,long,org.bitcoinj.core.Coin,int,boolean,org.bitcoinj.script.Script)>","<okio.Okio: okio.Source source(java.net.Socket)>","<java.util.HashSet: void <init>()>","<java.lang.Integer: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void onFail(int,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Throwable: java.lang.String getMessage()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<okio.Okio: okio.Sink sink(java.net.Socket)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.Constants: void <clinit>()>","<java.util.Random: int nextInt(int)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: javax.net.ssl.SSLSocketFactory access$200(de.schildbach.wallet.ui.send.RequestWalletBalanceTask)>","<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>","<java.util.Random: void <init>()>","<com.squareup.moshi.Moshi$Builder: void <init>()>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.lang.String access$300(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,java.security.cert.Certificate)>","<okio.RealBufferedSink: okio.Timeout timeout()>","<okio.RealBufferedSource: okio.Timeout timeout()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<com.squareup.moshi.JsonAdapter: void toJson(okio.BufferedSink,java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.net.Socket: void <init>()>","<okio.Okio: okio.BufferedSource buffer(okio.Source)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.LinkedList: java.lang.Object get(int)>"],"<org.bitcoinj.core.Transaction: boolean isEveryOwnedOutputSpent(org.bitcoinj.core.TransactionBag)>":["<java.util.ArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setScriptBytes(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>"],"<androidx.fragment.app.FragmentManagerImpl: void burpActive()>":["<android.util.SparseArray: int size()>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<android.util.SparseArray: int keyAt(int)>","<android.util.SparseArray: void delete(int)>"],"<com.google.protobuf.SingleFieldBuilder: void onChanged()>":["<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void markDirty()>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.Exception)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilderForType()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMemo(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>"],"<androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>":["<androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>","<androidx.arch.core.executor.ArchTaskExecutor: void <init>()>"],"<org.bitcoinj.wallet.Protos$Extension: boolean access$14300()>":["<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionCompat21$3: void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DERSequenceGenerator: void <init>(java.io.OutputStream)>":["<java.io.ByteArrayOutputStream: void <init>()>","<org.spongycastle.asn1.DERGenerator: void <init>(java.io.OutputStream)>"],"<de.schildbach.wallet.ui.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>":["<android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<android.preference.PreferenceActivity: void onBackPressed()>"],"<org.bitcoinj.core.Block: java.util.Date getTime()>":["<java.util.Date: void <init>(long)>","<org.bitcoinj.core.Block: long getTimeSeconds()>"],"<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.lang.Class: java.lang.String getName()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void <clinit>()>"],"<com.google.protobuf.Descriptors: java.util.logging.Logger access$000()>":["<com.google.protobuf.Descriptors: void <clinit>()>"],"<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusList()>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<ch.qos.logback.core.helpers.CyclicBuffer: java.util.List asList()>"],"<org.bitcoinj.core.PeerGroup: boolean removeConnectedEventListener(org.bitcoinj.core.listeners.PeerConnectedEventListener)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>","<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.Integer: void <clinit>()>":["<java.lang.Integer: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: int getLookaheadThreshold()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()>","<androidx.fragment.app.Fragment: void instantiateChildFragmentManager()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchStart()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchResume()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilderForType()>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.BasicKeyChain$State isWatching()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.BasicKeyChain$State: void <clinit>()>","<java.util.LinkedHashMap: boolean isEmpty()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.net.discovery.MultiplexingDiscovery: void <init>(org.bitcoinj.core.NetworkParameters,java.util.List)>":["<java.util.ArrayList: boolean isEmpty()>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>"],"<java.lang.StringBuffer: java.lang.String toString()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.util.ExecutorServiceUtil: java.util.concurrent.ScheduledExecutorService newScheduledExecutorService()>":["<ch.qos.logback.core.util.ExecutorServiceUtil: void <clinit>()>","<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>"],"<okhttp3.HttpUrl: int defaultPort(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter: void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>":["<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinPackagingData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>"],"<androidx.fragment.app.FragmentContainer: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<android.app.Activity: android.app.Application getApplication()>","<java.io.PrintWriter: void print(java.lang.String)>","<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.io.PrintWriter: void println(java.lang.String)>","<java.lang.System: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.lang.System: int identityHashCode(java.lang.Object)>","<java.io.PrintWriter: void print(boolean)>","<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean isInitialized()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getService(int)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean isInitialized()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getMessageTypeCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getEnumTypeCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileOptions getOptions()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getServiceCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean hasOptions()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getMessageType(int)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getExtensionCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int)>"],"<androidx.core.content.FileProvider: void <init>()>":["<android.content.ContentProvider: void <init>()>"],"<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore getKeyStore()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore loadIcsKeyStore()>","<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore loadFallbackStore()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.crypto.X509Utils: java.security.KeyStore loadKeyStore(java.lang.String,java.lang.String,java.io.InputStream)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<java.io.FileInputStream: void <init>(java.lang.String)>","<java.io.File: void <clinit>()>","<java.lang.String: java.lang.String replace(char,char)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.loader.content.ModernAsyncTask$Status: void <clinit>()>","<java.util.concurrent.FutureTask: void run()>","<androidx.loader.content.ModernAsyncTask: void onPreExecute()>","<androidx.loader.content.ModernAsyncTask$4: void <clinit>()>","<java.lang.Enum: int ordinal()>","<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>"],"<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromEncrypted(org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.KeyCrypter,byte[])>":["<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPublicOnly(byte[])>","<org.bitcoinj.core.ECKey: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl$1: void run()>":["<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>"],"<org.bitcoinj.wallet.WalletTransaction$Pool: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.loader.content.Loader: void forceLoad()>":["<androidx.loader.content.AsyncTaskLoader: void onForceLoad()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder create()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: void <init>()>"],"<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] convertToBytes(java.lang.String)>":["<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>","<java.lang.String: byte[] getBytes()>"],"<de.schildbach.wallet.service.BlockchainService: void scheduleStart(de.schildbach.wallet.WalletApplication)>":["<java.lang.System: long currentTimeMillis()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>","<java.lang.Long: java.lang.Long valueOf(long)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<java.lang.Long: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<android.content.Intent: void <clinit>()>","<android.app.PendingIntent: void <clinit>()>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder mergeFrom(com.google.protobuf.UnknownFieldSet$Field)>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$902(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$600(com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$702(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$802(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$500(com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$700(com.google.protobuf.UnknownFieldSet$Field)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: boolean isEmpty()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$602(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$502(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$800(com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$900(com.google.protobuf.UnknownFieldSet$Field)>"],"<androidx.fragment.app.Fragment$2: android.view.View onFindViewById(int)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.arch.core.executor.DefaultTaskExecutor: void <init>()>":["<java.lang.Object: void <init>()>","<androidx.arch.core.executor.TaskExecutor: void <init>()>","<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>","<androidx.arch.core.executor.DefaultTaskExecutor$1: void <init>(androidx.arch.core.executor.DefaultTaskExecutor)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.Logger: void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>":["<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$1: org.bitcoinj.wallet.Protos$EncryptedData parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.squareup.moshi.Types: java.lang.Class getRawType(java.lang.reflect.Type)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>","<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>","<java.lang.Class: java.lang.String getName()>","<com.squareup.moshi.Types: java.lang.Class getRawType(java.lang.reflect.Type)>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>"],"<org.spongycastle.asn1.DERT61String: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: void <init>(org.bitcoinj.wallet.Protos$ScryptParameters)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.ByteString getSalt()>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<com.google.protobuf.ByteString: byte[] toByteArray()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.List,java.util.List,java.util.List)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment self()>"],"<com.google.protobuf.LiteralByteString: java.io.InputStream newInput()>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>","<com.google.protobuf.LiteralByteString: int getOffsetIntoBytes()>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>"],"<org.spongycastle.crypto.digests.SHA512Digest: org.spongycastle.util.Memoable copy()>":["<org.spongycastle.crypto.digests.SHA512Digest: void <init>(org.spongycastle.crypto.digests.SHA512Digest)>"],"<org.bitcoinj.core.PeerGroup: void addPreMessageReceivedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.Peer: void addPreMessageReceivedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>","<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.FieldSet: void mergeFrom(com.google.protobuf.FieldSet)>":["<com.google.protobuf.FieldSet: void mergeFromField(java.util.Map$Entry)>","<com.google.protobuf.SmallSortedMap$EmptySet$1: boolean hasNext()>","<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>","<com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()>","<com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()>","<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>","<com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()>"],"<org.bitcoin.protocols.payments.Protos$Output$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$Output$1: org.bitcoin.protocols.payments.Protos$Output parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<de.schildbach.wallet.ui.WalletActivity$5: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<java.lang.Throwable: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.ViewModel: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.loader.content.ModernAsyncTask$1: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>"],"<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label$1: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <init>(java.lang.String,int,int,int)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label[] values()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$PaymentACK createPaymentAck(org.bitcoin.protocols.payments.Protos$Payment,java.lang.String)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder setMemo(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder setPayment(org.bitcoin.protocols.payments.Protos$Payment)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK build()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Context: void <init>(org.bitcoinj.core.NetworkParameters)>":["<java.lang.ThreadLocal: void set(java.lang.Object)>","<java.lang.Object: void <init>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TxConfidenceTable: void <init>()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Transaction getTransaction(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10400()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>":["<com.google.protobuf.WireFormat: int makeTag(int,int)>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>"],"<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<com.squareup.moshi.Moshi$Builder: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$4: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService,org.bitcoinj.core.Transaction)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.PeerGroup: void addConnectedEventListener(org.bitcoinj.core.listeners.PeerConnectedEventListener)>":["<org.bitcoinj.core.PeerGroup: void addConnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerConnectedEventListener)>","<org.bitcoinj.utils.Threading: void <clinit>()>"],"<com.google.protobuf.ByteString: void writeTo(java.io.OutputStream,int,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.LiteralByteString: void writeToInternal(java.io.OutputStream,int,int)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void informConfidenceListenersIfNotReorganizing()>":["<java.util.LinkedHashMap: void clear()>","<java.util.LinkedHashMap: java.util.Set entrySet()>","<org.bitcoinj.wallet.Wallet: void queueOnTransactionConfidenceChanged(org.bitcoinj.core.Transaction)>"],"<org.bitcoinj.wallet.Wallet: java.util.Map getExtensions()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>","<com.google.common.collect.ImmutableMap: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>","<androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.spongycastle.crypto.engines.AESFastEngine: int[][] generateWorkingKey(byte[],boolean)>":["<org.spongycastle.crypto.engines.AESFastEngine: int subWord(int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.crypto.engines.AESFastEngine: int shift(int,int)>","<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>","<org.spongycastle.crypto.engines.AESFastEngine: int inv_mcol(int)>","<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>"],"<com.google.protobuf.ExtensionRegistryLite: void <init>(com.google.protobuf.ExtensionRegistryLite)>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<java.lang.Object: void <init>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>"],"<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionInput getTransactionInput(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.ui.AddressAndLabel$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean)>":["<android.util.SparseArray: java.lang.Object get(int)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>(org.bitcoinj.wallet.WalletProtobufSerializer$WalletFactory)>":["<org.bitcoinj.wallet.DefaultKeyChainFactory: void <init>()>","<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$OneofAccessor: void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String,java.lang.Class,java.lang.Class)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>"],"<de.schildbach.wallet.service.BlockchainService$3: void <init>(de.schildbach.wallet.service.BlockchainService,de.schildbach.wallet.data.WalletBalanceLiveData)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.common.base.Stopwatch: java.lang.String abbreviate(java.util.concurrent.TimeUnit)>":["<java.lang.AssertionError: void <init>()>","<com.google.common.base.Stopwatch$1: void <clinit>()>"],"<java.lang.Exception: void <init>(java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>":["<java.lang.String: char charAt(int)>"],"<com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>":["<java.io.ByteArrayOutputStream: void write(byte[],int,int)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.io.ByteStreams: void <clinit>()>","<com.google.common.io.ByteStreams: byte[] createBuffer()>"],"<ch.qos.logback.core.joran.spi.ElementPath: void <init>(java.util.List)>":["<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>()>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>":["<java.lang.NullPointerException: void <init>()>"],"<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>":["<ch.qos.logback.core.spi.ContextAwareBase: java.lang.Object getDeclaredOrigin()>","<ch.qos.logback.core.status.WarnStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(org.bitcoinj.wallet.Protos$DeterministicKey)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setIsFollowing(boolean)>","<org.bitcoinj.wallet.Protos$DeterministicKey: int getSigsRequiredToSpend()>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean hasChainCode()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean hasLookaheadSize()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setIssuedSubkeys(int)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$DeterministicKey: int getLookaheadSize()>","<org.bitcoinj.wallet.Protos$DeterministicKey: int getIssuedSubkeys()>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean hasIssuedSubkeys()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setChainCode(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$DeterministicKey: java.util.List access$2900(org.bitcoinj.wallet.Protos$DeterministicKey)>","<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey getDefaultInstance()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean getIsFollowing()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void ensurePathIsMutable()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setLookaheadSize(int)>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean hasSigsRequiredToSpend()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setSigsRequiredToSpend(int)>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.ByteString getChainCode()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean hasIsFollowing()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getPackage()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<androidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)>":["<androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void <init>()>","<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>","<androidx.lifecycle.LifecycleDispatcher: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder mergeFrom(org.bitcoinj.wallet.Protos$Script)>":["<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Script: boolean hasProgram()>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder setProgram(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Script: boolean hasCreationTimestamp()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.ByteString getProgram()>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder setCreationTimestamp(long)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script getDefaultInstance()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: long getCreationTimestamp()>"],"<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: java.util.List combine(java.util.List)>":["<com.google.common.collect.RegularImmutableList: int size()>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>"],"<androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.lang.System: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.System: int identityHashCode(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.spongycastle.asn1.BERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.ASN1TaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>"],"<java.lang.Object: java.lang.String toString()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence,int)>":["<java.lang.String: char charAt(int)>","<com.google.common.base.CharMatcher$Is: boolean matches(char)>","<java.lang.String: int length()>","<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder create()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: void <init>()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)>":["<androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)>"],"<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>":["<okio.Buffer: okio.Buffer write(byte[])>","<okio.Buffer: void <init>()>","<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>","<okio.Buffer: void <clinit>()>"],"<org.bitcoinj.script.Script: int encodeToOpN(int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.core.ECKey: byte[] getPubKey()>":["<org.bitcoinj.crypto.LazyECPoint: byte[] getEncoded()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance()>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <clinit>()>"],"<androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>":["<androidx.collection.MapCollections$ArrayIterator: void remove()>","<androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()>","<androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)>","<androidx.collection.ArrayMap: java.util.Set keySet()>","<androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)>","<androidx.collection.SimpleArrayMap: int size()>","<androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()>","<androidx.collection.MapCollections$ArrayIterator: boolean hasNext()>"],"<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$EncryptedData$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$ScryptParameters$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<org.bitcoinj.wallet.Protos$TransactionSigner$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$MessageOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$TransactionOutput$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$MethodOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: void popLimit(int)>","<org.bitcoinj.wallet.Protos$ExchangeRate$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoin.protocols.payments.Protos$Output$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$PeerAddress$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<com.google.protobuf.DescriptorProtos$EnumOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$DeterministicKey$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$Script$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$Key$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoin.protocols.payments.Protos$Payment$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$FileOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>","<org.bitcoinj.wallet.Protos$Transaction$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$FieldOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$Tag$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$Extension$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<org.bitcoinj.wallet.Protos$TransactionInput$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$ServiceOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>"],"<org.bitcoinj.core.PeerGroup: void addPeerDiscovery(org.bitcoinj.net.discovery.PeerDiscovery)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.PeerGroup: void setMaxConnections(int)>","<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: int getMaxConnections()>"],"<de.schildbach.wallet.util.Toast: void customToast(int,int,java.lang.Object[])>":["<android.app.Service: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.util.Toast: void customToast(java.lang.CharSequence,int)>","<android.content.Context: java.lang.String getString(int,java.lang.Object[])>"],"<org.bitcoinj.core.InsufficientMoneyException: void <init>(org.bitcoinj.core.Coin)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<org.bitcoinj.core.InsufficientMoneyException: void <init>(org.bitcoinj.core.Coin,java.lang.String)>"],"<androidx.lifecycle.MutableLiveData: void <init>()>":["<androidx.lifecycle.LiveData: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<androidx.collection.SparseArrayCompat: void gc()>","<java.lang.System: void <clinit>()>","<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>","<androidx.collection.ContainerHelpers: int idealIntArraySize(int)>","<androidx.collection.ContainerHelpers: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.ElementPath: boolean equals(java.lang.Object)>":["<ch.qos.logback.core.joran.spi.ElementPath: int size()>","<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String get(int)>","<ch.qos.logback.core.joran.spi.ElementPath: boolean equalityCheck(java.lang.String,java.lang.String)>"],"<com.google.common.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)>":["<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int highestOneBit(int)>"],"<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class)>","<ch.qos.logback.core.util.Loader: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.joran.spi.ElementPath: ch.qos.logback.core.joran.spi.ElementPath duplicate()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String,java.lang.Throwable)>"],"<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>"],"<org.bitcoinj.core.VerificationException: void <init>(java.lang.Exception)>":["<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void setState(de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>"],"<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>":["<org.spongycastle.asn1.StreamUtil: void <clinit>()>","<org.spongycastle.asn1.StreamUtil: int findLimit(java.io.InputStream)>","<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>"],"<com.google.common.math.LongMath: long checkedSubtract(long,long)>":["<com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)>"],"<org.bitcoinj.core.TransactionBroadcast: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.Transaction)>":["<java.lang.Object: void <init>()>","<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>","<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>","<java.util.HashMap: void <init>()>","<org.bitcoinj.core.TransactionBroadcast$2: void <init>(org.bitcoinj.core.TransactionBroadcast)>","<java.util.Collections: void <clinit>()>","<java.lang.Math: int max(int,int)>","<org.bitcoinj.core.PeerGroup: int getMinBroadcastConnections()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>"],"<org.bitcoinj.wallet.Protos$Extension: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$Extension: boolean hasId()>","<org.bitcoinj.wallet.Protos$Extension: boolean hasMandatory()>","<org.bitcoinj.wallet.Protos$Extension: boolean hasData()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$1: org.bitcoinj.wallet.Protos$TransactionConfidence parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean)>":["<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean)>"],"<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>":["<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>"],"<com.google.protobuf.LazyStringArrayList: java.lang.Object get(int)>":["<com.google.protobuf.LazyStringArrayList: java.lang.String get(int)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: boolean access$16400()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>":["<de.schildbach.wallet.service.BlockchainService$2: void onChanged(java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService$4: void onChanged(java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService$6: void onChanged(java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService$5: void onChanged(java.lang.Object)>","<androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()>","<de.schildbach.wallet.service.BlockchainService$7: void onChanged(java.lang.Object)>","<de.schildbach.wallet.offline.AcceptBluetoothService$3: void onChanged(java.lang.Object)>","<androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>","<de.schildbach.wallet.service.BlockchainService$3: void onChanged(java.lang.Object)>"],"<org.spongycastle.crypto.ec.CustomNamedCurves: org.spongycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>":["<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>","<org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>","<java.util.Hashtable: java.lang.Object get(java.lang.Object)>"],"<org.bitcoinj.core.Message: org.bitcoinj.core.Sha256Hash readHash()>":["<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrapReversed(byte[])>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Message: byte[] readBytes(int)>"],"<okhttp3.EventListener$2: void <init>(okhttp3.EventListener)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock get(org.bitcoinj.core.Sha256Hash)>":["<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.store.SPVBlockStore: int getRingCursor(java.nio.ByteBuffer)>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock deserializeCompact(org.bitcoinj.core.NetworkParameters,java.nio.ByteBuffer)>","<java.util.Arrays: boolean equals(byte[],byte[])>","<org.bitcoinj.store.SPVBlockStore: int getFileSize()>","<org.bitcoinj.store.SPVBlockStore: void <clinit>()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.StoredBlock: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.Sha256Hash: byte[] getBytes()>"],"<org.bitcoinj.wallet.DefaultCoinSelector: void sortOutputs(java.util.ArrayList)>":["<org.bitcoinj.wallet.DefaultCoinSelector$1: void <init>()>","<java.util.Collections: void sort(java.util.List,java.util.Comparator)>","<java.util.Collections: void <clinit>()>"],"<org.spongycastle.math.ec.ECPoint: void <clinit>()>":["<org.spongycastle.math.ec.ECPoint: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.CameraManager: android.hardware.Camera open(android.view.TextureView,int)>":["<android.graphics.Rect: void <init>(int,int,int,int)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<android.graphics.Rect: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.ui.scan.CameraManager: int determineCameraId()>","<java.lang.Math: int min(int,int)>","<java.lang.Integer: void <clinit>()>","<android.graphics.RectF: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<android.hardware.Camera: android.hardware.Camera open(int)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.Math: int max(int,int)>","<android.graphics.RectF: void <init>(float,float,float,float)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.scan.CameraManager: android.hardware.Camera$Size findBestPreviewSizeValue(android.hardware.Camera$Parameters,int,int)>","<de.schildbach.wallet.ui.scan.CameraManager: void setDesiredCameraParameters(android.hardware.Camera,android.hardware.Camera$Size)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>":["<java.lang.Boolean: void <clinit>()>","<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>","<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>","<okhttp3.internal.platform.AndroidPlatform: boolean supportsAlpn()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureTransactionOutputIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>":["<org.bitcoinj.core.Coin: void <init>(long)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Key$1: org.bitcoinj.wallet.Protos$Key parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Key: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$Key: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>":["<androidx.core.content.FileProvider$SimplePathStrategy: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)>","<androidx.core.content.ContextCompat: void <clinit>()>","<androidx.core.content.FileProvider: void <clinit>()>","<androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)>","<android.os.Environment: java.io.File getExternalStorageDirectory()>","<androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>","<java.lang.String: void <clinit>()>","<android.os.Build$VERSION: void <clinit>()>","<android.os.Environment: void <clinit>()>","<androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)>"],"<okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)>":["<java.lang.Long: int numberOfTrailingZeros(long)>","<okio.Buffer: okio.Segment writableSegment(int)>","<java.lang.Long: void <clinit>()>","<java.lang.Long: long highestOneBit(long)>","<okio.Buffer: void <clinit>()>","<okio.Buffer: okio.Buffer writeByte(int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK getDefaultInstanceForType()>"],"<com.google.common.collect.SingletonImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>":["<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void close()>":["<java.io.FilterOutputStream: void close()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>":["<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrapReversed(byte[])>","<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[])>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.BasicKeyChain,java.util.List,java.util.EnumMap,org.bitcoinj.crypto.KeyCrypter)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<org.bitcoinj.script.Script: org.bitcoinj.core.Address getToAddress(org.bitcoinj.core.NetworkParameters)>","<java.util.EnumMap: java.util.Set entrySet()>","<java.util.EnumMap: void <init>(java.lang.Class)>","<org.bitcoinj.wallet.KeyChainGroup: void maybeLookaheadScripts()>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>","<org.bitcoinj.wallet.KeyChainGroup: boolean isMarried()>","<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: void <init>()>","<java.util.LinkedList: void <init>(java.util.Collection)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.script.Script makeP2SHOutputScript(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.wallet.DeterministicKeyChain)>"],"<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])>":["<androidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.HashSet: void <init>()>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<de.schildbach.wallet.service.BlockchainService$1$1: void <init>(de.schildbach.wallet.service.BlockchainService$1)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.BEROctetString: void <init>(org.spongycastle.asn1.ASN1OctetString[])>":["<org.spongycastle.asn1.ASN1OctetString: void <init>(byte[])>","<org.spongycastle.asn1.BEROctetString: byte[] toBytes(org.spongycastle.asn1.ASN1OctetString[])>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13900()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<ch.qos.logback.core.OutputStreamAppender: void setOutputStream(java.io.OutputStream)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<ch.qos.logback.core.OutputStreamAppender: void closeOutputStream()>","<ch.qos.logback.core.OutputStreamAppender: void encoderInit()>"],"<com.google.protobuf.TextFormat: void printUnknownFieldValue(int,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.TextFormat$Printer: void access$500(com.google.protobuf.TextFormat$Printer,com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.ByteString)>","<com.google.protobuf.TextFormat: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.WireFormat: int getTagWireType(int)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.TextFormat: java.lang.String unsignedToString(long)>","<com.google.protobuf.TextFormat$TextGenerator: void print(java.lang.CharSequence)>"],"<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object[])>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setPublicKey(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>":["<ch.qos.logback.classic.Logger: void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<com.google.protobuf.Descriptors$DescriptorPool: void addFieldByNumber(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.Descriptors$Descriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$Descriptor getContainingType()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: int getNumber()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.Descriptors$DescriptorPool$DescriptorIntPair: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$1: com.google.protobuf.DescriptorProtos$FileOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.Sets: java.util.HashSet newHashSet()>":["<java.util.HashSet: void <init>()>"],"<com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>":["<java.util.HashMap: void <init>(java.util.Map)>"],"<org.bitcoinj.wallet.Wallet: java.util.List getTransactionSigners()>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHeight(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.ASN1InputStream: char[] getBMPCharBuffer(org.spongycastle.asn1.DefiniteLengthInputStream)>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int getRemaining()>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>"],"<java.lang.Thread: void start()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<okio.Buffer: java.lang.String readUtf8()>":["<okio.Util: void <clinit>()>","<java.lang.AssertionError: void <init>(java.lang.Object)>","<okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void updateView()>":["<de.schildbach.wallet.WalletApplication: int maxConnectedPeers()>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bind(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>","<de.schildbach.wallet.util.MonetarySpannable: void <init>(org.bitcoinj.utils.MonetaryFormat,org.bitcoinj.core.Monetary)>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>","<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>","<androidx.fragment.app.Fragment: java.lang.String getString(int)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>","<org.bitcoinj.core.Coin: int signum()>","<de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem: void <init>(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,boolean)>","<de.schildbach.wallet.util.MonetarySpannable: void <clinit>()>","<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.Wallet getWallet()>","<de.schildbach.wallet.util.MonetarySpannable: de.schildbach.wallet.util.MonetarySpannable applyMarkup(java.lang.Object[],java.lang.Object[])>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet$1: void <init>(org.bitcoinj.wallet.Wallet)>":["<java.util.LinkedHashMap: void <init>()>"],"<com.google.common.base.AbstractIterator$State: void <clinit>()>":["<com.google.common.base.AbstractIterator$State: void <init>(java.lang.String,int)>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String)>":["<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>"],"<okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>":["<java.lang.String: char charAt(int)>"],"<com.squareup.moshi.internal.Util$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>":["<com.squareup.moshi.internal.Util: void <clinit>()>"],"<de.schildbach.wallet.ui.InputParser: org.slf4j.Logger access$000()>":["<de.schildbach.wallet.ui.InputParser: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: boolean hasSalt()>"],"<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.utils.Threading: void <clinit>()>":["<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>","<com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>","<org.bitcoinj.utils.Threading$2: void <init>()>","<org.bitcoinj.utils.Threading: void throwOnLockCycles()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.utils.Threading$3: void <init>()>","<org.bitcoinj.utils.Threading$UserThread: void <clinit>()>","<org.bitcoinj.utils.Threading$UserThread: void <init>()>"],"<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.Descriptors$Descriptor access$000(com.google.protobuf.GeneratedMessage$FieldAccessorTable)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1: com.google.protobuf.DescriptorProtos$MethodDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.TransactionConfidence: void <clinit>()>":["<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>","<java.util.HashSet: void <init>()>","<org.bitcoinj.core.TransactionConfidence: void <clinit>()>","<java.util.Collections: void <clinit>()>"],"<ch.qos.logback.core.android.SystemPropertiesProxy: java.lang.String get(java.lang.String,java.lang.String)>":["<java.lang.String: int length()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$9: void run()>":["<de.schildbach.wallet.ui.scan.ScanActivity: de.schildbach.wallet.ui.scan.CameraManager access$200(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.CameraManager: void requestPreviewFrame(android.hardware.Camera$PreviewCallback)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity$9$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity$9)>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>"],"<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Logger getChildByName(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String,java.lang.Throwable)>"],"<dummyMainClass: de.schildbach.wallet.ui.ExchangeRatesActivity dummyMainMethod_de_schildbach_wallet_ui_ExchangeRatesActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<androidx.fragment.app.Fragment: void onDestroyView()>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onResume()>","<de.schildbach.wallet.ui.ExchangeRatesFragment: void onCreate(android.os.Bundle)>","<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<androidx.fragment.app.Fragment: void onPause()>","<androidx.fragment.app.Fragment: void onStart()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void onResume()>","<de.schildbach.wallet.ui.ExchangeRatesFragment: void onDestroy()>","<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.ExchangeRatesActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.Fragment: void onStop()>","<androidx.fragment.app.Fragment: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<androidx.fragment.app.Fragment: void onDetach()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<de.schildbach.wallet.ui.ExchangeRatesFragment: void <init>()>","<de.schildbach.wallet.ui.ExchangeRatesFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<de.schildbach.wallet.ui.ExchangeRatesActivity: void <init>()>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<java.lang.Integer: int highestOneBit(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentTransitionCompat21$1: void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)>":["<android.transition.Transition$EpicenterCallback: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$1: com.google.protobuf.DescriptorProtos$FileDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity: boolean onCreateOptionsMenu(android.view.Menu)>":["<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>","<android.app.Activity: android.view.MenuInflater getMenuInflater()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void initFields()>":["<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.DefaultKeyChainFactory: org.bitcoinj.wallet.DeterministicKeyChain makeWatchingKeyChain(org.bitcoinj.wallet.Protos$Key,org.bitcoinj.wallet.Protos$Key,org.bitcoinj.crypto.DeterministicKey,boolean,boolean)>":["<org.bitcoinj.crypto.HDUtils: java.lang.String formatPath(java.util.List)>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.MarriedKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey,boolean)>"],"<ch.qos.logback.core.pattern.ConverterUtil: void startConverters(ch.qos.logback.core.pattern.Converter)>":["<ch.qos.logback.core.pattern.ConverterUtil: void startConverters(ch.qos.logback.core.pattern.Converter)>","<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void start()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey buildPartial()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: boolean access$3202(org.bitcoinj.wallet.Protos$DeterministicKey,boolean)>","<org.bitcoinj.wallet.Protos$DeterministicKey: int access$3002(org.bitcoinj.wallet.Protos$DeterministicKey,int)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: int access$3102(org.bitcoinj.wallet.Protos$DeterministicKey,int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$DeterministicKey: int access$3402(org.bitcoinj.wallet.Protos$DeterministicKey,int)>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoinj.wallet.Protos$DeterministicKey: java.util.List access$2902(org.bitcoinj.wallet.Protos$DeterministicKey,java.util.List)>","<org.bitcoinj.wallet.Protos$DeterministicKey: int access$3302(org.bitcoinj.wallet.Protos$DeterministicKey,int)>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.ByteString access$2802(org.bitcoinj.wallet.Protos$DeterministicKey,com.google.protobuf.ByteString)>"],"<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Logger createChildByName(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.classic.Logger: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<ch.qos.logback.classic.Logger: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.classic.util.LoggerNameUtil: int getSeparatorIndexOf(java.lang.String,int)>"],"<androidx.fragment.app.FragmentManagerState: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<java.io.EOFException: void <init>()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<java.io.FilterInputStream: int read()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: boolean checkForEof()>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()>":["<androidx.collection.MapCollections$ArrayIterator: void <init>(androidx.collection.MapCollections,int)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$1: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<okhttp3.CacheControl: java.lang.String headerValue()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: int length()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String)>":["<de.schildbach.wallet.ui.InputParser$StringInputParser: void <init>(java.lang.String)>"],"<com.google.common.base.Absent: void <clinit>()>":["<com.google.common.base.Absent: void <init>()>","<com.google.common.base.Absent: void <clinit>()>"],"<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void start()>":["<ch.qos.logback.core.rolling.helper.Compressor: void <init>(ch.qos.logback.core.rolling.helper.CompressionMode)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: void <init>(java.lang.String,ch.qos.logback.core.Context)>","<ch.qos.logback.core.rolling.RollingPolicyBase: void determineCompressionMode()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: java.lang.String transformFileNamePattern2ZipEntry(java.lang.String)>","<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void setMaxHistory(int)>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: boolean isStarted()>","<ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy: void start()>","<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>","<ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy: void <init>()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: long getCurrentTime()>","<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void setTotalSizeCap(long)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: java.util.concurrent.Future cleanAsynchronously(java.util.Date)>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: ch.qos.logback.core.rolling.helper.ArchiveRemover getArchiveRemover()>","<ch.qos.logback.core.rolling.helper.FileNamePattern: void <clinit>()>","<ch.qos.logback.core.util.FileSize: long getSize()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void setTimeBasedRollingPolicy(ch.qos.logback.core.rolling.TimeBasedRollingPolicy)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.util.Date: void <init>(long)>","<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<ch.qos.logback.core.rolling.helper.Compressor: java.lang.String computeFileNameStrWithoutCompSuffix(java.lang.String,ch.qos.logback.core.rolling.helper.CompressionMode)>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: boolean isUnboundedTotalSizeCap()>","<ch.qos.logback.core.rolling.RollingPolicyBase: void start()>"],"<org.bitcoinj.core.ChildMessage: void <init>()>":["<org.bitcoinj.core.Message: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getDependencyCount()>":["<com.google.protobuf.LazyStringArrayList: int size()>","<com.google.protobuf.UnmodifiableLazyStringList: int size()>"],"<com.google.common.collect.ImmutableCollection: void <init>()>":["<java.util.AbstractCollection: void <init>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: void onDestroy()>":["<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>","<java.lang.System: long currentTimeMillis()>","<android.app.Service: void unregisterReceiver(android.content.BroadcastReceiver)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.offline.AcceptBluetoothThread: void stopAccepting()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<androidx.lifecycle.LifecycleService: void onDestroy()>"],"<androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: boolean isStateSaved()>"],"<org.bitcoinj.uri.RequiredFieldValidationException: void <init>(java.lang.String)>":["<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatAddress(org.bitcoinj.core.Address,int,int)>":["<de.schildbach.wallet.util.WalletUtils: android.text.Spanned formatHash(java.lang.String,int,int)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>"],"<com.google.common.collect.RegularImmutableList: int copyIntoArray(java.lang.Object[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<okio.Timeout: long deadlineNanoTime()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.core.Sha256Hash byteStringToHash(com.google.protobuf.ByteString)>":["<com.google.protobuf.ByteString: byte[] toByteArray()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>"],"<okio.ByteString: okio.ByteString of(byte[])>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<okio.ByteString: void <init>(byte[])>","<java.lang.Object: java.lang.Object clone()>","<okio.ByteString: void <clinit>()>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>":["<java.lang.Object: void <init>()>","<org.spongycastle.crypto.engines.AESFastEngine: int getBlockSize()>"],"<org.bitcoinj.wallet.Wallet: void createTransientState()>":["<org.bitcoinj.wallet.Wallet$2: void <init>(org.bitcoinj.wallet.Wallet)>","<java.util.HashSet: void <init>()>"],"<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String,int)>":["<java.lang.String: char charAt(int)>","<org.spongycastle.asn1.x500.style.IETFUtils: int convertHex(char)>","<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>","<java.lang.String: int length()>"],"<com.google.protobuf.TextFormat$Printer: void print(com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat$Printer: void printField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>","<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.GeneratedMessage: java.util.Map getAllFields()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.TextFormat$Printer: void printUnknownFields(com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>"],"<androidx.fragment.app.FragmentTransitionCompat21$4: void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)>":["<android.transition.Transition$EpicenterCallback: void <init>()>"],"<org.slf4j.LoggerFactory: void emitSubstitutionWarning()>":["<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: void report(java.lang.String)>"],"<de.schildbach.wallet.util.WalletUtils: void autoBackupWallet(android.content.Context,org.bitcoinj.wallet.Wallet)>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder clearTransaction()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Wallet walletToProto(org.bitcoinj.wallet.Wallet)>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder toBuilder()>","<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHeight(int)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet build()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<com.google.protobuf.AbstractMessageLite: void writeTo(java.io.OutputStream)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder clearLastSeenBlockTimeSecs()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder clearLastSeenBlockHash()>"],"<androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>":["<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>"],"<androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)>":["<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)>","<androidx.fragment.app.FragmentTransitionCompat21$4: void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)>"],"<java.lang.String: int compareTo(java.lang.Object)>":["<java.lang.String: int compareTo(java.lang.String)>"],"<org.bitcoinj.net.NioClientManager$PendingConnect: void <init>(org.bitcoinj.net.NioClientManager,java.nio.channels.SocketChannel,org.bitcoinj.net.StreamConnection,java.net.SocketAddress)>":["<java.lang.Object: void <init>()>","<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>"],"<okio.ByteString: int decodeHexDigit(char)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<okhttp3.OkHttpClient$1: void <init>()>":["<okhttp3.internal.Internal: void <init>()>"],"<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>":["<de.schildbach.wallet.ui.DialogBuilder: void <init>(android.content.Context)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setIcon(int)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setTitle(int)>"],"<org.spongycastle.asn1.ASN1InputStream: byte[] getBuffer(org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int getRemaining()>","<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>","<org.spongycastle.util.io.Streams: void <clinit>()>","<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>"],"<androidx.fragment.app.FragmentController: void dispatchDestroy()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder access$300()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder create()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>":["<java.io.IOException: void printStackTrace()>","<java.lang.Throwable: void printStackTrace()>"],"<org.bitcoinj.wallet.Protos$Transaction: void initFields()>":["<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstance()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstance()>"],"<org.spongycastle.asn1.DERBitString: void <clinit>()>":["<org.spongycastle.asn1.DERBitString: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: long readInt64()>":["<com.google.protobuf.CodedInputStream: long readRawVarint64()>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$Expired: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.BufferedBlockCipher: int getBlockSize()>":["<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>"],"<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>":["<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder create()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: void <init>()>"],"<com.squareup.moshi.StandardJsonAdapters$6: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet: int getTransactionCount()>":["<java.util.ArrayList: int size()>"],"<com.google.zxing.common.reedsolomon.GenericGF: void <init>(int,int,int)>":["<java.lang.Object: void <init>()>","<com.google.zxing.common.reedsolomon.GenericGFPoly: void <init>(com.google.zxing.common.reedsolomon.GenericGF,int[])>"],"<org.bitcoinj.core.Transaction: boolean isOptInFullRBF()>":["<org.bitcoinj.core.Transaction: java.util.List getInputs()>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.String getEnv(java.lang.String)>":["<java.lang.System: void <clinit>()>","<java.lang.System: java.lang.String getenv(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder create()>":["<org.bitcoinj.wallet.Protos$Script$Builder: void <init>()>"],"<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.io.BaseEncoding$Alphabet: boolean matches(char)>","<com.google.common.io.BaseEncoding: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>"],"<androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>":["<androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>","<android.app.RemoteInput: void <clinit>()>"],"<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>":["<android.os.Build$VERSION: void <clinit>()>","<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<okio.AsyncTimeout$1: void flush()>":["<okio.AsyncTimeout: void exit(boolean)>","<okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>","<okio.AsyncTimeout: void enter()>","<okio.Okio$1: void flush()>","<okio.AsyncTimeout$1: void flush()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: boolean has(com.google.protobuf.GeneratedMessage)>":["<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"],"<com.google.protobuf.DynamicMessage: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void onActive()>":["<android.content.IntentFilter: void addAction(java.lang.String)>","<android.content.IntentFilter: void <init>()>","<android.content.IntentFilter: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void handleIntent(android.content.Intent)>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>"],"<com.google.protobuf.Descriptors$DescriptorPool: com.google.protobuf.Descriptors$GenericDescriptor lookupSymbol(java.lang.String,com.google.protobuf.Descriptors$GenericDescriptor,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter)>":["<java.lang.StringBuilder: void setLength(int)>","<java.lang.String: boolean startsWith(java.lang.String)>","<com.google.protobuf.Descriptors$FieldDescriptor: java.lang.String getFullName()>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int indexOf(int)>","<java.lang.String: int length()>","<com.google.protobuf.Descriptors: void <clinit>()>","<com.google.protobuf.Descriptors$Descriptor: void <init>(java.lang.String)>","<java.lang.String: java.lang.String substring(int,int)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<java.lang.String: java.lang.String substring(int)>","<com.google.protobuf.Descriptors: java.util.logging.Logger access$000()>","<com.google.protobuf.Descriptors$DescriptorPool: com.google.protobuf.Descriptors$GenericDescriptor findSymbol(java.lang.String,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: int lastIndexOf(java.lang.String)>","<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>","<com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <clinit>()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails build()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean isInitialized()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>":["<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: int indexOf(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.util.concurrent.Service$State: void <clinit>()>":["<com.google.common.util.concurrent.Service$State$3: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.Service$State: void <clinit>()>","<com.google.common.util.concurrent.Service$State$5: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.Service$State$1: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.Service$State$4: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.Service$State$6: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.Service$State$2: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.ExchangeRatesAdapter$1: void <init>()>":["<androidx.recyclerview.widget.DiffUtil$ItemCallback: void <init>()>"],"<org.spongycastle.asn1.ASN1StreamParser: void set00Check(boolean)>":["<org.spongycastle.asn1.IndefiniteLengthInputStream: void setEofOn00(boolean)>"],"<com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>":["<com.google.common.collect.Iterators$ConcatenatedIterator: void <init>(java.util.Iterator)>"],"<org.bitcoinj.wallet.UnreadableWalletException$WrongNetwork: void <init>()>":["<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>"],"<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.crypto.X509Utils: java.security.KeyStore loadKeyStore(java.lang.String,java.lang.String,java.io.InputStream)>":["<java.security.KeyStoreException: void <init>(java.lang.Throwable)>","<java.lang.String: char[] toCharArray()>","<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>","<java.io.FileInputStream: void close()>"],"<org.bitcoinj.core.Message: long readVarInt(int)>":["<org.bitcoinj.core.VarInt: int getOriginalSizeInBytes()>","<org.bitcoinj.core.ProtocolException: void <init>(java.lang.Exception)>","<org.bitcoinj.core.VarInt: void <init>(byte[],int)>"],"<com.google.common.util.concurrent.CollectionFuture: void <init>()>":["<com.google.common.util.concurrent.AggregateFuture: void <init>()>"],"<org.spongycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int)>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.io.FilterInputStream: int read()>","<java.io.EOFException: void <init>(java.lang.String)>","<java.io.IOException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput build()>"],"<org.bitcoinj.crypto.HDUtils: byte[] hmacSha512(org.spongycastle.crypto.macs.HMac,byte[])>":["<org.spongycastle.crypto.macs.HMac: void update(byte[],int,int)>","<org.spongycastle.crypto.macs.HMac: int doFinal(byte[],int)>","<org.spongycastle.crypto.macs.HMac: void reset()>"],"<androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>":["<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>","<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"],"<androidx.fragment.app.Fragment: boolean isStateSaved()>":["<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>"],"<okio.Buffer: okio.Buffer writeUtf8CodePoint(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okio.Buffer: okio.Buffer writeByte(int)>"],"<com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy: void <clinit>()>":["<com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy: void <clinit>()>","<com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void <init>()>":["<androidx.fragment.app.DialogFragment: void <init>()>"],"<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,char)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Character: java.lang.Character valueOf(char)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>","<java.lang.Character: void <clinit>()>"],"<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void update(byte[],int,int)>":["<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void checkNotDone()>"],"<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])>":["<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: org.spongycastle.asn1.ASN1Encodable stringToValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>","<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.ASN1ObjectIdentifier[],org.spongycastle.asn1.ASN1Encodable[])>"],"<androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<ch.qos.logback.classic.joran.action.ConfigurationAction: void <clinit>()>":["<ch.qos.logback.classic.joran.action.ConfigurationAction: void <clinit>()>","<ch.qos.logback.core.util.Duration: void <clinit>()>","<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildByMinutes(double)>"],"<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: java.lang.Object clone()>"],"<com.google.common.collect.Ordering: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>":["<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat code(int,java.lang.String)>","<de.schildbach.wallet.util.MonetarySpannable: void <init>(org.bitcoinj.utils.MonetaryFormat,org.bitcoinj.core.Monetary)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.app.PendingIntent: void <clinit>()>","<org.bitcoinj.utils.ExchangeRate: org.bitcoinj.utils.Fiat coinToFiat(org.bitcoinj.core.Coin)>","<android.text.style.ForegroundColorSpan: void <init>(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.widget.RemoteViews: void setImageViewResource(int,int)>","<android.content.ContextWrapper: android.content.Context getApplicationContext()>","<de.schildbach.wallet.util.MonetarySpannable: void <clinit>()>","<android.widget.RemoteViews: void <init>(java.lang.String,int)>","<de.schildbach.wallet.util.MonetarySpannable: de.schildbach.wallet.util.MonetarySpannable applyMarkup(java.lang.Object[],java.lang.Object[])>","<android.widget.RemoteViews: void <clinit>()>","<android.content.Intent: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>","<java.lang.String: boolean equals(java.lang.Object)>","<android.content.ContextWrapper: android.content.res.Resources getResources()>","<java.lang.StringBuilder: void <init>()>","<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>","<de.schildbach.wallet.util.GenericUtils: java.lang.String currencySymbol(java.lang.String)>","<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>","<de.schildbach.wallet.data.ExchangeRate: java.lang.String getCurrencyCode()>","<android.widget.RemoteViews: void setViewVisibility(int,int)>","<android.app.Service: java.lang.String getPackageName()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilder()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher breakingWhitespace()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$BreakingWhitespace: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>":["<com.google.common.io.BaseEncoding: java.lang.String encode(byte[],int,int)>"],"<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)>":["<ch.qos.logback.core.spi.ContextAwareBase: ch.qos.logback.core.Context getContext()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.net.URL: java.lang.String toExternalForm()>","<java.net.URL: java.net.URLConnection openConnection()>","<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.io.InputStream,java.lang.String)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.core.joran.spi.JoranException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.joran.GenericConfigurator: void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$1: void <init>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.Descriptors$DescriptorPool: com.google.protobuf.Descriptors$GenericDescriptor findSymbol(java.lang.String,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter)>":["<com.google.protobuf.Descriptors$DescriptorPool: boolean isType(com.google.protobuf.Descriptors$GenericDescriptor)>","<com.google.protobuf.Descriptors$DescriptorPool: boolean isAggregate(com.google.protobuf.Descriptors$GenericDescriptor)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashSet: java.util.Iterator iterator()>","<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <clinit>()>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>"],"<com.google.common.base.Splitter$1$1: int separatorStart(int)>":["<com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence,int)>"],"<ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>":["<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>"],"<java.lang.Long: long parseLong(java.lang.String,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<okhttp3.HttpUrl: int hashCode()>":["<java.lang.String: int hashCode()>"],"<okio.Buffer: okio.Buffer write(byte[],int,int)>":["<okio.Util: void <clinit>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Math: int min(int,int)>","<java.lang.System: void <clinit>()>","<okio.Buffer: okio.Segment writableSegment(int)>","<okio.Util: void checkOffsetAndCount(long,long,long)>"],"<org.bitcoinj.core.CheckpointManager: org.bitcoinj.core.Sha256Hash readBinary(java.io.InputStream)>":["<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.String: byte[] getBytes(java.lang.String)>","<com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)>","<org.bitcoinj.core.CheckpointManager: void <clinit>()>","<java.util.Arrays: boolean equals(byte[],byte[])>","<java.io.DataInputStream: int read(byte[],int,int)>","<java.lang.Long: java.lang.Long valueOf(long)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.lang.Long: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.io.DataInputStream: void close()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.security.DigestInputStream: void on(boolean)>","<java.io.DataInputStream: int readInt()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<java.io.DataInputStream: void readFully(byte[])>","<java.io.IOException: void <init>(java.lang.String)>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock deserializeCompact(org.bitcoinj.core.NetworkParameters,java.nio.ByteBuffer)>","<java.lang.String: int length()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>","<org.bitcoinj.core.StoredBlock: void <clinit>()>","<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>","<java.io.IOException: void <init>(java.lang.Throwable)>","<java.util.TreeMap: int size()>","<java.io.DataInputStream: void <init>(java.io.InputStream)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>","<java.io.BufferedInputStream: void close()>","<org.bitcoinj.core.Block: long getTimeSeconds()>"],"<com.squareup.moshi.internal.Util: void <clinit>()>":["<com.squareup.moshi.internal.Util: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Set emptySet()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment)>"],"<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>":["<com.google.common.collect.Lists: boolean equalsImpl(java.util.List,java.lang.Object)>"],"<java.lang.Long: void <clinit>()>":["<java.lang.Long: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>":["<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <init>(java.lang.String,int)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>"],"<org.bitcoinj.core.TransactionBroadcast$ConfidenceChange: void <init>(org.bitcoinj.core.TransactionBroadcast)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void ensureExtensionsIsMutable()>":["<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet clone()>","<com.google.protobuf.FieldSet: boolean isImmutable()>"],"<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry)>":["<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>"],"<okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)>":["<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String)>","<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>","<okhttp3.HttpUrl$Builder: void <init>()>"],"<de.schildbach.wallet.integration.android.BitcoinIntegration: void paymentToResult(android.content.Intent,byte[])>":["<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void ensureBroadcastByIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.core.Transaction: void addBlockAppearance(org.bitcoinj.core.Sha256Hash,int)>":["<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<java.util.TreeMap: void <init>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void releaseResourcesAfterFailure()>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void releaseResourcesAfterFailure()>"],"<org.bitcoinj.core.PeerGroup$ChainDownloadSpeedCalculator: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: java.util.Comparator getBestComparator()>":["<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: void <clinit>()>","<com.google.common.primitives.UnsignedBytes: java.util.Comparator lexicographicalComparatorJavaImpl()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.spongycastle.asn1.ASN1OctetString: java.io.InputStream getOctetStream()>":["<java.io.ByteArrayInputStream: void <init>(byte[])>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.Protos$Wallet$EncryptionType getEncryptionType()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.wallet.Protos$Wallet$EncryptionType getUnderstoodEncryptionType()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(org.bitcoinj.wallet.Protos$DeterministicKey)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.spongycastle.asn1.ASN1OutputStream: void write(int)>":["<java.io.ByteArrayOutputStream: void write(int)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: boolean removeDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>","<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>"],"<java.lang.Long: java.lang.String toHexString(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.NullPointerException: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<ch.qos.logback.core.android.SystemPropertiesProxy: void <clinit>()>":["<ch.qos.logback.core.android.SystemPropertiesProxy: void <clinit>()>","<ch.qos.logback.core.android.SystemPropertiesProxy: void <init>(java.lang.ClassLoader)>"],"<androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>":["<androidx.lifecycle.Lifecycling: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.lifecycle.ViewModelProviders: android.app.Activity checkActivity(androidx.fragment.app.Fragment)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1700(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean access$1600(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$000(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1800(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: void setValue(java.lang.Object,java.lang.ref.ReferenceQueue)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment)>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumOptions)>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.classic.joran.action.ContextNameAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoinj.core.VerificationException$NegativeValueOutput: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters buildPartial()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: int access$13502(org.bitcoinj.wallet.Protos$ScryptParameters,int)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$ScryptParameters: int access$13702(org.bitcoinj.wallet.Protos$ScryptParameters,int)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.ByteString access$13302(org.bitcoinj.wallet.Protos$ScryptParameters,com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: long access$13402(org.bitcoinj.wallet.Protos$ScryptParameters,long)>","<org.bitcoinj.wallet.Protos$ScryptParameters: int access$13602(org.bitcoinj.wallet.Protos$ScryptParameters,int)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$1: com.google.protobuf.DescriptorProtos$MethodOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<okhttp3.Dispatcher: boolean promoteAndExecute()>":["<okhttp3.Dispatcher: int runningCallsCount()>","<java.util.ArrayDeque: boolean add(java.lang.Object)>","<java.util.ArrayDeque: int size()>","<java.util.ArrayList: void <init>()>","<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>","<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>","<java.util.ArrayList: int size()>","<java.util.ArrayDeque: java.util.Iterator iterator()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$Extension: void initFields()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getVersionName()>":["<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getPackageName()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void addIgnoreStackTraceLine(java.lang.String)>":["<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<de.schildbach.wallet.ui.AddressAndLabel: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String,java.lang.String)>":["<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<de.schildbach.wallet.ui.AddressAndLabel: void <init>(org.bitcoinj.core.Address,java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstance(com.google.protobuf.Descriptors$Descriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.DynamicMessage$Builder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<androidx.room.Room: java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Class: java.lang.String getCanonicalName()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.String: boolean isEmpty()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Class: java.lang.Package getPackage()>","<java.lang.String: int length()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)>":["<java.lang.Thread: java.lang.String getName()>","<java.lang.System: long currentTimeMillis()>","<org.slf4j.event.SubstituteLoggingEvent: void setLoggerName(java.lang.String)>","<org.slf4j.event.SubstituteLoggingEvent: void setThreadName(java.lang.String)>","<org.slf4j.event.SubstituteLoggingEvent: void setLogger(org.slf4j.helpers.SubstituteLogger)>","<org.slf4j.event.SubstituteLoggingEvent: void <init>()>","<org.slf4j.event.SubstituteLoggingEvent: void setMarker(org.slf4j.Marker)>","<org.slf4j.event.SubstituteLoggingEvent: void setTimeStamp(long)>","<org.slf4j.event.SubstituteLoggingEvent: void setArgumentArray(java.lang.Object[])>","<org.slf4j.event.SubstituteLoggingEvent: void setMessage(java.lang.String)>","<java.lang.System: void <clinit>()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.util.AbstractQueue: boolean add(java.lang.Object)>","<org.slf4j.event.SubstituteLoggingEvent: void setThrowable(java.lang.Throwable)>","<org.slf4j.event.SubstituteLoggingEvent: void setLevel(org.slf4j.event.Level)>"],"<org.bitcoinj.wallet.Protos$Key: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Key: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$Key: void initFields()>","<org.bitcoinj.wallet.Protos$Key: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key$1: void <init>()>"],"<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>":["<com.google.protobuf.CodedOutputStream: void writeRawVarint64(long)>"],"<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void show(androidx.fragment.app.FragmentManager,android.net.Uri)>":["<android.os.Bundle: void <init>()>","<androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void <init>()>","<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>","<androidx.fragment.app.Fragment: void <clinit>()>","<android.os.Bundle: void <clinit>()>","<androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException negativeSize()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilder(org.bitcoinj.wallet.Protos$EncryptedData)>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(org.bitcoinj.wallet.Protos$EncryptedData)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$200(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor getField(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>","<com.google.protobuf.LiteralByteString: int getOffsetIntoBytes()>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>"],"<de.schildbach.wallet.service.InactivityNotificationService: void onHandleIntent(android.content.Intent)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.service.InactivityNotificationService: void handleDismissForever()>","<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<de.schildbach.wallet.service.InactivityNotificationService: void handleDismiss()>","<de.schildbach.wallet.service.InactivityNotificationService: void handleMaybeShowNotification(org.bitcoinj.wallet.Wallet)>","<org.bitcoinj.core.Context: void <clinit>()>","<de.schildbach.wallet.service.InactivityNotificationService: void handleDonate(org.bitcoinj.wallet.Wallet)>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: org.bitcoinj.core.Coin getAmount()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.ArithmeticException: void <init>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder addTransactions(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: void ensureTransactionsIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.common.util.concurrent.AggregateFuture: boolean addCausalChain(java.util.Set,java.lang.Throwable)>":["<org.spongycastle.asn1.ASN1Exception: java.lang.Throwable getCause()>","<org.spongycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()>","<org.spongycastle.crypto.CryptoException: java.lang.Throwable getCause()>","<ch.qos.logback.core.spi.ScanException: java.lang.Throwable getCause()>","<java.lang.Throwable: java.lang.Throwable getCause()>"],"<ch.qos.logback.core.spi.FilterAttachableImpl: void <init>()>":["<java.lang.Object: void <init>()>","<ch.qos.logback.core.util.COWArrayList: void <init>(java.lang.Object[])>"],"<org.bitcoinj.core.Block: java.util.List buildMerkleTree()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.Math: int min(int,int)>","<org.bitcoinj.core.Utils: byte[] reverseBytes(byte[])>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[],int,int,byte[],int,int)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask: void deriveKey(org.bitcoinj.wallet.Wallet,java.lang.String)>":["<de.schildbach.wallet.ui.send.DeriveKeyTask$1: void <init>(de.schildbach.wallet.ui.send.DeriveKeyTask,org.bitcoinj.crypto.KeyCrypter,java.lang.String,org.bitcoinj.wallet.Wallet)>","<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<de.schildbach.wallet.ui.send.DeriveKeyTask$1: void run()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<androidx.core.util.Preconditions: void checkState(boolean)>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer selectDownloadPeer(java.util.List)>":["<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<java.lang.Math: double random()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Math: int max(int,int)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.Math: int min(int,int)>","<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<java.lang.Double: boolean isNaN(double)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>","<java.util.ArrayList: void <init>()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<java.lang.Double: void <clinit>()>","<java.util.ArrayList: int size()>","<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>","<org.bitcoinj.core.PeerGroup: int getMostCommonChainHeight(java.util.List)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)>":["<java.lang.Math: long min(long,long)>","<java.lang.System: long nanoTime()>","<java.lang.Object: void notify()>","<okio.AsyncTimeout$Watchdog: void <init>()>","<okio.AsyncTimeout: void <clinit>()>","<okio.Timeout: void <clinit>()>","<java.lang.AssertionError: void <init>()>","<okio.Timeout: long deadlineNanoTime()>","<okio.AsyncTimeout: void <init>()>","<java.lang.Thread: void start()>","<java.lang.System: void <clinit>()>","<okio.AsyncTimeout$Watchdog: void run()>","<okio.AsyncTimeout: long remainingNanos(long)>"],"<org.spongycastle.asn1.BERApplicationSpecificParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.BERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>"],"<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener clearListeners(com.google.common.util.concurrent.AbstractFuture$Listener)>":["<com.google.common.util.concurrent.AbstractFuture$Listener: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter)>":["<ch.qos.logback.core.spi.ContextAwareImpl: void <init>(ch.qos.logback.core.Context,java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsFragment$1)>","<android.os.Handler: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$4: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$3: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<com.google.protobuf.CodedInputStream: int pushLimit(int)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException negativeSize()>","<com.google.protobuf.CodedInputStream: void recomputeBufferSizeAfterLimit()>"],"<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: org.bitcoinj.wallet.Protos$Wallet$EncryptionType valueOf(int)>":["<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>"],"<org.bitcoinj.core.TransactionOutput: void bitcoinSerializeToStream(java.io.OutputStream)>":["<org.bitcoinj.core.VarInt: byte[] encode()>","<org.bitcoinj.core.Utils: void <clinit>()>","<java.io.ByteArrayOutputStream: void write(byte[])>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.Utils: void int64ToByteStreamLE(long,java.io.OutputStream)>","<org.bitcoinj.core.VarInt: void <init>(long)>"],"<ch.qos.logback.core.pattern.parser.OptionTokenizer: void <init>(ch.qos.logback.core.pattern.parser.TokenStream,ch.qos.logback.core.pattern.util.IEscapeUtil)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DERExternal: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.asn1.DERExternal: org.spongycastle.asn1.ASN1Primitive getObjFromVector(org.spongycastle.asn1.ASN1EncodableVector,int)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.DERExternal: void setEncoding(int)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener,java.util.concurrent.Executor)>":["<org.bitcoinj.wallet.BasicKeyChain: void addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener,java.util.concurrent.Executor)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHash(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$Wallet: int getWatchedScriptCount()>":["<java.util.ArrayList: int size()>"],"<org.bitcoinj.params.Networks: void <clinit>()>":["<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object)>","<org.bitcoinj.params.TestNet3Params: void <clinit>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.Networks: void <clinit>()>","<org.bitcoinj.params.MainNetParams: org.bitcoinj.params.MainNetParams get()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: org.bitcoinj.params.TestNet3Params get()>"],"<de.schildbach.wallet.ui.RequestCoinsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>":["<de.schildbach.wallet.ui.AbstractWalletActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<de.schildbach.wallet.ui.Event: void <init>(java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Sha256Hash getParentTransactionHash()>":["<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>"],"<androidx.recyclerview.widget.AdapterListUpdateCallback: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FileOptions$1: void <init>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: void initFields()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>":["<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Token: void <init>(int)>","<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String)>"],"<com.google.common.util.concurrent.MoreExecutors$5: void execute(java.lang.Runnable)>":["<com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)>","<com.google.common.util.concurrent.MoreExecutors$5$1: void <init>(com.google.common.util.concurrent.MoreExecutors$5,java.lang.Runnable)>","<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void execute(java.lang.Runnable)>","<com.google.common.util.concurrent.MoreExecutors$5$1: void run()>","<com.google.common.util.concurrent.MoreExecutors$5: void execute(java.lang.Runnable)>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setEnabled(boolean)>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: void update()>"],"<de.schildbach.wallet.util.Formats: java.lang.String[] sanitizeMemo(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.util.Formats: void <clinit>()>"],"<com.lambdaworks.jni.Platform$Arch: com.lambdaworks.jni.Platform$Arch[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.lambdaworks.jni.Platform$Arch: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.core.InsufficientMoneyException)>":["<java.lang.Object: void <init>()>"],"<com.squareup.okhttp.OkHttpClient: void <init>()>":["<java.lang.Object: void <init>()>","<com.squareup.okhttp.internal.RouteDatabase: void <init>()>","<com.squareup.okhttp.Dispatcher: void <init>()>","<java.util.ArrayList: void <init>()>"],"<okio.AsyncTimeout$Watchdog: void run()>":["<okhttp3.RealCall$1: void timedOut()>","<okio.AsyncTimeout: void timedOut()>","<okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()>","<okio.Okio$4: void timedOut()>","<okio.AsyncTimeout: void <clinit>()>","<okio.Timeout: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstanceForType()>"],"<org.bitcoinj.core.DummySerializer: void <init>()>":["<org.bitcoinj.core.MessageSerializer: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction: int getTransactionOutputCount()>":["<java.util.ArrayList: int size()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.Lists: boolean equalsImpl(java.util.List,java.lang.Object)>":["<java.util.LinkedList: int size()>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.Iterators: boolean elementsEqual(java.util.Iterator,java.util.Iterator)>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>","<com.google.common.collect.RegularImmutableList: int size()>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>","<java.util.LinkedList: java.util.Iterator iterator()>","<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addFixed32(int)>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$602(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$600(com.google.protobuf.UnknownFieldSet$Field)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.spongycastle.asn1.ASN1Set: boolean lessThanOrEqual(byte[],byte[])>":["<java.lang.Math: int min(int,int)>"],"<org.bitcoinj.core.TransactionConfidence$Listener$ChangeReason: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.util.concurrent.AggregateFuture: void afterDone()>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: com.google.common.collect.ImmutableCollection access$000(com.google.common.util.concurrent.AggregateFuture$RunningState)>","<com.google.common.util.concurrent.AbstractFuture: void afterDone()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void interruptTask()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean cancel(boolean)>","<com.google.common.util.concurrent.AbstractFuture: boolean wasInterrupted()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>"],"<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>":["<org.bitcoinj.core.ECKey: boolean isEncrypted()>","<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>"],"<androidx.loader.content.ModernAsyncTask: void <init>()>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>()>","<java.lang.Object: void <init>()>","<androidx.loader.content.ModernAsyncTask$2: void <init>(androidx.loader.content.ModernAsyncTask)>","<androidx.loader.content.ModernAsyncTask$Status: void <clinit>()>","<androidx.loader.content.ModernAsyncTask$3: void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable)>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node E()>":["<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node Eopt()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node T()>","<ch.qos.logback.core.pattern.parser.Node: void setNext(ch.qos.logback.core.pattern.parser.Node)>"],"<java.lang.Double: java.lang.Double valueOf(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Wallet$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Wallet$1: org.bitcoinj.wallet.Protos$Wallet parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setType(org.bitcoinj.wallet.Protos$TransactionConfidence$Type)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.base.CharMatcher$Any: void <init>()>":["<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>"],"<androidx.recyclerview.widget.AsyncDifferConfig$Builder: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback)>":["<java.lang.Object: void <init>()>"],"<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildByMinutes(double)>":["<ch.qos.logback.core.util.Duration: void <init>(long)>","<ch.qos.logback.core.util.Duration: void <clinit>()>"],"<org.spongycastle.math.ec.WNafUtil: int getNafWeight(java.math.BigInteger)>":["<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>","<java.math.BigInteger: int signum()>","<java.math.BigInteger: int bitCount()>"],"<java.lang.StringBuffer: java.lang.StringBuffer append(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.net.FilterMerger$Result: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: void <init>(com.google.common.util.concurrent.ListenableFuture)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.ForwardingListenableFuture: void <init>()>"],"<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message buildPartial()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$ExtendableBuilder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void ensureExtensionsIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.FieldSet: void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subListUnchecked(int,int)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>"],"<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask: void onFail(int,java.lang.Object[])>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.offline.DirectPaymentTask$2: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$2: void <init>(de.schildbach.wallet.offline.DirectPaymentTask,int,java.lang.Object[])>"],"<com.google.protobuf.CodedInputStream: void <init>(java.io.InputStream)>":["<java.lang.Object: void <init>()>"],"<androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)>":["<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>"],"<org.bitcoinj.core.ECKey: void setCreationTimeSeconds(long)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList()>":["<com.google.common.collect.RegularImmutableSet: com.google.common.collect.ImmutableList createAsList()>"],"<androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: boolean executePendingTransactions()>":["<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>"],"<org.bitcoinj.core.VerificationException$CoinbaseScriptSizeOutOfRange: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.net.InetAddresses: byte[] textToNumericFormatV4(java.lang.String)>":["<com.google.common.base.AbstractIterator: boolean hasNext()>","<com.google.common.net.InetAddresses: byte parseOctet(java.lang.String)>","<com.google.common.base.AbstractIterator: java.lang.Object next()>","<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>","<com.google.common.base.Splitter$5: java.util.Iterator iterator()>","<com.google.common.net.InetAddresses: void <clinit>()>"],"<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation isInputStandard(org.bitcoinj.core.TransactionInput)>":["<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <clinit>()>","<org.bitcoinj.crypto.TransactionSignature: boolean isEncodingCanonical(byte[])>","<org.bitcoinj.core.ECKey$ECDSASignature: org.bitcoinj.core.ECKey$ECDSASignature decodeFromDER(byte[])>","<org.bitcoinj.core.ECKey$ECDSASignature: boolean isCanonical()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>":["<org.bitcoinj.core.Block: int hashCode()>","<org.bitcoinj.core.Sha256Hash: int hashCode()>","<org.bitcoinj.core.NetworkParameters: int hashCode()>","<java.util.AbstractList: int hashCode()>","<org.bitcoinj.core.TransactionOutput: int hashCode()>","<androidx.collection.SimpleArrayMap: void allocArrays(int)>","<java.lang.String: int hashCode()>","<com.google.common.hash.HashCode: int hashCode()>","<org.bitcoinj.core.Transaction: int hashCode()>","<com.google.protobuf.AbstractMessage: int hashCode()>","<androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>","<org.bitcoinj.crypto.DeterministicKey: int hashCode()>","<java.lang.Enum: int hashCode()>","<androidx.collection.SimpleArrayMap: int indexOfNull()>","<org.bitcoinj.core.PeerAddress: int hashCode()>","<org.bitcoinj.wallet.DeterministicSeed: int hashCode()>","<java.lang.Object: int hashCode()>","<de.schildbach.wallet.ui.AddressAndLabel: int hashCode()>","<java.io.File: int hashCode()>","<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>","<java.util.ConcurrentModificationException: void <init>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.crypto.ChildNumber: int hashCode()>","<java.lang.System: void <clinit>()>","<okhttp3.HttpUrl: int hashCode()>","<org.bitcoinj.core.VersionedChecksummedBytes: int hashCode()>","<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>"],"<org.spongycastle.crypto.digests.RIPEMD160Digest: void processLength(long)>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: void processBlock()>"],"<org.bitcoinj.wallet.BasicKeyChain: void queueOnKeysAdded(java.util.List)>":["<org.bitcoinj.wallet.BasicKeyChain$1: void run()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.BasicKeyChain$1: void <init>(org.bitcoinj.wallet.BasicKeyChain,org.bitcoinj.utils.ListenerRegistration,java.util.List)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$7: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setLazy(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Transaction$Pool getProtoPool(org.bitcoinj.wallet.WalletTransaction)>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>"],"<com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <clinit>()>":["<com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <clinit>()>","<com.google.common.util.concurrent.ImmediateFuture: void <clinit>()>","<com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <init>(java.lang.Object)>"],"<com.google.protobuf.UnmodifiableLazyStringList: java.util.List getUnderlyingElements()>":["<com.google.protobuf.LazyStringArrayList: java.util.List getUnderlyingElements()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.spongycastle.crypto.macs.HMac: void <init>(org.spongycastle.crypto.Digest,int)>":["<java.lang.Object: void <init>()>","<org.spongycastle.crypto.digests.SHA512Digest: int getDigestSize()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$14900()>"],"<com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.util.Map$Entry)>":["<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: void ensureCertificateIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.protobuf.AbstractMessageLite: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.KeyChainGroup fromProtobufUnencrypted(org.bitcoinj.core.NetworkParameters,java.util.List,org.bitcoinj.wallet.KeyChainFactory)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<java.util.ArrayList: boolean isEmpty()>","<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.BasicKeyChain fromProtobufUnencrypted(java.util.List)>","<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List fromProtobuf(java.util.List,org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.wallet.KeyChainFactory)>","<org.bitcoinj.wallet.KeyChainGroup: void extractFollowingKeychains(java.util.List)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: java.util.EnumMap createCurrentKeysMap(java.util.List)>","<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.BasicKeyChain,java.util.List,java.util.EnumMap,org.bitcoinj.crypto.KeyCrypter)>","<java.util.LinkedList: boolean isEmpty()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<android.util.SparseArray: int size()>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionRangeFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.core.TxConfidenceTable: org.bitcoinj.core.TransactionConfidence getOrCreate(org.bitcoinj.core.Sha256Hash)>":["<org.bitcoinj.core.TxConfidenceTable$WeakConfidenceReference: void <init>(org.bitcoinj.core.TransactionConfidence,java.lang.ref.ReferenceQueue)>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.TransactionConfidence: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.ref.WeakReference: java.lang.Object get()>","<org.bitcoinj.core.TransactionConfidence: void <init>(org.bitcoinj.core.Sha256Hash)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder create()>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void <init>()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void writeField(java.io.ByteArrayOutputStream,long)>":["<java.io.ByteArrayOutputStream: void write(byte[],int,int)>"],"<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.uri.BitcoinURI: java.lang.String getPaymentRequestUrl()>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>"],"<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <clinit>()>":["<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <clinit>()>","<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <init>()>"],"<ch.qos.logback.core.pattern.util.AsIsEscapeUtil: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)>":["<java.util.ArrayList: int indexOf(java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>"],"<com.google.common.util.concurrent.Service$State$5: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>"],"<androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>":["<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>","<androidx.lifecycle.FullLifecycleObserverAdapter$1: void <clinit>()>","<java.lang.Enum: int ordinal()>"],"<ch.qos.logback.core.joran.event.SaxEventRecorder: java.util.List recordEvents(org.xml.sax.InputSource)>":["<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<ch.qos.logback.core.joran.event.SaxEventRecorder: org.xmlpull.v1.sax2.Driver buildPullParser()>","<java.lang.Throwable: java.lang.String getLocalizedMessage()>","<ch.qos.logback.core.joran.spi.JoranException: void <init>(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.core.joran.event.SaxEventRecorder: void handleError(java.lang.String,java.lang.Throwable)>","<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)>","<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>","<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>"],"<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.MessageSerializer,int)>":["<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,int,org.bitcoinj.core.MessageSerializer,int)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1100()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity$8: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<java.lang.Object: void <init>()>"],"<java.lang.Class: boolean isArray()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.RequestCoinsActivity: boolean onCreateOptionsMenu(android.view.Menu)>":["<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>","<android.app.Activity: android.view.MenuInflater getMenuInflater()>"],"<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.io.InputStream,java.lang.String)>":["<org.xml.sax.InputSource: void <init>(java.io.InputStream)>","<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(org.xml.sax.InputSource)>","<org.xml.sax.InputSource: void setSystemId(java.lang.String)>"],"<androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>":["<androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>","<androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)>"],"<androidx.fragment.app.FragmentTransition$2: void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setEnd(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.collect.Iterators$PeekingImpl: void <init>(java.util.Iterator)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.google.common.io.BaseEncoding$Base16Encoding: void encodeTo(java.lang.Appendable,byte[],int,int)>":["<java.lang.StringBuilder: java.lang.Appendable append(char)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>"],"<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.params.TestNet3Params: void <init>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<org.bitcoinj.core.Block: void setDifficultyTarget(long)>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <init>()>","<org.bitcoinj.core.Utils: java.math.BigInteger decodeCompactBits(long)>","<java.lang.String: void <clinit>()>","<org.bitcoinj.core.Block: void setNonce(long)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Block: void setTime(long)>","<org.bitcoinj.core.Block: java.lang.String getHashAsString()>"],"<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],org.bitcoinj.core.TransactionOutPoint,org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.VarInt: int sizeOf(long)>","<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>","<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<com.google.common.collect.UnmodifiableListIterator: void <init>()>":["<com.google.common.collect.UnmodifiableIterator: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions build()>"],"<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: com.google.protobuf.UnknownFieldSet$Field$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field build()>"],"<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>":["<okhttp3.internal.platform.Platform: void <clinit>()>"],"<org.bitcoinj.core.Peer$2: void <init>(org.bitcoinj.core.Peer)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters$1: void <init>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder access$20100()>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder create()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void characters(ch.qos.logback.core.joran.event.BodyEvent)>":["<ch.qos.logback.core.joran.spi.Interpreter: void setDocumentLocator(org.xml.sax.Locator)>","<java.util.Stack: java.lang.Object peek()>","<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void start()>":["<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.pattern.DynamicConverter: java.util.List getOptionList()>","<ch.qos.logback.core.pattern.DynamicConverter: void start()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator)>","<java.util.Locale: void <clinit>()>","<ch.qos.logback.core.pattern.DynamicConverter: void addError(java.lang.String)>","<ch.qos.logback.core.pattern.DynamicConverter: ch.qos.logback.core.Context getContext()>","<ch.qos.logback.core.pattern.DynamicConverter: java.lang.String getFirstOption()>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void addIgnoreStackTraceLine(java.lang.String)>"],"<org.slf4j.helpers.NOPLogger: void <clinit>()>":["<org.slf4j.helpers.NOPLogger: void <init>()>","<org.slf4j.helpers.NOPLogger: void <clinit>()>"],"<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>":["<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>","<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>","<okhttp3.Headers: void checkName(java.lang.String)>","<okhttp3.Headers: void checkValue(java.lang.String,java.lang.String)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.core.Utils: long currentTimeMillis()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.System: long currentTimeMillis()>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder access$17200()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder create()>"],"<org.bitcoinj.wallet.Wallet: boolean isWatching()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: void maybeUpgradeToHD()>","<org.bitcoinj.wallet.KeyChainGroup: boolean isWatching()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$4: void run()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void broadcastTransaction(android.content.Context,org.bitcoinj.core.Transaction)>"],"<androidx.fragment.app.FragmentTransition$4: void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)>":["<java.lang.Object: void <init>()>"],"<java.lang.Error: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction)>":["<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.AbstractMessage: com.google.protobuf.ByteString toByteString(java.lang.Object)>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>"],"<androidx.arch.core.executor.ArchTaskExecutor: void <init>()>":["<androidx.arch.core.executor.DefaultTaskExecutor: void <init>()>","<androidx.arch.core.executor.TaskExecutor: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener: void stop()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.Configuration access$300(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService: android.app.NotificationManager access$400(de.schildbach.wallet.service.BlockchainService)>","<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>"],"<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilderForType()>"],"<com.google.common.hash.MessageDigestHashFunction: com.google.common.hash.Hasher newHasher()>":["<com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>","<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void <init>(java.security.MessageDigest,int,com.google.common.hash.MessageDigestHashFunction$1)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onPause()>":["<androidx.fragment.app.Fragment: void onPause()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)>"],"<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder access$5500()>"],"<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>":["<java.util.HashMap: boolean containsKey(java.lang.Object)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.MnemonicCode: void <init>()>":["<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<org.bitcoinj.crypto.MnemonicCode: java.io.InputStream openDefaultWords()>","<org.bitcoinj.crypto.MnemonicCode: void <init>(java.io.InputStream,java.lang.String)>"],"<ch.qos.logback.core.joran.action.ConversionRuleAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstanceForType()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractService$StateSnapshot: void <init>(com.google.common.util.concurrent.Service$State,boolean,java.lang.Throwable)>":["<com.google.common.util.concurrent.Service$State: void <clinit>()>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>"],"<com.google.common.base.Equivalence: int hash(java.lang.Object)>":["<com.google.common.base.Equivalence$Identity: int doHash(java.lang.Object)>","<com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureBlockRelativityOffsetsIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder setCreationTimestamp(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData getDefaultInstanceForType()>"],"<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.Fragment: void performResume()>","<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>","<androidx.fragment.app.Fragment: int getStateAfterAnimating()>","<androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)>","<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>","<android.util.Log: int w(java.lang.String,java.lang.String)>","<androidx.fragment.app.Fragment: void performPause()>","<androidx.fragment.app.Fragment$2: android.view.View onFindViewById(int)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.Fragment)>","<java.lang.Integer: java.lang.String toHexString(int)>","<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>","<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl getFragmentManagerImpl()>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>","<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>","<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<androidx.fragment.app.Fragment: void performStop()>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void onAttach(android.content.Context)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)>","<androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<androidx.fragment.app.Fragment: void performDestroyView()>","<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>","<androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>","<java.lang.Integer: void <clinit>()>","<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>","<androidx.fragment.app.Fragment: void performDetach()>","<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>","<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onAttach(android.content.Context)>","<androidx.fragment.app.Fragment: void performDestroy()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<androidx.fragment.app.Fragment: boolean isInBackStack()>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>","<de.schildbach.wallet.ui.ExchangeRatesFragment: void onAttach(android.content.Context)>","<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>","<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>","<android.util.SparseArray: java.lang.Object get(int)>","<androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onAttach(android.content.Context)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onViewCreated(android.view.View,android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)>","<androidx.fragment.app.Fragment: void performStart()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange)>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$200(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>"],"<de.schildbach.wallet.ui.ExchangeRatesActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin negate()>":["<org.bitcoinj.core.Coin: void <init>(long)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int indexOf(int)>","<java.lang.String: int length()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$3: void onChanged(org.bitcoinj.wallet.Wallet)>":["<de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread: void run()>","<java.lang.Thread: void start()>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<de.schildbach.wallet.offline.AcceptBluetoothService: de.schildbach.wallet.offline.AcceptBluetoothThread access$100(de.schildbach.wallet.offline.AcceptBluetoothService)>","<de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread: void run()>","<de.schildbach.wallet.offline.AcceptBluetoothService: de.schildbach.wallet.offline.AcceptBluetoothThread access$200(de.schildbach.wallet.offline.AcceptBluetoothService)>"],"<org.spongycastle.crypto.digests.RIPEMD160Digest: void <init>()>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: void reset()>","<org.spongycastle.crypto.digests.GeneralDigest: void <init>()>"],"<okhttp3.CipherSuite: okhttp3.CipherSuite init(java.lang.String,int)>":["<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<okhttp3.CipherSuite: void <init>(java.lang.String)>","<okhttp3.CipherSuite: void <clinit>()>"],"<okhttp3.OkHttpClient: void <clinit>()>":["<okhttp3.ConnectionSpec: void <clinit>()>","<okhttp3.OkHttpClient$1: void <init>()>","<okhttp3.OkHttpClient: void <clinit>()>","<okhttp3.Protocol: void <clinit>()>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[])>":["<com.google.protobuf.AbstractParser: void <clinit>()>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.core.content.ContextCompat: void <clinit>()>":["<java.lang.Object: void <init>()>","<androidx.core.content.ContextCompat: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.Token: void <init>(int)>":["<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String,java.util.List)>"],"<org.spongycastle.crypto.params.ECPrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.ECDomainParameters)>":["<org.spongycastle.crypto.params.ECKeyParameters: void <init>(boolean,org.spongycastle.crypto.params.ECDomainParameters)>"],"<de.schildbach.wallet.service.BlockchainService: void broadcastBlockchainState()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>","<android.content.Intent: void <init>(java.lang.String)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.service.BlockchainState getBlockchainState()>","<de.schildbach.wallet.service.BlockchainState: void putExtras(android.content.Intent)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)>","<android.content.Intent: void <clinit>()>"],"<de.schildbach.wallet.ui.AlertDialogsFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>","<android.os.Handler: void <init>()>"],"<com.google.common.collect.ComparatorOrdering: void <init>(java.util.Comparator)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.Ordering: void <init>()>"],"<org.bitcoinj.params.Networks: java.util.Set get()>":["<org.bitcoinj.params.Networks: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.VersionMessage getVersionMessage()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>","<okhttp3.HttpUrl: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>"],"<com.google.protobuf.GeneratedMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: boolean has(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$200(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: boolean has(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>"],"<de.schildbach.wallet.ui.scan.CameraManager: void requestPreviewFrame(android.hardware.Camera$PreviewCallback)>":["<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>"],"<org.spongycastle.asn1.ASN1Boolean: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>":["<okhttp3.RealCall: okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)>"],"<com.google.protobuf.SmallSortedMap$EntryIterator: void <init>(com.google.protobuf.SmallSortedMap)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoinj.core.PeerGroup$13: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Peer,int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionOutPoint: void parse()>":["<org.bitcoinj.core.Message: long readUint32()>","<org.bitcoinj.core.Message: org.bitcoinj.core.Sha256Hash readHash()>"],"<org.bitcoinj.core.Peer$4: void <init>(org.bitcoinj.core.Peer,org.bitcoinj.utils.ListenerRegistration)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.AddressBookActivity: void onCreate(android.os.Bundle)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()>","<de.schildbach.wallet.ui.WalletAddressesFragment: void <clinit>()>","<de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter: void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: boolean executePendingTransactions()>","<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>","<de.schildbach.wallet.ui.WalletAddressesFragment: void <init>()>","<de.schildbach.wallet.ui.SendingAddressesFragment: void <init>()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.BackStackRecord: int commit()>","<android.app.Activity: void setContentView(int)>","<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)>","<android.app.Activity: android.view.View findViewById(int)>","<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)>","<androidx.fragment.app.BackStackRecord: boolean isEmpty()>","<de.schildbach.wallet.ui.SendingAddressesFragment: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setConfidence(org.bitcoinj.wallet.Protos$TransactionConfidence$Builder)>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder setMessage(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence build()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$ExchangeRate: long access$20502(org.bitcoinj.wallet.Protos$ExchangeRate,long)>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$ExchangeRate: int access$20802(org.bitcoinj.wallet.Protos$ExchangeRate,int)>","<org.bitcoinj.wallet.Protos$ExchangeRate: long access$20602(org.bitcoinj.wallet.Protos$ExchangeRate,long)>","<org.bitcoinj.wallet.Protos$ExchangeRate: java.lang.Object access$20702(org.bitcoinj.wallet.Protos$ExchangeRate,java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setValue(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>":["<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>","<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>","<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>","<okhttp3.internal.platform.Platform: void <clinit>()>"],"<de.schildbach.wallet.util.Qr: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<com.google.zxing.qrcode.QRCodeWriter: void <init>()>","<de.schildbach.wallet.util.Qr: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$1: void <init>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>":["<java.lang.NullPointerException: void <init>()>"],"<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>":["<org.bitcoinj.core.Block: void unCache()>","<org.bitcoinj.core.Transaction: void unCache()>"],"<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type valueOf(com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type)>":["<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type[] values()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>"],"<ch.qos.logback.classic.spi.EventArgUtil: java.lang.Object[] trimmedCopy(java.lang.Object[])>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.System: void <clinit>()>"],"<okhttp3.internal.platform.Platform: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.ECKey$ECDSASignature: void <init>(java.math.BigInteger,java.math.BigInteger)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.ElementPath: int size()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.WireFormat: void <clinit>()>":["<com.google.protobuf.WireFormat: int makeTag(int,int)>","<com.google.protobuf.WireFormat: void <clinit>()>"],"<androidx.loader.content.Loader: void startLoading()>":["<androidx.loader.content.CursorLoader: void onStartLoading()>"],"<org.bitcoinj.crypto.ChildNumber: void <init>(int,boolean)>":["<org.bitcoinj.crypto.ChildNumber: boolean hasHardenedBit(int)>","<java.lang.Object: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>"],"<com.google.common.collect.ImmutableCollection$Builder: void <init>()>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable,java.util.Set)>":["<java.lang.Object: java.lang.Class getClass()>","<org.spongycastle.asn1.ASN1Exception: java.lang.Throwable getCause()>","<org.spongycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()>","<java.lang.Object: void <init>()>","<ch.qos.logback.classic.spi.ThrowableProxyUtil: int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[])>","<org.spongycastle.crypto.CryptoException: java.lang.Throwable getCause()>","<ch.qos.logback.classic.spi.ThrowableProxyUtil: ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.IllegalArgumentException: java.lang.String getMessage()>","<ch.qos.logback.core.spi.ScanException: java.lang.Throwable getCause()>","<java.lang.Throwable: java.lang.Throwable getCause()>","<java.lang.IllegalStateException: java.lang.String getMessage()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable,java.util.Set)>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.Throwable: java.lang.String getMessage()>","<ch.qos.logback.classic.spi.ThrowableProxy: void <clinit>()>","<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>"],"<okhttp3.CookieJar: void <clinit>()>":["<okhttp3.CookieJar$1: void <init>()>","<okhttp3.CookieJar: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>":["<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>"],"<ch.qos.logback.core.joran.GenericConfigurator: ch.qos.logback.core.joran.spi.ElementPath initialElementPath()>":["<ch.qos.logback.core.joran.spi.ElementPath: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromPaymentRequest(java.lang.String,byte[])>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String,byte[])>","<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void parse()>"],"<com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)>":["<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$EnumOptions: boolean access$16502(com.google.protobuf.DescriptorProtos$EnumOptions,boolean)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$EnumOptions: int access$16702(com.google.protobuf.DescriptorProtos$EnumOptions,int)>","<com.google.protobuf.DescriptorProtos$EnumOptions: java.util.List access$16602(com.google.protobuf.DescriptorProtos$EnumOptions,java.util.List)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: boolean access$16402(com.google.protobuf.DescriptorProtos$EnumOptions,boolean)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder tlsVersions(com.squareup.okhttp.TlsVersion[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder tlsVersions(java.lang.String[])>","<java.lang.String: void <clinit>()>"],"<org.spongycastle.crypto.digests.RIPEMD160Digest: void processBlock()>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: int f3(int,int,int)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: int f5(int,int,int)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: int f1(int,int,int)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: int f4(int,int,int)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: int f2(int,int,int)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: int RL(int,int)>"],"<de.schildbach.wallet.offline.DirectPaymentTask$1: void run()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1: void onResult(boolean)>","<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask: de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback access$600(de.schildbach.wallet.offline.DirectPaymentTask)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message buildPartial()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions buildPartial()>"],"<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: android.content.Intent getIntent()>","<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void show(androidx.fragment.app.FragmentManager,android.net.Uri)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment: void <clinit>()>"],"<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>"],"<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet emptySet()>":["<com.google.protobuf.FieldSet: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$200(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void handleDecrypt()>"],"<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>":["<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>","<java.util.concurrent.SynchronousQueue: void <init>()>","<okhttp3.internal.Util: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<java.lang.String: java.lang.String replace(char,char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.Platform: java.lang.String emptyToNull(java.lang.String)>":["<com.google.common.base.Platform: boolean stringIsNullOrEmpty(java.lang.String)>","<com.google.common.base.Platform: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>":["<android.util.SparseArray: void clear()>","<android.util.SparseArray: int size()>","<android.util.SparseArray: void <init>()>"],"<org.slf4j.LoggerFactory: boolean nonMatchingClasses(java.lang.Class,java.lang.Class)>":["<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Sha256Hash)>":["<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$4: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()>":["<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.SmallSortedMap: java.util.Map access$600(com.google.protobuf.SmallSortedMap)>"],"<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.pattern.parser.Node: java.lang.Object getValue()>","<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String,boolean)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: void <init>(java.lang.String)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$5: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService)>":["<android.content.BroadcastReceiver: void <init>()>"],"<dummyMainClass: de.schildbach.wallet.service.UpgradeWalletService dummyMainMethod_de_schildbach_wallet_service_UpgradeWalletService(android.content.Intent)>":["<de.schildbach.wallet.service.UpgradeWalletService: void <clinit>()>","<de.schildbach.wallet.service.UpgradeWalletService: void <init>()>","<de.schildbach.wallet.service.UpgradeWalletService: void onCreate()>","<de.schildbach.wallet.service.UpgradeWalletService: void onHandleIntent(android.content.Intent)>","<de.schildbach.wallet.service.UpgradeWalletService: android.os.IBinder onBind(android.content.Intent)>"],"<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>":["<com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>"],"<com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<com.google.common.base.MoreObjects$ToStringHelper: void <init>(java.lang.String,com.google.common.base.MoreObjects$1)>"],"<de.schildbach.wallet.service.BlockchainService: void broadcastPeerState(int)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>","<android.content.Intent: void <init>(java.lang.String)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)>","<android.content.Intent: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTransactionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void initFields()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>"],"<de.schildbach.wallet.ui.WalletActivity$11: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters build()>"],"<org.bitcoinj.core.TransactionBroadcast$ConfidenceChange: void <init>(org.bitcoinj.core.TransactionBroadcast,org.bitcoinj.core.TransactionBroadcast$1)>":["<org.bitcoinj.core.TransactionBroadcast$ConfidenceChange: void <init>(org.bitcoinj.core.TransactionBroadcast)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void writeTo(com.google.protobuf.CodedOutputStream)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: int getSerializedSize()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getPkiTypeBytes()>","<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>","<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: void <init>(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,int)>":["<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<com.google.protobuf.Descriptors$MethodDescriptor: void <init>(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$ServiceDescriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors: void <clinit>()>","<com.google.protobuf.Descriptors: java.lang.String access$1500(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<ch.qos.logback.core.joran.spi.ElementPath: void pop()>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: int size()>"],"<org.bitcoinj.wallet.Wallet$5: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos: void <clinit>()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>","<com.google.protobuf.Descriptors$FileDescriptor: java.util.List getMessageTypes()>","<com.google.protobuf.Descriptors$FileDescriptor: void internalBuildGeneratedFileFrom(java.lang.String[],com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$FileDescriptor$InternalDescriptorAssigner)>","<com.google.protobuf.DescriptorProtos$1: void <init>()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String[])>"],"<de.schildbach.wallet.util.CrashReporter: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: java.util.Set getTransactions(boolean)>":["<java.util.HashSet: void <init>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.HashMap: java.util.Collection values()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.AbstractCollection: boolean addAll(java.util.Collection)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.TextFormat$TextGenerator: void indent()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>":["<ch.qos.logback.core.pattern.parser.TokenStream: java.util.List tokenize()>","<ch.qos.logback.core.pattern.parser.TokenStream: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>","<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String,java.lang.Throwable)>"],"<com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String convert(java.lang.Object)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>","<ch.qos.logback.core.pattern.LiteralConverter: java.lang.String convert(java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(java.lang.Object)>"],"<org.bitcoinj.crypto.ChildNumber: void <clinit>()>":["<org.bitcoinj.crypto.ChildNumber: void <init>(int)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>","<org.bitcoinj.crypto.ChildNumber: void <init>(int,boolean)>"],"<de.schildbach.wallet.ui.preference.PreferenceActivity: boolean isValidFragment(java.lang.String)>":["<java.lang.Class: java.lang.String getName()>"],"<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,java.lang.Throwable,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,java.lang.Throwable)>"],"<org.spongycastle.asn1.DEROctetStringParser: void <init>(org.spongycastle.asn1.DefiniteLengthInputStream)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.DeterministicHierarchy: void <init>(org.bitcoinj.crypto.DeterministicKey)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<com.google.common.collect.Maps: java.util.HashMap newHashMap()>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.util.concurrent.AggregateFuture: java.util.logging.Logger access$500()>":["<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>"],"<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: void maybeForceBuilderInitialization()>"],"<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],int,org.bitcoinj.core.MessageSerializer)>":["<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>"],"<org.spongycastle.asn1.BERTaggedObjectParser: void <init>(boolean,int,org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder toBuilder()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilder(org.bitcoinj.wallet.Protos$DeterministicKey)>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment self()>"],"<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>":["<java.lang.NullPointerException: void <init>()>","<com.squareup.moshi.internal.Util: void checkNotPrimitive(java.lang.reflect.Type)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<com.squareup.moshi.internal.Util: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.squareup.moshi.internal.Util: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>","<com.squareup.moshi.Types: java.lang.Class getRawType(java.lang.reflect.Type)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Class: java.lang.Class getEnclosingClass()>","<java.lang.Object: java.lang.Object clone()>"],"<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15000()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.FieldSet: void <init>(boolean)>":["<java.lang.Object: void <init>()>","<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap newFieldMap(int)>","<com.google.protobuf.FieldSet: void makeImmutable()>"],"<com.squareup.moshi.JsonUtf8Writer: void <init>(okio.BufferedSink)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<com.squareup.moshi.JsonWriter: void <init>()>","<com.squareup.moshi.JsonWriter: void pushScope(int)>"],"<com.google.common.collect.RegularImmutableMap: void <init>(int[],java.lang.Object[],int)>":["<com.google.common.collect.ImmutableMap: void <init>()>"],"<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger findOrDerivePrivateKey()>":["<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger derivePrivateKeyDownwards(org.bitcoinj.crypto.DeterministicKey,byte[])>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey findParentWithPrivKey()>","<java.math.BigInteger: byte[] toByteArray()>"],"<org.spongycastle.math.ec.ECAlgorithms: org.spongycastle.math.ec.ECPoint validatePoint(org.spongycastle.math.ec.ECPoint)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<com.google.common.base.Preconditions: java.lang.String badPositionIndexes(int,int,int)>":["<com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>","<java.lang.Integer: void <clinit>()>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void <clinit>()>":["<java.lang.Class: java.lang.String getName()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>":["<android.transition.TransitionSet: android.transition.Transition addTarget(android.view.View)>","<androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)>","<java.util.ArrayList: int size()>","<android.transition.TransitionSet: int getTransitionCount()>","<android.transition.TransitionSet: java.util.List getTargets()>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>","<androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>","<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment build()>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment buildPartial()>","<org.bitcoin.protocols.payments.Protos$Payment: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>":["<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.core.Transaction)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionOutput: boolean isMineOrWatched(org.bitcoinj.core.TransactionBag)>":["<org.bitcoinj.core.TransactionOutput: boolean isWatched(org.bitcoinj.core.TransactionBag)>","<org.bitcoinj.core.TransactionOutput: boolean isMine(org.bitcoinj.core.TransactionBag)>"],"<com.google.protobuf.Descriptors$FileDescriptor: void internalBuildGeneratedFileFrom(java.lang.String[],com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$FileDescriptor$InternalDescriptorAssigner)>":["<java.lang.String: byte[] getBytes(java.lang.String)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getName()>","<org.bitcoinj.wallet.Protos$1: com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.DescriptorProtos$1: com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int length()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$FileDescriptor buildFrom(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor[],boolean)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$FileDescriptor: void setProto(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoin.protocols.payments.Protos$1: com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto parseFrom(byte[])>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<org.bitcoinj.wallet.KeyChainGroup: java.util.List serializeToProtobuf()>":["<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.BasicKeyChain: java.util.List serializeToProtobuf()>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setType(org.bitcoinj.wallet.Protos$Key$Type)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>":["<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.impl.StaticLoggerBinder: java.lang.String getLoggerFactoryClassStr()>","<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.LoggerFactory: boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: void report(java.lang.String)>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.UnknownFieldSet)>":["<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeField(int,com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.UnknownFieldSet: java.util.Map access$200(com.google.protobuf.UnknownFieldSet)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.core.TransactionOutput: int hashCode()>":["<java.util.Arrays: int hashCode(byte[])>","<com.google.common.base.Objects: int hashCode(java.lang.Object[])>","<java.lang.Integer: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<de.schildbach.wallet.data.PaymentIntent$Output: de.schildbach.wallet.data.PaymentIntent$Output valueOf(org.bitcoinj.protocols.payments.PaymentProtocol$Output)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.script.Script: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent$Output: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.script.Script)>","<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidOutputs: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.data.PaymentIntent$Output: void <clinit>()>","<org.bitcoinj.script.Script: void <init>(byte[])>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>"],"<org.spongycastle.asn1.x500.RDN: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>","<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>","<org.spongycastle.asn1.ASN1Object: void <init>()>","<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$10: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<de.schildbach.wallet.service.BlockchainService$6: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.service.BlockchainService$6: void onChanged(java.util.Date)>"],"<com.google.common.base.AbstractIterator: java.lang.Object endOfData()>":["<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(org.bitcoinj.wallet.Protos$ScryptParameters)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<java.lang.StringBuffer: int length()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture recalculateFastCatchupAndFilter(org.bitcoinj.core.PeerGroup$FilterRecalculateMode)>":["<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>","<org.bitcoinj.core.PeerGroup$10: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.PeerGroup$FilterRecalculateMode,com.google.common.util.concurrent.SettableFuture)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.PeerGroup$10: void run()>"],"<com.google.common.util.concurrent.TrustedListenableFutureTask: void afterDone()>":["<com.google.common.util.concurrent.InterruptibleTask: void interruptTask()>","<com.google.common.util.concurrent.AbstractFuture: void afterDone()>","<com.google.common.util.concurrent.AbstractFuture: boolean wasInterrupted()>"],"<androidx.core.app.NotificationCompat$Style: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$5200()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<dummyMainClass: de.schildbach.wallet.ui.scan.ScanActivity dummyMainMethod_de_schildbach_wallet_ui_scan_ScanActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.scan.ScannerView: void onDraw(android.graphics.Canvas)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void onDestroy()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.scan.ScanActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>","<androidx.fragment.app.FragmentActivity: void onStop()>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<de.schildbach.wallet.ui.scan.ScanActivity: void onResume()>","<de.schildbach.wallet.ui.scan.ScanActivity: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<java.lang.String: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<de.schildbach.wallet.ui.scan.ScannerView: void <init>(android.content.Context,android.util.AttributeSet)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.scan.ScanActivity: void onAttachedToWindow()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<de.schildbach.wallet.ui.scan.ScanActivity: void onPause()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: boolean onKeyDown(int,android.view.KeyEvent)>","<de.schildbach.wallet.ui.scan.ScanActivity: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>","<de.schildbach.wallet.ui.scan.ScanActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void onBackPressed()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <init>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<ch.qos.logback.classic.LoggerContext: void <init>()>":["<ch.qos.logback.classic.Logger: void setLevel(ch.qos.logback.classic.Level)>","<ch.qos.logback.classic.spi.TurboFilterList: void <init>()>","<ch.qos.logback.classic.Logger: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext)>","<ch.qos.logback.classic.Logger: void <clinit>()>","<java.util.ArrayList: void <init>()>","<ch.qos.logback.classic.spi.LoggerContextVO: void <init>(ch.qos.logback.classic.LoggerContext)>","<ch.qos.logback.core.ContextBase: void <init>()>","<ch.qos.logback.classic.LoggerContext: void initEvaluatorMap()>","<ch.qos.logback.classic.Level: void <clinit>()>","<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.concurrent.ConcurrentHashMap: void <init>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable: void run()>":["<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: org.slf4j.Logger access$900()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>"],"<ch.qos.logback.classic.PatternLayout: void <init>()>":["<ch.qos.logback.core.pattern.PatternLayoutBase: void <init>()>","<ch.qos.logback.classic.pattern.EnsureExceptionHandling: void <init>()>"],"<com.google.protobuf.Descriptors$DescriptorPool$PackageDescriptor: void <init>(java.lang.String,java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>":["<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.net.discovery.MultiplexingDiscovery: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.net.discovery.MultiplexingDiscovery: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<ch.qos.logback.classic.joran.action.LoggerContextListenerAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder setPackage(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Wallet: void receivePending(org.bitcoinj.core.Transaction,java.util.List)>":["<org.bitcoinj.wallet.Wallet: void receivePending(org.bitcoinj.core.Transaction,java.util.List,boolean)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onFail(int,java.lang.Object[])>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor: java.lang.Object coerceType(java.lang.Object)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message buildPartial()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message buildPartial()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.collect.ReverseNaturalOrdering: void <clinit>()>":["<com.google.common.collect.ReverseNaturalOrdering: void <clinit>()>","<com.google.common.collect.ReverseNaturalOrdering: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1,java.lang.String,java.io.InputStream)>":["<de.schildbach.wallet.ui.InputParser$StreamInputParser: void <init>(java.lang.String,java.io.InputStream)>"],"<androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)>":["<androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>","<androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>","<android.os.Build$VERSION: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: void maybeDrainReferenceQueues()>":["<com.google.common.collect.MapMakerInternalMap$Segment: void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue)>","<com.google.common.collect.MapMakerInternalMap$Segment: void drainValueReferenceQueue(java.lang.ref.ReferenceQueue)>"],"<androidx.lifecycle.ViewModelStore: void clear()>":["<java.util.HashMap: java.util.Collection values()>","<java.util.HashMap: void clear()>"],"<com.google.protobuf.TextFormat$Printer: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<okhttp3.Dispatcher: int runningCallsCount()>":["<java.util.ArrayDeque: int size()>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setP(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17800()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.signers.TransactionSigner$MissingSignatureException: void <init>()>":["<java.lang.RuntimeException: void <init>()>"],"<com.google.common.base.Optional: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>":["<java.util.NoSuchElementException: void <init>()>","<com.google.common.collect.Iterables: java.lang.Object getLastInNonemptyList(java.util.List)>","<com.google.common.collect.Iterators: java.lang.Object getLast(java.util.Iterator)>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.CodedInputStream)>"],"<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>":["<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)>"],"<org.bitcoinj.net.AbstractTimeoutHandler: void resetTimeout()>":["<org.bitcoinj.net.AbstractTimeoutHandler$1: void <init>(org.bitcoinj.net.AbstractTimeoutHandler)>","<java.util.Timer: void schedule(java.util.TimerTask,long)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>","<java.util.TimerTask: boolean cancel()>"],"<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)>":["<android.transition.TransitionSet: android.transition.Transition clone()>"],"<ch.qos.logback.classic.joran.JoranConfigurator: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>":["<ch.qos.logback.classic.util.DefaultNestedComponentRules: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>":["<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet newFieldSet()>"],"<androidx.loader.content.Loader: boolean cancelLoad()>":["<androidx.loader.content.AsyncTaskLoader: boolean onCancelLoad()>"],"<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String,org.spongycastle.asn1.x500.X500NameStyle)>":["<org.spongycastle.asn1.x500.X500NameBuilder: void <init>(org.spongycastle.asn1.x500.X500NameStyle)>","<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.Vector: void <init>()>","<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>","<java.util.Vector: void addElement(java.lang.Object)>","<org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String unescape(java.lang.String)>","<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500Name build()>","<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>","<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])>","<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addRDN(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>","<org.spongycastle.asn1.x500.style.BCStyle: org.spongycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)>","<org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String[] toValueArray(java.util.Vector)>","<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>","<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>","<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1ObjectIdentifier[] toOIDArray(java.util.Vector)>"],"<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.Configuration access$300(de.schildbach.wallet.service.BlockchainService)>","<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.wallet.Protos$Wallet: int getExtensionCount()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$1: com.google.protobuf.DescriptorProtos$DescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve(android.content.Context)>":["<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>","<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>","<androidx.room.RoomDatabase$JournalMode: void <clinit>()>","<android.os.Build$VERSION: void <clinit>()>"],"<com.google.protobuf.SmallSortedMap$EmptySet$2: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance()>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <clinit>()>"],"<com.squareup.moshi.internal.Util: java.lang.String typeAnnotatedWithAnnotations(java.lang.reflect.Type,java.util.Set)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator)>":["<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<ch.qos.logback.core.status.StatusUtil: int getHighestLevel(long)>":["<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusList()>","<ch.qos.logback.core.status.StatusUtil: java.util.List filterStatusListByTimeThreshold(java.util.List,long)>","<java.util.ArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.core.BlockChain: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.Wallet,org.bitcoinj.store.BlockStore)>":["<org.bitcoinj.core.Context: org.bitcoinj.core.Context getOrCreate(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.BlockChain: void <init>(org.bitcoinj.core.Context,org.bitcoinj.wallet.Wallet,org.bitcoinj.store.BlockStore)>"],"<androidx.fragment.app.FragmentState: void <clinit>()>":["<androidx.fragment.app.FragmentState: void <clinit>()>","<androidx.fragment.app.FragmentState$1: void <init>()>"],"<org.bitcoinj.core.ECKey: boolean equals(java.lang.Object)>":["<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>"],"<org.bitcoinj.crypto.DeterministicKey: int hashCode()>":["<java.util.Arrays: int hashCode(byte[])>","<org.bitcoinj.core.ECKey: int hashCode()>","<com.google.common.base.Objects: int hashCode(java.lang.Object[])>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.core.PeerAddress: java.lang.String toString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>":["<com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)>","<com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.core.PeerGroup$16: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.TransactionBroadcast)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey buildPartial()>"],"<org.spongycastle.crypto.macs.HMac: void update(byte[],int,int)>":["<org.spongycastle.crypto.digests.LongDigest: void update(byte[],int,int)>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread: void <init>(android.bluetooth.BluetoothServerSocket,de.schildbach.wallet.offline.AcceptBluetoothThread$1)>":["<de.schildbach.wallet.offline.AcceptBluetoothThread: void <init>(android.bluetooth.BluetoothServerSocket)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <clinit>()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void initFields()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.BasicKeyChain: java.util.List getKeys()>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.LinkedHashMap: java.util.Collection values()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.common.base.Equivalence: com.google.common.base.Equivalence equals()>":["<com.google.common.base.Equivalence$Equals: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder access$11700()>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder create()>"],"<org.bitcoinj.core.BitcoinSerializer: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.util.HashMap: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.BitcoinSerializer: void <clinit>()>"],"<com.google.common.util.concurrent.FluentFuture: void <init>()>":["<com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization: void <init>()>"],"<com.squareup.okhttp.Dispatcher: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayDeque: void <init>()>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<org.bitcoinj.net.discovery.HttpDiscovery$Details: void <init>(org.bitcoinj.core.ECKey,java.net.URI)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$3: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17000()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>":["<java.lang.Boolean: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.lifecycle.ClassesInfoCache$MethodReference: void <init>(int,java.lang.reflect.Method)>","<androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>","<androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<java.util.HashMap: void putAll(java.util.Map)>","<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>","<java.util.HashMap: java.util.Set entrySet()>","<java.util.HashMap: void <init>()>","<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void <init>(java.util.Map)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void <init>(int,java.lang.Object)>":["<ch.qos.logback.core.pattern.parser.FormattingNode: void <init>(int,java.lang.Object)>"],"<org.bitcoinj.wallet.BasicKeyChain$1: void <init>(org.bitcoinj.wallet.BasicKeyChain,org.bitcoinj.utils.ListenerRegistration,java.util.List)>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.ForwardingListenableFuture: void <init>()>":["<com.google.common.util.concurrent.ForwardingFuture: void <init>()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: boolean collision(long)>":["<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>","<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>","<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>","<java.util.Date: void <init>(long)>","<java.util.Locale: void <clinit>()>","<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>"],"<org.spongycastle.asn1.x500.style.BCStyle: org.spongycastle.asn1.ASN1Encodable encodeStringValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>":["<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>","<org.spongycastle.asn1.DERPrintableString: void <init>(java.lang.String)>","<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1GeneralizedTime: void <init>(java.lang.String)>","<org.spongycastle.asn1.x500.style.BCStyle: void <clinit>()>","<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: org.spongycastle.asn1.ASN1Encodable encodeStringValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>"],"<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent blank()>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: void <init>(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])>"],"<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover$ArhiveRemoverRunnable: void <init>(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover,java.util.Date)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: void requestFocus()>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: android.view.View activeTextView()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK parseDelimitedFrom(java.io.InputStream)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.AbstractParser: java.lang.Object parseDelimitedFrom(java.io.InputStream)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(org.bitcoinj.wallet.Protos$ExchangeRate)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean hasFiatCurrencyCode()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean hasFiatValue()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: long getFiatValue()>","<org.bitcoinj.wallet.Protos$ExchangeRate: long getCoinValue()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setFiatValue(long)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean hasCoinValue()>","<org.bitcoinj.wallet.Protos$ExchangeRate: java.lang.Object access$20700(org.bitcoinj.wallet.Protos$ExchangeRate)>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstance()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setCoinValue(long)>"],"<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>":["<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void run()>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void processCompleted()>":["<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void handleOneInputDone(int,java.util.concurrent.Future)>","<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void handleAllCompleted()>","<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>"],"<ch.qos.logback.core.pattern.DynamicConverter: void addError(java.lang.String)>":["<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>"],"<ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil: void <init>()>":["<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.LazyStringArrayList: void add(com.google.protobuf.ByteString)>":["<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.wallet.KeyChainGroup: int importKeys(org.bitcoinj.core.ECKey[])>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>","<org.bitcoinj.wallet.KeyChainGroup: int importKeys(java.util.List)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<com.google.common.base.Ticker$1: void <init>()>":["<com.google.common.base.Ticker: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getMessageTypeFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>":["<com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>"],"<org.slf4j.LoggerFactory: void fixSubstituteLoggers()>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.SubstituteLoggerFactory: void postInitialization()>","<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List getLoggers()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>"],"<org.bitcoinj.crypto.DeterministicKey: java.lang.String getPathAsString()>":["<org.bitcoinj.crypto.HDUtils: java.lang.String formatPath(java.util.List)>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>"],"<androidx.fragment.app.BackStackRecord: void addOp(androidx.fragment.app.BackStackRecord$Op)>":["<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.SmallSortedMap: java.lang.Object remove(java.lang.Object)>":["<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>","<com.google.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)>","<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>","<java.util.AbstractMap: boolean isEmpty()>","<com.google.protobuf.SmallSortedMap: void checkMutable()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder create()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput$Builder newBuilderForType()>"],"<com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>":["<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterScrypt: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.EncryptedData: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionMessage: boolean equals(java.lang.Object)>","<java.io.File: boolean equals(java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.LazyECPoint: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<java.math.BigInteger: boolean equals(java.lang.Object)>","<com.google.common.io.BaseEncoding$Alphabet: boolean equals(java.lang.Object)>","<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$2500()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address currentAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.Address currentAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.bitcoinj.wallet.Wallet: void maybeUpgradeToHD()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.common.hash.HashCode: java.lang.String toString()>":["<com.google.common.hash.HashCode$BytesHashCode: byte[] getBytesInternal()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<com.google.common.hash.HashCode: void <clinit>()>","<java.lang.StringBuilder: void <init>(int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: boolean access$4400()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>":["<okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)>","<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: boolean equals(java.lang.Object)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Object: void <init>()>","<java.lang.String: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.lang.String: int length()>","<java.lang.String: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions getDefaultInstance()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.CodedInputStream: long readUInt64()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: void initFields()>"],"<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>","<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>","<android.os.Handler: android.os.Looper getLooper()>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>","<android.os.Looper: android.os.Looper myLooper()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$15900()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder create()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void <init>()>"],"<de.schildbach.wallet.data.PaymentIntent$Standard: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void flush()>":["<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void postSuccessfulWrite()>","<java.io.BufferedOutputStream: void flush()>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void postIOFailure(java.io.IOException)>"],"<androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)>":["<androidx.core.content.FileProvider: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.script.Script$VerifyFlag: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.spongycastle.asn1.BERSequenceParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>","<org.spongycastle.asn1.BERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$1: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onSuccess(org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onSuccess(org.bitcoinj.core.Transaction)>"],"<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$ExchangeRate getExchangeRate()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<org.bitcoinj.core.PeerGroup$6: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilder(org.bitcoin.protocols.payments.Protos$PaymentRequest)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentRequest)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest getDefaultInstanceForType()>"],"<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void <init>(android.app.Application)>":["<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: void <init>()>"],"<org.bitcoinj.utils.ExchangeRate: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.utils.Fiat)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.utils.Fiat: boolean isPositive()>","<org.bitcoinj.core.Coin: boolean isPositive()>"],"<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>":["<java.util.TreeMap: java.util.Set entrySet()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>":["<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence(org.bitcoinj.core.Context)>","<org.bitcoinj.core.Context: org.bitcoinj.core.Context get()>","<org.bitcoinj.core.Context: void <clinit>()>"],"<org.bitcoinj.core.Context: org.bitcoinj.core.Context get()>":["<java.lang.Thread: java.lang.String getName()>","<java.lang.ThreadLocal: void set(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.ThreadLocal: java.lang.Object get()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void error(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>","<org.bitcoinj.core.Context: void <clinit>()>","<java.lang.Thread: java.lang.Thread currentThread()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.core.Transaction: void unCache()>":["<org.bitcoinj.core.ChildMessage: void unCache()>"],"<androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>":["<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<android.os.Process: int myUid()>","<android.os.Process: int myPid()>"],"<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[],int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Object: void <init>()>","<java.lang.System: void <clinit>()>"],"<com.squareup.okhttp.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$PeerAddress$1: org.bitcoinj.wallet.Protos$PeerAddress parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData$1: void <init>(de.schildbach.wallet.data.SelectedExchangeRateLiveData,android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>":["<androidx.loader.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>"],"<org.bitcoinj.core.Block: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.MessageSerializer,int)>":["<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.MessageSerializer,int)>"],"<androidx.fragment.app.FragmentManagerImpl: android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation)>":["<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance()>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void initFields()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder create()>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onEmptyWalletFailed()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$500(de.schildbach.wallet.ui.send.SweepWalletFragment,de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void showInsufficientMoneyDialog()>"],"<org.bitcoinj.core.Block: java.math.BigInteger getDifficultyTargetAsInteger()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.math.BigInteger: int signum()>","<org.bitcoinj.core.Utils: java.math.BigInteger decodeCompactBits(long)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.math.BigInteger: java.lang.String toString()>","<java.math.BigInteger: int compareTo(java.math.BigInteger)>","<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: void <init>()>":["<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void <init>()>"],"<androidx.room.DatabaseConfiguration: void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,boolean,java.util.Set)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>":["<com.google.common.collect.MapMakerInternalMap$Strength$1: void <init>(java.lang.String,int)>","<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$Strength$2: void <init>(java.lang.String,int)>"],"<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap newFieldMap(int)>":["<com.google.protobuf.SmallSortedMap$1: void <init>(int)>"],"<org.bitcoinj.wallet.Wallet: void saveLater()>":["<org.bitcoinj.wallet.WalletFiles: void saveLater()>"],"<com.google.protobuf.SmallSortedMap$EntrySet: java.util.Iterator iterator()>":["<com.google.protobuf.SmallSortedMap$EntryIterator: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)>"],"<com.google.protobuf.DynamicMessage: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage$Builder newBuilderForType()>"],"<org.bitcoinj.core.PeerGroup$LocalhostCheckState: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange build()>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange buildPartial()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: boolean isInitialized()>"],"<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>":["<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<com.google.common.base.Preconditions: int checkElementIndex(int,int)>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>":["<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<ch.qos.logback.core.util.FileUtil: boolean createMissingParentDirectories(java.io.File)>":["<java.io.File: java.io.File getParentFile()>","<java.io.File: boolean mkdirs()>","<java.io.File: boolean exists()>"],"<com.google.common.base.Splitter$5: java.util.Iterator iterator()>":["<com.google.common.base.Splitter: java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(com.google.protobuf.Message)>"],"<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor: void access$800(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.Descriptors$FieldDescriptor: void crossLink()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureTransactionInputIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.util.concurrent.Monitor: void <init>()>":["<com.google.common.util.concurrent.Monitor: void <init>(boolean)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder create()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: void <init>()>"],"<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.NetworkParameters fromPmtProtocolID(java.lang.String)>":["<org.bitcoinj.params.UnitTestParams: org.bitcoinj.params.UnitTestParams get()>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.params.RegTestParams: org.bitcoinj.params.RegTestParams get()>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: void <clinit>()>","<org.bitcoinj.params.RegTestParams: void <clinit>()>","<org.bitcoinj.params.MainNetParams: org.bitcoinj.params.MainNetParams get()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: org.bitcoinj.params.TestNet3Params get()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensurePublicDependencyIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.util.concurrent.AbstractService$IsStartableGuard: void <init>(com.google.common.util.concurrent.AbstractService)>":["<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Monitor access$000(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.AbstractService: void <clinit>()>","<com.google.common.util.concurrent.Monitor$Guard: void <init>(com.google.common.util.concurrent.Monitor)>"],"<androidx.fragment.app.FragmentController: void noteStateNotSaved()>":["<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>"],"<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>":["<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.LazyStringArrayList: void add(com.google.protobuf.ByteString)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder toBuilder()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: void popLimit(int)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.UnmodifiableLazyStringList: com.google.protobuf.LazyStringList getUnmodifiableView()>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.LazyStringArrayList: void <clinit>()>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <clinit>()>","<com.google.protobuf.LazyStringArrayList: void <init>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions buildPartial()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder toBuilder()>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringList getUnmodifiableView()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo buildPartial()>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void initFields()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.CodedInputStream: int getBytesUntilLimit()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.UnmodifiableLazyStringList: void add(com.google.protobuf.ByteString)>"],"<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>":["<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>"],"<com.google.common.io.BaseEncoding: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)>":["<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>","<com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>"],"<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>":["<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)>"],"<com.lambdaworks.jni.Platform$OS: void <clinit>()>":["<com.lambdaworks.jni.Platform$OS: void <init>(java.lang.String,int,java.lang.String)>","<com.lambdaworks.jni.Platform$OS: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: javax.net.ssl.SSLSocketFactory access$200(de.schildbach.wallet.ui.send.RequestWalletBalanceTask)>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: javax.net.ssl.SSLSocketFactory sslTrustAllCertificates()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder getEncryptedDataBuilder()>":["<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getEncryptedDataFieldBuilder()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage$Builder getBuilder()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$1: org.bitcoinj.wallet.Protos$ExchangeRate parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void initializeHierarchyUnencrypted(org.bitcoinj.crypto.DeterministicKey)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void addToBasicChain(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.DeterministicKeyChain: com.google.common.collect.ImmutableList getAccountPath()>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey deriveChild(java.util.List,boolean,boolean,org.bitcoinj.crypto.ChildNumber)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$1: org.bitcoin.protocols.payments.Protos$X509Certificates parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void handleOneInputDone(int,java.util.concurrent.Future)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean cancel(boolean)>","<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void collectOneValue(boolean,int,java.lang.Object)>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void handleException(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<java.lang.Throwable: java.lang.Throwable getCause()>","<com.google.common.util.concurrent.AggregateFuture: com.google.common.util.concurrent.AggregateFuture$RunningState access$602(com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture$RunningState)>","<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>"],"<org.bitcoinj.core.TransactionConfidence: void <init>(org.bitcoinj.core.Sha256Hash)>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>":["<androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>","<androidx.fragment.app.FragmentManagerImpl: void reportBackStackChanged()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.util.ArrayList: void clear()>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>","<androidx.collection.ArraySet: void <clinit>()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<androidx.collection.ArraySet: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>","<androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>"],"<okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)>":["<okhttp3.internal.tls.BasicTrustRootIndex: void <init>(java.security.cert.X509Certificate[])>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPkiData: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<org.bitcoinj.crypto.ChildNumber: java.lang.String toString()>":["<org.bitcoinj.crypto.ChildNumber: boolean isHardened()>","<java.lang.Integer: void <clinit>()>","<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.crypto.ChildNumber: int num()>"],"<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object)>":["<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable)>"],"<org.bitcoinj.wallet.KeyChainGroup: boolean isDeterministicUpgradeRequired()>":["<java.util.LinkedList: boolean isEmpty()>","<org.bitcoinj.wallet.BasicKeyChain: int numKeys()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.UnmodifiableLazyStringList: int size()>":["<com.google.protobuf.LazyStringArrayList: int size()>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture stopAsync()>":["<org.bitcoinj.core.PeerGroup$9: void <init>(org.bitcoinj.core.PeerGroup)>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void shutdown()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)>"],"<androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>":["<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>","<androidx.fragment.app.FragmentTransition$2: void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)>"],"<org.spongycastle.crypto.digests.LongDigest: void update(byte)>":["<org.spongycastle.crypto.digests.LongDigest: void processWord(byte[],int)>"],"<java.lang.Long: int numberOfTrailingZeros(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <clinit>()>":["<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <init>()>","<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void initFields()>","<com.google.protobuf.CodedInputStream: long readInt64()>"],"<org.spongycastle.asn1.DLSequence: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.DEROutputStream: org.spongycastle.asn1.ASN1OutputStream getDLSubStream()>","<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>","<org.spongycastle.asn1.DLSequence: int getBodyLength()>","<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>","<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>"],"<com.google.protobuf.TextFormat$TextGenerator: void <init>(java.lang.Appendable)>":["<java.lang.Object: void <init>()>","<java.lang.StringBuilder: void <init>()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.CodedInputStream)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.AbstractParser: void <clinit>()>"],"<com.google.common.collect.Iterators$PeekingImpl: boolean hasNext()>":["<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>"],"<com.google.common.base.Stopwatch: void <init>()>":["<com.google.common.base.Ticker: com.google.common.base.Ticker systemTicker()>","<java.lang.Object: void <init>()>","<com.google.common.base.Ticker: void <clinit>()>"],"<okhttp3.HttpUrl$Builder: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>":["<org.bitcoinj.core.UnsafeByteArrayOutputStream: byte[] toByteArray()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.core.UnsafeByteArrayOutputStream: void <init>(int)>","<org.bitcoinj.core.Block: void bitcoinSerializeToStream(java.io.OutputStream)>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.Transaction: void bitcoinSerializeToStream(java.io.OutputStream)>","<org.bitcoinj.core.BitcoinSerializer: boolean isParseRetainMode()>","<org.bitcoinj.core.TransactionOutput: void bitcoinSerializeToStream(java.io.OutputStream)>"],"<com.squareup.okhttp.ConnectionSpec: void <init>(com.squareup.okhttp.ConnectionSpec$Builder,com.squareup.okhttp.ConnectionSpec$1)>":["<com.squareup.okhttp.ConnectionSpec: void <init>(com.squareup.okhttp.ConnectionSpec$Builder)>"],"<org.bitcoinj.core.VersionedChecksummedBytes: java.lang.String toBase58()>":["<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[],int,int)>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.core.Base58: java.lang.String encode(byte[])>","<org.bitcoinj.core.Base58: void <clinit>()>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>":["<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.lifecycle.LifecycleRegistry$1: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Enum: int ordinal()>","<java.lang.IllegalArgumentException: void <init>()>"],"<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] footerBytes()>":["<ch.qos.logback.core.LayoutBase: java.lang.String getPresentationFooter()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void appendIfNotNull(java.lang.StringBuilder,java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] convertToBytes(java.lang.String)>","<ch.qos.logback.core.LayoutBase: java.lang.String getFileFooter()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$5: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void onAttach(android.content.Context)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<de.schildbach.wallet.ui.AbstractWalletActivity: de.schildbach.wallet.WalletApplication getWalletApplication()>","<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>"],"<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>":["<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureExtensionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.collect.MapMakerInternalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>","<com.google.common.collect.MapMakerInternalMap: int hash(java.lang.Object)>"],"<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.common.collect.Iterators$ConcatenatedIterator: java.util.Iterator getTopMetaIterator()>":["<java.util.ArrayDeque: boolean isEmpty()>","<java.util.ArrayDeque: java.lang.Object removeFirst()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>"],"<org.bitcoinj.core.PeerGroup: void startBlockChainDownload(org.bitcoinj.core.listeners.PeerDataEventListener)>":["<org.bitcoinj.core.PeerGroup: void removeDataEventListenerFromPeer(org.bitcoinj.core.Peer,org.bitcoinj.core.listeners.PeerDataEventListener)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>","<org.bitcoinj.core.PeerGroup: void addDataEventListenerToPeer(java.util.concurrent.Executor,org.bitcoinj.core.Peer,org.bitcoinj.core.listeners.PeerDataEventListener)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: void startBlockChainDownloadFromPeer(org.bitcoinj.core.Peer)>"],"<ch.qos.logback.core.util.Loader: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>","<ch.qos.logback.core.util.Loader$1: void <init>()>","<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>","<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>","<ch.qos.logback.core.util.Loader$1: java.lang.Object run()>","<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>","<ch.qos.logback.core.util.Loader: void <clinit>()>"],"<org.bitcoinj.wallet.WalletFiles: void setListener(org.bitcoinj.wallet.WalletFiles$Listener)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<org.spongycastle.asn1.BERApplicationSpecificParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<java.io.IOException: java.lang.String getMessage()>","<org.spongycastle.asn1.BERApplicationSpecificParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$13800()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher ascii()>":["<com.google.common.base.CharMatcher$Ascii: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void markP2SHAddressAsUsed(org.bitcoinj.core.Address)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>","<org.bitcoinj.core.Address: byte[] getHash160()>","<org.bitcoinj.core.Address: boolean isP2SHAddress()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.KeyChainGroup: void maybeMarkCurrentAddressAsUsed(org.bitcoinj.core.Address)>"],"<com.google.protobuf.SmallSortedMap: void access$200(com.google.protobuf.SmallSortedMap)>":["<com.google.protobuf.SmallSortedMap: void checkMutable()>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions getDefaultInstance()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>":["<com.google.common.base.Preconditions: java.lang.String badPositionIndexes(int,int,int)>","<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>"],"<ch.qos.logback.classic.joran.action.FindIncludeAction: void <init>()>":["<ch.qos.logback.core.joran.action.IncludeAction: void <init>()>","<ch.qos.logback.core.joran.action.IncludeAction: void setEventOffset(int)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setScriptBytes(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.core.helpers.CyclicBuffer: java.util.List asList()>":["<ch.qos.logback.core.helpers.CyclicBuffer: int length()>","<java.util.ArrayList: void <init>()>","<ch.qos.logback.core.helpers.CyclicBuffer: java.lang.Object get(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)>","<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)>"],"<com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>":["<com.google.common.collect.NaturalOrdering: void <clinit>()>"],"<com.google.common.collect.RegularImmutableMap: int[] createHashTable(java.lang.Object[],int,int,int)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>","<com.google.common.collect.Hashing: int smear(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.util.Arrays: void fill(int[],int)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>"],"<androidx.collection.ArraySet: void allocArrays(int)>":["<androidx.collection.ArraySet: void <clinit>()>"],"<ch.qos.logback.classic.spi.TurboFilterList: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>":["<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>","<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15000()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type valueOf(java.lang.String)>":["<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>"],"<androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>":["<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>","<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()>","<java.lang.Enum: int compareTo(java.lang.Enum)>","<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()>","<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>","<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.LifecycleRegistry: void popParentState()>"],"<de.schildbach.wallet.util.OnFirstPreDraw: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.util.OnFirstPreDraw: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>":["<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>"],"<com.google.protobuf.GeneratedMessage: java.util.Map access$700(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage: java.util.Map getAllFieldsMutable()>"],"<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet getDefaultInstanceForType()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<androidx.arch.core.executor.ArchTaskExecutor$2: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.IndefiniteLengthInputStream: boolean checkForEof()>":["<org.spongycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>":["<android.util.SparseArray: int size()>","<android.util.SparseArray: java.lang.Object valueAt(int)>"],"<com.google.protobuf.SmallSortedMap: java.util.Set entrySet()>":["<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()>":["<android.util.SparseArray: int size()>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>"],"<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionOutput getTransactionOutput(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.StoredBlock: void <init>(org.bitcoinj.core.Block,java.math.BigInteger,int)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object)>"],"<com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$1: com.google.protobuf.DescriptorProtos$FileDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.lifecycle.Lifecycle$Event: void <clinit>()>":["<androidx.lifecycle.Lifecycle$Event: void <init>(java.lang.String,int)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.BasicKeyChain fromProtobufUnencrypted(java.util.List)>":["<org.bitcoinj.wallet.BasicKeyChain: void <init>()>","<org.bitcoinj.wallet.BasicKeyChain: void deserializeFromProtobuf(java.util.List)>"],"<de.schildbach.wallet.ui.WalletActivity$14: void <init>(de.schildbach.wallet.ui.WalletActivity,java.lang.String,byte[],java.lang.String)>":["<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void <init>(java.lang.String,byte[])>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setDescription(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getExtensionCount()>":["<java.util.ArrayList: int size()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)>":["<com.google.common.base.CharMatcher$Is: void <init>(char)>"],"<okhttp3.Dispatcher: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayDeque: void <init>()>"],"<androidx.loader.content.AsyncTaskLoader: void <init>(android.content.Context,java.util.concurrent.Executor)>":["<androidx.loader.content.Loader: void <init>(android.content.Context)>"],"<com.lambdaworks.crypto.SCrypt: void smix(byte[],int,int,int,byte[],byte[])>":["<com.lambdaworks.crypto.SCrypt: void blockxor(byte[],int,byte[],int,int)>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<java.lang.System: void <clinit>()>","<com.lambdaworks.crypto.SCrypt: void blockmix_salsa8(byte[],int,int,int)>","<com.lambdaworks.crypto.SCrypt: int integerify(byte[],int,int)>"],"<androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>":["<androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>","<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onPause()>":["<androidx.fragment.app.Fragment: void onPause()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionOutputFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1100()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: void checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getField(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$800()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder access$3800()>":["<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder create()>"],"<okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>":["<java.lang.String: char charAt(int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2100(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateStateFrom(de.schildbach.wallet.data.PaymentIntent)>"],"<org.slf4j.helpers.Util: void <clinit>()>":["<org.slf4j.helpers.Util: void <clinit>()>"],"<ch.qos.logback.core.pattern.DynamicConverter: void addError(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>"],"<com.google.common.util.concurrent.AbstractFuture: boolean access$300()>":["<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void run()>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void decrementCountAndMaybeComplete()>"],"<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.Class: java.lang.Object newInstance()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: java.util.Date getDate()>":["<org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>","<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>","<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>","<java.util.TimeZone: java.util.TimeZone getDefault()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>","<java.lang.String: int indexOf(int)>","<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String getTime()>","<org.spongycastle.asn1.ASN1GeneralizedTime: boolean hasFractionalSeconds()>","<java.lang.String: int length()>","<java.text.SimpleDateFormat: void <init>(java.lang.String)>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<java.lang.String: boolean endsWith(java.lang.String)>"],"<com.google.common.base.Throwables: java.lang.Throwable getRootCause(java.lang.Throwable)>":["<org.spongycastle.asn1.ASN1Exception: java.lang.Throwable getCause()>","<org.spongycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()>","<org.spongycastle.crypto.CryptoException: java.lang.Throwable getCause()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.core.spi.ScanException: java.lang.Throwable getCause()>","<java.lang.Throwable: java.lang.Throwable getCause()>"],"<org.bitcoinj.script.Script: byte[] getPubKeyHash()>":["<org.bitcoinj.script.Script: boolean isPayToScriptHash()>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<org.bitcoinj.script.Script: boolean isSentToAddress()>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.Class)>":["<com.squareup.moshi.internal.Util: void <clinit>()>","<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type,java.util.Set)>"],"<de.schildbach.wallet.ui.monitor.BlockListFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.monitor.BlockListFragment: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6300()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$1: com.google.protobuf.DescriptorProtos$UninterpretedOption parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>"],"<androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>","<android.view.animation.Animation: void start()>","<androidx.fragment.app.FragmentManagerImpl$4: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>"],"<ch.qos.logback.core.status.WarnStatus: void <init>(java.lang.String,java.lang.Object)>":["<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object)>"],"<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)>":["<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>","<androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)>","<java.lang.String: boolean equals(java.lang.Object)>","<androidx.collection.ArrayMap: java.util.Collection values()>","<androidx.collection.SimpleArrayMap: boolean isEmpty()>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)>","<androidx.core.view.ViewCompat: void <clinit>()>","<androidx.collection.SimpleArrayMap: void clear()>","<androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)>","<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>","<androidx.collection.ArrayMap: void <init>()>","<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type valueOf(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: void <clinit>()>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"],"<org.spongycastle.asn1.DERPrintableString: boolean isPrintableString(java.lang.String)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$1: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>":["<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger getEventRecordingLogger()>","<org.slf4j.helpers.NOPLogger: void <clinit>()>"],"<ch.qos.logback.core.joran.action.ParamAction: void <clinit>()>":["<ch.qos.logback.core.joran.action.ParamAction: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Tag getTags(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.params.MainNetParams: void <init>()>":["<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPublicOnly(byte[])>","<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Block: void setDifficultyTarget(long)>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <init>()>","<org.bitcoinj.core.Utils: java.math.BigInteger decodeCompactBits(long)>","<org.bitcoinj.core.Block: void setNonce(long)>","<java.net.URI: java.net.URI create(java.lang.String)>","<org.bitcoinj.net.discovery.HttpDiscovery$Details: void <init>(org.bitcoinj.core.ECKey,java.net.URI)>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(java.lang.String)>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<java.lang.String: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.Block: void setTime(long)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Block: java.lang.String getHashAsString()>"],"<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>":["<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int)>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask$1: void <init>(de.schildbach.wallet.ui.send.DeriveKeyTask,org.bitcoinj.crypto.KeyCrypter,java.lang.String,org.bitcoinj.wallet.Wallet)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()>":["<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>","<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>"],"<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference()>":["<com.google.common.collect.MapMakerInternalMap: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: org.slf4j.Logger access$900()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: float readFloat()>":["<java.lang.Float: float intBitsToFloat(int)>","<java.lang.Float: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readRawLittleEndian32()>"],"<androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<java.lang.String: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaGenericServices(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()>":["<com.google.protobuf.SmallSortedMap$EmptySet: void <clinit>()>","<com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable iterable()>","<java.util.TreeMap: java.util.Set entrySet()>","<java.util.AbstractMap: boolean isEmpty()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Wallet parseToProto(java.io.InputStream)>":["<com.google.protobuf.CodedInputStream: int setSizeLimit(int)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.io.InputStream)>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet parseFrom(com.google.protobuf.CodedInputStream)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.spongycastle.asn1.BEROctetStringParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<org.spongycastle.asn1.BEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>":["<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()>","<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>","<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>","<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>","<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>","<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager peekChildFragmentManager()>","<androidx.fragment.app.FragmentManagerImpl: void burpActive()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder clearLastSeenBlockTimeSecs()>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: void maybeDrainReferenceQueues()>":["<com.google.common.collect.MapMakerInternalMap$Segment: void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue)>"],"<ch.qos.logback.core.util.COWArrayList: void markAsStale()>":["<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>"],"<com.google.protobuf.TextFormat$1: byte byteAt(int)>":["<com.google.protobuf.LiteralByteString: byte byteAt(int)>"],"<ch.qos.logback.classic.Logger: void info(java.lang.String)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol$Ack: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.ChildNumber getChildNumber()>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>"],"<java.lang.String: int lastIndexOf(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentTransitionImpl$1: void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder toBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueOptions)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions buildPartial()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void initFields()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>"],"<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,java.lang.Throwable)>":["<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String)>"],"<com.google.common.base.Splitter$1: void <init>(com.google.common.base.CharMatcher)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setPurpose(org.bitcoinj.wallet.Protos$Transaction$Purpose)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.core.util.Loader: java.lang.Class loadClass(java.lang.String)>":["<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getTCL()>","<ch.qos.logback.core.util.Loader: void <clinit>()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<de.schildbach.wallet.util.Bluetooth: java.lang.String getBluetoothQuery(java.lang.String)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: int indexOf(int)>","<de.schildbach.wallet.util.Bluetooth: boolean isBluetoothUrl(java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<java.lang.String: java.lang.String substring(int)>"],"<org.spongycastle.asn1.DERNull: void <init>()>":["<org.spongycastle.asn1.ASN1Null: void <init>()>"],"<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>","<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>"],"<ch.qos.logback.core.rolling.RollingFileAppender: void <clinit>()>":["<ch.qos.logback.core.FileAppender: void <clinit>()>","<ch.qos.logback.core.rolling.RollingFileAppender: void <clinit>()>"],"<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>"],"<androidx.loader.content.CursorLoader: void onStopLoading()>":["<androidx.loader.content.Loader: boolean cancelLoad()>"],"<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void add(java.lang.Class,java.lang.String,java.lang.Class)>":["<ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: void <init>(java.lang.Class,java.lang.String)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>":["<com.google.common.base.Preconditions: int checkElementIndex(int,int)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$6: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.KeyChainGroup: void maybeLookaheadScripts()>":["<java.util.LinkedList: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Peer: boolean removePreMessageReceivedEventListener(org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>"],"<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>":["<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable,java.util.Set)>","<java.util.IdentityHashMap: void <init>(int)>","<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>","<java.util.Collections: void <clinit>()>"],"<org.bitcoinj.core.BitcoinSerializer: org.bitcoinj.core.Block makeBlock(byte[],int,int)>":["<org.bitcoinj.core.Block: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.MessageSerializer,int)>","<org.bitcoinj.core.Block: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>"],"<okhttp3.logging.HttpLoggingInterceptor: void <clinit>()>":["<okhttp3.logging.HttpLoggingInterceptor: void <clinit>()>","<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder access$6300()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder create()>"],"<de.schildbach.wallet.data.TimeLiveData: void <init>(de.schildbach.wallet.WalletApplication)>":["<de.schildbach.wallet.data.TimeLiveData$1: void <init>(de.schildbach.wallet.data.TimeLiveData)>","<androidx.lifecycle.LiveData: void <init>()>"],"<com.google.protobuf.WireFormat$FieldType$4: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>":["<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int,com.google.protobuf.WireFormat$1)>"],"<com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite)>":["<org.bitcoin.protocols.payments.Protos$Payment: int getSerializedSize()>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setIpAddress(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$6: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$15: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>"],"<org.bitcoinj.core.PeerGroup$7: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.utils.ListenerRegistration,com.google.common.collect.ImmutableSet)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onResume()>":["<de.schildbach.wallet.ui.RequestCoinsFragment: boolean maybeStartBluetoothListening()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)>","<de.schildbach.wallet.ui.RequestCoinsFragment$8: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>","<androidx.fragment.app.Fragment: void onResume()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentACK)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.spongycastle.asn1.ASN1InputStream: int readLength()>":["<org.spongycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int)>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void addInitialException(java.util.Set)>":["<com.google.common.util.concurrent.AggregateFuture: boolean access$400(java.util.Set,java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture: java.lang.Throwable trustedGetException()>","<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<ch.qos.logback.core.rolling.helper.CompressionMode: ch.qos.logback.core.rolling.helper.CompressionMode[] values()>":["<java.lang.Object: java.lang.Object clone()>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void initTable(java.util.concurrent.atomic.AtomicReferenceArray)>":["<java.util.concurrent.atomic.AtomicReferenceArray: int length()>"],"<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable)>":["<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>","<com.google.common.collect.ImmutableMap$Builder: void <init>(int)>","<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<de.schildbach.wallet.service.BlockchainService: void access$1000(de.schildbach.wallet.service.BlockchainService)>":["<de.schildbach.wallet.service.BlockchainService: void broadcastBlockchainState()>"],"<com.google.protobuf.Descriptors$DescriptorPool: void importPublicDependencies(com.google.protobuf.Descriptors$FileDescriptor)>":["<java.util.HashSet: boolean add(java.lang.Object)>","<com.google.protobuf.Descriptors$DescriptorPool: void importPublicDependencies(com.google.protobuf.Descriptors$FileDescriptor)>"],"<org.bitcoinj.crypto.HDKeyDerivation: void assertNonInfinity(org.spongycastle.math.ec.ECPoint,java.lang.String)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>","<org.bitcoinj.crypto.HDDerivationException: void <init>(java.lang.String)>"],"<org.bitcoinj.script.Script: byte[] getCLTVPaymentChannelRecipientPubKey()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.script.Script: boolean isSentToCLTVPaymentChannel()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: int readRawVarint32(int,java.io.InputStream)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: void <init>(java.io.InputStream,int)>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<java.io.FilterInputStream: int read()>"],"<de.schildbach.wallet.util.MonetarySpannable: void <init>(org.bitcoinj.utils.MonetaryFormat,org.bitcoinj.core.Monetary)>":["<de.schildbach.wallet.util.MonetarySpannable: java.lang.CharSequence format(org.bitcoinj.utils.MonetaryFormat,boolean,org.bitcoinj.core.Monetary)>","<android.text.SpannableString: void <init>(java.lang.CharSequence)>","<de.schildbach.wallet.util.MonetarySpannable: void <clinit>()>"],"<de.schildbach.wallet.util.OnFirstPreDraw: void listen(android.view.View,de.schildbach.wallet.util.OnFirstPreDraw$Callback)>":["<de.schildbach.wallet.util.OnFirstPreDraw: void <clinit>()>","<de.schildbach.wallet.util.OnFirstPreDraw: void <init>(android.view.ViewTreeObserver,de.schildbach.wallet.util.OnFirstPreDraw$Callback)>"],"<com.google.protobuf.ExtensionRegistry: com.google.protobuf.ExtensionRegistry$ExtensionInfo findImmutableExtensionByNumber(com.google.protobuf.Descriptors$Descriptor,int)>":["<com.google.protobuf.ExtensionRegistry$DescriptorIntPair: void <init>(com.google.protobuf.Descriptors$Descriptor,int)>"],"<androidx.fragment.app.Fragment: void performDetach()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDetach()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()>","<androidx.fragment.app.Fragment: void onDetach()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions buildPartial()>":["<com.google.protobuf.DescriptorProtos$FileOptions: java.util.List access$13102(com.google.protobuf.DescriptorProtos$FileOptions,java.util.List)>","<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$12302(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: int access$13202(com.google.protobuf.DescriptorProtos$FileOptions,int)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$12202(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$12402(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$FileOptions: java.lang.Object access$12602(com.google.protobuf.DescriptorProtos$FileOptions,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$FileOptions: java.lang.Object access$12002(com.google.protobuf.DescriptorProtos$FileOptions,java.lang.Object)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$13002(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$12702(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: java.lang.Object access$12102(com.google.protobuf.DescriptorProtos$FileOptions,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$12802(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean access$12902(com.google.protobuf.DescriptorProtos$FileOptions,boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode access$12502(com.google.protobuf.DescriptorProtos$FileOptions,com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode)>"],"<ch.qos.logback.core.pattern.parser.Parser: void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void handleDirectTransaction(org.bitcoinj.core.Transaction)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>"],"<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>":["<java.lang.ThreadLocal: void set(java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.Context: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$TransactionSigner getTransactionSigners(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<java.lang.String: int length()>","<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void <init>(de.schildbach.wallet.WalletApplication)>":["<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>","<androidx.lifecycle.LiveData: void <init>()>","<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData$1: void <init>(de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData)>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void initFields()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions$Builder toBuilder()>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MethodOptions)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions buildPartial()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getMemo()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilder()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder access$2900()>"],"<androidx.collection.ArrayMap$1: void colRemoveAt(int)>":["<androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)>"],"<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>":["<com.google.protobuf.CodedOutputStream: void writeRawByte(int)>"],"<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()>","<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: boolean isStateAtLeast(int)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$700()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>":["<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)>":["<androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback)>":["<java.lang.Object: void <init>()>","<android.os.Handler: void <init>(android.os.Looper)>","<android.os.Looper: android.os.Looper myLooper()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void executeDryrun()>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: org.bitcoinj.core.Coin getAmount()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.CurrencyCalculatorLink access$1400(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<java.lang.Character: java.lang.String toString(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])>"],"<com.google.common.base.CharMatcher$JavaIsoControl: void <init>()>":["<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>"],"<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec build()>":["<com.squareup.okhttp.ConnectionSpec: void <clinit>()>","<com.squareup.okhttp.ConnectionSpec: void <init>(com.squareup.okhttp.ConnectionSpec$Builder,com.squareup.okhttp.ConnectionSpec$1)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.RepeatedFieldBuilder getOutputsFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.common.util.concurrent.AbstractService: boolean isRunning()>":["<com.google.common.util.concurrent.Service$State: void <clinit>()>","<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addWatchedScript(org.bitcoinj.wallet.Protos$Script)>":["<java.lang.NullPointerException: void <init>()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureWatchedScriptIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.TextFormat$TextGenerator: void print(java.lang.CharSequence)>":["<java.lang.String: char charAt(int)>","<java.lang.String: java.lang.CharSequence subSequence(int,int)>","<java.lang.String: int length()>","<com.google.protobuf.TextFormat$TextGenerator: void write(java.lang.CharSequence)>"],"<de.schildbach.wallet.service.InactivityNotificationService: void <init>()>":["<android.app.IntentService: void <init>(java.lang.String)>","<android.app.IntentService: void setIntentRedelivery(boolean)>","<java.lang.Class: java.lang.String getName()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<ch.qos.logback.core.rolling.helper.Compressor: void <init>(ch.qos.logback.core.rolling.helper.CompressionMode)>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<com.google.protobuf.Descriptors$FileDescriptor: java.lang.String getName()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getName()>"],"<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<java.util.ArrayDeque: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<okhttp3.internal.connection.RouteDatabase: void <init>()>"],"<com.google.common.base.Stopwatch$1: void <clinit>()>":["<java.util.concurrent.TimeUnit: void <clinit>()>","<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>","<com.google.common.base.Stopwatch$1: void <clinit>()>"],"<ch.qos.logback.core.pattern.PatternLayoutBase: void start()>":["<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String)>","<ch.qos.logback.core.pattern.parser.Parser: void <clinit>()>","<ch.qos.logback.core.pattern.PatternLayoutBase: java.util.Map getEffectiveConverterMap()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String getPattern()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<java.lang.String: int length()>","<ch.qos.logback.core.LayoutBase: void start()>","<ch.qos.logback.core.pattern.ConverterUtil: void startConverters(ch.qos.logback.core.pattern.Converter)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node parse()>","<ch.qos.logback.core.LayoutBase: ch.qos.logback.core.Context getContext()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.pattern.ConverterUtil: void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter)>","<ch.qos.logback.classic.pattern.EnsureExceptionHandling: void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter)>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.GeneratedMessage$1)>":["<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: boolean equals(java.lang.Object)>":["<com.squareup.moshi.Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onBackPressed()>":["<android.app.Activity: void finish()>","<android.app.Activity: void setResult(int)>"],"<androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)>":["<java.io.File: boolean equals(java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>"],"<androidx.fragment.app.ListFragment$2: void <init>(androidx.fragment.app.ListFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder mergeFrom(org.bitcoinj.wallet.Protos$Tag)>"],"<com.google.protobuf.UnknownFieldSet$Builder: boolean hasField(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.TreeMap: boolean containsKey(java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey createMasterPrivateKey(byte[])>":["<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey createMasterPrivKeyFromBytes(byte[],byte[])>","<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: void setCreationTimeSeconds(long)>","<java.lang.String: byte[] getBytes()>","<java.util.Arrays: void fill(byte[],byte)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.crypto.HDUtils: org.spongycastle.crypto.macs.HMac createHmacSha512Digest(byte[])>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.crypto.HDUtils: byte[] hmacSha512(org.spongycastle.crypto.macs.HMac,byte[])>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity$15: void <init>(de.schildbach.wallet.ui.WalletActivity,java.lang.String)>":["<de.schildbach.wallet.ui.InputParser$StringInputParser: void <init>(java.lang.String)>"],"<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>":["<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>","<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>"],"<com.google.protobuf.CodedInputStream: long readFixed64()>":["<com.google.protobuf.CodedInputStream: long readRawLittleEndian64()>"],"<com.google.protobuf.MessageReflection: void mergeMessageSetExtensionFromCodedStream(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.MessageReflection$MergeTarget)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.CodedInputStream: boolean skipField(int)>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeField(int,com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addLengthDelimited(com.google.protobuf.ByteString)>","<com.google.protobuf.MessageReflection: void mergeMessageSetExtensionFromBytes(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistry$ExtensionInfo,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.MessageReflection$MergeTarget)>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.UnknownFieldSet$Field: com.google.protobuf.UnknownFieldSet$Field$Builder newBuilder()>","<com.google.protobuf.ExtensionRegistryLite: boolean isEagerlyParseMessageSets()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.ExtensionRegistry$ExtensionInfo findExtensionByNumber(com.google.protobuf.ExtensionRegistry,com.google.protobuf.Descriptors$Descriptor,int)>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field build()>","<com.google.protobuf.MessageReflection: void eagerlyMergeMessageSetExtension(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistry$ExtensionInfo,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.MessageReflection$MergeTarget)>"],"<ch.qos.logback.core.ContextBase: java.lang.String getProperty(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.core.ContextBase: java.lang.String getName()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>"],"<com.google.common.collect.FluentIterable$3: void <init>(java.lang.Iterable[])>":["<com.google.common.collect.FluentIterable: void <init>()>"],"<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.RDN[])>":["<org.spongycastle.asn1.x500.X500Name: void <clinit>()>","<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.X500NameStyle,org.spongycastle.asn1.x500.RDN[])>"],"<androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Wallet: void deserializeExtension(org.bitcoinj.wallet.WalletExtension,byte[])>":["<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.base.Throwables: void <clinit>()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<java.util.HashMap: java.lang.Object remove(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: org.bitcoinj.wallet.Protos$TransactionConfidence$Source valueOf(int)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>"],"<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>":["<de.schildbach.wallet.ui.DialogBuilder: void <init>(android.content.Context)>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder singleDismissButton(android.content.DialogInterface$OnClickListener)>","<android.content.Context: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setTitle(int)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String,boolean)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.util.concurrent.AbstractTransformFuture: com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)>":["<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture)>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.ASN1ObjectIdentifier[],org.spongycastle.asn1.ASN1Encodable[])>":["<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.x500.AttributeTypeAndValue[])>","<org.spongycastle.asn1.x500.AttributeTypeAndValue: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: java.util.List access$17502(com.google.protobuf.DescriptorProtos$EnumValueOptions,java.util.List)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: boolean access$17402(com.google.protobuf.DescriptorProtos$EnumValueOptions,boolean)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: int access$17602(com.google.protobuf.DescriptorProtos$EnumValueOptions,int)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>":["<org.spongycastle.crypto.BufferedBlockCipher: void reset()>","<org.spongycastle.crypto.paddings.PKCS7Padding: void init(java.security.SecureRandom)>","<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getOneofDeclFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>","<java.lang.ref.ReferenceQueue: void <init>()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(java.io.InputStream)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.AbstractParser: void <clinit>()>"],"<org.bitcoinj.core.TransactionConfidence: void addEventListener(org.bitcoinj.core.TransactionConfidence$Listener)>":["<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void addEventListener(java.util.concurrent.Executor,org.bitcoinj.core.TransactionConfidence$Listener)>"],"<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date getEndOfNextNthPeriod(java.util.Date,int)>":["<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date innerGetEndOfNextNthPeriod(java.util.Calendar,ch.qos.logback.core.rolling.helper.PeriodicityType,java.util.Date,int)>"],"<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(androidx.fragment.app.BackStackRecord,boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: int decrementAndGetRemainingCount(com.google.common.util.concurrent.AggregateFutureState)>":["<com.google.common.util.concurrent.AggregateFutureState: void <clinit>()>","<com.google.common.util.concurrent.AggregateFutureState: int access$310(com.google.common.util.concurrent.AggregateFutureState)>","<com.google.common.util.concurrent.AggregateFutureState: int access$300(com.google.common.util.concurrent.AggregateFutureState)>"],"<org.bitcoinj.script.Script: boolean isOpReturn()>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionSigner)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Throwable)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<androidx.fragment.app.Fragment$3: void <init>(androidx.fragment.app.Fragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidVersion: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder smallNum(int,int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[])>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder addChunk(int,org.bitcoinj.script.ScriptChunk)>","<org.bitcoinj.script.Script: int encodeToOpN(int)>","<org.bitcoinj.script.Script: void <clinit>()>"],"<org.spongycastle.asn1.OIDTokenizer: java.lang.String nextToken()>":["<java.lang.String: int indexOf(int,int)>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>"],"<com.squareup.moshi.StandardJsonAdapters$3: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto buildPartial()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1902(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$2102(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$SourceCodeInfo access$2302(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.LazyStringList access$1502(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.LazyStringList)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1602(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringList getUnmodifiableView()>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.Object access$1302(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1802(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileOptions access$2202(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.UnmodifiableLazyStringList: com.google.protobuf.LazyStringList getUnmodifiableView()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$2002(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.Object access$1402(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1702(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int access$2402(com.google.protobuf.DescriptorProtos$FileDescriptorProto,int)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner getDefaultInstance()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<java.lang.Boolean: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>"],"<com.google.common.base.Ascii: char toLowerCase(char)>":["<com.google.common.base.Ascii: boolean isUpperCase(char)>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget$ContainerType getContainerType()>":["<com.google.protobuf.MessageReflection$MergeTarget$ContainerType: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder access$14100()>":["<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder create()>"],"<org.bitcoinj.crypto.DeterministicHierarchy: int getNumChildren(com.google.common.collect.ImmutableList)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>"],"<org.bitcoinj.crypto.LinuxSecureRandom$LinuxSecureRandomProvider: void <init>()>":["<java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void start()>":["<ch.qos.logback.classic.PatternLayout: void <init>()>","<ch.qos.logback.core.LayoutBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.pattern.PatternLayoutBase: void start()>","<ch.qos.logback.core.pattern.PatternLayoutBase: void setPattern(java.lang.String)>","<ch.qos.logback.core.pattern.PatternLayoutBase: void setOutputPatternAsHeader(boolean)>","<ch.qos.logback.classic.PatternLayout: void <clinit>()>","<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: java.lang.String getPattern()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void start()>"],"<de.schildbach.wallet.data.PaymentIntent: void <init>(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>":["<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace)>":["<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)>"],"<org.bitcoinj.wallet.Wallet: java.util.Set findDoubleSpendsAgainst(org.bitcoinj.core.Transaction,java.util.Map)>":["<com.google.common.collect.Sets: java.util.HashSet newHashSet()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.HashSet: void <init>()>","<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<java.util.HashMap: java.util.Collection values()>","<java.util.LinkedHashMap: java.util.Collection values()>","<java.util.HashSet: boolean contains(java.lang.Object)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Transaction: boolean isCoinBase()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<com.google.common.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<org.bitcoinj.utils.Threading$UserThread: void <init>()>":["<java.lang.Thread: void start()>","<org.bitcoinj.utils.Threading$UserThread: void run()>","<java.lang.Thread: void setDaemon(boolean)>","<java.lang.Thread: void <init>(java.lang.String)>","<java.util.concurrent.LinkedBlockingQueue: void <init>()>"],"<androidx.fragment.app.FragmentState$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printStackLine(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.StackTraceElementProxy)>":["<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printIgnoredCount(java.lang.StringBuilder,int)>","<ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter: void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setPkiData(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.BasicKeyChain: void deserializeFromProtobuf(java.util.List)>":["<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPublicOnly(byte[])>","<org.bitcoinj.core.ECKey: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.wallet.BasicKeyChain: void importKeyLocked(org.bitcoinj.core.ECKey)>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<org.bitcoinj.crypto.EncryptedData: void <init>(byte[],byte[])>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPrivateAndPrecalculatedPublic(byte[],byte[])>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.LinkedList: java.util.Iterator iterator()>","<java.util.LinkedHashMap: boolean isEmpty()>","<org.bitcoinj.core.ECKey: void setCreationTimeSeconds(long)>","<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromEncrypted(org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.KeyCrypter,byte[])>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence(org.bitcoinj.core.TxConfidenceTable)>":["<org.bitcoinj.core.TxConfidenceTable: org.bitcoinj.core.TransactionConfidence getOrCreate(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>"],"<com.google.protobuf.FieldSet: void verifyType(com.google.protobuf.WireFormat$FieldType,java.lang.Object)>":["<com.google.protobuf.FieldSet$1: void <clinit>()>","<java.lang.NullPointerException: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(com.google.common.base.Function,java.lang.Object)>":["<org.bitcoinj.core.Peer$1: java.lang.Object apply(java.lang.Object)>","<com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.lang.Object)>"],"<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DynamicMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.DynamicMessage: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<org.bitcoinj.core.VarInt: void <init>(long)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.core.VarInt: int getSizeInBytes()>"],"<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>"],"<com.google.common.hash.HashCode$BytesHashCode: byte[] asBytes()>":["<java.lang.Object: java.lang.Object clone()>"],"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>":["<de.schildbach.wallet.ui.DividerItemDecoration: void <init>(android.content.Context,int)>","<de.schildbach.wallet.ui.DividerItemDecoration: void <clinit>()>","<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<java.util.Collections: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1: void <init>(androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<org.bitcoinj.wallet.Wallet: java.util.Date getKeyRotationTime()>":["<java.util.Date: void <init>(long)>"],"<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.animation.Animator)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedOutputStream: void writeRawByte(byte)>":["<com.google.protobuf.CodedOutputStream: void refreshBuffer()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16000()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void <init>()>":["<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: void <init>()>"],"<ch.qos.logback.core.pattern.ConverterUtil: void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter)>":["<ch.qos.logback.core.pattern.DynamicConverter: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>"],"<org.bitcoinj.wallet.Protos$Key: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment buildPartial()>":["<org.bitcoin.protocols.payments.Protos$Payment: java.util.List access$5602(org.bitcoin.protocols.payments.Protos$Payment,java.util.List)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$Payment: java.util.List access$5502(org.bitcoin.protocols.payments.Protos$Payment,java.util.List)>","<org.bitcoin.protocols.payments.Protos$Payment: java.lang.Object access$5702(org.bitcoin.protocols.payments.Protos$Payment,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.ByteString access$5402(org.bitcoin.protocols.payments.Protos$Payment,com.google.protobuf.ByteString)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment: int access$5802(org.bitcoin.protocols.payments.Protos$Payment,int)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.SingleFieldBuilder getConfidenceFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence getConfidence()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message buildPartial()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto buildPartial()>"],"<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)>":["<android.util.SparseArray: void put(int,java.lang.Object)>","<androidx.fragment.app.FragmentTransition$FragmentContainerTransition: void <init>()>"],"<com.google.protobuf.RepeatedFieldBuilder: void onChanged()>":["<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void markDirty()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>","<java.lang.ref.ReferenceQueue: void <init>()>"],"<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>":["<java.util.ArrayList: boolean isEmpty()>"],"<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension$Builder newBuilderForType()>"],"<okhttp3.Headers: void checkValue(java.lang.String,java.lang.String)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<java.lang.Integer: void <clinit>()>","<okhttp3.internal.Util: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int length()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<com.google.protobuf.UnknownFieldSet$Builder: void reinitialize()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.MnemonicCode: byte[] toSeed(java.util.List,java.lang.String)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<org.bitcoinj.crypto.PBKDF2SHA512: byte[] derive(java.lang.String,java.lang.String,int,int)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<org.bitcoinj.core.Utils: java.lang.String join(java.lang.Iterable)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<org.bitcoin.protocols.payments.Protos$Payment: void initFields()>","<java.io.IOException: java.lang.String getMessage()>","<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.base.Ticker: void <clinit>()>":["<com.google.common.base.Ticker$1: void <init>()>","<com.google.common.base.Ticker: void <clinit>()>"],"<de.schildbach.wallet.data.AppDatabase: de.schildbach.wallet.data.AppDatabase getDatabase(android.content.Context)>":["<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder allowMainThreadQueries()>","<de.schildbach.wallet.data.AppDatabase: void <clinit>()>","<android.content.ContextWrapper: android.content.Context getApplicationContext()>","<androidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)>","<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()>","<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])>"],"<okio.Util: void <clinit>()>":["<okio.Util: void <clinit>()>","<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean isValidIdentifier(java.lang.String)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean isValidBranchID(java.lang.String,int)>"],"<androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)>"],"<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>":["<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.TransactionOutput)>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>"],"<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>":["<org.bitcoinj.core.NetworkParameters$ProtocolVersion: int getBitcoinProtocolVersion()>"],"<java.lang.IncompatibleClassChangeError: void <init>()>":["<java.lang.LinkageError: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.util.Loader$1: java.lang.Object run()>":["<ch.qos.logback.core.util.Loader$1: java.lang.Boolean run()>"],"<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void addWalletTransaction(org.bitcoinj.wallet.WalletTransaction)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.WalletTransaction: org.bitcoinj.wallet.WalletTransaction$Pool getPool()>","<org.bitcoinj.wallet.Wallet: void addWalletTransaction(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>","<org.bitcoinj.wallet.WalletTransaction: org.bitcoinj.core.Transaction getTransaction()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.spongycastle.asn1.DERUTF8String: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>":["<java.util.concurrent.CopyOnWriteArrayList: int size()>","<ch.qos.logback.classic.spi.TurboFilterList: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: boolean hasValue()>","<org.bitcoinj.wallet.Protos$TransactionOutput: boolean hasScriptBytes()>"],"<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>":["<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method getMethodOrDie(java.lang.Class,java.lang.String,java.lang.Class[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$10300()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$1: com.google.protobuf.DescriptorProtos$EnumValueOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void <init>(java.lang.Object)>":["<ch.qos.logback.core.pattern.parser.FormattingNode: void <init>(int,java.lang.Object)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onInvalidEncryptionKey()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: android.view.View access$900(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.widget.EditText access$3000(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$19900()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilderForType()>"],"<org.bitcoinj.core.BitcoinSerializer: void <init>(org.bitcoinj.core.NetworkParameters,boolean)>":["<org.bitcoinj.core.MessageSerializer: void <init>()>"],"<org.slf4j.LoggerFactory: void bind()>":["<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>","<org.slf4j.LoggerFactory: void replayEvents()>","<org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>","<org.slf4j.LoggerFactory: void fixSubstituteLoggers()>","<org.slf4j.helpers.Util: void report(java.lang.String)>","<org.slf4j.LoggerFactory: boolean isAndroid()>","<org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()>","<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>","<org.slf4j.LoggerFactory: void failedBinding(java.lang.Throwable)>","<org.slf4j.LoggerFactory: boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.SubstituteLoggerFactory: void clear()>","<org.slf4j.LoggerFactory: void reportMultipleBindingAmbiguity(java.util.Set)>","<org.slf4j.helpers.Util: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.BoundedByteString: void copyToInternal(byte[],int,int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>"],"<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)>":["<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void maybeOpenCamera()>":["<androidx.core.content.ContextCompat: void <clinit>()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>","<de.schildbach.wallet.ui.scan.ScanActivity$7: void run()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis$Analyzer: org.bitcoinj.wallet.DefaultRiskAnalysis create(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List)>":["<org.bitcoinj.wallet.DefaultRiskAnalysis: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List,org.bitcoinj.wallet.DefaultRiskAnalysis$1)>","<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>"],"<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.BitcoinSerializer getSerializer(boolean)>":["<org.bitcoinj.core.BitcoinSerializer: void <init>(org.bitcoinj.core.NetworkParameters,boolean)>","<org.bitcoinj.core.BitcoinSerializer: void <clinit>()>"],"<org.spongycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.spongycastle.crypto.params.AsymmetricKeyParameter,org.spongycastle.crypto.params.AsymmetricKeyParameter)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.AbstractBlockChain: void addNewBestBlockListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.NewBestBlockListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<org.slf4j.helpers.NOPLogger: void <init>()>":["<org.slf4j.helpers.MarkerIgnoringBase: void <init>()>"],"<org.bitcoinj.core.Utils: long currentTimeSeconds()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: long currentTimeMillis()>"],"<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy)>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int)>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher none()>"],"<org.bitcoinj.core.Utils: void int64ToByteStreamLE(long,java.io.OutputStream)>":["<org.bitcoinj.core.UnsafeByteArrayOutputStream: void write(int)>"],"<org.bitcoinj.wallet.Protos$Key: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Key: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<ch.qos.logback.core.recovery.ResilientFileOutputStream: java.lang.String getDescription()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.wallet.Protos$Transaction$Pool: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilderForType()>"],"<com.google.protobuf.CodedOutputStream: void writeRawVarint64(long)>":["<com.google.protobuf.CodedOutputStream: void writeRawByte(int)>"],"<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>":["<android.view.animation.DecelerateInterpolator: void <init>(float)>","<android.view.animation.AccelerateInterpolator: void <init>(float)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>"],"<androidx.core.app.ComponentActivity: void <init>()>":["<androidx.collection.SimpleArrayMap: void <init>()>","<android.app.Activity: void <init>()>","<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>"],"<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.PeerGroup$9: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.signers.LocalTransactionSigner: void <init>()>":["<org.bitcoinj.signers.StatelessTransactionSigner: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.classic.sift.SiftAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)>","<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>"],"<androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)>":["<androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<org.bitcoinj.core.CheckpointManager: org.bitcoinj.core.Sha256Hash readTextual(java.io.InputStream)>":["<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.io.BufferedReader: java.lang.String readLine()>","<java.nio.ByteOrder: void <clinit>()>","<org.bitcoinj.core.CheckpointManager: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Long: java.lang.Long valueOf(long)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.io.BufferedReader: void close()>","<java.lang.Long: void <clinit>()>","<com.google.common.hash.MessageDigestHashFunction: com.google.common.hash.Hasher newHasher()>","<com.google.common.hash.Hashing: com.google.common.hash.HashFunction sha256()>","<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<java.io.IOException: void <init>(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<com.google.common.base.Charsets: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock deserializeCompact(org.bitcoinj.core.NetworkParameters,java.nio.ByteBuffer)>","<com.google.common.hash.AbstractByteHasher: com.google.common.hash.Hasher putBytes(byte[])>","<com.google.common.hash.HashCode$BytesHashCode: byte[] asBytes()>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>","<org.bitcoinj.core.StoredBlock: void <clinit>()>","<java.io.BufferedReader: void <init>(java.io.Reader)>","<java.util.TreeMap: int size()>","<java.lang.Integer: int parseInt(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Block: long getTimeSeconds()>","<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>","<com.google.common.hash.Hashing: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>":["<java.util.ArrayList: void clear()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: com.google.common.collect.MapMakerInternalMap$InternalEntry getNext()>","<com.google.common.collect.MapMakerInternalMap$Segment: void preWriteCleanup()>","<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: java.lang.Object getKey()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: int getHash()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: int getHash()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: java.lang.Object getValue()>","<java.util.concurrent.atomic.AtomicReferenceArray: int length()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: java.lang.Object getValue()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: com.google.common.collect.MapMakerInternalMap$InternalEntry getNext()>","<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: java.lang.Object getKey()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: java.lang.Object getValue()>","<com.google.common.collect.MapMakerInternalMap$Segment: void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: java.lang.Object getValue()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: void expand()>","<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>"],"<com.lambdaworks.jni.JarLibraryLoader: java.io.File extract(java.lang.String,java.io.InputStream)>":["<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>","<java.io.FileOutputStream: void close()>","<java.io.File: void <clinit>()>","<java.io.FileOutputStream: void <init>(java.io.File)>","<java.io.FileOutputStream: void write(byte[],int,int)>"],"<okhttp3.internal.tls.BasicTrustRootIndex: void <init>(java.security.cert.X509Certificate[])>":["<java.util.LinkedHashMap: void <init>()>","<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.Object: void <init>()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.LinkedHashSet: void <init>(int)>"],"<ch.qos.logback.core.pattern.FormatInfo: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher digit()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Digit: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>":["<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>"],"<java.lang.ArithmeticException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher any()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Any: void <clinit>()>"],"<org.bitcoinj.core.MessageSerializer: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Peer$2: void run()>":["<org.bitcoinj.core.Peer: void <clinit>()>","<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<org.bitcoinj.core.Peer: void access$000(org.bitcoinj.core.Peer)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<com.google.common.math.IntMath: void <clinit>()>":["<com.google.common.math.IntMath: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey build()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey buildPartial()>","<org.bitcoinj.wallet.Protos$DeterministicKey: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.AlertDialogsFragment: void add(androidx.fragment.app.FragmentManager)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()>","<de.schildbach.wallet.ui.AlertDialogsFragment: void <clinit>()>","<androidx.fragment.app.BackStackRecord: int commit()>","<de.schildbach.wallet.ui.AlertDialogsFragment: void <init>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>"],"<ch.qos.logback.classic.Logger: void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent)>":["<ch.qos.logback.classic.LoggerContext: void noAppenderDefinedWarning(ch.qos.logback.classic.Logger)>","<ch.qos.logback.classic.Logger: int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent)>"],"<org.spongycastle.crypto.generators.ECKeyPairGenerator: void <init>()>":["<java.lang.Object: void <init>()>"],"<okhttp3.Request$Builder: void <init>()>":["<java.lang.Object: void <init>()>","<okhttp3.Headers$Builder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>"],"<org.bitcoinj.core.Block: void unCache()>":["<org.bitcoinj.core.Block: void unCacheTransactions()>"],"<com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>":["<java.util.ArrayList: void <init>(int)>","<com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder access$16200()>"],"<com.google.common.collect.FluentIterable: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.common.base.Optional: com.google.common.base.Optional absent()>"],"<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>"],"<org.spongycastle.util.Strings: void toUTF8ByteArray(char[],java.io.OutputStream)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.io.ByteArrayOutputStream: void write(int)>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>":["<org.bitcoinj.wallet.DefaultCoinSelector: org.bitcoinj.wallet.CoinSelection select(org.bitcoinj.core.Coin,java.util.List)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Wallet: java.util.List calculateAllSpendCandidates(boolean,boolean)>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$7: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>":["<java.lang.Object: void <init>()>"],"<androidx.loader.content.AsyncTaskLoader: void onForceLoad()>":["<androidx.loader.content.Loader: boolean cancelLoad()>","<androidx.loader.content.Loader: void onForceLoad()>","<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>","<androidx.loader.content.AsyncTaskLoader$LoadTask: void <init>(androidx.loader.content.AsyncTaskLoader)>"],"<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: org.bitcoinj.wallet.Protos$Transaction$Pool valueOf(int)>","<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate buildPartial()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: org.bitcoinj.wallet.Protos$Transaction$Purpose valueOf(int)>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: void popLimit(int)>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.wallet.Protos$Transaction: void initFields()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<com.google.protobuf.CodedInputStream: long readInt64()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence buildPartial()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder toBuilder()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder toBuilder()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(org.bitcoinj.wallet.Protos$ExchangeRate)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.CodedInputStream: int getBytesUntilLimit()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener: void <init>(de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData,de.schildbach.wallet.service.BlockchainService$1)>":["<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener: void <init>(de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData)>"],"<androidx.loader.content.ModernAsyncTask$4: void <clinit>()>":["<androidx.loader.content.ModernAsyncTask$Status: void <clinit>()>","<androidx.loader.content.ModernAsyncTask$4: void <clinit>()>","<java.lang.Enum: int ordinal()>","<androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()>"],"<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>":["<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void <init>()>","<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void <init>()>","<androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)>","<androidx.recyclerview.widget.RecyclerView$LayoutManager: void <init>()>","<androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String calculateGMTOffset()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: boolean equals(java.lang.Object)>","<java.util.TimeZone: java.util.TimeZone getDefault()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.spongycastle.asn1.ASN1GeneralizedTime: java.util.Date getDate()>","<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String convert(int)>"],"<com.google.common.base.Platform: java.lang.String formatCompact4Digits(double)>":["<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<java.lang.Double: java.lang.Double valueOf(double)>","<java.lang.Double: void <clinit>()>"],"<com.google.protobuf.UninitializedMessageException: void <init>(com.google.protobuf.MessageLite)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenerCallQueue$Event stoppingEvent(com.google.common.util.concurrent.Service$State)>":["<com.google.common.util.concurrent.AbstractService$4: void <init>(com.google.common.util.concurrent.Service$State)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void tryDrainReferenceQueues()>":["<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: void maybeDrainReferenceQueues()>","<com.google.common.collect.MapMakerInternalMap$Segment: void maybeDrainReferenceQueues()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: void maybeDrainReferenceQueues()>","<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: void maybeDrainReferenceQueues()>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask: org.slf4j.Logger access$100()>":["<de.schildbach.wallet.ui.send.DeriveKeyTask: void <clinit>()>"],"<com.squareup.okhttp.internal.Util: void <clinit>()>":["<java.lang.String: void <clinit>()>","<com.squareup.okhttp.internal.Util: void <clinit>()>","<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean access$9200()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.util.MonetarySpannable: void applyMarkup(android.text.Spannable,java.lang.Object[],java.lang.Object[],java.lang.Object[])>":["<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>","<android.text.SpannableString: void removeSpan(java.lang.Object)>","<de.schildbach.wallet.util.Formats: void <clinit>()>"],"<de.schildbach.wallet.util.Toast: void <init>(android.content.Context)>":["<android.os.Handler: void <init>(android.os.Looper)>","<java.lang.Object: void <init>()>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<androidx.fragment.app.Fragment: android.content.Context requireContext()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.Fragment: android.content.Context getContext()>"],"<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <clinit>()>":["<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <init>(java.lang.String,int)>","<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <clinit>()>"],"<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)>":["<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void initFields()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <init>(boolean)>","<org.bitcoin.protocols.payments.Protos$X509Certificates$1: void <init>()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress build()>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress buildPartial()>","<org.bitcoinj.wallet.Protos$PeerAddress: boolean isInitialized()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setSignature(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.zxing.qrcode.QRCodeReader: void <clinit>()>":["<com.google.zxing.qrcode.QRCodeReader: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>"],"<org.bitcoinj.core.TransactionOutput: void parse()>":["<org.bitcoinj.core.Message: long readInt64()>","<org.bitcoinj.core.Message: long readVarInt()>","<org.bitcoinj.core.Message: byte[] readBytes(int)>"],"<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>":["<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<org.bitcoinj.core.Transaction$Purpose: void <init>(java.lang.String,int)>"],"<okio.Buffer: byte[] readByteArray(long)>":["<okio.Util: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<okio.Buffer: void readFully(byte[])>","<okio.Util: void checkOffsetAndCount(long,long,long)>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>"],"<okhttp3.ConnectionPool: void <clinit>()>":["<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>","<okhttp3.internal.Util: void <clinit>()>","<java.util.concurrent.SynchronousQueue: void <init>()>","<okhttp3.ConnectionPool: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$15900()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.CameraManager: android.hardware.Camera$Size findBestPreviewSizeValue(android.hardware.Camera$Parameters,int,int)>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.ArrayList: java.util.Iterator iterator()>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<java.util.Collections: void sort(java.util.List,java.util.Comparator)>","<java.util.Collections: void <clinit>()>","<java.lang.Math: float abs(float)>"],"<de.schildbach.wallet.ui.scan.CameraManager: void setDesiredCameraParameters(android.hardware.Camera,android.hardware.Camera$Size)>":["<java.lang.String: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager: java.lang.String findValue(java.util.Collection,java.lang.String[])>"],"<com.google.common.collect.MapMakerInternalMap: java.lang.Object get(java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object get(java.lang.Object,int)>","<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>","<com.google.common.collect.MapMakerInternalMap: int hash(java.lang.Object)>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath)>":["<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isKleeneStar(java.lang.String)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.util.Set keySet()>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>":["<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder access$18900()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsFragment$1)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)>":["<com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>","<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>","<java.lang.Throwable: java.lang.Throwable getCause()>","<com.google.common.util.concurrent.AbstractFuture$Failure: void <clinit>()>"],"<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Message toProto()>":["<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.DescriptorProtos$MethodDescriptorProto toProto()>"],"<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive buildObject(int,int,int)>":["<org.spongycastle.asn1.DERFactory: org.spongycastle.asn1.ASN1Set createSet(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.DERExternal: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1EncodableVector buildDEREncodableVector(org.spongycastle.asn1.DefiniteLengthInputStream)>","<org.spongycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>","<java.lang.StringBuilder: void <init>()>","<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)>","<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>","<org.spongycastle.asn1.BEROctetString: void <init>(org.spongycastle.asn1.ASN1OctetString[])>","<org.spongycastle.asn1.DefiniteLengthInputStream: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.DERFactory: void <clinit>()>","<org.spongycastle.asn1.DERFactory: org.spongycastle.asn1.ASN1Sequence createSequence(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,byte[])>","<org.spongycastle.asn1.LazyEncodedSequence: void <init>(byte[])>","<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>","<java.io.IOException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void initFields()>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Key: org.bitcoinj.wallet.Protos$Key$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder access$3800()>"],"<com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>"],"<de.schildbach.wallet.ui.InputParser$StringInputParser: void parse()>":["<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handlePrivateKey(org.bitcoinj.core.VersionedChecksummedBytes)>","<java.lang.String: boolean startsWith(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.InputParser: org.slf4j.Logger access$000()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent fromBitcoinUri(org.bitcoinj.uri.BitcoinURI)>","<de.schildbach.wallet.util.Qr: void <clinit>()>","<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.WalletActivity$15: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.InputParser: java.util.regex.Pattern access$100()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handleDirectTransaction(org.bitcoinj.core.Transaction)>","<org.bitcoinj.uri.BitcoinURI: org.bitcoinj.core.Address getAddress()>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<java.io.IOException: java.lang.String getMessage()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.uri.BitcoinURI: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<java.lang.Throwable: java.lang.String getMessage()>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handleDirectTransaction(org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent fromAddress(org.bitcoinj.core.Address,java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.crypto.BIP38PrivateKey: org.bitcoinj.crypto.BIP38PrivateKey fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>","<de.schildbach.wallet.ui.InputParser: void parseAndHandlePaymentRequest(byte[])>","<org.bitcoinj.core.Address: org.bitcoinj.core.NetworkParameters getParameters()>","<de.schildbach.wallet.ui.WalletActivity$15: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.util.Qr: byte[] decodeDecompressBinary(java.lang.String)>","<org.bitcoinj.core.DumpedPrivateKey: org.bitcoinj.core.DumpedPrivateKey fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.util.Qr: byte[] decodeBinary(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handlePrivateKey(org.bitcoinj.core.VersionedChecksummedBytes)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<java.lang.String: java.lang.String substring(int)>","<de.schildbach.wallet.ui.InputParser: void cannotClassify(java.lang.String)>","<de.schildbach.wallet.ui.WalletActivity$15: void handleDirectTransaction(org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.WalletActivity$15: void handlePrivateKey(org.bitcoinj.core.VersionedChecksummedBytes)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void error(int,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.Message: void <clinit>()>","<de.schildbach.wallet.ui.InputParser: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractService$2: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Address: org.bitcoinj.core.NetworkParameters getParametersFromAddress(java.lang.String)>":["<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<org.bitcoinj.core.Address: org.bitcoinj.core.NetworkParameters getParameters()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<com.google.common.collect.NaturalOrdering: void <clinit>()>":["<com.google.common.collect.NaturalOrdering: void <clinit>()>","<com.google.common.collect.NaturalOrdering: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder setNoStandardDescriptorAccessor(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okio.ByteString: void <init>(byte[])>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void maybeLookAhead()>":["<org.bitcoinj.wallet.BasicKeyChain: int importKeys(java.util.List)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: boolean isEmpty()>","<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List maybeLookAhead(org.bitcoinj.crypto.DeterministicKey,int)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.CharMatcher$JavaLetterOrDigit: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaLetterOrDigit: void <init>()>","<com.google.common.base.CharMatcher$JavaLetterOrDigit: void <clinit>()>"],"<okio.ByteString: okio.ByteString decodeHex(java.lang.String)>":["<okio.ByteString: int decodeHexDigit(char)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: char charAt(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okio.ByteString: okio.ByteString of(byte[])>","<java.lang.String: int length()>","<okio.ByteString: void <clinit>()>"],"<ch.qos.logback.classic.spi.LoggingEvent: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])>":["<java.lang.System: long currentTimeMillis()>","<ch.qos.logback.classic.LoggerContext: boolean isPackagingDataEnabled()>","<java.lang.Object: void <init>()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.classic.spi.LoggingEvent: java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[])>","<ch.qos.logback.classic.spi.ThrowableProxy: void calculatePackagingData()>","<ch.qos.logback.classic.Logger: ch.qos.logback.classic.LoggerContext getLoggerContext()>","<ch.qos.logback.classic.spi.ThrowableProxy: void <clinit>()>","<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView()>","<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>","<ch.qos.logback.classic.Logger: java.lang.String getName()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$2: void <init>(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,java.util.Set)>":["<java.lang.Object: void <init>()>"],"<java.lang.Error: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.lifecycle.LifecycleRegistry$1: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Enum: int ordinal()>","<java.lang.IllegalArgumentException: void <init>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5300()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>":["<org.slf4j.LoggerFactory: boolean nonMatchingClasses(java.lang.Class,java.lang.Class)>","<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.String: void <clinit>()>","<org.slf4j.helpers.NOPLogger: java.lang.String getName()>","<org.slf4j.helpers.Util: java.lang.Class getCallingClass()>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.lang.Class: java.lang.String getName()>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>","<org.slf4j.helpers.Util: void report(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: java.lang.String getName()>","<ch.qos.logback.classic.Logger: java.lang.String getName()>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentProtocol$Ack parsePaymentAck(org.bitcoin.protocols.payments.Protos$PaymentACK)>":["<org.bitcoinj.protocols.payments.PaymentProtocol$Ack: void <init>(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: java.lang.String getMemo()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean hasMemo()>"],"<org.spongycastle.asn1.ConstructedOctetStream: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.io.InputStream: void <init>()>"],"<com.google.common.util.concurrent.Service$State$2: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object)>"],"<org.bitcoinj.core.TransactionConfidence$Source: org.bitcoinj.core.TransactionConfidence$Source[] values()>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>":["<okio.Buffer: void <init>()>","<okhttp3.HttpUrl: void <clinit>()>","<java.lang.String: char charAt(int)>","<okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)>","<okio.Buffer: java.lang.String readUtf8()>","<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>","<okio.Buffer: void <clinit>()>","<java.lang.String: java.lang.String substring(int,int)>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>":["<androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>"],"<org.spongycastle.asn1.DERExternal: org.spongycastle.asn1.ASN1Primitive getObjFromVector(org.spongycastle.asn1.ASN1EncodableVector,int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<java.lang.String: int indexOf(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.collect.UnmodifiableIterator: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: void crossLink()>":["<com.google.protobuf.Descriptors$MethodDescriptor: void access$2600(com.google.protobuf.Descriptors$MethodDescriptor)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: void ensureOutputsIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.spongycastle.asn1.ASN1OctetString: void <init>(byte[])>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: void <clinit>()>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<android.app.Activity: void <clinit>()>"],"<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>":["<android.os.Build$VERSION: void <clinit>()>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$1: org.bitcoinj.wallet.Protos$Wallet parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void receivePending(org.bitcoinj.core.Transaction,java.util.List,boolean)>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.wallet.Wallet: boolean isPendingTransactionRelevant(org.bitcoinj.core.Transaction)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.util.LinkedHashMap: int size()>","<org.bitcoinj.wallet.Wallet: java.util.EnumSet getContainingPools(org.bitcoinj.core.Transaction)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>","<org.bitcoinj.wallet.Wallet: boolean isTransactionRisky(org.bitcoinj.core.Transaction,java.util.List)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentToMe(org.bitcoinj.core.TransactionBag)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentFromMe(org.bitcoinj.core.TransactionBag)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>","<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.TransactionConfidence$Source getSource()>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.Wallet: void commitTx(org.bitcoinj.core.Transaction)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: void verify()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.lang.String: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<ch.qos.logback.classic.Logger: boolean isInfoEnabled()>","<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder setMerchantData(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<ch.qos.logback.classic.pattern.EnsureExceptionHandling: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$ExtendableBuilder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<okhttp3.logging.HttpLoggingInterceptor: void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger)>":["<java.lang.Object: void <init>()>","<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Set emptySet()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation isStandard(org.bitcoinj.core.Transaction)>":["<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Transaction: long getVersion()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation isInputStandard(org.bitcoinj.core.TransactionInput)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.DefaultRiskAnalysis$RuleViolation isOutputStandard(org.bitcoinj.core.TransactionOutput)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>"],"<org.bitcoinj.core.ECKey$MissingPrivateKeyException: void <init>()>":["<java.lang.RuntimeException: void <init>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: java.util.Hashtable copyHashTable(java.util.Hashtable)>":["<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.Hashtable: void <init>()>","<java.util.Hashtable: java.util.Enumeration keys()>","<java.util.Hashtable: java.lang.Object get(java.lang.Object)>"],"<org.bitcoinj.wallet.MarriedKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey)>":["<java.util.LinkedHashMap: void <init>()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey,boolean)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>":["<java.util.concurrent.atomic.AtomicInteger: void <init>()>","<com.google.common.collect.MapMakerInternalMap$Segment: void initTable(java.util.concurrent.atomic.AtomicReferenceArray)>","<com.google.common.collect.MapMakerInternalMap$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>","<java.util.concurrent.locks.ReentrantLock: void <init>()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>","<java.lang.Object: java.lang.Object clone()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner getDefaultInstanceForType()>"],"<de.schildbach.wallet.ui.send.FeeCategory: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int,int)>":["<com.google.common.collect.ImmutableSet: void <init>()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar$1: void <clinit>()>":["<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>","<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.rolling.helper.RollingCalendar$1: void <clinit>()>","<ch.qos.logback.core.rolling.helper.PeriodicityType: ch.qos.logback.core.rolling.helper.PeriodicityType[] values()>"],"<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>":["<ch.qos.logback.core.spi.ContextAwareBase: java.lang.Object getDeclaredOrigin()>","<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.ByteString)>":["<com.google.protobuf.LiteralByteString: com.google.protobuf.CodedInputStream newCodedInput()>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean access$2500()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context)>":["<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>"],"<java.lang.Throwable: java.lang.String toString()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)>":["<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>","<androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)>","<androidx.collection.SimpleArrayMap: int size()>","<androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)>"],"<org.bitcoinj.core.Coin: boolean isZero()>":["<org.bitcoinj.core.Coin: int signum()>"],"<androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>":["<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder addExtras(android.os.Bundle)>","<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setAllowFreeFormInput(boolean)>","<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])>","<android.app.RemoteInput$Builder: void <init>(java.lang.String)>","<android.app.RemoteInput$Builder: android.app.RemoteInput build()>","<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setLabel(java.lang.CharSequence)>"],"<org.bitcoinj.core.VerificationException$LargerThanMaxBlockSize: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage build()>":["<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<com.google.protobuf.DynamicMessage: void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor[],com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DynamicMessage$Builder: boolean isInitialized()>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage buildPartial()>"],"<androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>","<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>","<androidx.loader.app.LoaderManager: void <init>()>"],"<androidx.lifecycle.LifecycleRegistry$1: void <clinit>()>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>","<androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>","<androidx.lifecycle.LifecycleRegistry$1: void <clinit>()>","<java.lang.Enum: int ordinal()>"],"<com.google.protobuf.UninitializedMessageException: com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException()>":["<java.lang.Throwable: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void <init>()>":["<ch.qos.logback.core.encoder.EncoderBase: void <init>()>"],"<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>":["<com.google.common.hash.HashCode$BytesHashCode: boolean equalsSameBits(com.google.common.hash.HashCode)>","<com.google.common.hash.HashCode$BytesHashCode: int bits()>"],"<org.bitcoinj.crypto.HDUtils: org.spongycastle.crypto.macs.HMac createHmacSha512Digest(byte[])>":["<org.spongycastle.crypto.macs.HMac: void <clinit>()>","<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>","<org.spongycastle.crypto.digests.SHA512Digest: void <init>()>","<org.spongycastle.crypto.macs.HMac: void init(org.spongycastle.crypto.CipherParameters)>","<org.spongycastle.crypto.macs.HMac: void <init>(org.spongycastle.crypto.Digest)>"],"<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getNetworkIdentifierBytes()>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.ByteString: void <clinit>()>"],"<de.schildbach.wallet.data.AbstractWalletLiveData: void <init>(de.schildbach.wallet.WalletApplication,long)>":["<de.schildbach.wallet.data.AbstractWalletLiveData$2: void <init>(de.schildbach.wallet.data.AbstractWalletLiveData)>","<android.os.Handler: void <init>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>","<de.schildbach.wallet.data.AbstractWalletLiveData$1: void <init>(de.schildbach.wallet.data.AbstractWalletLiveData)>","<de.schildbach.wallet.data.ThrottelingLiveData: void <init>(long)>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void postIOFailure(java.io.IOException)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.recovery.RecoveryCoordinator: void <clinit>()>","<ch.qos.logback.core.recovery.RecoveryCoordinator: void <init>()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatusIfCountNotOverLimit(ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.recovery.ResilientFileOutputStream: java.lang.String getDescription()>"],"<com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator access$700()>":["<com.google.protobuf.SmallSortedMap$EmptySet: void <clinit>()>"],"<ch.qos.logback.classic.joran.JoranConfigurator: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>":["<ch.qos.logback.classic.joran.action.RootLoggerAction: void <init>()>","<ch.qos.logback.classic.joran.action.ConfigurationAction: void <clinit>()>","<ch.qos.logback.classic.joran.action.ConditionalIncludeAction: void <init>()>","<ch.qos.logback.core.joran.action.NOPAction: void <init>()>","<ch.qos.logback.classic.joran.action.LevelAction: void <init>()>","<ch.qos.logback.classic.joran.action.LoggerContextListenerAction: void <init>()>","<ch.qos.logback.classic.joran.action.FindIncludeAction: void <init>()>","<ch.qos.logback.classic.joran.action.LoggerAction: void <init>()>","<ch.qos.logback.classic.joran.action.ContextNameAction: void <init>()>","<ch.qos.logback.core.joran.action.IncludeAction: void <init>()>","<ch.qos.logback.classic.sift.SiftAction: void <init>()>","<ch.qos.logback.classic.joran.action.ReceiverAction: void <init>()>","<ch.qos.logback.core.joran.action.AppenderRefAction: void <init>()>","<ch.qos.logback.classic.joran.action.ConfigurationAction: void <init>()>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>","<ch.qos.logback.core.joran.JoranConfiguratorBase: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>","<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.lang.String)>"],"<org.bitcoinj.core.BloomFilter: void merge(org.bitcoinj.core.BloomFilter)>":["<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.core.BloomFilter: boolean matchesAll()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>":["<androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)>","<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>","<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>","<androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>","<androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)>","<androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>"],"<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: void <init>(java.util.concurrent.ScheduledExecutorService)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void <init>(java.util.concurrent.ExecutorService)>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<ch.qos.logback.core.util.StatusListenerConfigHelper: void initAndAddListener(ch.qos.logback.core.Context,ch.qos.logback.core.status.StatusListener)>":["<ch.qos.logback.core.BasicStatusManager: boolean add(ch.qos.logback.core.status.StatusListener)>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void access$300(com.google.common.util.concurrent.AggregateFuture$RunningState)>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void decrementCountAndMaybeComplete()>"],"<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>":["<org.bitcoin.protocols.payments.Protos$Payment: void initFields()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$1: void <init>()>"],"<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getVersionCode()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getPackageName()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<ch.qos.logback.classic.spi.ThrowableProxy: void <clinit>()>":["<ch.qos.logback.classic.spi.ThrowableProxy: void <clinit>()>","<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"],"<androidx.loader.content.AsyncTaskLoader$LoadTask: void <init>(androidx.loader.content.AsyncTaskLoader)>":["<androidx.loader.content.ModernAsyncTask: void <init>()>","<java.util.concurrent.CountDownLatch: void <init>(int)>"],"<androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)>":["<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>","<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.collection.SimpleArrayMap: int size()>"],"<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.Logger getLogger(java.lang.String)>":["<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Logger createChildByName(java.lang.String)>","<ch.qos.logback.classic.LoggerContext: void incSize()>","<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Logger getChildByName(java.lang.String)>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>","<ch.qos.logback.classic.util.LoggerNameUtil: int getSeparatorIndexOf(java.lang.String,int)>","<java.lang.String: java.lang.String substring(int,int)>","<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4800()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$Output: long access$702(org.bitcoin.protocols.payments.Protos$Output,long)>","<org.bitcoin.protocols.payments.Protos$Output: int access$902(org.bitcoin.protocols.payments.Protos$Output,int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.ByteString access$802(org.bitcoin.protocols.payments.Protos$Output,com.google.protobuf.ByteString)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12700()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<okhttp3.internal.platform.AndroidPlatform$CloseGuard: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.AbstractIterator$State: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <clinit>()>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <clinit>()>","<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object)>","<java.lang.Class: java.lang.String getName()>"],"<com.google.common.hash.AbstractByteHasher: void <init>()>":["<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.google.common.hash.AbstractHasher: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$2: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<com.google.protobuf.LazyStringArrayList: java.lang.String get(int)>":["<com.google.protobuf.Internal: void <clinit>()>","<com.google.protobuf.Internal: boolean isValidUtf8(byte[])>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.protobuf.Internal: java.lang.String toStringUtf8(byte[])>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$FileDescriptor access$23602(com.google.protobuf.Descriptors$FileDescriptor)>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<de.schildbach.wallet.data.ThrottelingLiveData: void <init>()>":["<de.schildbach.wallet.data.ThrottelingLiveData: void <init>(long)>"],"<com.google.common.math.MathPreconditions: int checkPositive(java.lang.String,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>":["<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>","<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl$Builder: void pop()>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>","<java.util.ArrayList: java.lang.Object get(int)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$Key: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key: void initFields()>","<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder toBuilder()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder toBuilder()>","<com.google.protobuf.CodedInputStream: int readEnum()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData buildPartial()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<com.google.protobuf.CodedInputStream: long readInt64()>","<org.bitcoinj.wallet.Protos$Key$Type: org.bitcoinj.wallet.Protos$Key$Type valueOf(int)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(org.bitcoinj.wallet.Protos$DeterministicKey)>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(org.bitcoinj.wallet.Protos$EncryptedData)>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey buildPartial()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: java.lang.Object get()>","<com.google.common.util.concurrent.AbstractFuture: java.lang.Object get()>","<java.lang.Thread: void interrupt()>","<java.lang.Thread: java.lang.Thread currentThread()>"],"<ch.qos.logback.core.util.ExecutorServiceUtil: void <clinit>()>":["<ch.qos.logback.core.util.ExecutorServiceUtil: void <clinit>()>","<ch.qos.logback.core.util.ExecutorServiceUtil$1: void <init>()>"],"<com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.core.VerificationException$ExcessiveValue: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<java.io.PrintWriter: void print(java.lang.String)>","<java.io.PrintWriter: void println(boolean)>","<android.util.SparseArray: int size()>","<androidx.fragment.app.Fragment: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.util.ArrayList: java.lang.Object[] toArray()>","<java.util.Arrays: java.lang.String toString(java.lang.Object[])>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.PrintWriter: void println(java.lang.Object)>","<java.lang.Integer: java.lang.String toHexString(int)>","<androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<java.io.PrintWriter: void println(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.lang.System: void <clinit>()>","<java.io.PrintWriter: void print(int)>","<java.lang.System: int identityHashCode(java.lang.Object)>","<java.io.PrintWriter: void print(boolean)>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<ch.qos.logback.core.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.core.Context,java.lang.String)>":["<ch.qos.logback.core.util.StatusListenerConfigHelper: ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String)>","<ch.qos.logback.core.util.StatusListenerConfigHelper: void initAndAddListener(ch.qos.logback.core.Context,ch.qos.logback.core.status.StatusListener)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1800(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void requestFocusFirst()>"],"<org.bitcoinj.wallet.Protos$Tag$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MessageOptions)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder setNoStandardDescriptorAccessor(boolean)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean hasDeprecated()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean getNoStandardDescriptorAccessor()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean getDeprecated()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstance()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean getMessageSetWireFormat()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean hasMessageSetWireFormat()>","<com.google.protobuf.DescriptorProtos$MessageOptions: java.util.List access$14200(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder setDeprecated(boolean)>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean hasNoStandardDescriptorAccessor()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder setMessageSetWireFormat(boolean)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<org.spongycastle.crypto.digests.SHA512Digest: void <init>(org.spongycastle.crypto.digests.SHA512Digest)>":["<org.spongycastle.crypto.digests.LongDigest: void <init>(org.spongycastle.crypto.digests.LongDigest)>"],"<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder access$300()>"],"<ch.qos.logback.classic.PatternLayout: java.util.Map getDefaultConverterMap()>":["<ch.qos.logback.classic.PatternLayout: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: void handlePeerDeath(org.bitcoinj.core.Peer,java.lang.Throwable)>":["<org.bitcoinj.core.PeerAddress: java.net.InetAddress getAddr()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.core.PeerSocketHandler: org.bitcoinj.core.PeerAddress getAddress()>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.bitcoinj.core.PeerGroup$13: void run()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer selectDownloadPeer(java.util.List)>","<org.bitcoinj.core.PeerGroup: int getMaxConnections()>","<org.bitcoinj.core.Peer: boolean removeDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>","<org.bitcoinj.core.Peer: void removeWallet(org.bitcoinj.wallet.Wallet)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.Peer: boolean removeOnTransactionBroadcastListener(org.bitcoinj.core.listeners.OnTransactionBroadcastListener)>","<java.lang.Integer: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Peer: boolean removeChainDownloadStartedEventListener(org.bitcoinj.core.listeners.ChainDownloadStartedEventListener)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.core.PeerGroup: void triggerConnections()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.bitcoinj.core.PeerGroup: void startBlockChainDownloadFromPeer(org.bitcoinj.core.Peer)>","<org.bitcoinj.core.PeerGroup: boolean isRunning()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.Peer: boolean removeGetDataEventListener(org.bitcoinj.core.listeners.GetDataEventListener)>","<org.bitcoinj.core.PeerGroup: void setDownloadPeer(org.bitcoinj.core.Peer)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.bitcoinj.core.Peer: boolean removeBlocksDownloadedEventListener(org.bitcoinj.core.listeners.BlocksDownloadedEventListener)>","<java.util.PriorityQueue: boolean offer(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.utils.ExponentialBackoff: void trackFailure()>","<org.bitcoinj.core.Peer: boolean removePreMessageReceivedEventListener(org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>","<org.bitcoinj.core.PeerGroup$13: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Peer,int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>"],"<androidx.fragment.app.Fragment: java.lang.String toString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: void <init>(int)>","<androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>"],"<com.google.protobuf.TextFormat$1: void <init>(com.google.protobuf.ByteString)>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>":["<com.google.common.util.concurrent.AbstractFuture$Listener: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.util.concurrent.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onResume()>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateView()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<androidx.fragment.app.Fragment: void onResume()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void run()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(org.bitcoinj.wallet.Protos$ScryptParameters)>":["<org.bitcoinj.wallet.Protos$ScryptParameters: long getN()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean hasR()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean hasP()>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getR()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.ByteString getSalt()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setN(long)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setP(int)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setSalt(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstance()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setR(int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean hasSalt()>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getP()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean hasN()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: org.bitcoinj.wallet.Protos$TransactionConfidence$Source[] values()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<org.spongycastle.asn1.DERSequenceParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.PeerGroup: void triggerConnections()>":["<org.bitcoinj.core.PeerGroup$6: void run()>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: boolean isShutdown()>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>"],"<org.bitcoinj.crypto.LazyECPoint: boolean isCompressed()>":["<org.bitcoinj.crypto.LazyECPoint: org.spongycastle.math.ec.ECPoint get()>"],"<org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>":["<org.spongycastle.util.Strings: char[] asCharArray(byte[])>","<java.lang.String: void <clinit>()>","<java.lang.String: void <init>(char[])>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1: com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.arch.core.internal.SafeIterableMap$Entry: void <init>(java.lang.Object,java.lang.Object)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.rolling.RollingFileAppender: boolean checkForFileAndPatternCollisions()>":["<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String toRegex()>"],"<de.schildbach.wallet.ui.WalletActivity$1: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage: java.lang.Object invokeOrDie(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>":["<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos$Script: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.UnmodifiableLazyStringList: void <init>(com.google.protobuf.LazyStringList)>":["<java.util.AbstractList: void <init>()>"],"<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve(android.content.Context)>","<androidx.room.Room: java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String)>","<java.util.HashSet: boolean contains(java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.room.DatabaseConfiguration: void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,boolean,java.util.Set)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>","<androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>","<java.util.HashSet: java.util.Iterator iterator()>","<androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode[] values()>":["<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<org.bitcoinj.script.ScriptBuilder: void <init>()>":["<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DERUniversalString: void <clinit>()>":["<org.spongycastle.asn1.DERUniversalString: void <clinit>()>"],"<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,int,byte[])>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.core.Address: boolean isAcceptableVersion(org.bitcoinj.core.NetworkParameters,int)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: int[] getAcceptableAddressCodes()>","<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(int,byte[])>","<org.bitcoinj.core.WrongNetworkException: void <init>(int,int[])>"],"<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addRDN(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>":["<java.util.Vector: void addElement(java.lang.Object)>","<org.spongycastle.asn1.x500.RDN: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>"],"<com.google.common.collect.FluentIterable$3: java.util.Iterator iterator()>":["<com.google.common.collect.FluentIterable$3$1: void <init>(com.google.common.collect.FluentIterable$3,int)>","<com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>"],"<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String)>":["<okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>","<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>","<okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<okhttp3.internal.Util: void <clinit>()>","<java.util.ArrayList: void clear()>","<java.lang.String: java.lang.String substring(int,int)>","<okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.HttpUrl: void <clinit>()>","<java.lang.String: char charAt(int)>","<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>","<okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>","<okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>","<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>","<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>","<okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl$Builder: int parsePort(java.lang.String,int,int)>","<java.lang.StringBuilder: void <init>()>","<okhttp3.HttpUrl: int defaultPort(java.lang.String)>","<java.lang.String: int length()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>","<okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>"],"<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>":["<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <init>(java.lang.String,int)>"],"<ch.qos.logback.core.spi.AppenderAttachableImpl: int appendLoopOnAppenders(java.lang.Object)>":["<ch.qos.logback.core.util.COWArrayList: java.lang.Object[] asTypedArray()>"],"<org.bitcoinj.script.Script: void <init>(java.util.List)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.util.ArrayList: void <init>(java.util.Collection)>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Collections: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>"],"<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: void compareAndSetSeenExceptions(com.google.common.util.concurrent.AggregateFutureState,java.util.Set,java.util.Set)>":["<com.google.common.util.concurrent.AggregateFutureState: java.util.Set access$200(com.google.common.util.concurrent.AggregateFutureState)>","<com.google.common.util.concurrent.AggregateFutureState: void <clinit>()>","<com.google.common.util.concurrent.AggregateFutureState: java.util.Set access$202(com.google.common.util.concurrent.AggregateFutureState,java.util.Set)>"],"<org.bitcoinj.wallet.DefaultKeyChainFactory: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<java.lang.Integer: java.lang.String toString(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener: void <init>(de.schildbach.wallet.data.WalletBalanceLiveData)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List maybeLookAhead(org.bitcoinj.crypto.DeterministicKey,int)>":["<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List maybeLookAhead(org.bitcoinj.crypto.DeterministicKey,int,int,int)>","<org.bitcoinj.wallet.DeterministicKeyChain: int getLookaheadThreshold()>","<org.bitcoinj.wallet.DeterministicKeyChain: int getLookaheadSize()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()>","<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>"],"<ch.qos.logback.classic.Logger: void warn(java.lang.String)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>":["<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity: void onResumeFragments()>":["<androidx.fragment.app.FragmentController: void dispatchResume()>"],"<org.bitcoinj.crypto.MnemonicException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder create()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: java.lang.Object run()>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: sun.misc.Unsafe run()>"],"<ch.qos.logback.core.util.StatusPrinter: void buildStrFromStatusList(java.lang.StringBuilder,java.util.List)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<ch.qos.logback.core.util.StatusPrinter: void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>"],"<androidx.fragment.app.FragmentController: void dispatchCreate()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.util.List access$000(java.io.InputStream)>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.util.List loadElectrumServers(java.io.InputStream)>"],"<org.spongycastle.asn1.BEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>","<org.spongycastle.util.io.Streams: void <clinit>()>","<org.spongycastle.asn1.BEROctetString: void <init>(byte[])>","<org.spongycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$11500()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>"],"<org.bitcoinj.wallet.Protos$Tag: boolean access$15400()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.Throwables: java.lang.reflect.Method getGetMethod()>":["<com.google.common.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])>","<java.lang.Integer: void <clinit>()>","<com.google.common.base.Throwables: void <clinit>()>"],"<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.util.List loadElectrumServers(java.io.InputStream)>":["<java.io.BufferedReader: java.lang.String readLine()>","<com.google.common.base.AbstractIterator: java.lang.Object next()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>","<java.io.BufferedReader: void close()>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>","<com.google.common.base.AbstractIterator: boolean hasNext()>","<java.util.LinkedList: void <init>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.nio.charset.StandardCharsets: void <clinit>()>","<com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>","<java.io.BufferedReader: void <init>(java.io.Reader)>","<com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>","<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>","<com.google.common.base.Splitter$5: java.util.Iterator iterator()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"<com.google.common.primitives.UnsignedBytes: java.util.Comparator lexicographicalComparator()>":["<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: void <clinit>()>"],"<com.google.common.base.CharMatcher$JavaLetter: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaLetter: void <init>()>","<com.google.common.base.CharMatcher$JavaLetter: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: void broadcastTransaction(android.content.Context,org.bitcoinj.core.Transaction)>":["<android.view.ContextThemeWrapper: android.content.ComponentName startService(android.content.Intent)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Sha256Hash: byte[] getBytes()>","<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<com.google.common.io.BaseEncoding: java.lang.String encode(byte[],int,int)>":["<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.io.BaseEncoding$Base16Encoding: void encodeTo(java.lang.Appendable,byte[],int,int)>","<java.lang.StringBuilder: void <init>(int)>","<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: int maxEncodedSize(int)>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidNetwork: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void initFields()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder access$2900()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder create()>"],"<org.spongycastle.asn1.ASN1Integer: void <init>(byte[],boolean)>":["<org.spongycastle.util.Arrays: byte[] clone(byte[])>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet: int getSerializedSize()>":["<com.google.protobuf.CodedOutputStream: int computeEnumSize(int,int)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getDescriptionBytes()>","<com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>","<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: int computeInt64Size(int,long)>","<com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>","<com.google.protobuf.CodedOutputStream: int computeUInt64Size(int,long)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getNetworkIdentifierBytes()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.CodedOutputStream: int computeInt32Size(int,int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: int getNumber()>"],"<com.google.common.base.CharMatcher$SingleWidth: void <clinit>()>":["<com.google.common.base.CharMatcher$SingleWidth: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$SingleWidth: void <init>()>"],"<ch.qos.logback.core.spi.ContextAwareImpl: void <init>(ch.qos.logback.core.Context,java.lang.Object)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>":["<org.bitcoinj.wallet.Protos$TransactionOutput$1: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void initFields()>"],"<androidx.viewpager.widget.PagerAdapter: void <init>()>":["<android.database.DataSetObservable: void <init>()>","<java.lang.Object: void <init>()>"],"<com.lambdaworks.jni.Platform: com.lambdaworks.jni.Platform detect()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<com.lambdaworks.jni.Platform$Arch: com.lambdaworks.jni.Platform$Arch[] values()>","<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<com.lambdaworks.jni.Platform: void <init>(com.lambdaworks.jni.Platform$Arch,com.lambdaworks.jni.Platform$OS)>","<java.lang.System: void <clinit>()>","<java.lang.String: void <clinit>()>","<com.lambdaworks.jni.UnsupportedPlatformException: void <init>(java.lang.String)>","<com.lambdaworks.jni.Platform$Arch: void <clinit>()>","<com.lambdaworks.jni.Platform$OS: com.lambdaworks.jni.Platform$OS[] values()>","<com.lambdaworks.jni.Platform$OS: void <clinit>()>"],"<org.bitcoinj.core.Peer: boolean setMinProtocolVersion(int)>":["<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Peer: void <clinit>()>","<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Peer: org.bitcoinj.core.VersionMessage getPeerVersionMessage()>","<java.lang.Integer: void <clinit>()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.PeerSocketHandler: void close()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<com.squareup.okhttp.ConnectionSpec: void <clinit>()>":["<com.squareup.okhttp.TlsVersion: void <clinit>()>","<com.squareup.okhttp.ConnectionSpec$Builder: void <init>(com.squareup.okhttp.ConnectionSpec)>","<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder tlsVersions(com.squareup.okhttp.TlsVersion[])>","<com.squareup.okhttp.CipherSuite: void <clinit>()>","<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder supportsTlsExtensions(boolean)>","<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder cipherSuites(com.squareup.okhttp.CipherSuite[])>","<com.squareup.okhttp.ConnectionSpec: void <clinit>()>","<com.squareup.okhttp.ConnectionSpec$Builder: void <init>(boolean)>","<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec build()>"],"<androidx.fragment.app.FragmentActivity$1: void <init>(androidx.fragment.app.FragmentActivity)>":["<android.os.Handler: void <init>()>"],"<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$4: void run()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onInvalidEncryptionKey()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onFailure(java.lang.Exception)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onFailure(java.lang.Exception)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onInvalidEncryptionKey()>"],"<org.spongycastle.asn1.DERSetParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$MessageOptions: java.util.List access$14202(com.google.protobuf.DescriptorProtos$MessageOptions,java.util.List)>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean access$13902(com.google.protobuf.DescriptorProtos$MessageOptions,boolean)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean access$14002(com.google.protobuf.DescriptorProtos$MessageOptions,boolean)>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean access$14102(com.google.protobuf.DescriptorProtos$MessageOptions,boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: int access$14302(com.google.protobuf.DescriptorProtos$MessageOptions,int)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<org.bitcoinj.wallet.Protos$TransactionSigner: void initFields()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>"],"<androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)>":["<androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainState: void putExtras(android.content.Intent)>":["<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>"],"<ch.qos.logback.core.rolling.helper.PeriodicityType: ch.qos.logback.core.rolling.helper.PeriodicityType[] values()>":["<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<java.lang.Class: java.lang.Object cast(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.BERSequence: void <init>()>":["<org.spongycastle.asn1.ASN1Sequence: void <init>()>"],"<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int)>":["<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int,boolean)>"],"<org.bitcoin.protocols.payments.Protos$Payment: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.service.BlockchainService$4: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.service.BlockchainService$4: void onChanged(org.bitcoinj.wallet.Wallet)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.x500.AttributeTypeAndValue[])>":["<org.spongycastle.asn1.x500.RDN: void <init>(org.spongycastle.asn1.x500.AttributeTypeAndValue[])>","<java.util.Vector: void addElement(java.lang.Object)>"],"<de.schildbach.wallet.service.BlockchainService$4: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.service.InactivityNotificationService: void handleMaybeShowNotification(org.bitcoinj.wallet.Wallet)>":["<androidx.core.app.NotificationCompat$Action$Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action build()>","<android.content.Intent: android.content.Intent setAction(java.lang.String)>","<androidx.core.app.NotificationCompat$BigTextStyle: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.app.PendingIntent: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)>","<androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>","<androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>","<android.content.Intent: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>","<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>","<android.app.IntentService: java.lang.String getString(int,java.lang.Object[])>","<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,java.lang.String)>","<android.app.IntentService: java.lang.String getString(int)>","<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)>"],"<org.spongycastle.asn1.x500.style.RFC4519Style: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.Hashtable: void <init>()>","<org.spongycastle.asn1.x500.style.RFC4519Style: void <clinit>()>","<org.spongycastle.asn1.x500.style.RFC4519Style: void <init>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicSeed: int hashCode()>":["<com.google.common.base.Objects: int hashCode(java.lang.Object[])>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>"],"<okhttp3.internal.platform.ConscryptPlatform: void <init>()>":["<okhttp3.internal.platform.Platform: void <init>()>"],"<com.google.protobuf.UnmodifiableLazyStringList: java.lang.Object get(int)>":["<com.google.protobuf.UnmodifiableLazyStringList: java.lang.String get(int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$MessageOptions)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions buildPartial()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstance()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)>":["<androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransition$1: void <init>(java.util.ArrayList)>","<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<java.lang.Exception: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<java.lang.String: int indexOf(java.lang.String,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureExtensionRangeIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<de.schildbach.wallet.util.MonetarySpannable: java.lang.CharSequence format(org.bitcoinj.utils.MonetaryFormat,boolean,org.bitcoinj.core.Monetary)>":["<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat negativeSign(char)>","<org.bitcoinj.core.Coin: java.lang.String toString()>","<org.bitcoinj.utils.Fiat: java.lang.String toString()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat positiveSign(char)>","<org.bitcoinj.utils.MonetaryFormat: java.lang.CharSequence format(org.bitcoinj.core.Monetary)>","<org.bitcoinj.utils.Fiat: int signum()>","<org.bitcoinj.core.Coin: int signum()>","<androidx.core.util.Preconditions: void checkArgument(boolean)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: org.slf4j.Logger access$700()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<org.bitcoinj.core.ECKey: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)>","<org.spongycastle.math.ec.FixedPointUtil: org.spongycastle.math.ec.FixedPointPreCompInfo precompute(org.spongycastle.math.ec.ECPoint,int)>","<org.bitcoinj.crypto.LinuxSecureRandom: void <init>()>","<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.ECKey$1: void <init>()>","<java.security.SecureRandom: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.spongycastle.crypto.ec.CustomNamedCurves: org.spongycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>","<org.bitcoinj.core.ECKey$2: void <init>()>"],"<com.lambdaworks.jni.SysLibraryLoader: void <init>()>":["<java.lang.Object: void <init>()>"],"<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)>":["<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.util.ArrayDeque: boolean remove(java.lang.Object)>","<okhttp3.Dispatcher: boolean promoteAndExecute()>"],"<org.bitcoinj.core.UnsafeByteArrayOutputStream: void <init>(int)>":["<java.io.ByteArrayOutputStream: void <init>(int)>"],"<com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>":["<com.google.common.collect.ComparatorOrdering: void <init>(java.util.Comparator)>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>":["<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>","<ch.qos.logback.core.CoreConstants: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void initFields()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$ServiceOptions)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder toBuilder()>","<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions buildPartial()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.RiskAnalysis$Result analyze()>":["<org.bitcoinj.wallet.RiskAnalysis$Result: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.RiskAnalysis$Result analyzeIsFinal()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.RiskAnalysis$Result analyzeIsStandard()>"],"<org.spongycastle.asn1.DERUTF8String: void <init>(java.lang.String)>":["<org.spongycastle.util.Strings: byte[] toUTF8ByteArray(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.io.File: java.io.File getCanonicalFile()>","<android.text.TextUtils: void <clinit>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"],"<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>":["<com.google.common.collect.MapMakerInternalMap: void <clinit>()>","<com.google.common.collect.MapMaker: int getInitialCapacity()>","<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker)>","<com.google.common.collect.MapMaker: int getConcurrencyLevel()>","<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>"],"<org.bitcoinj.core.Transaction$SigHash: void <clinit>()>":["<org.bitcoinj.core.Transaction$SigHash: void <clinit>()>","<org.bitcoinj.core.Transaction$SigHash: void <init>(java.lang.String,int,int)>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>":["<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void doOutput(java.io.ByteArrayOutputStream)>":["<java.math.BigInteger: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void writeField(java.io.ByteArrayOutputStream,java.math.BigInteger)>","<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>","<org.spongycastle.asn1.OIDTokenizer: boolean hasMoreTokens()>","<java.lang.String: int length()>","<java.math.BigInteger: java.math.BigInteger valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.Long: long parseLong(java.lang.String)>","<org.spongycastle.asn1.OIDTokenizer: java.lang.String nextToken()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void writeField(java.io.ByteArrayOutputStream,long)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<org.spongycastle.asn1.OIDTokenizer: void <init>(java.lang.String)>","<java.math.BigInteger: void <clinit>()>"],"<de.schildbach.wallet.data.AbstractWalletLiveData: void <init>(de.schildbach.wallet.WalletApplication)>":["<de.schildbach.wallet.data.AbstractWalletLiveData$2: void <init>(de.schildbach.wallet.data.AbstractWalletLiveData)>","<android.os.Handler: void <init>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>","<de.schildbach.wallet.data.AbstractWalletLiveData$1: void <init>(de.schildbach.wallet.data.AbstractWalletLiveData)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>","<de.schildbach.wallet.data.ThrottelingLiveData: void <init>()>"],"<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)>":["<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>","<org.spongycastle.asn1.DERFactory: void <clinit>()>","<org.spongycastle.asn1.DERFactory: org.spongycastle.asn1.ASN1Sequence createSequence(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>","<org.spongycastle.asn1.BERFactory: void <clinit>()>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>","<org.spongycastle.asn1.BERFactory: org.spongycastle.asn1.BERSequence createSequence(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.BERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>","<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>","<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>","<org.spongycastle.asn1.DERTaggedObject: void <clinit>()>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<org.spongycastle.crypto.digests.LongDigest: void processLength(long,long)>":["<org.spongycastle.crypto.digests.LongDigest: void processBlock()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: int getFieldCount()>":["<java.util.ArrayList: int size()>"],"<com.squareup.moshi.JsonAdapter: void toJson(okio.BufferedSink,java.lang.Object)>":["<com.squareup.moshi.Moshi$DeferredAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Object)>","<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter of(okio.BufferedSink)>"],"<org.bitcoinj.core.Block: boolean checkProofOfWork(boolean)>":["<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<java.math.BigInteger: java.lang.String toString(int)>","<org.bitcoinj.core.Block: java.math.BigInteger getDifficultyTargetAsInteger()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.Sha256Hash: java.math.BigInteger toBigInteger()>","<java.math.BigInteger: int compareTo(java.math.BigInteger)>","<org.bitcoinj.core.Block: java.lang.String getHashAsString()>","<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.PeerGroup$10: void run()>":["<org.bitcoinj.core.PeerGroup$10: void go()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.PeerGroup: org.slf4j.Logger access$200()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>"],"<com.google.common.net.InetAddresses: byte parseOctet(java.lang.String)>":["<java.lang.String: boolean startsWith(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<java.lang.NumberFormatException: void <init>()>","<java.lang.String: int length()>"],"<androidx.lifecycle.LiveData: java.lang.Object getValue()>":["<androidx.lifecycle.LiveData: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.MessageLite getUnfinishedMessage()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentDetails)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: void <init>()>":["<android.os.Handler: void <init>()>","<de.schildbach.wallet.offline.AcceptBluetoothService$6: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService)>","<androidx.lifecycle.LifecycleService: void <init>()>","<de.schildbach.wallet.offline.AcceptBluetoothService$5: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService)>"],"<de.schildbach.wallet.service.BlockchainService$2: void <init>(de.schildbach.wallet.service.BlockchainService,de.schildbach.wallet.data.SelectedExchangeRateLiveData)>":["<java.lang.Object: void <init>()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.lang.Object remove(java.lang.Object)>"],"<org.bitcoinj.wallet.WalletFiles: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.wallet.WalletFiles: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getMountedExternalStorageDirectoryPath()>":["<android.os.Environment: java.io.File getExternalStorageDirectory()>","<android.os.Environment: java.lang.String getExternalStorageState()>","<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String absPath(java.io.File)>","<android.os.Environment: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: void onCreate()>":["<java.lang.Object: java.lang.Class getClass()>","<de.schildbach.wallet.data.WalletLiveData: void <init>(de.schildbach.wallet.WalletApplication)>","<de.schildbach.wallet.service.BlockchainService$2: void <init>(de.schildbach.wallet.service.BlockchainService,de.schildbach.wallet.data.SelectedExchangeRateLiveData)>","<android.app.Service: android.app.Application getApplication()>","<androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>","<de.schildbach.wallet.data.WalletBalanceLiveData: void <init>(de.schildbach.wallet.WalletApplication)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService$3: void <init>(de.schildbach.wallet.service.BlockchainService,de.schildbach.wallet.data.WalletBalanceLiveData)>","<androidx.lifecycle.LifecycleService: void onCreate()>","<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void <init>(de.schildbach.wallet.WalletApplication)>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<android.app.Service: java.lang.Object getSystemService(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<java.lang.System: long currentTimeMillis()>","<de.schildbach.wallet.service.BlockchainService$4: void <init>(de.schildbach.wallet.service.BlockchainService)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener: void <init>(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.data.AppDatabase: de.schildbach.wallet.data.AppDatabase getDatabase(android.content.Context)>","<de.schildbach.wallet.data.AppDatabase: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void broadcastPeerState(int)>","<java.lang.System: void <clinit>()>","<android.app.Service: java.io.File getDir(java.lang.String,int)>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.io.File,java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: void ensureSingularEnumValueDescriptor(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<java.lang.NullPointerException: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<com.google.protobuf.FieldSet: void <clinit>()>":["<com.google.protobuf.FieldSet: void <init>(boolean)>","<com.google.protobuf.FieldSet: void <clinit>()>"],"<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>":["<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <init>(java.lang.String,int,int)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void writeTo(com.google.protobuf.CodedOutputStream)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.ByteString getMemoBytes()>","<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>","<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>"],"<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.MethodCallsLogger: void <init>()>"],"<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)>":["<androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<org.bitcoinj.net.AbstractTimeoutHandler: void setTimeoutEnabled(boolean)>":["<org.bitcoinj.net.AbstractTimeoutHandler: void resetTimeout()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: void setValue(java.lang.Object,java.lang.ref.ReferenceQueue)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment)>"],"<org.bitcoinj.store.SPVBlockStore$1: void <init>(org.bitcoinj.store.SPVBlockStore)>":["<java.util.LinkedHashMap: void <init>()>"],"<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: void maybeForceBuilderInitialization()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(java.lang.Object)>":["<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileOptions getOptions()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<de.schildbach.wallet.util.Toast: void postLongToast(int,java.lang.Object[])>":["<de.schildbach.wallet.util.Toast$3: void <init>(de.schildbach.wallet.util.Toast,int,java.lang.Object[])>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.util.Toast$3: void run()>"],"<ch.qos.logback.core.rolling.helper.PeriodicityType: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.base.CharMatcher$Invisible: void <init>()>":["<java.lang.String: char[] toCharArray()>","<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>"],"<com.google.protobuf.Descriptors$EnumValueDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$EnumDescriptor,int,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$EnumValueDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$EnumDescriptor,int)>"],"<com.google.protobuf.Descriptors$EnumDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>":["<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<com.google.protobuf.Descriptors$EnumValueDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$EnumDescriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors: java.lang.String access$1500(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>","<com.google.protobuf.Descriptors: void <clinit>()>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction buildPartial()>":["<org.bitcoinj.wallet.Protos$Transaction: int access$11302(org.bitcoinj.wallet.Protos$Transaction,int)>","<org.bitcoinj.wallet.Protos$Transaction: int access$11002(org.bitcoinj.wallet.Protos$Transaction,int)>","<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11802(org.bitcoinj.wallet.Protos$Transaction,java.util.List)>","<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11502(org.bitcoinj.wallet.Protos$Transaction,java.util.List)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionConfidence access$11902(org.bitcoinj.wallet.Protos$Transaction,org.bitcoinj.wallet.Protos$TransactionConfidence)>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11602(org.bitcoinj.wallet.Protos$Transaction,java.util.List)>","<org.bitcoinj.wallet.Protos$Transaction: java.lang.Object access$12202(org.bitcoinj.wallet.Protos$Transaction,java.lang.Object)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Purpose access$12002(org.bitcoinj.wallet.Protos$Transaction,org.bitcoinj.wallet.Protos$Transaction$Purpose)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Pool access$11202(org.bitcoinj.wallet.Protos$Transaction,org.bitcoinj.wallet.Protos$Transaction$Pool)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$ExchangeRate access$12102(org.bitcoinj.wallet.Protos$Transaction,org.bitcoinj.wallet.Protos$ExchangeRate)>","<org.bitcoinj.wallet.Protos$Transaction: int access$12302(org.bitcoinj.wallet.Protos$Transaction,int)>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.ByteString access$11102(org.bitcoinj.wallet.Protos$Transaction,com.google.protobuf.ByteString)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11702(org.bitcoinj.wallet.Protos$Transaction,java.util.List)>","<org.bitcoinj.wallet.Protos$Transaction: long access$11402(org.bitcoinj.wallet.Protos$Transaction,long)>"],"<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>":["<com.google.common.base.Stopwatch: void <init>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch start()>"],"<org.bitcoinj.core.UnsafeByteArrayOutputStream: void write(int)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: byte[] copyOf(byte[],int)>","<java.lang.Math: int max(int,int)>"],"<org.bitcoinj.wallet.Wallet: void clearTransactions(int)>":["<org.bitcoinj.wallet.Wallet: void saveLater()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.UnsupportedOperationException: void <init>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.Wallet: void clearTransactions()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileOptions getOptions()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$6: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$600(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<ch.qos.logback.classic.spi.StackTraceElementProxy: void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<androidx.core.app.NotificationCompat$BigTextStyle: void <init>()>":["<androidx.core.app.NotificationCompat$Style: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$000()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>":["<org.bitcoinj.crypto.HDUtils: java.lang.String formatPath(java.util.List)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>","<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveChildKey(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<java.lang.String: void <clinit>()>","<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"],"<com.squareup.moshi.Moshi: void <init>(com.squareup.moshi.Moshi$Builder)>":["<java.util.LinkedHashMap: void <init>()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: void <init>(int)>","<java.lang.Object: void <init>()>","<com.squareup.moshi.Moshi: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.lang.ThreadLocal: void <init>()>","<java.util.ArrayList: int size()>","<java.util.Collections: void <clinit>()>"],"<com.google.common.collect.ImmutableList: void <clinit>()>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList$Itr: void <init>(com.google.common.collect.ImmutableList,int)>","<com.google.common.collect.RegularImmutableList: void <clinit>()>"],"<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<androidx.lifecycle.ServiceLifecycleDispatcher: void <init>(androidx.lifecycle.LifecycleOwner)>":["<java.lang.Object: void <init>()>","<android.os.Handler: void <init>()>","<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>"],"<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.loader.content.Loader$ForceLoadContentObserver: void <init>(androidx.loader.content.Loader)>":["<android.os.Handler: void <init>()>","<android.database.ContentObserver: void <init>(android.os.Handler)>"],"<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>":["<androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()>","<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>"],"<de.schildbach.wallet.service.BlockchainService$7$1: void <init>(de.schildbach.wallet.service.BlockchainService$7,boolean,java.lang.String,boolean,int)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.Object: void <init>()>","<org.bitcoinj.net.discovery.MultiplexingDiscovery: void <clinit>()>","<org.bitcoinj.net.discovery.MultiplexingDiscovery: org.bitcoinj.net.discovery.MultiplexingDiscovery forServices(org.bitcoinj.core.NetworkParameters,long)>"],"<org.bitcoinj.wallet.Wallet: boolean isTransactionRelevant(org.bitcoinj.core.Transaction)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.HashSet: boolean isEmpty()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentToMe(org.bitcoinj.core.TransactionBag)>","<org.bitcoinj.wallet.Wallet: java.util.Set findDoubleSpendsAgainst(org.bitcoinj.core.Transaction,java.util.Map)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentFromMe(org.bitcoinj.core.TransactionBag)>","<org.bitcoinj.core.Coin: int signum()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<androidx.lifecycle.MethodCallsLogger: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$Extension$Builder: void maybeForceBuilderInitialization()>"],"<okio.RealBufferedSource: okio.Timeout timeout()>":["<okio.AsyncTimeout$2: okio.Timeout timeout()>","<okio.Okio$2: okio.Timeout timeout()>"],"<ch.qos.logback.core.android.AndroidContextUtil: void <init>(android.content.ContextWrapper)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeFrom(org.bitcoinj.wallet.Protos$Transaction)>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeExchangeRate(org.bitcoinj.wallet.Protos$ExchangeRate)>","<org.bitcoinj.wallet.Protos$Transaction: long getUpdatedAt()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$ExchangeRate getExchangeRate()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasConfidence()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setPool(org.bitcoinj.wallet.Protos$Transaction$Pool)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction getDefaultInstance()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<org.bitcoinj.wallet.Protos$Transaction: boolean access$12400()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<org.bitcoinj.wallet.Protos$Transaction: int getVersion()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionConfidence getConfidence()>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11500(org.bitcoinj.wallet.Protos$Transaction)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionInputFieldBuilder()>","<org.bitcoinj.wallet.Protos$Transaction: java.lang.Object access$12200(org.bitcoinj.wallet.Protos$Transaction)>","<org.bitcoinj.wallet.Protos$Transaction: boolean access$12500()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureTransactionOutputIsMutable()>","<java.util.ArrayList: boolean isEmpty()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasExchangeRate()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureBlockHashIsMutable()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Purpose getPurpose()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasVersion()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setUpdatedAt(long)>","<org.bitcoinj.wallet.Protos$Transaction: int getLockTime()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setVersion(int)>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasLockTime()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureTransactionInputIsMutable()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasUpdatedAt()>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11700(org.bitcoinj.wallet.Protos$Transaction)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeConfidence(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasPool()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setPurpose(org.bitcoinj.wallet.Protos$Transaction$Purpose)>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasMemo()>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11800(org.bitcoinj.wallet.Protos$Transaction)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionOutputFieldBuilder()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasHash()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Pool getPool()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureBlockRelativityOffsetsIsMutable()>","<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setLockTime(int)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoinj.wallet.Protos$Transaction: java.util.List access$11600(org.bitcoinj.wallet.Protos$Transaction)>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasPurpose()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.ByteString getHash()>"],"<androidx.collection.SparseArrayCompat: java.lang.String toString()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.collection.SparseArrayCompat: int keyAt(int)>","<androidx.collection.SparseArrayCompat: int size()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: void <init>(int)>"],"<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>":["<android.app.Activity: android.app.Application getApplication()>","<android.app.Activity: void setTaskDescription(android.app.ActivityManager$TaskDescription)>","<androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>","<android.os.Build$VERSION: void <clinit>()>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>","<android.app.ActivityManager$TaskDescription: void <clinit>()>","<android.app.ActivityManager$TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1700(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void handleGo()>"],"<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.Vector: void <init>()>"],"<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)>"],"<ch.qos.logback.core.joran.action.AppenderAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.CodedOutputStream: int spaceLeft()>":["<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"],"<androidx.recyclerview.widget.ViewBoundsCheck: void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback)>":["<androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void <init>()>","<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AggregateFuture: boolean access$400(java.util.Set,java.lang.Throwable)>":["<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture: boolean addCausalChain(java.util.Set,java.lang.Throwable)>","<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>"],"<java.lang.Object: void finalize()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.joran.spi.Interpreter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>":["<ch.qos.logback.core.joran.spi.Interpreter: java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.joran.spi.ElementPath: void push(java.lang.String)>","<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>","<ch.qos.logback.core.joran.spi.Interpreter: void pushEmptyActionList()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String)>","<ch.qos.logback.core.joran.spi.Interpreter: java.lang.String getTagName(java.lang.String,java.lang.String)>","<java.util.Vector: boolean add(java.lang.Object)>"],"<com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>":["<com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>","<com.google.common.util.concurrent.AbstractFuture: boolean isDone()>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>"],"<org.bitcoinj.wallet.Protos$Transaction: int getTransactionInputCount()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.CodedOutputStream: void writeRawBytes(byte[])>":["<com.google.protobuf.CodedOutputStream: void writeRawBytes(byte[],int,int)>"],"<com.google.protobuf.TextFormat$Printer: void access$400(com.google.protobuf.TextFormat$Printer,com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat$Printer: void print(com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator)>"],"<org.bitcoinj.wallet.Protos$Transaction: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder newBuilder()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder access$6300()>"],"<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>":["<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>","<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>","<java.io.IOException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.joran.action.AbstractIncludeAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<de.schildbach.wallet.ui.SendingAddressesFragment: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.SendingAddressesFragment: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addTransaction(org.bitcoinj.wallet.Protos$Transaction)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTransactionIsMutable()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List maybeLookAhead(org.bitcoinj.crypto.DeterministicKey,int,int,int)>":["<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveThisOrNextChildKey(org.bitcoinj.crypto.DeterministicKey,int)>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.DeterministicHierarchy: int getNumChildren(com.google.common.collect.ImmutableList)>","<org.bitcoinj.crypto.DeterministicKey: java.lang.String getPathAsString()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.ChildNumber getChildNumber()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.bitcoinj.crypto.ChildNumber: int num()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<java.util.ArrayList: void <init>(int)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<java.util.ArrayList: void <init>()>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey dropPrivateBytes()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>"],"<com.squareup.moshi.StandardJsonAdapters$10: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<com.google.common.base.CharMatcher$None: void <init>()>":["<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>":["<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void tryDrainReferenceQueues()>","<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int)>","<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: void setValue(java.lang.Object,java.lang.ref.ReferenceQueue)>":["<java.lang.ref.Reference: void clear()>","<com.google.common.collect.MapMakerInternalMap$1: void clear()>","<com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<org.bitcoinj.core.Sha256Hash: byte[] getReversedBytes()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: byte[] reverseBytes(byte[])>"],"<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: java.util.concurrent.Future cleanAsynchronously(java.util.Date)>":["<ch.qos.logback.core.ContextBase: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>","<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover$ArhiveRemoverRunnable: void <init>(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover,java.util.Date)>","<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>"],"<org.bitcoinj.core.PeerGroup: int getMinBroadcastConnections()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.Double: boolean isNaN(double)>","<java.lang.Math: long round(double)>","<java.lang.Double: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: int getMaxConnections()>"],"<org.spongycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>":["<java.io.ByteArrayOutputStream: void <init>()>","<org.spongycastle.util.io.Streams: void <clinit>()>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>"],"<org.spongycastle.crypto.macs.HMac: void <clinit>()>":["<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.spongycastle.crypto.macs.HMac: void <clinit>()>","<java.util.Hashtable: void <init>()>","<org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>"],"<org.spongycastle.asn1.BERSequenceParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.AbstractIndexedListIterator: void <init>(int,int)>":["<com.google.common.collect.UnmodifiableListIterator: void <init>()>","<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5300()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: void <init>()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat repeatOptionalDecimals(int,int)>":["<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<java.lang.Integer: void <clinit>()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<java.lang.String: int indexOf(int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.DERBitString: void <init>(byte[],int)>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2200(de.schildbach.wallet.ui.send.SendCoinsFragment,org.spongycastle.crypto.params.KeyParameter)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void signAndSendPayment(org.spongycastle.crypto.params.KeyParameter)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<okhttp3.Headers: void checkName(java.lang.String)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: char charAt(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.String: boolean isEmpty()>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.String: int length()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment: void onDestroy()>":["<de.schildbach.wallet.Configuration: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>","<androidx.fragment.app.Fragment: void onDestroy()>"],"<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>":["<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>"],"<org.bitcoinj.core.DumpedPrivateKey: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<org.bitcoinj.core.NetworkParameters: int getDumpedPrivateKeyHeader()>","<org.bitcoinj.core.WrongNetworkException: void <init>(int,int[])>","<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>","<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>":["<org.spongycastle.crypto.RuntimeCryptoException: void <init>(java.lang.String)>"],"<androidx.core.app.ActivityCompat$1: void <init>(java.lang.String[],android.app.Activity,int)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.util.MonetarySpannable: void <clinit>()>":["<android.text.style.RelativeSizeSpan: void <init>(float)>","<de.schildbach.wallet.util.MonetarySpannable: void <clinit>()>","<android.text.style.StyleSpan: void <init>(int)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: void setValue(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions getDefaultInstance()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionImpl$3: void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)>":["<java.lang.Object: void <init>()>"],"<okio.SegmentPool: okio.Segment take()>":["<okio.Segment: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>"],"<ch.qos.logback.core.OutputStreamAppender: void <init>()>":["<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>","<ch.qos.logback.core.UnsynchronizedAppenderBase: void <init>()>"],"<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>":["<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.GeneratedMessage getMessage(int,boolean)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.RepeatedFieldBuilder: void ensureMutableMessageList()>","<java.util.ArrayList: int size()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: java.lang.Object get(int)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>":["<java.util.concurrent.CopyOnWriteArrayList: int size()>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>","<ch.qos.logback.classic.spi.TurboFilterList: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$1: org.bitcoin.protocols.payments.Protos$PaymentRequest parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.squareup.moshi.Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>":["<java.lang.Class: java.lang.Class getComponentType()>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>","<java.lang.Object: boolean equals(java.lang.Object)>","<com.squareup.moshi.Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: boolean equals(java.lang.Object)>","<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>","<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>","<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: boolean equals(java.lang.Object)>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: boolean equals(java.lang.Object)>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: void setValue(java.lang.Object,java.lang.ref.ReferenceQueue)>":["<java.lang.ref.Reference: void clear()>","<com.google.common.collect.MapMakerInternalMap$1: void clear()>","<com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<de.schildbach.wallet.service.BlockchainService: void access$1800(de.schildbach.wallet.service.BlockchainService,org.bitcoinj.core.Address,org.bitcoinj.core.Coin,org.bitcoinj.core.Sha256Hash)>":["<de.schildbach.wallet.service.BlockchainService: void notifyCoinsReceived(org.bitcoinj.core.Address,org.bitcoinj.core.Coin,org.bitcoinj.core.Sha256Hash)>"],"<ch.qos.logback.core.rolling.RollingFileAppender: java.lang.String getFile()>":["<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: java.lang.String getActiveFileName()>"],"<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getMinNonDustValue()>":["<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getMinNonDustValue(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder access$1000()>"],"<com.google.common.base.Joiner: java.lang.String join(java.util.Iterator)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object)>":["<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>"],"<androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>":["<androidx.lifecycle.Lifecycling: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: boolean isEmpty()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int length()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>":["<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>()>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto$1: com.google.protobuf.DescriptorProtos$OneofDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <clinit>()>"],"<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void <init>(android.view.View)>":["<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>"],"<org.bitcoinj.uri.BitcoinURI: java.lang.String getLabel()>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>"],"<okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)>":["<java.lang.Throwable: java.lang.String getMessage()>","<java.lang.Throwable: java.lang.Throwable getCause()>"],"<org.bitcoinj.core.NetworkParameters: void <init>()>":["<java.lang.Object: void <init>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block createGenesis(org.bitcoinj.core.NetworkParameters)>","<java.util.HashMap: void <init>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>"],"<org.spongycastle.asn1.DERGenerator: void writeDEREncoded(java.io.OutputStream,int,byte[])>":["<java.io.ByteArrayOutputStream: void write(byte[])>","<java.io.ByteArrayOutputStream: void write(int)>","<org.spongycastle.asn1.DERGenerator: void writeLength(java.io.OutputStream,int)>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder access$15200()>":["<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder create()>"],"<org.bitcoinj.core.TransactionConfidence$Listener$ChangeReason: void <clinit>()>":["<org.bitcoinj.core.TransactionConfidence$Listener$ChangeReason: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$Listener$ChangeReason: void <init>(java.lang.String,int)>"],"<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>":["<java.lang.String: java.lang.CharSequence subSequence(int,int)>","<java.lang.StringBuilder: int length()>","<java.lang.String: int length()>","<java.lang.StringBuilder: java.lang.CharSequence subSequence(int,int)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMerchantData(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onDestroy()>":["<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>","<android.os.HandlerThread: boolean quit()>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<android.app.Activity: void setRequestedOrientation(int)>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat optionalDecimals(int[])>":["<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()>":["<androidx.fragment.app.Fragment$AnimationInfo: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK getDefaultInstance()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.TextFormat: java.lang.String escapeBytes(byte[])>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.TextFormat$ByteSequence)>","<com.google.protobuf.TextFormat$2: void <init>(byte[])>"],"<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.io.FilterInputStream: int read()>","<java.io.EOFException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.core.ECKey: byte[] getPrivKeyBytes()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger getPrivKey()>","<org.bitcoinj.core.Utils: byte[] bigIntegerToBytes(java.math.BigInteger,int)>"],"<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>":["<androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>","<androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>","<android.os.SystemClock: long uptimeMillis()>"],"<ch.qos.logback.classic.Logger: boolean isDebugEnabled(org.slf4j.Marker)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.classic.Logger: ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<ch.qos.logback.core.rolling.RollingPolicyBase: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>"],"<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.Descriptors$FileDescriptor: java.lang.String getName()>","<java.lang.String: int lastIndexOf(int)>","<java.lang.String: java.lang.String substring(int,int)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>","<com.google.protobuf.Descriptors$EnumDescriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>","<com.google.protobuf.Descriptors$Descriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>","<com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$EnumDescriptor: java.lang.String getFullName()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$ServiceDescriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>","<com.google.protobuf.Descriptors$FieldDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$DescriptorPool: void validateSymbolName(com.google.protobuf.Descriptors$GenericDescriptor)>","<java.lang.String: int length()>","<com.google.protobuf.Descriptors$EnumValueDescriptor: java.lang.String getFullName()>","<java.lang.String: java.lang.String substring(int)>","<com.google.protobuf.Descriptors$ServiceDescriptor: java.lang.String getFullName()>","<com.google.protobuf.Descriptors$DescriptorPool: void <clinit>()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>","<java.lang.StringBuilder: void <init>(int)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<com.google.protobuf.Descriptors$EnumValueDescriptor: com.google.protobuf.Descriptors$FileDescriptor getFile()>"],"<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void checkNotDone()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>"],"<org.bitcoinj.crypto.PBKDF2SHA512: byte[] F(java.lang.String,java.lang.String,int,int)>":["<java.lang.String: byte[] getBytes(java.lang.String)>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.crypto.PBKDF2SHA512: byte[] INT(int)>","<java.lang.System: void <clinit>()>","<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>","<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()>","<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>"],"<de.schildbach.wallet.ui.WalletActivity: void onNewIntent(android.content.Intent)>":["<de.schildbach.wallet.ui.WalletActivity: void handleIntent(android.content.Intent)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$1: org.bitcoinj.wallet.Protos$DeterministicKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>":["<com.google.common.collect.RegularImmutableList: int copyIntoArray(java.lang.Object[],int)>","<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>":["<androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>"],"<org.spongycastle.asn1.StreamUtil: void <clinit>()>":["<org.spongycastle.asn1.StreamUtil: void <clinit>()>","<java.lang.Runtime: java.lang.Runtime getRuntime()>"],"<com.google.common.base.Equivalence: com.google.common.base.Equivalence identity()>":["<com.google.common.base.Equivalence$Identity: void <clinit>()>"],"<org.bitcoinj.utils.ExponentialBackoff: void trackFailure()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.utils.ExponentialBackoff$Params: float access$100(org.bitcoinj.utils.ExponentialBackoff$Params)>","<java.lang.Math: float min(float,float)>","<org.bitcoinj.utils.ExponentialBackoff$Params: float access$200(org.bitcoinj.utils.ExponentialBackoff$Params)>","<org.bitcoinj.core.Utils: long currentTimeMillis()>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.common.collect.ImmutableMap: void <clinit>()>":["<com.google.common.collect.ImmutableMap: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14500()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$13300()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: boolean hasFiatCurrencyCode()>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean hasFiatValue()>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean hasCoinValue()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void initFields()>","<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData$1: void <init>()>","<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(boolean)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder newBuilderForType()>"],"<com.google.common.collect.Iterators$PeekingImpl: java.lang.Object next()>":["<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>"],"<androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()>":["<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()>"],"<androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<java.io.PrintWriter: void print(java.lang.String)>","<java.io.PrintWriter: void println(boolean)>","<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.Fragment: int getStateAfterAnimating()>","<androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<java.io.PrintWriter: void println(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.PrintWriter: void println(java.lang.Object)>","<java.lang.Integer: java.lang.String toHexString(int)>","<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>","<java.io.PrintWriter: void println(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.io.PrintWriter: void print(int)>","<java.io.PrintWriter: void print(boolean)>","<java.io.PrintWriter: void print(java.lang.Object)>","<androidx.fragment.app.Fragment: android.content.Context getContext()>","<androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<androidx.fragment.app.Fragment: int getNextAnim()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>":["<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker weakKeys()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$1: void <init>()>","<com.google.common.collect.MapMaker: void <init>()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>","<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address currentChangeAddress()>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address currentAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <clinit>()>"],"<org.bitcoinj.core.Coin: void <init>(long)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$14: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>"],"<org.bitcoinj.core.PeerGroup$16: void onSuccess(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.PeerGroup: java.util.concurrent.CopyOnWriteArrayList access$2900(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.PeerGroup: java.util.Set access$2800(org.bitcoinj.core.PeerGroup)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<com.google.common.base.AbstractIterator$1: void <clinit>()>":["<com.google.common.base.AbstractIterator$1: void <clinit>()>","<java.lang.Enum: int ordinal()>","<com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2900()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handlePrivateKey(org.bitcoinj.core.VersionedChecksummedBytes)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<com.google.protobuf.Descriptors$FileDescriptor: java.util.List getMessageTypes()>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<java.util.Collections: void <clinit>()>"],"<org.bitcoinj.crypto.BIP38PrivateKey: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>","<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addBlockRelativityOffsets(int)>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureBlockRelativityOffsetsIsMutable()>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<ch.qos.logback.core.joran.action.AppenderRefAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.GeneratedMessage$Builder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstance(com.google.protobuf.Descriptors$Descriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(int,byte[])>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>"],"<androidx.core.util.Preconditions: void checkState(boolean)>":["<androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>"],"<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>":["<com.google.common.util.concurrent.AbstractService$StateSnapshot: com.google.common.util.concurrent.Service$State externalState()>"],"<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)>":["<androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)>"],"<ch.qos.logback.classic.Logger: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.MessageSerializer: org.bitcoinj.core.Transaction makeTransaction(byte[],int)>":["<org.bitcoinj.core.BitcoinSerializer: org.bitcoinj.core.Transaction makeTransaction(byte[],int,int,byte[])>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates getDefaultInstanceForType()>"],"<com.google.protobuf.Descriptors$EnumDescriptor: com.google.protobuf.Message toProto()>":["<com.google.protobuf.Descriptors$EnumDescriptor: com.google.protobuf.DescriptorProtos$EnumDescriptorProto toProto()>"],"<com.google.protobuf.CodedOutputStream: void checkNoSpaceLeft()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.google.protobuf.CodedOutputStream: int spaceLeft()>"],"<ch.qos.logback.core.util.CachingDateFormatter: void <init>(java.lang.String)>":["<ch.qos.logback.core.util.CachingDateFormatter: void <init>(java.lang.String,java.util.Locale)>","<java.util.Locale: void <clinit>()>"],"<ch.qos.logback.core.BasicStatusManager: void fireStatusAddEvent(ch.qos.logback.core.status.Status)>":["<java.util.ArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$PeerAddress$1: org.bitcoinj.wallet.Protos$PeerAddress parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.util.concurrent.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void run()>","<org.bitcoinj.core.Peer$2: void run()>","<org.bitcoinj.utils.Threading$2: void execute(java.lang.Runnable)>","<com.google.common.util.concurrent.Futures$CallbackListener: void run()>","<com.google.common.util.concurrent.AbstractTransformFuture: void run()>","<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void run()>","<com.google.common.util.concurrent.MoreExecutors$5: void execute(java.lang.Runnable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.logging.Level: void <clinit>()>","<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void execute(java.lang.Runnable)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void run()>"],"<androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)>":["<androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<android.transition.TransitionSet: java.util.List getTargets()>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>"],"<androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)>":["<android.os.Bundle: void putBoolean(java.lang.String,boolean)>","<java.util.ArrayList: void <init>(int)>","<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>","<android.os.Bundle: void <init>()>","<android.os.Bundle: void putString(java.lang.String,java.lang.String)>","<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<android.os.Bundle: void <clinit>()>","<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>","<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$2800()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <clinit>()>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <init>()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <clinit>()>"],"<com.google.protobuf.TextFormat$Printer: void printField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat$Printer: void printSingleField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>"],"<de.schildbach.wallet.service.BlockchainService: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.Class: java.lang.Package getPackage()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.lang.Math: int max(int,int)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol$Output: void <init>(org.bitcoinj.core.Coin,byte[])>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: void observeLiveDatasThatAreDependentOnWalletAndBlockchain()>":["<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData: void <init>(org.bitcoinj.wallet.Wallet)>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<de.schildbach.wallet.data.TimeLiveData: void <init>(de.schildbach.wallet.WalletApplication)>","<androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>","<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void <init>(de.schildbach.wallet.WalletApplication)>","<de.schildbach.wallet.service.BlockchainService$6: void <init>(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService$5: void <init>(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService$7: void <init>(de.schildbach.wallet.service.BlockchainService)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumValueOptions)>"],"<androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)>":["<androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>":["<android.app.Activity: void requestPermissions(java.lang.String[],int)>","<android.os.Handler: void <init>(android.os.Looper)>","<androidx.core.app.ActivityCompat$1: void <init>(java.lang.String[],android.app.Activity,int)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<android.os.Build$VERSION: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)>","<androidx.core.app.ActivityCompat$1: void run()>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<java.lang.String: void <clinit>()>":["<java.lang.String: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.slf4j.helpers.NOPLoggerFactory: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$MethodDescriptor: void <init>(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$ServiceDescriptor,int,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$MethodDescriptor: void <init>(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$ServiceDescriptor,int)>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void initFields()>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode valueOf(int)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void clear(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>":["<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<android.appwidget.AppWidgetProvider: android.content.BroadcastReceiver$PendingResult goAsync()>","<java.lang.Integer: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<android.os.AsyncTask: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<de.schildbach.wallet.WalletBalanceWidgetProvider$2: void <init>(de.schildbach.wallet.WalletBalanceWidgetProvider,android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle,android.content.BroadcastReceiver$PendingResult)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<android.os.AsyncTask: void execute(java.lang.Runnable)>"],"<com.google.protobuf.AbstractMessageLite$Builder: void checkForNullValues(java.lang.Iterable)>":["<java.lang.NullPointerException: void <init>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>"],"<org.spongycastle.crypto.generators.ECKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>":["<java.security.SecureRandom: void <init>()>","<org.spongycastle.crypto.KeyGenerationParameters: java.security.SecureRandom getRandom()>","<org.spongycastle.crypto.params.ECKeyGenerationParameters: org.spongycastle.crypto.params.ECDomainParameters getDomainParameters()>"],"<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<ch.qos.logback.core.util.StatusPrinter: void print(ch.qos.logback.core.status.StatusManager,long)>":["<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusList()>","<ch.qos.logback.core.status.StatusUtil: java.util.List filterStatusListByTimeThreshold(java.util.List,long)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.util.StatusPrinter: void buildStrFromStatusList(java.lang.StringBuilder,java.util.List)>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$4: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<de.schildbach.wallet.util.Base43: byte[] copyOfRange(byte[],int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction buildPartial()>"],"<org.spongycastle.asn1.DERGeneralString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()>":["<androidx.collection.SparseArrayCompat: void <clinit>()>","<androidx.lifecycle.ViewModel: void <init>()>","<androidx.collection.SparseArrayCompat: void <init>()>"],"<ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy: void <init>()>":["<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void <init>()>"],"<com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>":["<com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>","<com.google.protobuf.CodedOutputStream: int computeTagSize(int)>"],"<androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>":["<androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>","<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()>","<androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>","<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>"],"<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$Transaction: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$1: void <init>()>"],"<androidx.core.content.FileProvider: void <clinit>()>":["<java.lang.String: void <clinit>()>","<androidx.core.content.FileProvider: void <clinit>()>","<java.util.HashMap: void <init>()>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>"],"<org.bitcoinj.core.TransactionConfidence: void addEventListener(java.util.concurrent.Executor,org.bitcoinj.core.TransactionConfidence$Listener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.TransactionConfidence: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>"],"<com.google.common.base.CharMatcher$BreakingWhitespace: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$BreakingWhitespace: void <clinit>()>","<com.google.common.base.CharMatcher$BreakingWhitespace: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$Waiter: void <init>(boolean)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])>":["<org.spongycastle.asn1.ASN1OutputStream: void writeTag(int,int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>","<org.spongycastle.asn1.ASN1OutputStream: void write(byte[])>"],"<ch.qos.logback.core.joran.action.PropertyAction: void <clinit>()>":["<ch.qos.logback.core.joran.action.PropertyAction: void <clinit>()>"],"<org.spongycastle.asn1.ASN1OutputStream: void write(byte[],int,int)>":["<java.io.ByteArrayOutputStream: void write(byte[],int,int)>"],"<de.schildbach.wallet.Logging: void init(java.io.File)>":["<ch.qos.logback.classic.android.LogcatAppender: void setTagEncoder(ch.qos.logback.classic.encoder.PatternLayoutEncoder)>","<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.Logger getLogger(java.lang.String)>","<ch.qos.logback.core.FileAppender: void <clinit>()>","<ch.qos.logback.core.OutputStreamAppender: void setEncoder(ch.qos.logback.core.encoder.Encoder)>","<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void start()>","<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void start()>","<ch.qos.logback.classic.Logger: void setLevel(ch.qos.logback.classic.Level)>","<ch.qos.logback.core.rolling.RollingPolicyBase: void setParent(ch.qos.logback.core.FileAppender)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void <init>()>","<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void setMaxHistory(int)>","<ch.qos.logback.classic.android.LogcatAppender: void setEncoder(ch.qos.logback.classic.encoder.PatternLayoutEncoder)>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.android.LogcatAppender: void start()>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.rolling.RollingFileAppender: void <clinit>()>","<java.io.File: java.lang.String getAbsolutePath()>","<ch.qos.logback.core.rolling.RollingFileAppender: void setRollingPolicy(ch.qos.logback.core.rolling.RollingPolicy)>","<ch.qos.logback.classic.android.LogcatAppender: void <init>()>","<ch.qos.logback.core.rolling.RollingFileAppender: void setFile(java.lang.String)>","<java.io.File: boolean mkdir()>","<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: void setPattern(java.lang.String)>","<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void <init>()>","<ch.qos.logback.classic.Logger: void addAppender(ch.qos.logback.core.Appender)>","<java.io.File: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<org.slf4j.LoggerFactory: void <clinit>()>","<ch.qos.logback.core.rolling.RollingFileAppender: void start()>","<java.io.File: void <init>(java.io.File,java.lang.String)>","<ch.qos.logback.core.rolling.RollingPolicyBase: void setFileNamePattern(java.lang.String)>","<ch.qos.logback.core.rolling.RollingFileAppender: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$9: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Wallet$ExceededMaxTransactionSize: void <init>()>":["<org.bitcoinj.wallet.Wallet$CompletionException: void <init>()>"],"<java.lang.String: java.lang.String toString()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>":["<okhttp3.internal.platform.AndroidPlatform$CloseGuard: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo build()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder toBuilder()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$19500()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.spongycastle.asn1.DERNumericString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<com.google.common.collect.ReverseNaturalOrdering: com.google.common.collect.Ordering reverse()>":["<com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>()>"],"<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>":["<org.spongycastle.util.io.Streams: void <clinit>()>","<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[],int,int)>"],"<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)>":["<android.os.Bundle: void putBoolean(java.lang.String,boolean)>","<androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)>","<android.os.Bundle: void <init>()>","<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<android.os.Bundle: boolean isEmpty()>","<android.os.Bundle: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>"],"<org.spongycastle.crypto.generators.ECKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>":["<org.spongycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.spongycastle.crypto.params.AsymmetricKeyParameter,org.spongycastle.crypto.params.AsymmetricKeyParameter)>","<org.spongycastle.math.ec.WNafUtil: int getNafWeight(java.math.BigInteger)>","<org.spongycastle.crypto.params.ECPublicKeyParameters: void <init>(org.spongycastle.math.ec.ECPoint,org.spongycastle.crypto.params.ECDomainParameters)>","<org.spongycastle.crypto.params.ECPrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.ECDomainParameters)>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>","<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>","<org.spongycastle.crypto.generators.ECKeyPairGenerator: org.spongycastle.math.ec.ECMultiplier createBasePointMultiplier()>","<org.spongycastle.math.ec.AbstractECMultiplier: org.spongycastle.math.ec.ECPoint multiply(org.spongycastle.math.ec.ECPoint,java.math.BigInteger)>","<java.math.BigInteger: void <clinit>()>","<java.math.BigInteger: void <init>(int,java.util.Random)>","<org.spongycastle.math.ec.WNafUtil: void <clinit>()>","<java.math.BigInteger: int compareTo(java.math.BigInteger)>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2700()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent: void <init>(org.bitcoinj.core.Address,java.lang.String)>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: void <init>(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent$Output[] buildSimplePayTo(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.bitcoinj.core.BlockChain: void <init>(org.bitcoinj.core.Context,org.bitcoinj.wallet.Wallet,org.bitcoinj.store.BlockStore)>":["<org.bitcoinj.core.BlockChain: void <init>(org.bitcoinj.core.Context,java.util.List,org.bitcoinj.store.BlockStore)>","<java.util.ArrayList: void <init>()>","<org.bitcoinj.core.AbstractBlockChain: void addWallet(org.bitcoinj.wallet.Wallet)>"],"<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: boolean equals(java.lang.Object)>":["<com.squareup.moshi.Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>"],"<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void <init>(java.security.MessageDigest,int,com.google.common.hash.MessageDigestHashFunction$1)>":["<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void <init>(java.security.MessageDigest,int)>"],"<java.lang.String: void <init>(byte[],int,int,java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.utils.VersionTally: void initialize(org.bitcoinj.store.BlockStore,org.bitcoinj.core.StoredBlock)>":["<java.util.Stack: boolean isEmpty()>","<java.util.Stack: java.lang.Object push(java.lang.Object)>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<java.lang.Long: java.lang.Long valueOf(long)>","<org.bitcoinj.utils.VersionTally: void add(long)>","<org.bitcoinj.core.Block: long getVersion()>","<java.lang.Long: void <clinit>()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock getPrev(org.bitcoinj.store.BlockStore)>","<java.util.Stack: java.lang.Object pop()>","<java.util.Stack: void <init>()>"],"<java.lang.String: void <init>(char[])>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Output: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<androidx.core.app.NotificationCompat$Action$Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean)>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.lang.Object: void <init>()>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: void lockStateChanged(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>":["<java.lang.ThreadLocal: java.lang.Object get()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: boolean isAcquiredByCurrentThread()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode()>"],"<org.bitcoinj.core.PeerGroup: boolean maybeCheckForLocalhostPeer()>":["<java.net.Socket: void close()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: int getPort()>","<com.google.common.net.InetAddresses: java.net.InetAddress forString(java.lang.String)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<com.google.common.net.InetAddresses: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<java.net.Socket: void connect(java.net.SocketAddress,int)>","<java.net.Socket: void <init>()>","<org.bitcoinj.core.PeerGroup$LocalhostCheckState: void <clinit>()>"],"<androidx.recyclerview.widget.AsyncDifferConfig$Builder: void <clinit>()>":["<java.lang.Object: void <init>()>","<androidx.recyclerview.widget.AsyncDifferConfig$Builder: void <clinit>()>"],"<org.spongycastle.crypto.engines.AESFastEngine: void decryptBlock(int[][])>":["<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<ch.qos.logback.classic.Logger: void handleParentLevelChange(int)>":["<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>"],"<org.bitcoinj.wallet.WalletFiles: void saveNowInternal()>":["<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>","<org.bitcoinj.wallet.Wallet: void saveToFile(java.io.File,java.io.File)>","<java.io.File: java.io.File getAbsoluteFile()>","<java.io.File: java.io.File getParentFile()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.WalletFiles: void <clinit>()>","<java.io.File: void <clinit>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>":["<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>","<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask: void <init>(java.lang.Runnable)>","<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: void <init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.Descriptors$MethodDescriptor: void crossLink()>":["<com.google.protobuf.Descriptors$DescriptorPool: com.google.protobuf.Descriptors$GenericDescriptor lookupSymbol(java.lang.String,com.google.protobuf.Descriptors$GenericDescriptor,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <clinit>()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>"],"<org.bitcoinj.wallet.Protos$Key$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getEncryptedDataFieldBuilder()>","<org.bitcoinj.wallet.Protos$Key: boolean access$4000()>","<org.bitcoinj.wallet.Protos$Key: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getEncryptedDeterministicSeedFieldBuilder()>","<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getDeterministicKeyFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatusIfCountNotOverLimit(ch.qos.logback.core.status.Status)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.recovery.ResilientFileOutputStream: java.lang.String getDescription()>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<de.schildbach.wallet.ui.AddressAndLabel: void <init>(org.bitcoinj.core.Address,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>":["<org.bitcoinj.core.Coin: void <init>(long)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureOneofDeclIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.spongycastle.asn1.BERTaggedObjectParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<java.io.IOException: java.lang.String getMessage()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String)>","<org.spongycastle.asn1.BERTaggedObjectParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1: com.google.protobuf.DescriptorProtos$EnumDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.util.Qr: byte[] decodeBinary(java.lang.String)>":["<de.schildbach.wallet.util.Base43: byte[] decode(java.lang.String)>","<de.schildbach.wallet.util.Base43: void <clinit>()>"],"<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1Encodable)>":["<java.util.Vector: void <init>()>","<java.util.Vector: void addElement(java.lang.Object)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$000(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void validateReceivingAddress()>"],"<com.google.protobuf.TextFormat$2: void <init>(byte[])>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$24$3: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$24)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromIntentUri(java.lang.String,android.net.Uri)>":["<de.schildbach.wallet.ui.InputParser$StreamInputParser: void parse()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String,java.io.InputStream)>"],"<de.schildbach.wallet.ui.Event: de.schildbach.wallet.ui.Event simple()>":["<de.schildbach.wallet.ui.Event: void <init>(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MessageOptions)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: void complete(com.google.common.util.concurrent.AbstractFuture)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>"],"<ch.qos.logback.core.rolling.RollingFileAppender: void start()>":["<ch.qos.logback.core.FileAppender: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>","<ch.qos.logback.core.rolling.RollingPolicyBase: ch.qos.logback.core.rolling.helper.CompressionMode getCompressionMode()>","<ch.qos.logback.core.rolling.RollingFileAppender: boolean checkForFileAndPatternCollisions()>","<ch.qos.logback.core.rolling.RollingPolicyBase: boolean isStarted()>","<ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String getName()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.rolling.RollingFileAppender: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.rolling.RollingFileAppender: void setFile(java.lang.String)>","<ch.qos.logback.core.rolling.RollingFileAppender: java.lang.String getFile()>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>","<ch.qos.logback.core.FileAppender: void start()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.FileAppender: java.lang.String rawFileProperty()>","<java.io.File: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<java.io.File: void <init>(java.lang.String)>","<ch.qos.logback.core.FileAppender: boolean isPrudent()>","<ch.qos.logback.core.rolling.RollingFileAppender: boolean checkForCollisionsInPreviousRollingFileAppenders()>"],"<de.schildbach.wallet.util.Nfc: byte[] extractMimePayload(java.lang.String,android.nfc.NdefMessage)>":["<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>","<java.nio.charset.StandardCharsets: void <clinit>()>","<java.util.Arrays: boolean equals(byte[],byte[])>"],"<okhttp3.RealCall: okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)>":["<okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()>","<okhttp3.EventListener$2: okhttp3.EventListener create(okhttp3.Call)>","<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>"],"<org.bitcoinj.core.VersionMessage: void appendToSubVer(java.lang.String,java.lang.String,java.lang.String)>":["<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.VersionMessage: void checkSubVerComponent(java.lang.String)>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.core.ECKey findOldestKeyAfter(long)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.LinkedHashMap: java.util.Collection values()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<androidx.fragment.app.FragmentController: boolean execPendingActions()>":["<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionOutput$1: org.bitcoinj.wallet.Protos$TransactionOutput parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.utils.Threading: void throwOnLockCycles()>":["<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.utils.Threading: void setPolicy(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>":["<com.google.common.collect.MapMakerInternalMap: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference()>","<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <clinit>()>":["<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <init>(java.lang.String,int)>","<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <clinit>()>"],"<org.spongycastle.asn1.ASN1EncodableVector: int size()>":["<java.util.Vector: int size()>"],"<java.lang.Integer: int parseInt(java.lang.String,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction: boolean access$10800()>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<com.google.protobuf.UnknownFieldSet$Field: com.google.protobuf.UnknownFieldSet$Field$Builder newBuilder()>":["<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder access$300()>"],"<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void parse()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>","<java.lang.String: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void handleDirectTransaction(org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.InputParser: void parseAndHandlePaymentRequest(byte[])>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.InputParser: org.slf4j.Logger access$000()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.InputParser: void cannotClassify(java.lang.String)>","<java.lang.Throwable: java.lang.String getMessage()>","<de.schildbach.wallet.ui.WalletActivity$14: void error(int,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.Message: void <clinit>()>","<de.schildbach.wallet.ui.InputParser: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.AbstractMessage: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<androidx.fragment.app.Fragment: void performStop()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<androidx.fragment.app.Fragment: void onStop()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchStop()>"],"<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>"],"<ch.qos.logback.core.status.StatusUtil: boolean contextHasStatusListener(ch.qos.logback.core.Context)>":["<java.util.ArrayList: int size()>","<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusListenerList()>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>":["<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>","<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>"],"<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.Object: void <init>()>","<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)>","<androidx.lifecycle.ClassesInfoCache: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder newBuilder()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder access$4200()>"],"<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>":["<java.util.Timer: void <init>(java.lang.String,boolean)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>":["<java.lang.Enum: int compareTo(java.lang.Enum)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder create()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void <init>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void populateExtensions(org.bitcoinj.wallet.Wallet,org.bitcoinj.wallet.Protos$Wallet$Builder)>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addExtension(org.bitcoinj.wallet.Protos$Extension$Builder)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$Extension: org.bitcoinj.wallet.Protos$Extension$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setMandatory(boolean)>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setData(com.google.protobuf.ByteString)>","<com.google.common.collect.ImmutableMap: java.util.Collection values()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.wallet.Wallet: java.util.Map getExtensions()>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setId(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.crypto.digests.LongDigest: void processWord(byte[],int)>":["<org.spongycastle.crypto.digests.LongDigest: void processBlock()>","<org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>"],"<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Wallet: void initFields()>","<org.bitcoinj.wallet.Protos$Wallet$1: void <init>()>","<org.bitcoinj.wallet.Protos$Wallet: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: void <clinit>()>":["<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: java.util.Comparator getBestComparator()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Class: java.lang.String getName()>"],"<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean cancel(boolean)>":["<com.google.common.util.concurrent.AbstractFuture: boolean cancel(boolean)>"],"<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: boolean isAcquiredByCurrentThread()>":["<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field build()>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$902(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$600(com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$702(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$802(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$500(com.google.protobuf.UnknownFieldSet$Field)>","<java.util.Collections: java.util.List emptyList()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$700(com.google.protobuf.UnknownFieldSet$Field)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$602(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$502(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$800(com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$900(com.google.protobuf.UnknownFieldSet$Field)>"],"<com.google.common.collect.ImmutableList$Builder: void <init>()>":["<com.google.common.collect.ImmutableList$Builder: void <init>(int)>"],"<androidx.room.RoomDatabase$JournalMode: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet build()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Wallet: boolean isInitialized()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.core.Utils: java.util.Date now()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.util.Date: void <init>()>"],"<dummyMainClass: de.schildbach.wallet.ui.monitor.NetworkMonitorActivity dummyMainMethod_de_schildbach_wallet_ui_monitor_NetworkMonitorActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onResume()>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setSpentByTransactionHash(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setExchangeRate(org.bitcoinj.wallet.Protos$ExchangeRate$Builder)>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder setMessage(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate build()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getMaxPrecisionFormat()>","<org.bitcoinj.utils.MonetaryFormat: java.lang.String code()>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getAddress(android.bluetooth.BluetoothAdapter)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void <init>(de.schildbach.wallet.ui.CurrencyAmountView,de.schildbach.wallet.ui.CurrencyAmountView)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void markPubKeyHashAsUsed(byte[])>":["<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.KeyChainGroup: void maybeMarkCurrentKeyAsUsed(org.bitcoinj.crypto.DeterministicKey)>"],"<androidx.arch.core.executor.TaskExecutor: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: int getLookaheadSize()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.crypto.HDKeyDerivation: void assertNonZero(java.math.BigInteger,java.lang.String)>":["<java.math.BigInteger: boolean equals(java.lang.Object)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.crypto.HDDerivationException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: boolean isUnboundedTotalSizeCap()>":["<ch.qos.logback.core.util.FileSize: long getSize()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentDetails)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest getDefaultInstance()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.slf4j.LoggerFactory: boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)>":["<java.util.HashSet: int size()>"],"<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>":["<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>","<okhttp3.HttpUrl: void <clinit>()>","<java.lang.String: int length()>"],"<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$402(com.google.common.util.concurrent.AbstractFuture,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$400(com.google.common.util.concurrent.AbstractFuture)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List,org.bitcoinj.wallet.DefaultRiskAnalysis$1)>":["<org.bitcoinj.wallet.DefaultRiskAnalysis: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onSaveInstanceState(android.os.Bundle)>":["<de.schildbach.wallet.ui.RequestCoinsFragment: void saveInstanceState(android.os.Bundle)>","<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>"],"<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>":["<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable)>"],"<org.bitcoinj.signers.MissingSigResolutionSigner: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.signers.MissingSigResolutionSigner: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void initFields()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[])>":["<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[],int,int)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>":["<com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <clinit>()>","<com.google.common.util.concurrent.ImmediateFuture: void <clinit>()>","<com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <init>(java.lang.Object)>"],"<com.google.protobuf.Descriptors$1: void <clinit>()>":["<com.google.protobuf.Descriptors$1: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type[] values()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: com.google.protobuf.Descriptors$FieldDescriptor$JavaType[] values()>","<java.lang.Enum: int ordinal()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.DeterministicKey currentKey(org.bitcoinj.wallet.KeyChain$KeyPurpose)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.crypto.DeterministicKey freshKey(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>","<java.util.EnumMap: java.lang.Object get(java.lang.Object)>","<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>"],"<org.spongycastle.asn1.ASN1OutputStream: void writeTag(int,int)>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void write(byte[],int,int)>"],"<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity,androidx.lifecycle.ViewModelProvider$Factory)>":["<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>","<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>","<androidx.lifecycle.ViewModelProviders: android.app.Application checkApplication(android.app.Activity)>","<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)>"],"<ch.qos.logback.classic.android.LogcatAppender: void start()>":["<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void stop()>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: ch.qos.logback.core.Layout getLayout()>","<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void start()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<java.lang.String: boolean contains(java.lang.CharSequence)>","<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: java.lang.String getPattern()>","<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: void setPattern(java.lang.String)>","<ch.qos.logback.core.UnsynchronizedAppenderBase: void start()>","<ch.qos.logback.core.pattern.PatternLayoutBase: void setPostCompileProcessor(ch.qos.logback.core.pattern.PostCompileProcessor)>"],"<com.google.protobuf.Descriptors$Descriptor: java.util.List getOneofs()>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<java.util.Collections: void <clinit>()>"],"<com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.spongycastle.asn1.BERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean)>"],"<com.google.protobuf.TextFormat: java.lang.String escapeText(java.lang.String)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.ByteString)>"],"<com.google.protobuf.TextFormat$TextGenerator: void outdent()>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: int length()>","<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>"],"<org.bitcoinj.core.Block: void solve()>":["<org.bitcoinj.core.Block: void setNonce(long)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.Block: long getNonce()>","<org.bitcoinj.core.Block: boolean checkProofOfWork(boolean)>"],"<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],org.bitcoinj.core.TransactionOutPoint)>":["<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],org.bitcoinj.core.TransactionOutPoint,org.bitcoinj.core.Coin)>"],"<de.schildbach.wallet.ui.scan.ScannerView: void <init>(android.content.Context,android.util.AttributeSet)>":["<android.graphics.Paint: void setStrokeWidth(float)>","<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>","<android.graphics.Paint: void setAlpha(int)>","<java.util.HashMap: void <init>(int)>","<android.graphics.Matrix: void <init>()>","<android.graphics.Paint: void <init>()>","<android.view.View: android.content.res.Resources getResources()>","<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>","<android.graphics.Paint$Style: void <clinit>()>","<android.graphics.Paint: void setAntiAlias(boolean)>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder mergeFrom(org.bitcoinj.wallet.Protos$Tag)>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder setData(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Tag: boolean hasData()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$Tag: java.lang.Object access$15600(org.bitcoinj.wallet.Protos$Tag)>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.ByteString getData()>","<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag getDefaultInstance()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Tag: boolean hasTag()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6300()>"],"<org.bitcoinj.core.Message: byte[] readBytes(int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.ProtocolException: void <init>(java.lang.Exception)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.ProtocolException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.wallet.Wallet: void isConsistentOrThrow()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.HashMap: java.util.Collection values()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.HashSet: void <init>()>","<java.util.HashSet: int size()>","<org.bitcoinj.wallet.Wallet: java.util.Set getTransactions(boolean)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: boolean isTxConsistent(org.bitcoinj.core.Transaction,boolean)>","<java.util.HashSet: java.util.Iterator iterator()>","<java.util.HashMap: int size()>"],"<com.google.protobuf.UninitializedMessageException: java.lang.String buildDescription(java.util.List)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$Source: void <init>(java.lang.String,int)>"],"<com.google.common.util.concurrent.AggregateFutureState: int decrementRemainingAndGet()>":["<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: int decrementAndGetRemainingCount(com.google.common.util.concurrent.AggregateFutureState)>","<com.google.common.util.concurrent.AggregateFutureState: void <clinit>()>","<com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper: int decrementAndGetRemainingCount(com.google.common.util.concurrent.AggregateFutureState)>"],"<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean access$3100()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.loader.content.ModernAsyncTask: boolean cancel(boolean)>":["<java.util.concurrent.FutureTask: boolean cancel(boolean)>","<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstanceForType()>"],"<org.bitcoinj.core.TransactionConfidence: void setOverridingTransaction(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void setConfidenceType(org.bitcoinj.core.TransactionConfidence$ConfidenceType)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$EncryptedData: boolean hasEncryptedPrivateKey()>","<org.bitcoinj.wallet.Protos$EncryptedData: boolean hasInitialisationVector()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void setState(de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateView()>","<android.app.Activity: void invalidateOptionsMenu()>"],"<com.google.common.hash.AbstractHashFunction: com.google.common.hash.HashCode hashBytes(byte[],int,int)>":["<com.google.common.hash.AbstractHashFunction: com.google.common.hash.Hasher newHasher(int)>","<com.google.common.hash.AbstractByteHasher: com.google.common.hash.Hasher putBytes(byte[],int,int)>","<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>","<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>"],"<org.bitcoinj.wallet.Protos$Key: boolean access$4000()>":["<org.bitcoinj.wallet.Protos$Key: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.TransactionOutput: int getIndex()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Transaction getParentTransaction()>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>"],"<androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void <init>(org.bitcoinj.core.TransactionBroadcast)>":["<org.bitcoinj.core.Context: org.bitcoinj.core.Context get()>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.Context: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<org.spongycastle.asn1.BERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<androidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<android.os.Handler: void <init>()>","<androidx.lifecycle.ProcessLifecycleOwner$3: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>"],"<androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<androidx.loader.content.CursorLoader: void onStartLoading()>":["<androidx.loader.content.Loader: boolean takeContentChanged()>","<de.schildbach.wallet.data.SelectedExchangeRateLiveData$1: void deliverResult(android.database.Cursor)>","<androidx.loader.content.Loader: void forceLoad()>"],"<org.bitcoinj.utils.Threading: void setPolicy(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: void maybeForceBuilderInitialization()>"],"<ch.qos.logback.classic.LoggerContext: void noAppenderDefinedWarning(ch.qos.logback.classic.Logger)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.ContextBase: java.lang.String getName()>","<ch.qos.logback.core.status.WarnStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: java.lang.String getName()>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.protobuf.AbstractMessage: com.google.protobuf.UninitializedMessageException newUninitializedMessageException()>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$3900()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer)>":["<ch.qos.logback.core.pattern.parser.TokenStream: void addValuedToken(int,java.lang.StringBuffer,java.util.List)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Character: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>","<java.lang.Character: boolean isJavaIdentifierStart(char)>"],"<okio.AsyncTimeout: void exit(boolean)>":["<okio.AsyncTimeout: boolean exit()>","<okio.Okio$4: java.io.IOException newTimeoutException(java.io.IOException)>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void decrementCountAndMaybeComplete()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void processCompleted()>","<com.google.common.util.concurrent.AggregateFutureState: int decrementRemainingAndGet()>"],"<dummyMainClass: de.schildbach.wallet.service.BootstrapReceiver dummyMainMethod_de_schildbach_wallet_service_BootstrapReceiver(android.content.Intent)>":["<de.schildbach.wallet.service.BootstrapReceiver: void <init>()>","<de.schildbach.wallet.service.BootstrapReceiver: void <clinit>()>","<de.schildbach.wallet.service.BootstrapReceiver: void onReceive(android.content.Context,android.content.Intent)>"],"<org.bitcoinj.core.Utils: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base16()>","<com.google.common.io.BaseEncoding: void <clinit>()>","<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>","<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>","<com.google.common.base.Charsets: void <clinit>()>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding lowerCase()>","<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>"],"<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1: void run()>":["<com.google.protobuf.CodedOutputStream: void flush()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<com.google.protobuf.ByteString: byte[] toByteArray()>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getBluetoothMac(java.lang.String)>","<com.google.protobuf.CodedOutputStream: void writeStringNoTag(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.io.IOException: java.lang.String getMessage()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask: android.bluetooth.BluetoothAdapter access$300(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask)>","<java.lang.Integer: void <clinit>()>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getBluetoothQuery(java.lang.String)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.io.InputStream)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<de.schildbach.wallet.util.Bluetooth: java.lang.String decompressMac(java.lang.String)>","<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void parse()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1,java.lang.String,byte[])>","<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onFail(int,java.lang.Object[])>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: org.slf4j.Logger access$000()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder data(int,byte[])>":["<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[])>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder addChunk(int,org.bitcoinj.script.ScriptChunk)>","<org.bitcoinj.script.Script: int encodeToOpN(int)>","<java.util.Arrays: byte[] copyOf(byte[],int)>","<org.bitcoinj.script.Script: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.PeerAddress: void setServices(java.math.BigInteger)>":["<org.bitcoinj.core.ChildMessage: void unCache()>"],"<org.bitcoinj.core.Peer: boolean removeBlocksDownloadedEventListener(org.bitcoinj.core.listeners.BlocksDownloadedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: boolean has(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>","<java.lang.Object: boolean equals(java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: int getOneofFieldNumber(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void addToBasicChain(org.bitcoinj.crypto.DeterministicKey)>":["<org.bitcoinj.wallet.BasicKeyChain: int importKeys(java.util.List)>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)>":["<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>","<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>","<android.transition.TransitionSet: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder create()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void <init>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>"],"<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>(org.slf4j.helpers.Util$1)>":["<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>()>"],"<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: void <init>()>":["<com.google.common.util.concurrent.AggregateFutureState$AtomicHelper: void <init>(com.google.common.util.concurrent.AggregateFutureState$1)>"],"<ch.qos.logback.core.pattern.parser.Compiler: void addToList(ch.qos.logback.core.pattern.Converter)>":["<ch.qos.logback.core.pattern.Converter: void setNext(ch.qos.logback.core.pattern.Converter)>"],"<com.google.common.base.Absent: com.google.common.base.Optional withType()>":["<com.google.common.base.Absent: void <clinit>()>"],"<java.lang.Thread: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>":["<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$900(com.google.common.util.concurrent.AbstractFuture)>","<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$902(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>"],"<androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<androidx.recyclerview.widget.OrientationHelper$1: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>"],"<de.schildbach.wallet.service.BlockchainService$3: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.service.BlockchainService$3: void onChanged(de.schildbach.wallet.data.ExchangeRate)>"],"<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.Fragment$3: androidx.lifecycle.Lifecycle getLifecycle()>":["<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$1: void <init>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$ExchangeRate: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.util.Toast: void customToast(java.lang.CharSequence,int)>":["<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>"],"<com.google.zxing.common.reedsolomon.GenericGF: void <clinit>()>":["<com.google.zxing.common.reedsolomon.GenericGF: void <clinit>()>","<com.google.zxing.common.reedsolomon.GenericGF: void <init>(int,int,int)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionOutput)>":["<org.bitcoinj.wallet.Protos$TransactionOutput: boolean hasValue()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.ByteString getScriptBytes()>","<org.bitcoinj.wallet.Protos$TransactionOutput: boolean hasSpentByTransactionHash()>","<org.bitcoinj.wallet.Protos$TransactionOutput: long getValue()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.ByteString getSpentByTransactionHash()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setValue(long)>","<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput getDefaultInstance()>","<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setScriptBytes(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: int getSpentByTransactionIndex()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionOutput: boolean hasSpentByTransactionIndex()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setSpentByTransactionIndex(int)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setSpentByTransactionHash(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$TransactionOutput: boolean hasScriptBytes()>"],"<ch.qos.logback.core.util.DynamicClassLoadingException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.Exception,java.util.List)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>"],"<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder cipherSuites(java.lang.String[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: java.lang.Object clone()>"],"<java.lang.Class: java.lang.Package getPackage()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.Descriptors$DescriptorPool: void validateSymbolName(com.google.protobuf.Descriptors$GenericDescriptor)>":["<java.lang.Character: boolean isDigit(char)>","<com.google.protobuf.Descriptors$EnumDescriptor: java.lang.String getName()>","<com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getName()>","<com.google.protobuf.Descriptors$Descriptor: java.lang.String getName()>","<com.google.protobuf.Descriptors$FieldDescriptor: java.lang.String getName()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.Character: boolean isLetter(char)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.Descriptors$EnumValueDescriptor: java.lang.String getName()>","<java.lang.String: char charAt(int)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$ServiceDescriptor: java.lang.String getName()>","<java.lang.Character: void <clinit>()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<org.spongycastle.asn1.DERFactory: void <clinit>()>":["<org.spongycastle.asn1.DERSet: void <init>()>","<org.spongycastle.asn1.DERFactory: void <clinit>()>","<org.spongycastle.asn1.DERSequence: void <init>()>"],"<com.google.common.base.Splitter$1: java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter$1: com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<android.os.Handler: boolean post(java.lang.Runnable)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$8: void run()>","<de.schildbach.wallet.offline.AcceptBluetoothService$4: void run()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$6: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$2: void run()>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1: void run()>","<de.schildbach.wallet.ui.scan.ScanActivity$5: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$1: void run()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void run()>","<de.schildbach.wallet.ui.scan.ScanActivity$7: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask$1: void run()>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1: void run()>","<de.schildbach.wallet.ui.scan.ScanActivity$8: void run()>","<de.schildbach.wallet.ui.scan.ScanActivity$9: void run()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$3: void run()>","<de.schildbach.wallet.ui.send.DeriveKeyTask$1$1: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1: void run()>","<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$1: void run()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$2: void run()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$1: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$2: void run()>","<de.schildbach.wallet.util.Toast$3: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$1: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$2: void run()>","<de.schildbach.wallet.ui.send.DeriveKeyTask$1: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$4: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$3: void run()>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$1: void run()>","<androidx.fragment.app.FragmentManagerImpl$1: void run()>","<androidx.core.app.ActivityCompat$1: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$5: void run()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$23: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$6: void run()>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$2: void run()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstanceForType()>"],"<com.google.protobuf.FieldSet: void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>":["<com.google.protobuf.FieldSet: void verifyType(com.google.protobuf.WireFormat$FieldType,java.lang.Object)>","<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.FieldSet: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>":["<com.google.common.collect.RegularImmutableList: int copyIntoArray(java.lang.Object[],int)>","<com.google.common.collect.RegularImmutableList: int size()>","<java.util.LinkedList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>","<com.google.common.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)>"],"<de.schildbach.wallet.ui.Event$Observer: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getKeyFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionSignersFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$17400()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getWatchedScriptFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTagsFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.SingleFieldBuilder getEncryptionParametersFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.crypto.TransactionSignature: void <init>(java.math.BigInteger,java.math.BigInteger,int)>":["<org.bitcoinj.core.ECKey$ECDSASignature: void <init>(java.math.BigInteger,java.math.BigInteger)>"],"<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilder(org.bitcoinj.wallet.Protos$Wallet)>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeFrom(org.bitcoinj.wallet.Protos$Wallet)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class)>":["<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>"],"<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>":["<java.util.Vector: java.lang.Object elementAt(int)>"],"<androidx.fragment.app.Fragment: void performResume()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.Fragment: void onResume()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onResume()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onResume()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchResume()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addAllKey(java.lang.Iterable)>":["<com.google.protobuf.AbstractMessageLite$Builder: void addAll(java.lang.Iterable,java.util.Collection)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureKeyIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<com.google.protobuf.SmallSortedMap: void ensureEntryArrayMutable()>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: void <init>(int)>","<com.google.protobuf.SmallSortedMap: void checkMutable()>"],"<org.bitcoinj.wallet.Wallet$FreeStandingTransactionOutput: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.UTXO,int)>":["<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,byte[])>"],"<org.bitcoinj.wallet.Protos$Script: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$Script: boolean hasProgram()>","<org.bitcoinj.wallet.Protos$Script: boolean hasCreationTimestamp()>"],"<de.schildbach.wallet.ui.WalletActivity: void handleSendCoins()>":["<android.app.Activity: void startActivity(android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent: boolean isHttpPaymentUrl()>":["<de.schildbach.wallet.util.GenericUtils: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>"],"<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1ObjectIdentifier[] toOIDArray(java.util.Vector)>":["<java.util.Vector: java.lang.Object elementAt(int)>","<java.util.Vector: int size()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<org.bitcoinj.wallet.Protos$Tag: void initFields()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>"],"<com.squareup.moshi.StandardJsonAdapters$9: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<org.bitcoinj.core.Utils: java.math.BigInteger decodeCompactBits(long)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: java.math.BigInteger decodeMPI(byte[],boolean)>"],"<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>":["<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <init>(java.lang.String,int,int)>"],"<com.squareup.moshi.ArrayJsonAdapter: void <clinit>()>":["<com.squareup.moshi.ArrayJsonAdapter: void <clinit>()>","<com.squareup.moshi.ArrayJsonAdapter$1: void <init>()>"],"<org.bitcoinj.crypto.LazyECPoint: byte[] getEncoded()>":["<java.util.Arrays: byte[] copyOf(byte[],int)>","<org.bitcoinj.crypto.LazyECPoint: org.spongycastle.math.ec.ECPoint get()>"],"<org.bitcoinj.wallet.DeterministicUpgradeRequiresPassword: void <init>()>":["<java.lang.RuntimeException: void <init>()>"],"<androidx.collection.ArrayMap: java.util.Set keySet()>":["<androidx.collection.MapCollections: java.util.Set getKeySet()>","<androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()>"],"<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>":["<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setCreationTimestamp(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$1: org.bitcoinj.wallet.Protos$ScryptParameters parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.CodedOutputStream: void flush()>":["<com.google.protobuf.CodedOutputStream: void refreshBuffer()>"],"<ch.qos.logback.core.recovery.RecoveryCoordinator: void <init>()>":["<java.lang.Object: void <init>()>","<ch.qos.logback.core.recovery.RecoveryCoordinator: void <clinit>()>","<ch.qos.logback.core.recovery.RecoveryCoordinator: long getCurrentTime()>","<ch.qos.logback.core.recovery.RecoveryCoordinator: long getBackoffCoefficient()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilderForType()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder toBuilder()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment buildPartial()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Payment)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void initFields()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.slf4j.helpers.SubstituteLogger: void <init>(java.lang.String,java.util.Queue,boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.common.hash.Hashing$Sha256Holder: void <clinit>()>":["<com.google.common.hash.Hashing$Sha256Holder: void <clinit>()>","<com.google.common.hash.MessageDigestHashFunction: void <init>(java.lang.String,java.lang.String)>"],"<org.bitcoinj.core.Peer: boolean removeChainDownloadStartedEventListener(org.bitcoinj.core.listeners.ChainDownloadStartedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>"],"<ch.qos.logback.classic.LoggerContext: void initEvaluatorMap()>":["<ch.qos.logback.core.ContextBase: void putObject(java.lang.String,java.lang.Object)>","<java.util.HashMap: void <init>()>"],"<com.google.common.base.CharMatcher$Any: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Any: void <init>()>","<com.google.common.base.CharMatcher$Any: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>()>":["<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>"],"<org.bitcoinj.net.NioClientManager: void <clinit>()>":["<org.bitcoinj.net.NioClientManager: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<com.google.common.util.concurrent.AbstractExecutionThreadService: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>","<android.os.Handler: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$8: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$5: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$6: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: byte[] convertToByteArray(java.lang.CharSequence)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Wallet$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>":["<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicSeed: byte[] getEntropy(java.security.SecureRandom,int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.security.SecureRandom: void nextBytes(byte[])>"],"<androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>","<androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()>","<androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>","<androidx.fragment.app.FragmentManagerImpl: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()>"],"<ch.qos.logback.core.FileAppender: void <init>()>":["<ch.qos.logback.core.util.FileSize: void <clinit>()>","<ch.qos.logback.core.util.FileSize: void <init>(long)>","<ch.qos.logback.core.OutputStreamAppender: void <init>()>"],"<org.bitcoinj.wallet.Wallet: boolean maybeCommitTx(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.TransactionConfidence$Listener$ChangeReason: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void addWalletTransaction(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>","<org.bitcoinj.wallet.Wallet: void markKeysAsUsed(org.bitcoinj.core.Transaction)>","<java.util.HashSet: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void maybeQueueOnWalletChanged()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: void saveNow()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin subtract(org.bitcoinj.core.Coin)>","<org.bitcoinj.wallet.Wallet: void checkBalanceFuturesLocked(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>","<org.bitcoinj.core.Utils: void <clinit>()>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Transaction: void verify()>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void setConfidenceType(org.bitcoinj.core.TransactionConfidence$ConfidenceType)>","<java.util.HashSet: boolean isEmpty()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<ch.qos.logback.classic.Logger: boolean isInfoEnabled()>","<org.bitcoinj.wallet.Wallet: void isConsistentOrThrow()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<org.bitcoinj.wallet.Wallet: java.util.Set findDoubleSpendsAgainst(org.bitcoinj.core.Transaction,java.util.Map)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: java.util.Set getTransactions(boolean)>","<org.bitcoinj.wallet.Wallet: void queueOnCoinsSent(org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getValueSentFromMe(org.bitcoinj.core.TransactionBag)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>","<org.bitcoinj.wallet.Wallet: void queueOnCoinsReceived(org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: int signum()>","<org.bitcoinj.wallet.Wallet: boolean isNotSpendingTxnsInConfidenceType(org.bitcoinj.core.Transaction,org.bitcoinj.core.TransactionConfidence$ConfidenceType)>","<org.bitcoinj.core.Utils: java.util.Date now()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: void informConfidenceListenersIfNotReorganizing()>","<org.bitcoinj.core.Transaction: void setUpdateTime(java.util.Date)>","<java.util.HashSet: java.util.Iterator iterator()>","<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>","<org.bitcoinj.wallet.Wallet: void addTransactionsDependingOn(java.util.Set,java.util.Set)>","<org.bitcoinj.wallet.Wallet: void updateForSpends(org.bitcoinj.core.Transaction,boolean)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder access$23200()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder create()>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void postSuccessfulWrite()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.recovery.ResilientFileOutputStream: java.lang.String getDescription()>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>":["<androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()>"],"<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void addAsFileToWatch(java.net.URL)>":["<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.io.File convertToFile(java.net.URL)>","<java.io.File: long lastModified()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>"],"<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>":["<com.google.common.base.Preconditions: void checkArgument(boolean)>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>","<com.google.common.io.BaseEncoding$Alphabet: char[] access$000(com.google.common.io.BaseEncoding$Alphabet)>"],"<okhttp3.RequestBody: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.ArithmeticException: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void lockStateChanged(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>"],"<com.google.common.collect.RegularImmutableSet: java.util.Iterator iterator()>":["<com.google.common.collect.RegularImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>"],"<org.spongycastle.asn1.ASN1UTCTime: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey build()>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder data(byte[])>":["<java.util.LinkedList: int size()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder data(int,byte[])>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder smallNum(int)>"],"<org.bitcoinj.core.PeerGroup: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.AbstractBlockChain)>":["<org.bitcoinj.core.Context: org.bitcoinj.core.Context getOrCreate(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.net.NioClientManager: void <clinit>()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.net.NioClientManager: void <init>()>","<org.bitcoinj.core.PeerGroup: void <init>(org.bitcoinj.core.Context,org.bitcoinj.core.AbstractBlockChain,org.bitcoinj.net.ClientConnectionManager)>","<com.google.common.util.concurrent.AbstractExecutionThreadService: void <clinit>()>"],"<org.bitcoinj.crypto.DeterministicKey: void setCreationTimeSeconds(long)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.bitcoinj.core.ECKey: void setCreationTimeSeconds(long)>"],"<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.wallet.Protos$Transaction: boolean access$12500()>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.TransactionOutput: boolean isDust()>":["<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getValue()>","<org.bitcoinj.core.Coin: boolean isLessThan(org.bitcoinj.core.Coin)>","<org.bitcoinj.script.Script: boolean isOpReturn()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getMinNonDustValue()>"],"<org.bitcoinj.wallet.RiskAnalysis$Result: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Wallet: void addTransactionSigner(org.bitcoinj.signers.TransactionSigner)>":["<java.lang.Object: java.lang.Class getClass()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.signers.LocalTransactionSigner: boolean isReady()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setOverridingTransaction(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)>":["<android.util.SparseArray: void <init>()>","<java.util.ArrayList: int size()>","<android.util.SparseArray: void put(int,java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>","<java.lang.String: int length()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: boolean access$1600()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.util.Toast: void longToast(int,java.lang.Object[])>":["<de.schildbach.wallet.util.Toast: void customToast(int,int,java.lang.Object[])>"],"<org.spongycastle.asn1.DERVisibleString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Output)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<okio.Okio$2: void <init>(okio.Timeout,java.io.InputStream)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions getDefaultInstance()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toStableString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.bitcoinj.core.AbstractBlockChain: void setChainHead(org.bitcoinj.core.StoredBlock)>":["<org.bitcoinj.core.BlockChain: void doSetChainHead(org.bitcoinj.core.StoredBlock)>"],"<org.bitcoinj.wallet.KeyChainGroup: java.util.EnumMap createCurrentKeysMap(java.util.List)>":["<org.bitcoinj.crypto.ChildNumber: void <init>(int)>","<java.util.LinkedList: int size()>","<java.util.EnumMap: void <init>(java.lang.Class)>","<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList concat(java.util.List,java.util.List)>","<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <clinit>()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList append(java.util.List,org.bitcoinj.crypto.ChildNumber)>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: int size()>","<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet getDefaultInstance()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.spongycastle.crypto.generators.ECKeyPairGenerator: org.spongycastle.math.ec.ECMultiplier createBasePointMultiplier()>":["<org.spongycastle.math.ec.FixedPointCombMultiplier: void <init>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstance()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.RepeatedFieldBuilder getLocationFieldBuilder()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void ensureLocationIsMutable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: java.util.List access$23500(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.BasicKeyChain fromProtobufEncrypted(java.util.List,org.bitcoinj.crypto.KeyCrypter)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter)>","<org.bitcoinj.wallet.BasicKeyChain: void deserializeFromProtobuf(java.util.List)>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: byte[] getBody()>":["<java.io.ByteArrayOutputStream: void <init>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void doOutput(java.io.ByteArrayOutputStream)>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>"],"<org.spongycastle.asn1.DERNull: void <clinit>()>":["<org.spongycastle.asn1.DERNull: void <init>()>","<org.spongycastle.asn1.DERNull: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity$6: void <init>(de.schildbach.wallet.ui.WalletActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<dummyMainClass: de.schildbach.wallet.ui.send.SweepWalletActivity dummyMainMethod_de_schildbach_wallet_ui_send_SweepWalletActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<androidx.fragment.app.Fragment: void onDestroyView()>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<androidx.fragment.app.FragmentActivity: void onResume()>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void onDestroy()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<androidx.fragment.app.Fragment: void onPause()>","<androidx.fragment.app.Fragment: void onStart()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void onResume()>","<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void onStop()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<androidx.fragment.app.Fragment: void onDetach()>","<de.schildbach.wallet.ui.send.SweepWalletActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.send.SweepWalletActivity: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$1: org.bitcoinj.wallet.Protos$TransactionSigner parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<ch.qos.logback.core.joran.action.TimestampAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.ByteString: void copyTo(byte[],int,int,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.LiteralByteString: void copyToInternal(byte[],int,int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>","<com.google.protobuf.BoundedByteString: void copyToInternal(byte[],int,int,int)>","<java.lang.StringBuilder: void <init>(int)>"],"<de.schildbach.wallet.WalletApplication: java.lang.String httpUserAgent(java.lang.String)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.core.VersionMessage: void appendToSubVer(java.lang.String,java.lang.String,java.lang.String)>","<org.bitcoinj.core.VersionMessage: void <init>(org.bitcoinj.core.NetworkParameters,int)>"],"<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<org.bitcoinj.wallet.RiskAnalysis$Result: void <clinit>()>":["<org.bitcoinj.wallet.RiskAnalysis$Result: void <clinit>()>","<org.bitcoinj.wallet.RiskAnalysis$Result: void <init>(java.lang.String,int)>"],"<com.google.protobuf.MessageReflection: void mergeMessageSetExtensionFromBytes(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistry$ExtensionInfo,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.MessageReflection$MergeTarget)>":["<com.google.protobuf.LazyField: void <init>(com.google.protobuf.MessageLite,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.ByteString)>","<com.google.protobuf.ExtensionRegistryLite: boolean isEagerlyParseMessageSets()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseMessageFromBytes(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>","<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<com.google.protobuf.MessageReflection$ExtensionAdapter: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: int getEnumTypeCount()>":["<java.util.ArrayList: int size()>"],"<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)>":["<android.transition.TransitionSet: android.transition.Transition removeTarget(android.view.View)>","<android.transition.TransitionSet: android.transition.Transition addTarget(android.view.View)>","<android.transition.TransitionSet: int getTransitionCount()>","<java.util.ArrayList: int size()>","<android.transition.TransitionSet: java.util.List getTargets()>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>","<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>"],"<de.schildbach.wallet.WalletApplication$3: void run()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.WalletApplication: java.lang.Object access$100(de.schildbach.wallet.WalletApplication)>","<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.WalletFiles access$200(de.schildbach.wallet.WalletApplication)>","<de.schildbach.wallet.WalletApplication$3: void loadWalletFromProtobuf()>","<de.schildbach.wallet.WalletApplication$3: void initMnemonicCode()>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<org.bitcoinj.wallet.WalletFiles: org.bitcoinj.wallet.Wallet getWallet()>","<de.schildbach.wallet.WalletApplication$2: void onWalletLoaded(org.bitcoinj.wallet.Wallet)>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException sizeLimitExceeded()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.ASN1Enumerated: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$000()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.FieldSet: void makeImmutable()>":["<com.google.protobuf.SmallSortedMap$1: void makeImmutable()>"],"<com.squareup.moshi.JsonUtf8Reader: void <init>(okio.BufferedSource)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<okio.RealBufferedSource: okio.Buffer buffer()>","<com.squareup.moshi.JsonReader: void <init>()>","<com.squareup.moshi.JsonReader: void pushScope(int)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$000(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void updateView()>"],"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<okio.AsyncTimeout$1: void <init>(okio.AsyncTimeout,okio.Sink)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: com.google.protobuf.Descriptors$FieldDescriptor$JavaType[] values()>":["<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer)>":["<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.TokenStream: void escape(java.lang.String,java.lang.StringBuffer)>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption$1: com.google.protobuf.DescriptorProtos$UninterpretedOption parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$Tag$1: org.bitcoinj.wallet.Protos$Tag parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(java.lang.String,java.lang.String,java.lang.Character)>":["<java.lang.String: char[] toCharArray()>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>","<com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$CType: com.google.protobuf.DescriptorProtos$FieldOptions$CType[] values()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<com.google.common.math.LongMath: long pow(long,int)>":["<com.google.common.math.MathPreconditions: int checkNonNegative(java.lang.String,int)>","<java.lang.AssertionError: void <init>()>"],"<de.schildbach.wallet.Constants$Files: void <clinit>()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<android.os.Environment: java.io.File getExternalStorageDirectory()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<android.os.Environment: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>"],"<ch.qos.logback.core.joran.JoranConfiguratorBase: void buildInterpreter()>":["<java.util.HashMap: void <init>()>","<ch.qos.logback.core.joran.spi.InterpretationContext: java.util.Map getObjectMap()>","<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext()>","<ch.qos.logback.core.joran.GenericConfigurator: void buildInterpreter()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.recyclerview.widget.OrientationHelper$1: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<androidx.recyclerview.widget.OrientationHelper: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1)>"],"<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>":["<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)>"],"<androidx.fragment.app.BackStackState: void <init>(androidx.fragment.app.BackStackRecord)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent$Output: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.script.Script)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.WireFormat$FieldType: void <clinit>()>":["<com.google.protobuf.WireFormat$JavaType: void <clinit>()>","<com.google.protobuf.WireFormat$FieldType$3: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>","<com.google.protobuf.WireFormat$FieldType$1: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>","<com.google.protobuf.WireFormat$FieldType$4: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>","<com.google.protobuf.WireFormat$FieldType: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>","<com.google.protobuf.WireFormat$FieldType: void <clinit>()>","<com.google.protobuf.WireFormat$FieldType$2: void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)>"],"<androidx.collection.ArraySet: boolean add(java.lang.Object)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<androidx.collection.ArraySet: int indexOf(java.lang.Object,int)>","<java.lang.System: void <clinit>()>","<androidx.collection.ArraySet: int indexOfNull()>","<androidx.collection.ArraySet: void allocArrays(int)>","<androidx.collection.ArraySet: void <clinit>()>","<androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.wallet.DefaultRiskAnalysis$Analyzer: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>"],"<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>","<com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setNetworkIdentifier(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.util.concurrent.AggregateFutureState: java.util.Set getOrInitSeenExceptions()>":["<com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper: void compareAndSetSeenExceptions(com.google.common.util.concurrent.AggregateFutureState,java.util.Set,java.util.Set)>","<com.google.common.util.concurrent.AggregateFutureState: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void addInitialException(java.util.Set)>","<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: void compareAndSetSeenExceptions(com.google.common.util.concurrent.AggregateFutureState,java.util.Set,java.util.Set)>","<com.google.common.collect.Sets: java.util.Set newConcurrentHashSet()>"],"<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.DefaultKeyChainFactory: org.bitcoinj.wallet.DeterministicKeyChain makeKeyChain(org.bitcoinj.wallet.Protos$Key,org.bitcoinj.wallet.Protos$Key,org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter,boolean)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter)>","<org.bitcoinj.wallet.MarriedKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter)>"],"<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long)>":["<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(long)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<de.schildbach.wallet.util.Base43: byte[] decode(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: char charAt(int)>","<de.schildbach.wallet.util.Base43: byte[] copyOfRange(byte[],int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<de.schildbach.wallet.util.Base43: void <clinit>()>","<de.schildbach.wallet.util.Base43: byte divmod256(byte[],int)>"],"<com.google.protobuf.Internal: int hashEnumList(java.util.List)>":["<com.google.protobuf.Internal: void <clinit>()>","<com.google.protobuf.Internal: int hashEnum(com.google.protobuf.Internal$EnumLite)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$1: void run()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask,de.schildbach.wallet.data.PaymentIntent)>"],"<java.lang.Class: java.lang.String getName()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.joran.GenericConfigurator: void buildInterpreter()>":["<ch.qos.logback.core.joran.spi.InterpretationContext: ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry getDefaultNestedComponentRegistry()>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <clinit>()>","<ch.qos.logback.core.joran.spi.Interpreter: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.RuleStore,ch.qos.logback.core.joran.spi.ElementPath)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <init>(ch.qos.logback.core.Context)>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext()>","<ch.qos.logback.core.joran.GenericConfigurator: ch.qos.logback.core.joran.spi.ElementPath initialElementPath()>","<ch.qos.logback.core.joran.JoranConfiguratorBase: void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter)>","<ch.qos.logback.core.joran.spi.Interpreter: void <clinit>()>","<ch.qos.logback.classic.joran.JoranConfigurator: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>","<ch.qos.logback.classic.joran.JoranConfigurator: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>"],"<org.bitcoinj.wallet.Protos$Key$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.core.PeerGroup$6: void run()>":["<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.PeerGroup$6: void go()>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.PeerGroup: org.slf4j.Logger access$200()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$1: org.bitcoinj.wallet.Protos$TransactionConfidence parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void setLastBlockSeenTimeSecs(long)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$6000()>"],"<de.schildbach.wallet.ui.scan.CameraManager: int determineCameraId()>":["<android.hardware.Camera: int getNumberOfCameras()>","<android.hardware.Camera$CameraInfo: void <init>()>","<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>"],"<de.schildbach.wallet.service.BlockchainService: void <init>()>":["<java.util.LinkedList: void <init>()>","<java.util.concurrent.atomic.AtomicInteger: void <init>()>","<de.schildbach.wallet.service.BlockchainService$1: void <init>(de.schildbach.wallet.service.BlockchainService)>","<android.os.Handler: void <init>()>","<de.schildbach.wallet.service.BlockchainService$LocalBinder: void <init>(de.schildbach.wallet.service.BlockchainService)>","<androidx.lifecycle.LifecycleService: void <init>()>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>":["<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.core.status.StatusBase: void add(ch.qos.logback.core.status.Status)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.pattern.DynamicConverter: void addStatus(ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<ch.qos.logback.core.pattern.DynamicConverter: void addError(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.google.protobuf.WireFormat$FieldType: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$19900()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>":["<com.google.protobuf.GeneratedMessage: java.lang.Object invokeOrDie(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.Joiner$2: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>":["<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<com.google.common.base.Joiner: java.lang.String access$100(com.google.common.base.Joiner)>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<java.lang.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)>","<com.google.common.collect.Iterators$ConcatenatedIterator: java.lang.Object next()>","<com.google.common.collect.Iterators$ConcatenatedIterator: boolean hasNext()>"],"<org.bitcoinj.core.Base58: byte[] decodeChecked(java.lang.String)>":["<org.bitcoinj.core.Base58: void <clinit>()>","<java.util.Arrays: boolean equals(byte[],byte[])>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<org.bitcoinj.core.Base58: byte[] decode(java.lang.String)>","<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[])>","<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<de.schildbach.wallet.ui.WalletActivity: void onResume()>":["<de.schildbach.wallet.ui.WalletActivity$9: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.ui.WalletActivity$9: void run()>","<androidx.fragment.app.FragmentActivity: void onResume()>","<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>"],"<com.google.protobuf.LiteralByteString: com.google.protobuf.CodedInputStream newCodedInput()>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(com.google.protobuf.LiteralByteString)>"],"<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>":["<com.google.protobuf.CodedInputStream: byte[] readRawBytesSlowPath(int)>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.BoundedByteString: void <init>(byte[],int,int)>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.LiteralByteString: void <init>(byte[])>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>"],"<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey deriveChild(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>":["<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveChildKey(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>"],"<com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>":["<com.google.common.base.Platform: boolean stringIsNullOrEmpty(java.lang.String)>","<com.google.common.base.Platform: void <clinit>()>"],"<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String)>"],"<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Exception: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.DescriptorProtos$FileDescriptorProto toProto()>","<com.google.protobuf.Descriptors$FileDescriptor: java.lang.String getName()>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstanceForType()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: java.lang.String defaultCurrencyCode()>":["<java.util.Currency: java.util.Currency getInstance(java.util.Locale)>","<java.util.Locale: java.util.Locale getDefault()>","<java.util.Locale: void <clinit>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>"],"<org.bitcoinj.wallet.Protos$Script$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: int getNestedTypeCount()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$DeterministicKey getDeterministicKey()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<com.google.common.collect.Sets: java.util.Set newIdentityHashSet()>":["<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>","<com.google.common.collect.Maps: java.util.IdentityHashMap newIdentityHashMap()>","<java.util.Collections: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$24: void onFail(int,java.lang.Object[])>":["<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$24$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$24)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$24$3: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$24)>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionOutput)>":["<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.TransactionOutput)>","<org.bitcoinj.core.TransactionInput: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionInput)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<de.schildbach.wallet.ui.DialogBuilder: void <init>(android.content.Context)>":["<android.app.AlertDialog$Builder: void <init>(android.content.Context,int)>","<android.os.Build$VERSION: void <clinit>()>","<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>"],"<ch.qos.logback.core.joran.action.ParamAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addBlockHash(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureBlockHashIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)>":["<com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)>","<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>"],"<ch.qos.logback.core.util.COWArrayList: boolean isFresh()>":["<java.util.concurrent.atomic.AtomicBoolean: boolean get()>"],"<com.google.protobuf.CodedOutputStream: void writeMessageNoTag(com.google.protobuf.MessageLite)>":["<org.bitcoin.protocols.payments.Protos$Payment: void writeTo(com.google.protobuf.CodedOutputStream)>","<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>","<org.bitcoin.protocols.payments.Protos$Payment: int getSerializedSize()>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getSerializedSize()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void writeTo(com.google.protobuf.CodedOutputStream)>"],"<com.google.protobuf.CodedOutputStream: void writeInt64NoTag(long)>":["<com.google.protobuf.CodedOutputStream: void writeRawVarint64(long)>"],"<androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>":["<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>","<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)>","<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder getBuilder()>","<android.app.Notification$BigTextStyle: void <init>(android.app.Notification$Builder)>"],"<com.google.protobuf.MessageReflection: java.util.List findMissingFields(com.google.protobuf.MessageOrBuilder)>":["<java.util.ArrayList: void <init>()>","<com.google.protobuf.MessageReflection: void findMissingFields(com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>"],"<org.bitcoinj.wallet.Protos$Transaction$Purpose$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$2: void run()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback access$400(de.schildbach.wallet.ui.send.RequestWalletBalanceTask)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$10: void onResult(java.util.Set)>"],"<org.bitcoinj.core.Transaction$SigHash: void <init>(java.lang.String,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<okhttp3.CertificatePinner: void <clinit>()>":["<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>","<okhttp3.CertificatePinner$Builder: void <init>()>","<okhttp3.CertificatePinner: void <clinit>()>"],"<com.google.protobuf.FieldSet: void mergeFromField(java.util.Map$Entry)>":["<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>","<com.google.protobuf.WireFormat$JavaType: void <clinit>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>","<com.google.protobuf.FieldSet: java.lang.Object cloneIfMutable(java.lang.Object)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction build()>":["<org.bitcoinj.wallet.Protos$Transaction: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction buildPartial()>"],"<okhttp3.CacheControl: java.lang.String toString()>":["<okhttp3.CacheControl: java.lang.String headerValue()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Output)>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: boolean hasAmount()>","<org.bitcoin.protocols.payments.Protos$Output: long getAmount()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setAmount(long)>","<org.bitcoin.protocols.payments.Protos$Output: boolean hasScript()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setScript(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.ByteString getScript()>"],"<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.WireFormat$FieldType getLiteType()>":["<java.lang.Enum: int ordinal()>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1OctetString: void <init>(byte[])>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: void <init>(com.google.protobuf.FieldSet)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setVersion(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.WalletFiles: void saveNow()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<java.util.concurrent.ScheduledThreadPoolExecutor: boolean isShutdown()>","<org.bitcoinj.wallet.Wallet: java.util.Date getLastBlockSeenTime()>","<org.bitcoinj.wallet.WalletFiles: void <clinit>()>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(java.util.Date)>","<org.bitcoinj.wallet.WalletFiles: void saveNowInternal()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Sha256Hash getLastBlockSeenHash()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<org.bitcoinj.wallet.Wallet: int getLastBlockSeenHeight()>"],"<org.bitcoinj.params.TestNet3Params: void <clinit>()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: void <clinit>()>","<java.util.Date: void <init>(long)>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>"],"<androidx.fragment.app.Fragment: void performDestroyView()>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<androidx.fragment.app.Fragment: void onDestroyView()>","<androidx.loader.app.LoaderManagerImpl: void markForRedelivery()>","<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onDestroyView()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDestroyView()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroyView()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask: void requestPaymentRequest(java.lang.String)>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask,java.lang.String)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: android.os.Handler access$200(de.schildbach.wallet.ui.send.RequestPaymentRequestTask)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$24$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$24)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>":["<com.google.protobuf.GeneratedMessage$Builder: void markClean()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getKeyFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<java.lang.Integer: int numberOfLeadingZeros(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.CharMatcher$Digit: char[] zeroes()>":["<java.lang.String: char[] toCharArray()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1)>"],"<org.bitcoinj.core.Utils: int maxOfMostFreq(java.util.List)>":["<java.util.LinkedList: java.lang.Object getLast()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.util.LinkedList: java.lang.Object getFirst()>","<java.util.Collections: void <clinit>()>","<com.google.common.collect.Ordering: java.util.List sortedCopy(java.lang.Iterable)>","<java.lang.Math: int max(int,int)>","<com.google.common.collect.NaturalOrdering: com.google.common.collect.Ordering reverse()>","<org.bitcoinj.core.Utils$Pair: void <init>(int,int)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>","<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.LinkedList: java.util.Iterator iterator()>","<com.google.common.collect.ReverseNaturalOrdering: com.google.common.collect.Ordering reverse()>","<java.util.Collections: void sort(java.util.List)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void access$200(com.google.common.util.concurrent.AggregateFuture$RunningState,int,java.util.concurrent.Future)>":["<com.google.common.util.concurrent.AggregateFuture$RunningState: void handleOneInputDone(int,java.util.concurrent.Future)>"],"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1100()>"],"<com.squareup.okhttp.TlsVersion: void <clinit>()>":["<com.squareup.okhttp.TlsVersion: void <clinit>()>","<com.squareup.okhttp.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>"],"<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.LazyStringArrayList: boolean addAll(java.util.Collection)>":["<com.google.protobuf.LazyStringArrayList: int size()>","<com.google.protobuf.LazyStringArrayList: boolean addAll(int,java.util.Collection)>"],"<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)>","<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)>"],"<java.lang.String: boolean contains(java.lang.CharSequence)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.collect.ImmutableList: java.lang.Object set(int,java.lang.Object)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void initFields()>"],"<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$Payment createPaymentMessage(java.util.List,java.util.List,java.lang.String,byte[])>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder()>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMerchantData(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.Transaction: void verify()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment build()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder addRefundTo(org.bitcoin.protocols.payments.Protos$Output)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMemo(java.lang.String)>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder addTransactions(com.google.protobuf.ByteString)>"],"<com.lambdaworks.jni.SysLibraryLoader: boolean load(java.lang.String,boolean)>":["<java.lang.System: void loadLibrary(java.lang.String)>","<java.lang.System: void <clinit>()>"],"<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.wallet.Wallet restoreWalletFromAutoBackup(android.content.Context)>":["<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<java.lang.Error: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<org.bitcoinj.wallet.Wallet: boolean isConsistent()>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: void resetBlockchain(android.content.Context)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>()>","<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(java.io.InputStream,boolean,org.bitcoinj.wallet.WalletExtension[])>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeFrom(org.bitcoinj.wallet.Protos$Wallet)>":["<org.bitcoinj.wallet.Protos$Wallet: long getKeyRotationTime()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeEncryptionParameters(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureExtensionIsMutable()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureWatchedScriptIsMutable()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasLastSeenBlockHeight()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasEncryptionParameters()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasVersion()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18100(org.bitcoinj.wallet.Protos$Wallet)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$19000(org.bitcoinj.wallet.Protos$Wallet)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionSignersFieldBuilder()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasKeyRotationTime()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$EncryptionType getEncryptionType()>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$19500()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasDescription()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureKeyIsMutable()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setVersion(int)>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$19400()>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.Object access$17600(org.bitcoinj.wallet.Protos$Wallet)>","<org.bitcoinj.wallet.Protos$Wallet: long getLastSeenBlockTimeSecs()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getLastSeenBlockHash()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasLastSeenBlockTimeSecs()>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$19700()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18200(org.bitcoinj.wallet.Protos$Wallet)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18600(org.bitcoinj.wallet.Protos$Wallet)>","<java.util.ArrayList: boolean isEmpty()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setKeyRotationTime(long)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockTimeSecs(long)>","<org.bitcoinj.wallet.Protos$Wallet: int getVersion()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasNetworkIdentifier()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasLastSeenBlockHash()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTransactionIsMutable()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasEncryptionType()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet getDefaultInstance()>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$19200()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18000(org.bitcoinj.wallet.Protos$Wallet)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getKeyFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$ScryptParameters getEncryptionParameters()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTransactionSignersIsMutable()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.Object access$18700(org.bitcoinj.wallet.Protos$Wallet)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setEncryptionType(org.bitcoinj.wallet.Protos$Wallet$EncryptionType)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHeight(int)>","<org.bitcoinj.wallet.Protos$Wallet: int getLastSeenBlockHeight()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getWatchedScriptFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTagsFieldBuilder()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List access$18900(org.bitcoinj.wallet.Protos$Wallet)>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTagsIsMutable()>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$19600()>","<org.bitcoinj.wallet.Protos$Wallet: boolean access$19300()>"],"<com.google.common.math.IntMath: int log2(int,java.math.RoundingMode)>":["<com.google.common.math.MathPreconditions: int checkPositive(java.lang.String,int)>","<com.google.common.math.IntMath$1: void <clinit>()>","<java.lang.Integer: int numberOfLeadingZeros(int)>","<java.lang.Integer: void <clinit>()>","<com.google.common.math.IntMath: boolean isPowerOfTwo(int)>","<com.google.common.math.IntMath: void <clinit>()>","<com.google.common.math.IntMath: int lessThanBranchFree(int,int)>","<com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>","<java.lang.AssertionError: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture: void addDoneString(java.lang.StringBuilder)>":["<java.lang.Object: java.lang.Class getClass()>","<com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Throwable: java.lang.Throwable getCause()>","<com.google.common.util.concurrent.AbstractFuture: java.lang.String userObjectToString(java.lang.Object)>"],"<okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform buildIfSupported()>":["<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>","<okhttp3.internal.platform.Jdk9Platform: void <init>(java.lang.reflect.Method,java.lang.reflect.Method)>"],"<org.bitcoinj.wallet.Wallet: void maybeMovePool(org.bitcoinj.core.Transaction,java.lang.String)>":["<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Transaction: boolean isEveryOwnedOutputSpent(org.bitcoinj.core.TransactionBag)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<java.util.HashMap: java.lang.Object remove(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.Logger: boolean isInfoEnabled()>","<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1: void run()>":["<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$1: void <init>(de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1,org.bitcoinj.core.ECKey)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask: android.os.Handler access$000(de.schildbach.wallet.ui.send.DecodePrivateKeyTask)>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$1: void run()>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$2: void <init>(de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1)>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$2: void run()>"],"<com.google.protobuf.LazyFieldLite: void <init>(com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.ByteString)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.service.UpgradeWalletService: void <init>()>":["<android.app.IntentService: void <init>(java.lang.String)>","<android.app.IntentService: void setIntentRedelivery(boolean)>","<java.lang.Class: java.lang.String getName()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: void aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>"],"<com.google.common.collect.Iterables: java.util.Collection castOrCopyToCollection(java.lang.Iterable)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>"],"<com.lambdaworks.jni.UnsupportedPlatformException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilderForType()>"],"<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setTitle(int)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCustomTitle(android.view.View)>"],"<androidx.lifecycle.LifecycleService: void onDestroy()>":["<androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnDestroy()>","<android.app.Service: void onDestroy()>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)>"],"<com.google.common.util.concurrent.AbstractService: void <init>()>":["<com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard: void <init>(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.AbstractService$IsStartableGuard: void <init>(com.google.common.util.concurrent.AbstractService)>","<java.lang.Object: void <init>()>","<com.google.common.util.concurrent.Service$State: void <clinit>()>","<com.google.common.util.concurrent.ListenerCallQueue: void <clinit>()>","<com.google.common.util.concurrent.ListenerCallQueue: void <init>()>","<com.google.common.util.concurrent.Monitor: void <init>()>","<com.google.common.util.concurrent.AbstractService$IsStoppedGuard: void <init>(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.AbstractService$IsStoppableGuard: void <init>(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.AbstractService$StateSnapshot: void <init>(com.google.common.util.concurrent.Service$State)>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag build()>":["<org.bitcoinj.wallet.Protos$Tag: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag buildPartial()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.GeneratedMessage: java.util.Map getAllFieldsMutable()>":["<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.Descriptors$Descriptor access$000(com.google.protobuf.GeneratedMessage$FieldAccessorTable)>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<java.util.TreeMap: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>"],"<androidx.fragment.app.DialogFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>"],"<com.google.protobuf.TextFormat: void <clinit>()>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat$Parser: com.google.protobuf.TextFormat$Parser$Builder newBuilder()>","<com.google.protobuf.TextFormat$Printer: com.google.protobuf.TextFormat$Printer access$100(com.google.protobuf.TextFormat$Printer,boolean)>","<com.google.protobuf.TextFormat$Parser$Builder: com.google.protobuf.TextFormat$Parser build()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<com.google.protobuf.TextFormat$Printer: com.google.protobuf.TextFormat$Printer access$200(com.google.protobuf.TextFormat$Printer,boolean)>","<java.lang.Class: java.lang.String getName()>","<com.google.protobuf.TextFormat$Printer: void <init>(com.google.protobuf.TextFormat$1)>","<java.util.logging.Logger: void <clinit>()>"],"<de.schildbach.wallet.data.AppDatabase: void <clinit>()>":["<de.schildbach.wallet.data.AppDatabase: void <clinit>()>","<de.schildbach.wallet.data.AppDatabase$1: void <init>(int,int)>"],"<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<de.schildbach.wallet.data.AddressBookEntry: java.util.Map asMap(java.util.List)>":["<java.util.HashMap: void <init>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()>":["<androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)>"],"<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>":["<ch.qos.logback.core.status.StatusBase: int getLevel()>","<ch.qos.logback.core.BasicStatusManager: void fireStatusAddEvent(ch.qos.logback.core.status.Status)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<ch.qos.logback.core.helpers.CyclicBuffer: void add(java.lang.Object)>"],"<java.lang.Object: void wait(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.hash.Hashing: void <clinit>()>":["<java.lang.System: long currentTimeMillis()>","<java.lang.System: void <clinit>()>","<com.google.common.hash.Hashing: void <clinit>()>"],"<org.bitcoinj.core.VarInt: byte[] encode()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.VarInt: int sizeOf(long)>","<org.bitcoinj.core.Utils: void uint64ToByteArrayLE(long,byte[],int)>","<org.bitcoinj.core.Utils: void uint32ToByteArrayLE(long,byte[],int)>"],"<org.spongycastle.crypto.digests.SHA512Digest: void <init>()>":["<org.spongycastle.crypto.digests.LongDigest: void <init>()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: byte[] getBody()>","<org.spongycastle.asn1.ASN1OutputStream: void write(byte[])>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: int getUninterpretedOptionCount()>":["<java.util.ArrayList: int size()>"],"<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.SmallSortedMap$EntryIterator: java.lang.Object next()>":["<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Map$Entry next()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: void <init>()>":["<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.BasicKeyChain: java.util.List getListeners()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<okhttp3.internal.platform.Jdk9Platform: void <init>(java.lang.reflect.Method,java.lang.reflect.Method)>":["<okhttp3.internal.platform.Platform: void <init>()>"],"<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>","<java.io.InputStream: int read(byte[],int,int)>","<java.io.EOFException: void <init>()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read(byte[],int,int)>","<java.io.FilterInputStream: int read(byte[],int,int)>","<java.io.FilterInputStream: int read()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.core.Block: java.math.BigInteger getWork()>":["<org.bitcoinj.core.Block: java.math.BigInteger getDifficultyTargetAsInteger()>","<java.math.BigInteger: void <clinit>()>","<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>","<org.bitcoinj.core.Block: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>"],"<com.google.common.io.BaseEncoding$Base64Encoding: int decodeTo(byte[],java.lang.CharSequence)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<com.google.common.io.BaseEncoding$Alphabet: int decode(char)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.io.BaseEncoding$DecodingException: void <init>(java.lang.String)>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.CharSequence trimTrailingPadding(java.lang.CharSequence)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<com.google.common.io.BaseEncoding$Alphabet: boolean isValidPaddingStartPosition(int)>"],"<androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>":["<androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidTag()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void <init>()>"],"<org.slf4j.helpers.SubstituteLoggerFactory: void clear()>":["<java.util.concurrent.LinkedBlockingQueue: void clear()>","<java.util.HashMap: void clear()>"],"<androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>":["<android.transition.Transition: java.util.List getTargetNames()>","<androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)>","<android.transition.Transition: java.util.List getTargetTypes()>","<android.transition.Transition: java.util.List getTargetIds()>"],"<com.google.protobuf.UnmodifiableLazyStringList: void add(com.google.protobuf.ByteString)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$1: org.bitcoinj.wallet.Protos$TransactionInput parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>"],"<com.google.common.collect.ImmutableList$Builder: void <init>(int)>":["<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void <init>(int)>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void <init>()>":["<ch.qos.logback.classic.pattern.ThrowableHandlingConverter: void <init>()>"],"<org.bitcoinj.core.PeerAddress: org.bitcoinj.core.PeerAddress localhost(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.core.NetworkParameters: int getPort()>","<com.google.common.net.InetAddresses: java.net.InetAddress forString(java.lang.String)>","<com.google.common.net.InetAddresses: void <clinit>()>","<org.bitcoinj.core.PeerAddress: void <init>(org.bitcoinj.core.NetworkParameters,java.net.InetAddress,int)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17000()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.core.Utils: void uint32ToByteStreamLE(long,java.io.OutputStream)>":["<org.bitcoinj.core.UnsafeByteArrayOutputStream: void write(int)>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.TransactionBroadcast broadcastTransaction(org.bitcoinj.core.Transaction,int)>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionBroadcast: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.Transaction)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerGroup$16: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.TransactionBroadcast)>","<org.bitcoinj.core.TransactionBroadcast: com.google.common.util.concurrent.ListenableFuture future()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionBroadcast: void <clinit>()>","<com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)>","<org.bitcoinj.core.TransactionBroadcast: void setMinConnections(int)>","<org.bitcoinj.core.TransactionBroadcast: com.google.common.util.concurrent.ListenableFuture broadcast()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<de.schildbach.wallet.ui.WalletActivity: void onPause()>":["<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>","<androidx.fragment.app.FragmentActivity: void onPause()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setAppearedAtHeight(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>":["<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.UnknownFieldSet: boolean equals(java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.AbstractMessage: boolean compareFields(java.util.Map,java.util.Map)>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.util.Map getAllFields()>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: java.util.Map getAllFields()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>":["<java.util.HashMap: java.util.Set entrySet()>","<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable)>","<com.google.common.collect.RegularImmutableMap: boolean isPartialView()>","<com.google.common.collect.ImmutableMap: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void onResult(java.util.Set)>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$2: void run()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$2: void <init>(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,java.util.Set)>"],"<com.google.common.collect.ImmutableMap: java.util.Collection values()>":["<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableCollection values()>"],"<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String,java.util.List)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.FancyListFragment: void <init>()>":["<androidx.fragment.app.ListFragment: void <init>()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$2600()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.TextFormat$Printer: void access$500(com.google.protobuf.TextFormat$Printer,com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat$Printer: void printUnknownFields(com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$1: com.google.protobuf.DescriptorProtos$EnumOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet$FeeCalculation: void <init>(org.bitcoinj.wallet.Wallet$1)>":["<org.bitcoinj.wallet.Wallet$FeeCalculation: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$1: void <init>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void initFields()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.Maps: java.util.HashMap newHashMap()>":["<java.util.HashMap: void <init>()>"],"<com.google.protobuf.UnknownFieldSet: void <clinit>()>":["<com.google.protobuf.UnknownFieldSet$Parser: void <init>()>","<com.google.protobuf.UnknownFieldSet: void <init>(java.util.Map)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>"],"<com.google.common.util.concurrent.Futures$CallbackListener: void <init>(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>":["<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>","<java.io.PrintWriter: void <init>(java.io.Writer)>","<java.util.ArrayList: void <init>(int)>","<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>","<java.io.PrintWriter: void close()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.ArrayList: boolean contains(java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<android.util.SparseArray: void put(int,java.lang.Object)>","<java.util.ArrayList: void clear()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.core.util.LogWriter: void <init>(java.lang.String)>","<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>","<android.util.Log: int w(java.lang.String,java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.util.SparseArray: java.lang.Object get(int)>","<android.util.SparseArray: void <init>(int)>","<androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)>"],"<org.bitcoinj.crypto.DeterministicKey: byte[] getPrivKeyBytes33()>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.ECKey: byte[] getPrivKeyBytes()>"],"<de.schildbach.wallet.util.GenericUtils: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>":["<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>","<java.lang.String: int length()>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script build()>":["<org.bitcoinj.script.Script: void <clinit>()>","<org.bitcoinj.script.Script: void <init>(java.util.List)>"],"<com.google.protobuf.LiteralByteString: java.lang.String toString(java.lang.String)>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.LiteralByteString: int getOffsetIntoBytes()>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>","<java.lang.String: void <init>(byte[],int,int,java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput build()>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput buildPartial()>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<de.schildbach.wallet.data.PaymentIntent: boolean isBluetoothPaymentRequestUrl()>":["<de.schildbach.wallet.util.Bluetooth: boolean isBluetoothUrl(java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void pushEmptyActionList()>":["<ch.qos.logback.core.joran.spi.Interpreter: void <clinit>()>","<java.util.Vector: boolean add(java.lang.Object)>"],"<com.google.protobuf.LazyStringArrayList: void <init>()>":["<java.util.ArrayList: void <init>()>","<java.util.AbstractList: void <init>()>"],"<org.bitcoinj.core.PeerGroup$2: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.util.Bluetooth: java.lang.String decompressMac(java.lang.String)>":["<java.lang.StringBuilder: void setLength(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: int length()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.String: java.lang.String substring(int,int)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$400(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<android.app.Activity: void finish()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<org.spongycastle.crypto.macs.HMac: void init(org.spongycastle.crypto.CipherParameters)>":["<org.spongycastle.crypto.macs.HMac: void <clinit>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.spongycastle.crypto.macs.HMac: void xorPad(byte[],int,byte)>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.digests.SHA512Digest: int doFinal(byte[],int)>","<org.spongycastle.crypto.digests.SHA512Digest: org.spongycastle.util.Memoable copy()>","<org.spongycastle.crypto.digests.SHA512Digest: void reset()>","<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>","<org.spongycastle.crypto.digests.LongDigest: void update(byte[],int,int)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder access$17200()>"],"<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: int getVersion()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet getDefaultInstance()>","<org.slf4j.LoggerFactory: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.crypto.HDUtils: void <clinit>()>":["<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>"],"<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int)>":["<java.lang.Object: void <init>()>"],"<com.google.zxing.common.reedsolomon.GenericGFPoly: void <init>(com.google.zxing.common.reedsolomon.GenericGF,int[])>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Object: void <init>()>","<java.lang.System: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>()>"],"<org.bitcoinj.utils.Threading$2: void <init>()>":["<java.lang.Object: void <init>()>"],"<okhttp3.CacheControl$Builder: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment,org.bitcoinj.wallet.Wallet,android.os.Handler)>":["<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <init>(org.bitcoinj.wallet.Wallet,android.os.Handler)>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: byte[] randomSalt()>":["<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<java.security.SecureRandom: void nextBytes(byte[])>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)>","<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setPort(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>":["<java.util.TreeMap: void <init>()>","<java.util.AbstractMap: boolean isEmpty()>","<com.google.protobuf.SmallSortedMap: void checkMutable()>"],"<ch.qos.logback.core.util.EnvUtil: boolean isJDK_N_OrHigher(int)>":["<java.lang.System: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<ch.qos.logback.core.util.EnvUtil: void <clinit>()>","<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer connectTo(org.bitcoinj.core.PeerAddress,boolean,int)>":["<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void handlePeerDeath(org.bitcoinj.core.Peer,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.net.NioClientManager: com.google.common.util.concurrent.ListenableFuture openConnection(java.net.SocketAddress,org.bitcoinj.net.StreamConnection)>","<org.bitcoinj.core.VersionMessage: org.bitcoinj.core.VersionMessage duplicate()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.base.Throwables: java.lang.Throwable getRootCause(java.lang.Throwable)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.PeerAddress: java.net.InetSocketAddress toSocketAddress()>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<org.bitcoinj.core.Peer: void addDisconnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer createPeer(org.bitcoinj.core.PeerAddress,org.bitcoinj.core.VersionMessage)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.Integer: void <clinit>()>","<java.lang.Throwable: java.lang.String getMessage()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.VersionMessage getVersionMessage()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object[])>","<com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<com.google.common.base.Throwables: void <clinit>()>","<org.bitcoinj.core.Peer: void addConnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerConnectedEventListener)>","<java.lang.StringBuilder: void <init>()>","<java.lang.IllegalArgumentException: java.lang.String getMessage()>","<org.bitcoinj.core.Peer: boolean setMinProtocolVersion(int)>","<java.lang.IllegalStateException: java.lang.String getMessage()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<org.bitcoinj.net.AbstractTimeoutHandler: void setSocketTimeout(int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>"],"<org.slf4j.LoggerFactory: void reportMultipleBindingAmbiguity(java.util.Set)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.LoggerFactory: boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)>","<org.slf4j.LoggerFactory: void <clinit>()>","<java.util.HashSet: java.util.Iterator iterator()>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: void report(java.lang.String)>"],"<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>":["<java.util.ArrayList: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean extensionsAreInitialized()>":["<com.google.protobuf.FieldSet: boolean isInitialized()>"],"<org.bitcoinj.core.Block: java.lang.String toString()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(long)>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getMerkleRoot()>","<java.lang.String: boolean isEmpty()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<org.bitcoinj.core.Block: boolean isBIP66()>","<org.bitcoinj.core.Block: boolean isBIP65()>","<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getPrevBlockHash()>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<org.bitcoinj.core.Block: boolean isBIP34()>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.Block: java.lang.String getHashAsString()>"],"<org.bitcoinj.crypto.EncryptedData: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>"],"<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>":["<java.lang.AssertionError: void <init>(java.lang.Object)>","<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>","<com.google.common.base.Joiner$2: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence getConfidence()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$1: void <init>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>"],"<okhttp3.TlsVersion: void <clinit>()>":["<okhttp3.TlsVersion: void <clinit>()>","<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>"],"<com.google.common.base.CharMatcher$Digit: void <init>()>":["<com.google.common.base.CharMatcher$Digit: char[] nines()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Digit: char[] zeroes()>","<com.google.common.base.CharMatcher$Digit: void <clinit>()>","<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>"],"<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath)>":["<ch.qos.logback.core.joran.spi.ElementSelector: boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath)>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isKleeneStar(java.lang.String)>","<ch.qos.logback.core.joran.spi.ElementPath: int size()>","<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.util.List)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.util.Set keySet()>"],"<org.bitcoinj.core.Peer: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.VersionMessage,org.bitcoinj.core.PeerAddress,org.bitcoinj.core.AbstractBlockChain,int)>":["<java.util.concurrent.atomic.AtomicInteger: void <init>()>","<org.bitcoinj.core.Context: org.bitcoinj.core.Context get()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.Peer$1: void <init>(org.bitcoinj.core.Peer)>","<org.bitcoinj.core.PeerSocketHandler: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.PeerAddress)>","<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<org.bitcoinj.core.Peer$2: void <init>(org.bitcoinj.core.Peer)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function)>","<java.util.LinkedList: void <init>()>","<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture allAsList(com.google.common.util.concurrent.ListenableFuture[])>","<java.util.HashSet: void <init>()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>","<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>","<org.bitcoinj.params.RegTestParams: org.bitcoinj.core.Block getGenesisBlock()>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block getGenesisBlock()>","<org.bitcoinj.core.Block: long getTimeSeconds()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Output: boolean access$500()>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.protocols.payments.PaymentSession: void <init>(org.bitcoin.protocols.payments.Protos$PaymentRequest,boolean,org.bitcoinj.crypto.TrustStoreLoader)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: void <init>()>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData verifyPaymentRequestPki(org.bitcoin.protocols.payments.Protos$PaymentRequest,java.security.KeyStore)>","<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore getKeyStore()>","<org.bitcoinj.protocols.payments.PaymentSession: void parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>"],"<org.bitcoinj.wallet.Wallet: void setLastBlockSeenHash(org.bitcoinj.core.Sha256Hash)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String)>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.util.OptionHelper: java.lang.String getAndroidSystemProperty(java.lang.String)>"],"<androidx.collection.MapCollections: java.util.Set getKeySet()>":["<androidx.collection.MapCollections$KeySet: void <init>(androidx.collection.MapCollections)>"],"<java.lang.Object: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Object: void finalize()>"],"<com.squareup.moshi.MapJsonAdapter$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int)>":["<java.util.concurrent.atomic.AtomicReferenceArray: int length()>","<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.util.Map getAllFields()>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.util.Map getExtensionFields()>","<java.util.Collections: void <clinit>()>","<java.util.TreeMap: void putAll(java.util.Map)>","<com.google.protobuf.GeneratedMessage: java.util.Map access$700(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.utils.Threading$UserThread: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.utils.Threading$UserThread: void <clinit>()>"],"<com.google.common.math.LongMath: long divide(long,long,java.math.RoundingMode)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.math.LongMath$1: void <clinit>()>","<java.math.RoundingMode: void <clinit>()>","<java.lang.Math: long abs(long)>","<java.lang.AssertionError: void <init>()>","<com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$700()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultCoinSelector: org.bitcoinj.wallet.CoinSelection select(org.bitcoinj.core.Coin,java.util.List)>":["<org.bitcoinj.wallet.DefaultCoinSelector: void sortOutputs(java.util.ArrayList)>","<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.CoinSelection: void <init>(org.bitcoinj.core.Coin,java.util.Collection)>","<java.util.ArrayList: void <init>()>","<org.bitcoinj.wallet.DefaultCoinSelector: boolean shouldSelect(org.bitcoinj.core.Transaction)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void <init>(androidx.lifecycle.LifecycleRegistry,androidx.lifecycle.Lifecycle$Event)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.WalletTransaction connectTransactionOutputs(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.Protos$Transaction)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void readConfidence(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Protos$TransactionConfidence,org.bitcoinj.core.TransactionConfidence)>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.wallet.WalletTransaction: void <init>(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.core.Sha256Hash byteStringToHash(com.google.protobuf.ByteString)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput getInput(long)>","<java.util.Locale: void <clinit>()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<org.bitcoinj.core.Peer: void addConnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerConnectedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder(org.bitcoin.protocols.payments.Protos$Payment)>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Payment)>"],"<org.bitcoinj.core.PeerGroup: int access$1100(org.bitcoinj.core.PeerGroup)>":["<org.bitcoinj.core.PeerGroup: int countConnectedAndPendingPeers()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest build()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean isInitialized()>"],"<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.common.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])>":["<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask$1: void run()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: long getN()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<de.schildbach.wallet.ui.send.DeriveKeyTask: org.slf4j.Logger access$100()>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.wallet.Protos$ScryptParameters getScryptParameters()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Throwable: java.lang.String getMessage()>","<de.schildbach.wallet.ui.send.DeriveKeyTask$1$1: void run()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <init>(int)>","<de.schildbach.wallet.ui.send.DeriveKeyTask: int access$000(de.schildbach.wallet.ui.send.DeriveKeyTask)>","<de.schildbach.wallet.Constants: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<de.schildbach.wallet.ui.send.DeriveKeyTask: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.spongycastle.crypto.params.KeyParameter deriveKey(java.lang.CharSequence)>","<de.schildbach.wallet.ui.send.DeriveKeyTask: android.os.Handler access$200(de.schildbach.wallet.ui.send.DeriveKeyTask)>","<de.schildbach.wallet.ui.send.DeriveKeyTask$1$1: void <init>(de.schildbach.wallet.ui.send.DeriveKeyTask$1,org.spongycastle.crypto.params.KeyParameter,boolean)>"],"<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<androidx.collection.SparseArrayCompat: void <clinit>()>","<java.lang.System: void <clinit>()>","<androidx.collection.SparseArrayCompat: void gc()>","<androidx.collection.ContainerHelpers: int idealIntArraySize(int)>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>":["<android.os.Build$VERSION: void <clinit>()>","<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<androidx.core.view.ViewCompat: void <clinit>()>","<java.util.WeakHashMap: void <init>()>"],"<de.schildbach.wallet.service.BlockchainState$Impediment: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.spongycastle.asn1.ASN1UTCTime: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$18700()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>":["<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: void <init>(java.util.concurrent.ScheduledExecutorService)>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void <init>(java.util.concurrent.ExecutorService)>"],"<org.bitcoinj.wallet.Protos$1: com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor)>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$FileDescriptor access$20902(com.google.protobuf.Descriptors$FileDescriptor)>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.spongycastle.asn1.ASN1Primitive: void <init>()>":["<org.spongycastle.asn1.ASN1Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: int getSerializedSize()>":["<com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.ByteString getMemoBytes()>","<com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstance()>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getServiceFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<ch.qos.logback.core.util.FileSize: void <clinit>()>":["<ch.qos.logback.core.util.FileSize: void <clinit>()>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>"],"<com.google.common.collect.Sets: java.util.Set newConcurrentHashSet()>":["<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>","<java.util.Collections: void <clinit>()>","<java.util.concurrent.ConcurrentHashMap: void <init>()>"],"<org.bitcoinj.core.Peer$3: void <init>(org.bitcoinj.core.Peer,org.bitcoinj.utils.ListenerRegistration)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.squareup.moshi.JsonUtf8Writer: void <clinit>()>":["<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.String: void <clinit>()>","<com.squareup.moshi.JsonUtf8Writer: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode[] values()>":["<java.lang.Object: java.lang.Object clone()>","<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder access$3100()>"],"<okio.Timeout$1: void <init>()>":["<okio.Timeout: void <init>()>"],"<org.spongycastle.asn1.ASN1OutputStream: void write(byte[])>":["<java.io.ByteArrayOutputStream: void write(byte[])>"],"<com.google.common.collect.Iterators$PeekingImpl: java.lang.Object peek()>":["<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>"],"<androidx.fragment.app.FragmentManagerImpl$4: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>":["<android.animation.AnimatorListenerAdapter: void <init>()>"],"<com.google.common.util.concurrent.ListenerCallQueue: void <clinit>()>":["<com.google.common.util.concurrent.ListenerCallQueue: void <clinit>()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void expand()>":["<java.util.concurrent.atomic.AtomicReferenceArray: int length()>","<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>","<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<androidx.collection.MapCollections$ValuesCollection: void <init>(androidx.collection.MapCollections)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.AbstractMessageLite: void writeDelimitedTo(java.io.OutputStream)>":["<com.google.protobuf.CodedOutputStream: void flush()>","<com.google.protobuf.CodedOutputStream: int computePreferredBufferSize(int)>","<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>","<org.bitcoin.protocols.payments.Protos$Payment: void writeTo(com.google.protobuf.CodedOutputStream)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void writeTo(com.google.protobuf.CodedOutputStream)>","<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>","<org.bitcoin.protocols.payments.Protos$Payment: int getSerializedSize()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Extension: boolean access$14300()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$8: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<com.google.protobuf.LiteralByteString: void <init>(byte[])>"],"<com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<androidx.lifecycle.LifecycleService: void onCreate()>":["<androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnCreate()>","<android.app.Service: void onCreate()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstanceForType()>"],"<org.bitcoinj.core.UnsafeByteArrayOutputStream: void write(byte[],int,int)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.core.Utils: byte[] copyOf(byte[],int)>","<java.lang.System: void <clinit>()>","<java.lang.IndexOutOfBoundsException: void <init>()>","<java.lang.Math: int max(int,int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isAmountPlausible()>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: boolean hasAmount()>"],"<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.core.spi.ContextAwareImpl: void addStatus(ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport: java.lang.Object getOrigin()>","<ch.qos.logback.core.spi.ContextAwareImpl: java.lang.Object getOrigin()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8800()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.lambdaworks.jni.NilLibraryLoader: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions$1: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: void initFields()>","<com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.util.EnvUtil: boolean isAndroidOS()>":["<ch.qos.logback.core.util.OptionHelper: java.lang.String getEnv(java.lang.String)>","<java.lang.String: boolean contains(java.lang.CharSequence)>","<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String)>"],"<com.lambdaworks.jni.Platform$Arch: void <clinit>()>":["<com.lambdaworks.jni.Platform$Arch: void <clinit>()>","<com.lambdaworks.jni.Platform$Arch: void <init>(java.lang.String,int,java.lang.String)>"],"<java.lang.String: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.service.BlockchainService: int access$1900()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.RenameUtil: void <clinit>()>":["<ch.qos.logback.core.rolling.helper.RenameUtil: void <clinit>()>"],"<de.schildbach.wallet.ui.SendingAddressesFragment: void <init>()>":["<de.schildbach.wallet.ui.FancyListFragment: void <init>()>","<android.os.Handler: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData build()>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$EncryptedData: boolean isInitialized()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData buildPartial()>"],"<de.schildbach.wallet.WalletApplication: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>","<android.app.Application: void <init>()>"],"<androidx.collection.ArraySet: int indexOfNull()>":["<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void preWriteCleanup()>":["<com.google.common.collect.MapMakerInternalMap$Segment: void runLockedCleanup()>"],"<org.bitcoinj.params.AbstractBitcoinNetParams: void <init>()>":["<org.bitcoinj.core.NetworkParameters: void <init>()>"],"<java.lang.RuntimeException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void initFields()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.CodedInputStream: long readInt64()>"],"<ch.qos.logback.core.util.StatusPrinter: void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.CoreConstants: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.util.StatusPrinter: void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>","<ch.qos.logback.core.util.StatusPrinter: void appendThrowable(java.lang.StringBuilder,java.lang.Throwable)>","<ch.qos.logback.core.util.CachingDateFormatter: java.lang.String format(long)>"],"<com.google.protobuf.TextFormat: com.google.protobuf.ByteString unescapeBytes(java.lang.CharSequence)>":["<com.google.protobuf.ByteString: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: java.lang.String toString()>","<com.google.protobuf.TextFormat$InvalidEscapeSequenceException: void <init>(java.lang.String)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.LiteralByteString: byte byteAt(int)>","<com.google.protobuf.TextFormat: int digitValue(byte)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.LiteralByteString: int size()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<com.google.protobuf.TextFormat: boolean isHex(byte)>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.TextFormat: boolean isOctal(byte)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchStart()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureDependencyIsMutable()>":["<com.google.protobuf.LazyStringArrayList: void <init>(com.google.protobuf.LazyStringList)>","<com.google.protobuf.LazyStringArrayList: void <clinit>()>"],"<de.schildbach.wallet.Configuration: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.Configuration: void <clinit>()>"],"<de.schildbach.wallet.util.Toast$3: void <init>(de.schildbach.wallet.util.Toast,int,java.lang.Object[])>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$DeterministicKey: void initFields()>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.CodedInputStream: void popLimit(int)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.lang.Integer: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.CodedInputStream: int getBytesUntilLimit()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: int getBroadcastByCount()>":["<java.util.ArrayList: int size()>"],"<androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)>":["<androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)>","<androidx.fragment.app.FragmentTransitionCompat21$1: void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)>","<android.graphics.Rect: void <init>()>","<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)>","<android.graphics.Rect: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>":["<com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>"],"<org.bitcoinj.wallet.Wallet: java.lang.Iterable getWalletTransactions()>":["<java.util.HashSet: void <init>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.HashMap: java.util.Collection values()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void addWalletTransactionsToSet(java.util.Set,org.bitcoinj.wallet.WalletTransaction$Pool,java.util.Collection)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.classic.util.ContextInitializer: java.net.URL findConfigFileURLFromAssets(boolean)>":["<ch.qos.logback.classic.util.ContextInitializer: java.net.URL getResource(java.lang.String,java.lang.ClassLoader,boolean)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6300()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node parse()>":["<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node E()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: org.bitcoinj.wallet.Protos$TransactionConfidence$Type[] values()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Transaction getTransaction(org.bitcoinj.core.Sha256Hash)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)>":["<java.util.AbstractMap: boolean equals(java.lang.Object)>"],"<ch.qos.logback.core.joran.action.NestedBasicPropertyIA: void <init>()>":["<ch.qos.logback.core.joran.action.ImplicitAction: void <init>()>","<java.util.Stack: void <init>()>"],"<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int getUpdateOutputSize(int)>","<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>","<org.spongycastle.crypto.BufferedBlockCipher: int getBlockSize()>"],"<com.google.common.util.concurrent.Uninterruptibles: java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue)>":["<java.lang.Thread: void interrupt()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>"],"<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: void <init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture)>":["<com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: void <init>(com.google.common.util.concurrent.ListenableFuture)>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>":["<com.google.protobuf.FieldSet: void makeImmutable()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder toBuilder()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilder(org.bitcoinj.wallet.Protos$EncryptedData)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.io.BaseEncoding$Base16Encoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>":["<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet)>"],"<ch.qos.logback.classic.util.ContextSelectorStaticBinder: ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String)>":["<ch.qos.logback.core.util.Loader: java.lang.Class loadClass(java.lang.String)>","<ch.qos.logback.core.util.Loader: void <clinit>()>"],"<androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void <init>()>":["<androidx.lifecycle.EmptyActivityLifecycleCallbacks: void <init>()>"],"<com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService)>":["<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: void <init>(java.util.concurrent.ScheduledExecutorService)>"],"<ch.qos.logback.classic.spi.LoggingEvent: void setMarker(org.slf4j.Marker)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<okhttp3.EventListener: okhttp3.EventListener$Factory factory(okhttp3.EventListener)>":["<okhttp3.EventListener$2: void <init>(okhttp3.EventListener)>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.lifecycle.Lifecycle$State: void <clinit>()>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.lifecycle.Lifecycle$State: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output buildPartial()>"],"<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString)>":["<com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.ByteString)>"],"<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getMaxPrecisionFormat()>":["<de.schildbach.wallet.Configuration: int getBtcShift()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat shift(int)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat optionalDecimals(int[])>","<org.bitcoinj.utils.MonetaryFormat: void <init>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>"],"<de.schildbach.wallet.service.BlockchainService$2: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.service.BlockchainService$2: void onChanged(org.bitcoinj.core.Coin)>"],"<org.spongycastle.asn1.ASN1Set: void <init>()>":["<java.util.Vector: void <init>()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.wallet.Wallet: boolean canSignFor(org.bitcoinj.script.Script)>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>","<org.bitcoinj.script.Script: java.util.List getPubKeys()>","<org.bitcoinj.script.Script: byte[] getCLTVPaymentChannelSenderPubKey()>","<org.bitcoinj.script.Script: byte[] getPubKey()>","<org.bitcoinj.script.Script: boolean isSentToMultiSig()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>","<org.bitcoinj.script.Script: boolean isSentToAddress()>","<org.bitcoinj.script.Script: boolean isSentToCLTVPaymentChannel()>","<org.bitcoinj.script.Script: byte[] getPubKeyHash()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Wallet: boolean canSignFor(org.bitcoinj.script.Script)>","<org.bitcoinj.script.Script: boolean isPayToScriptHash()>","<org.bitcoinj.script.Script: boolean isSentToRawPubKey()>","<org.bitcoinj.script.Script: byte[] getCLTVPaymentChannelRecipientPubKey()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: org.slf4j.Logger access$000()>"],"<java.lang.Double: boolean isNaN(double)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.SmallSortedMap$1: java.lang.Object put(java.lang.Object,java.lang.Object)>":["<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder mergeFrom(org.bitcoinj.wallet.Protos$PeerAddress)>":["<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.ByteString getIpAddress()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setIpAddress(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: boolean hasServices()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setPort(int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$PeerAddress: int getPort()>","<org.bitcoinj.wallet.Protos$PeerAddress: long getServices()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setServices(long)>","<org.bitcoinj.wallet.Protos$PeerAddress: boolean hasIpAddress()>","<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress getDefaultInstance()>","<org.bitcoinj.wallet.Protos$PeerAddress: boolean hasPort()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>"],"<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData$1: void <init>(de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData)>":["<android.content.BroadcastReceiver: void <init>()>"],"<com.squareup.okhttp.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)>":["<android.transition.TransitionSet: java.util.List getTargets()>","<androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<okio.AsyncTimeout: boolean exit()>":["<okio.AsyncTimeout: void <clinit>()>","<okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)>","<okio.Timeout: void <clinit>()>"],"<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void <clinit>()>":["<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void <clinit>()>"],"<com.google.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>":["<com.google.protobuf.CodedOutputStream: int computeRawVarint64Size(long)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates buildPartial()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void initFields()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setLastBroadcastedAt(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.core.VarInt: void <init>(byte[],int)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.Utils: long readUint32(byte[],int)>","<org.bitcoinj.core.Utils: long readInt64(byte[],int)>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder access$14700()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<androidx.lifecycle.LiveData$ObserverWrapper: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(com.google.protobuf.Message)>"],"<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)>":["<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelProvider$Factory)>"],"<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(com.google.protobuf.ByteString)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString)>"],"<org.bitcoinj.core.AbstractBlockChain: void addTransactionReceivedListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.TransactionReceivedInBlockListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<com.squareup.okhttp.OkHttpClient$1: void <init>()>":["<com.squareup.okhttp.internal.Internal: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseMessage(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>":["<com.google.protobuf.CodedInputStream: void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<org.bitcoinj.wallet.Protos: void <clinit>()>":["<com.google.protobuf.Descriptors$FileDescriptor: java.util.List getMessageTypes()>","<com.google.protobuf.Descriptors$FileDescriptor: void internalBuildGeneratedFileFrom(java.lang.String[],com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$FileDescriptor$InternalDescriptorAssigner)>","<java.lang.String: void <clinit>()>","<org.bitcoinj.wallet.Protos$1: void <init>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String[])>"],"<com.lambdaworks.jni.Platform$OS: com.lambdaworks.jni.Platform$OS[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.lambdaworks.jni.Platform$OS: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: void startBlockChainDownloadFromPeer(org.bitcoinj.core.Peer)>":["<org.bitcoinj.core.PeerGroup$ChainDownloadSpeedCalculator: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.PeerGroup$1)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.PeerGroup: void setDownloadPeer(org.bitcoinj.core.Peer)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator: com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>":["<org.bitcoinj.wallet.Wallet$BalanceType: void <init>(java.lang.String,int)>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: boolean hasAmount()>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: org.bitcoinj.core.Coin getAmount()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: void <init>(android.content.IntentFilter,android.content.BroadcastReceiver)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment buildPartial()>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: boolean maybeStartBluetoothListening()>":["<android.view.ContextThemeWrapper: android.content.ComponentName startService(android.content.Intent)>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getAddress(android.bluetooth.BluetoothAdapter)>","<de.schildbach.wallet.util.Bluetooth: java.lang.String compressMac(java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<de.schildbach.wallet.ui.AddressAndLabel: java.lang.String toString()>":["<java.lang.Object: java.lang.Class getClass()>","<org.bitcoinj.core.VersionedChecksummedBytes: java.lang.String toBase58()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>()>":["<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>(org.bitcoinj.wallet.WalletProtobufSerializer$WalletFactory)>","<org.bitcoinj.wallet.WalletProtobufSerializer$1: void <init>()>"],"<org.bitcoinj.wallet.DeterministicSeed: java.lang.String toString()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: java.lang.String join(java.lang.Iterable)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.wallet.DeterministicSeed: java.lang.String toHexString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.DeterministicSeed: boolean isEncrypted()>"],"<org.spongycastle.crypto.digests.LongDigest: void <init>(org.spongycastle.crypto.digests.LongDigest)>":["<org.spongycastle.crypto.digests.LongDigest: void copyIn(org.spongycastle.crypto.digests.LongDigest)>","<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.service.InactivityNotificationService: void handleDonate(org.bitcoinj.wallet.Wallet)>":["<android.app.IntentService: void sendBroadcast(android.content.Intent)>","<de.schildbach.wallet.ui.send.SendCoinsActivity: void startDonate(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.ui.send.FeeCategory,int)>","<android.content.Intent: void <init>(java.lang.String)>","<de.schildbach.wallet.ui.send.FeeCategory: void <clinit>()>","<android.content.Intent: void <clinit>()>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder mergeFrom(com.google.protobuf.Message)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void saveInstanceState(android.os.Bundle)>":["<android.os.Bundle: void putString(java.lang.String,java.lang.String)>"],"<org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.System: void <clinit>()>"],"<org.spongycastle.asn1.x500.RDN: void <init>(org.spongycastle.asn1.x500.AttributeTypeAndValue[])>":["<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable[])>","<org.spongycastle.asn1.ASN1Object: void <init>()>"],"<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes deriveChildKeyBytesFromPublic(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber,org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation$1: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Enum: int ordinal()>","<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>","<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>","<org.bitcoinj.crypto.ChildNumber: int i()>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.crypto.ChildNumber: boolean isHardened()>","<org.bitcoinj.crypto.HDKeyDerivation: void assertLessThanN(java.math.BigInteger,java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.crypto.HDKeyDerivation$RawKeyBytes: void <init>(byte[],byte[])>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<org.bitcoinj.crypto.HDUtils: byte[] hmacSha512(byte[],byte[])>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint publicPointFromPrivate(java.math.BigInteger)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.AssertionError: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.math.BigInteger: java.math.BigInteger negate()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint getPubKeyPoint()>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void assertNonInfinity(org.spongycastle.math.ec.ECPoint,java.lang.String)>","<java.math.BigInteger: void <init>(int,byte[])>","<org.bitcoinj.crypto.DeterministicKey: byte[] getChainCode()>"],"<com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>":["<com.google.protobuf.CodedOutputStream: int computeRawVarint64Size(long)>"],"<de.schildbach.wallet.ui.DividerItemDecoration: void <clinit>()>":["<de.schildbach.wallet.ui.DividerItemDecoration: void <clinit>()>"],"<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action build()>":["<androidx.core.app.NotificationCompat$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.script.Script: byte[] getCLTVPaymentChannelSenderPubKey()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.script.Script: boolean isSentToCLTVPaymentChannel()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setPyGenericServices(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: void <init>(com.google.common.util.concurrent.CollectionFuture$ListFuture,com.google.common.collect.ImmutableCollection,boolean)>":["<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void <init>(com.google.common.util.concurrent.CollectionFuture,com.google.common.collect.ImmutableCollection,boolean)>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1: void <init>(de.schildbach.wallet.ui.send.DecodePrivateKeyTask,org.bitcoinj.crypto.BIP38PrivateKey,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.script.Script: boolean isSentToCLTVPaymentChannel()>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.collect.Iterators: com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator)>":["<com.google.common.collect.Iterators$PeekingImpl: void <init>(java.util.Iterator)>"],"<org.spongycastle.crypto.digests.SHA512Digest: void reset(org.spongycastle.util.Memoable)>":["<org.spongycastle.crypto.digests.LongDigest: void copyIn(org.spongycastle.crypto.digests.LongDigest)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$16900()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>":["<com.google.common.base.Preconditions: void checkArgument(boolean)>","<com.google.common.base.CharMatcher: void <init>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void access$1000(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<de.schildbach.wallet.ui.RequestCoinsFragment: void stopBluetoothListening()>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1: com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner build()>"],"<com.google.common.hash.HashCode$BytesHashCode: boolean equalsSameBits(com.google.common.hash.HashCode)>":["<com.google.common.hash.HashCode$BytesHashCode: byte[] getBytesInternal()>"],"<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>()>":["<java.lang.Object: void <init>()>"],"<okio.Okio: okio.Sink sink(java.net.Socket)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.net.Socket: java.io.OutputStream getOutputStream()>","<okio.Okio: okio.AsyncTimeout timeout(java.net.Socket)>","<okio.Okio: okio.Sink sink(java.io.OutputStream,okio.Timeout)>","<okio.AsyncTimeout: okio.Sink sink(okio.Sink)>","<okio.Okio: void <clinit>()>","<java.io.IOException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean access$1500()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Transaction$Purpose: org.bitcoinj.core.Transaction$Purpose[] values()>":["<java.lang.Object: java.lang.Object clone()>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence buildPartial()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: long access$9902(org.bitcoinj.wallet.Protos$TransactionConfidence,long)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.ByteString access$9602(org.bitcoinj.wallet.Protos$TransactionConfidence,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: int access$9702(org.bitcoinj.wallet.Protos$TransactionConfidence,int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: int access$9502(org.bitcoinj.wallet.Protos$TransactionConfidence,int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Source access$10002(org.bitcoinj.wallet.Protos$TransactionConfidence,org.bitcoinj.wallet.Protos$TransactionConfidence$Source)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: java.util.List access$9802(org.bitcoinj.wallet.Protos$TransactionConfidence,java.util.List)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Type access$9402(org.bitcoinj.wallet.Protos$TransactionConfidence,org.bitcoinj.wallet.Protos$TransactionConfidence$Type)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: int access$10102(org.bitcoinj.wallet.Protos$TransactionConfidence,int)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<de.schildbach.wallet.WalletApplication$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)>":["<de.schildbach.wallet.WalletApplication: org.slf4j.Logger access$000()>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<de.schildbach.wallet.util.CrashReporter: void saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$4: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<java.lang.Long: long parseLong(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setLockTime(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.collect.FluentIterable$3$1: java.util.Iterator get(int)>":["<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>","<java.util.LinkedList: java.util.Iterator iterator()>"],"<org.bitcoinj.protocols.payments.PaymentSession: boolean isExpired()>":["<java.lang.System: long currentTimeMillis()>","<java.lang.System: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasExpires()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: long getExpires()>"],"<okhttp3.ConnectionPool: void <init>()>":["<java.util.concurrent.TimeUnit: void <clinit>()>","<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidWireType()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.MoreExecutors$5$1: void run()>":["<com.google.common.util.concurrent.MoreExecutors$5$1: void run()>","<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void run()>","<org.bitcoinj.core.Peer$2: void run()>","<com.google.common.util.concurrent.Futures$CallbackListener: void run()>","<com.google.common.util.concurrent.AbstractTransformFuture: void run()>","<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void run()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void run()>"],"<com.google.common.util.concurrent.AbstractTransformFuture: void afterDone()>":["<com.google.common.util.concurrent.AbstractFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)>"],"<org.bitcoinj.core.PeerGroup: void addWallet(org.bitcoinj.wallet.Wallet)>":["<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture addPeerFilterProvider(org.bitcoinj.core.PeerFilterProvider)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setExchangeDirection(boolean)>":["<de.schildbach.wallet.ui.CurrencyCalculatorLink: void update()>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void handleKeywordState(char,java.util.List,java.lang.StringBuffer)>":["<ch.qos.logback.core.pattern.parser.TokenStream: void addValuedToken(int,java.lang.StringBuffer,java.util.List)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.String: char charAt(int)>","<ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>","<ch.qos.logback.core.pattern.util.RegularEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>","<java.lang.Character: boolean isJavaIdentifierPart(char)>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Character: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsActivity: void start(android.content.Context,de.schildbach.wallet.data.PaymentIntent)>","<android.app.Activity: void finish()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.SingleFieldBuilder getPaymentFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$Payment getPayment()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>"],"<com.google.protobuf.FieldSet: void clearField(com.google.protobuf.FieldSet$FieldDescriptorLite)>":["<com.google.protobuf.SmallSortedMap: java.lang.Object remove(java.lang.Object)>","<java.util.AbstractMap: boolean isEmpty()>"],"<androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>":["<androidx.fragment.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder addTransactionOutput(org.bitcoinj.wallet.Protos$TransactionOutput$Builder)>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput build()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureTransactionOutputIsMutable()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>"],"<ch.qos.logback.core.ContextBase: void putObject(java.lang.String,java.lang.Object)>":["<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask,org.bitcoin.protocols.payments.Protos$Payment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest: void <clinit>()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.CharMatcher$BreakingWhitespace: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$2: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>":["<de.schildbach.wallet.ui.Event$Observer: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>":["<com.google.common.util.concurrent.AbstractFuture: void <init>()>"],"<com.google.protobuf.TextFormat$Printer: com.google.protobuf.TextFormat$Printer access$100(com.google.protobuf.TextFormat$Printer,boolean)>":["<com.google.protobuf.TextFormat$Printer: com.google.protobuf.TextFormat$Printer setSingleLineMode(boolean)>"],"<androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>":["<androidx.arch.core.executor.ArchTaskExecutor: void <clinit>()>","<androidx.arch.core.executor.ArchTaskExecutor$1: void <init>()>","<androidx.arch.core.executor.ArchTaskExecutor$2: void <init>()>"],"<com.google.common.net.InetAddresses: java.net.InetAddress bytesToInetAddress(byte[])>":["<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>"],"<com.google.protobuf.DynamicMessage: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstanceForType()>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)>":["<okhttp3.CacheControl: java.lang.String toString()>","<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>","<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>","<java.lang.String: boolean isEmpty()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeSourceCodeInfo(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo buildPartial()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$23: void run()>":["<android.content.Intent: void <init>(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.os.Handler access$800(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void run()>","<de.schildbach.wallet.data.PaymentIntent: boolean isBluetoothPaymentUrl()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: boolean isBluetoothPaymentRequestUrl()>","<de.schildbach.wallet.data.PaymentIntent: boolean isHttpPaymentRequestUrl()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$3200(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.data.PaymentIntent: boolean isHttpPaymentUrl()>","<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)>","<android.content.Intent: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: java.lang.Runnable access$700(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1800(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.bluetooth.BluetoothAdapter access$1500(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setBtcAmount(org.bitcoinj.core.Coin)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.CurrencyCalculatorLink access$1400(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.widget.AutoCompleteTextView access$400(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.data.PaymentIntent: org.bitcoinj.core.Coin getAmount()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.widget.CheckBox access$2500(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.data.PaymentIntent: boolean hasPaymentRequestUrl()>"],"<org.bitcoinj.net.discovery.DnsDiscovery$DnsSeedDiscovery: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.RegularImmutableSet: com.google.common.collect.ImmutableList createAsList()>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher whitespace()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Whitespace: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void initFields()>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1: void <init>()>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.PeerAddress: java.net.InetSocketAddress toSocketAddress()>":["<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>","<java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilderForType()>"],"<com.squareup.moshi.internal.Util$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>":["<java.lang.NullPointerException: void <init>()>","<com.squareup.moshi.internal.Util: void checkNotPrimitive(java.lang.reflect.Type)>","<java.lang.Object: void <init>()>","<com.squareup.moshi.internal.Util: void <clinit>()>","<com.squareup.moshi.internal.Util: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>","<java.lang.IllegalArgumentException: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$Waiter: void <clinit>()>":["<com.google.common.util.concurrent.AbstractFuture$Waiter: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void <init>(boolean)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void <init>()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstance()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity: void <init>()>":["<android.app.Activity: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MethodOptions)>":["<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MethodOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: void skipRawVarintSlowPath()>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>","<com.google.protobuf.CodedInputStream: byte readRawByte()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>","<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.util.concurrent.AbstractFuture$Waiter: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200()>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)>","<java.lang.Thread: java.lang.Thread currentThread()>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)>"],"<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String,java.lang.Throwable)>"],"<androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)>":["<org.bitcoinj.core.Block: int hashCode()>","<org.bitcoinj.core.Sha256Hash: int hashCode()>","<org.bitcoinj.core.NetworkParameters: int hashCode()>","<java.util.AbstractList: int hashCode()>","<org.bitcoinj.wallet.DeterministicSeed: int hashCode()>","<java.lang.Object: int hashCode()>","<de.schildbach.wallet.ui.AddressAndLabel: int hashCode()>","<org.bitcoinj.core.TransactionOutput: int hashCode()>","<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>","<java.io.File: int hashCode()>","<java.lang.String: int hashCode()>","<org.bitcoinj.crypto.ChildNumber: int hashCode()>","<com.google.common.hash.HashCode: int hashCode()>","<org.bitcoinj.core.Transaction: int hashCode()>","<com.google.protobuf.AbstractMessage: int hashCode()>","<okhttp3.HttpUrl: int hashCode()>","<java.lang.Enum: int hashCode()>","<org.bitcoinj.crypto.DeterministicKey: int hashCode()>","<androidx.collection.SimpleArrayMap: int indexOfNull()>","<org.bitcoinj.core.VersionedChecksummedBytes: int hashCode()>","<org.bitcoinj.core.PeerAddress: int hashCode()>","<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getService(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[],int)>":["<com.google.common.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)>"],"<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)>":["<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: java.lang.String getLockName()>","<java.lang.StringBuilder: void <init>()>","<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>","<java.lang.Class: java.lang.String getName()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>","<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>","<com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>","<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>"],"<androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>","<androidx.lifecycle.LifecycleService: androidx.lifecycle.Lifecycle getLifecycle()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.crypto.CryptoException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Block: void writeTransactions(java.io.OutputStream)>":["<org.bitcoinj.core.VarInt: byte[] encode()>","<java.io.ByteArrayOutputStream: void write(byte[])>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.VarInt: void <init>(long)>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.UnsafeByteArrayOutputStream: void write(byte[],int,int)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<de.schildbach.wallet.data.TimeLiveData$1: void <init>(de.schildbach.wallet.data.TimeLiveData)>":["<android.content.BroadcastReceiver: void <init>()>"],"<org.bitcoinj.wallet.Wallet: boolean adjustOutputDownwardsForFee(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.CoinSelection,org.bitcoinj.core.Coin,boolean)>":["<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin subtract(org.bitcoinj.core.Coin)>","<org.bitcoinj.wallet.Wallet: int estimateBytesForSigning(org.bitcoinj.wallet.CoinSelection)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput getOutput(long)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>"],"<org.spongycastle.asn1.DERFactory: org.spongycastle.asn1.ASN1Sequence createSequence(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.DERFactory: void <clinit>()>","<org.spongycastle.asn1.DLSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <clinit>()>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <init>()>"],"<com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>":["<com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>"],"<com.google.common.base.CharMatcher$Ascii: void <clinit>()>":["<com.google.common.base.CharMatcher$Ascii: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$Ascii: void <init>()>"],"<org.bitcoinj.core.PeerGroup: int discoverPeers()>":["<java.util.LinkedList: int size()>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.util.LinkedList: boolean isEmpty()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.bitcoinj.core.PeerGroup$7: void run()>","<org.bitcoinj.core.PeerGroup$7: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.utils.ListenerRegistration,com.google.common.collect.ImmutableSet)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void addInactive(org.bitcoinj.core.PeerAddress)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.LinkedList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>","<org.bitcoinj.core.PeerAddress: void <init>(org.bitcoinj.core.NetworkParameters,java.net.InetSocketAddress)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstanceForType()>"],"<com.google.protobuf.TextFormat$TextGenerator: void write(java.lang.CharSequence)>":["<java.lang.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)>","<java.lang.String: int length()>"],"<androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>","<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>","<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onViewCreated(android.view.View,android.os.Bundle)>"],"<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey encrypt(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.crypto.DeterministicKey)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.crypto.EncryptedData encrypt(byte[],org.spongycastle.crypto.params.KeyParameter)>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: void setCreationTimeSeconds(long)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.crypto.DeterministicKey: long getCreationTimeSeconds()>","<org.bitcoinj.core.ECKey: byte[] getPrivKeyBytes()>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.crypto.LazyECPoint,org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.DeterministicKey)>"],"<ch.qos.logback.core.CoreConstants: void <clinit>()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.String: void <init>(char[])>","<java.lang.String: void <clinit>()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.CoreConstants: void <clinit>()>","<ch.qos.logback.core.util.EnvUtil: boolean isJDK5()>","<ch.qos.logback.core.util.EnvUtil: void <clinit>()>","<java.lang.String: int length()>"],"<org.bitcoinj.core.TxConfidenceTable: void <init>()>":["<org.bitcoinj.core.TxConfidenceTable: void <init>(int)>"],"<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(byte[])>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[])>"],"<org.bitcoinj.wallet.Wallet: void saveNow()>":["<org.bitcoinj.wallet.WalletFiles: void saveNow()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.WalletApplication$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<java.lang.Thread: java.lang.Thread currentThread()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>"],"<okio.RealBufferedSource: void <init>(okio.Source)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<okio.Buffer: void <init>()>","<okio.Buffer: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: void <clinit>()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: int size()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>":["<androidx.lifecycle.LifecycleRegistry: void sync()>"],"<de.schildbach.wallet.service.UpgradeWalletService: void onHandleIntent(android.content.Intent)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.service.UpgradeWalletService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.UpgradeWalletService: void maybeUpgradeToSecureChain(org.bitcoinj.wallet.Wallet)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: void start(android.content.Context,boolean)>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>"],"<org.bitcoinj.core.Transaction: java.util.List getInputs()>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Collections: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2100(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$3900()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean access$3100()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.Interpreter: void endElement(ch.qos.logback.core.joran.event.EndEvent)>":["<ch.qos.logback.core.joran.spi.Interpreter: void endElement(java.lang.String,java.lang.String,java.lang.String)>","<ch.qos.logback.core.joran.spi.Interpreter: void setDocumentLocator(org.xml.sax.Locator)>"],"<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output$Builder newBuilder()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder access$300()>"],"<okio.AsyncTimeout: void <init>()>":["<okio.Timeout: void <init>()>"],"<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.TextFormat$ByteSequence)>":["<com.google.protobuf.TextFormat$1: int size()>","<com.google.protobuf.TextFormat$1: byte byteAt(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<com.google.protobuf.TextFormat$2: byte byteAt(int)>","<com.google.protobuf.TextFormat$2: int size()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>(int)>"],"<org.bitcoinj.signers.StatelessTransactionSigner: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createOutputScript(org.bitcoinj.core.Address)>":["<org.bitcoinj.script.ScriptBuilder: void <init>()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder data(byte[])>","<org.bitcoinj.core.Address: byte[] getHash160()>","<org.bitcoinj.core.Address: boolean isP2SHAddress()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script build()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder op(int)>"],"<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable concat(java.lang.Iterable,java.lang.Iterable)>":["<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable concatNoDefensiveCopy(java.lang.Iterable[])>"],"<org.bitcoinj.crypto.X509Utils: java.lang.String getDisplayNameFromCertificate(java.security.cert.X509Certificate,boolean)>":["<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>","<org.spongycastle.asn1.x500.style.RFC4519Style: void <clinit>()>","<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>","<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>","<org.spongycastle.asn1.x500.X500Name: void <init>(java.lang.String)>","<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>","<org.spongycastle.asn1.x500.X500Name: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: com.google.protobuf.SingleFieldBuilder getEncryptedDeterministicSeedFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$EncryptedData getEncryptedDeterministicSeed()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves: void defineCurveAlias(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier)>":["<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>","<org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>","<java.util.Hashtable: java.lang.Object get(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Transaction$Pool: org.bitcoinj.wallet.Protos$Transaction$Pool[] values()>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<androidx.core.app.NotificationCompat$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean)>":["<java.lang.Object: void <init>()>","<android.os.Bundle: void <init>()>","<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>","<android.os.Bundle: void <clinit>()>"],"<org.bitcoinj.core.UTXO: void <init>(org.bitcoinj.core.Sha256Hash,long,org.bitcoinj.core.Coin,int,boolean,org.bitcoinj.script.Script)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.DeterministicKey$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionInput: void <clinit>()>":["<org.bitcoinj.core.TransactionInput: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$Script: boolean access$5700()>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.squareup.moshi.StandardJsonAdapters$4: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<com.google.protobuf.TextFormat: void access$800(int,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: void printUnknownFieldValue(int,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>"],"<okhttp3.CipherSuite: void <clinit>()>":["<okhttp3.CipherSuite: okhttp3.CipherSuite init(java.lang.String,int)>","<java.util.LinkedHashMap: void <init>()>","<okhttp3.CipherSuite$1: void <init>()>","<okhttp3.CipherSuite: void <clinit>()>"],"<androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>":["<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>","<android.app.Activity: void onCreate(android.os.Bundle)>"],"<androidx.lifecycle.ClassesInfoCache: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<java.lang.String: int length()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.AddressBookActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setSigsRequiredToSpend(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$5: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onEmptyWalletFailed()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onEmptyWalletFailed()>"],"<org.bitcoinj.core.Sha256Hash: int hashCode()>":["<com.google.common.primitives.Ints: int fromBytes(byte,byte,byte,byte)>"],"<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>":["<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)>"],"<com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<java.lang.Character: boolean isDigit(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: int getExtensionCount()>":["<java.util.ArrayList: int size()>"],"<com.squareup.moshi.ClassJsonAdapter: void <clinit>()>":["<com.squareup.moshi.ClassJsonAdapter: void <clinit>()>","<com.squareup.moshi.ClassJsonAdapter$1: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$2600()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getEnumTypeCount()>":["<java.util.ArrayList: int size()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$1100(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void requestWalletBalance()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask,boolean)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder mergeFrom(com.google.protobuf.Message)>"],"<ch.qos.logback.core.util.OptionHelper: boolean isEmpty(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>"],"<org.bitcoinj.wallet.WalletTransaction: void <init>(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<org.bitcoinj.core.PeerGroup: boolean removePreMessageReceivedEventListener(org.bitcoinj.core.listeners.PreMessageReceivedEventListener)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>","<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>"],"<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],int,org.bitcoinj.core.MessageSerializer)>":["<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>"],"<org.bitcoinj.wallet.Wallet$8: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,java.util.List,boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.CharMatcher$JavaLowerCase: void <clinit>()>":["<com.google.common.base.CharMatcher$JavaLowerCase: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaLowerCase: void <init>()>"],"<com.google.protobuf.TextFormat: long parseUInt64(java.lang.String)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: long parseInteger(java.lang.String,boolean,boolean)>"],"<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: void setResult(java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>"],"<com.google.protobuf.AbstractMessage: void <init>()>":["<com.google.protobuf.AbstractMessageLite: void <init>()>"],"<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()>":["<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>","<androidx.lifecycle.ViewModel: void onCleared()>","<androidx.collection.SparseArrayCompat: void clear()>","<androidx.collection.SparseArrayCompat: int size()>"],"<androidx.lifecycle.LiveData$1: void <init>(androidx.lifecycle.LiveData)>":["<java.lang.Object: void <init>()>"],"<okio.Okio$1: void <init>(okio.Timeout,java.io.OutputStream)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<com.google.protobuf.CodedInputStream: void skipMessage()>":["<com.google.protobuf.CodedInputStream: boolean skipField(int)>","<com.google.protobuf.CodedInputStream: int readTag()>"],"<java.lang.Character: java.lang.Character valueOf(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)>":["<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.data.AbstractWalletLiveData: void onInactive()>":["<de.schildbach.wallet.data.AbstractWalletLiveData: void onWalletInactive(org.bitcoinj.wallet.Wallet)>","<de.schildbach.wallet.data.WalletBalanceLiveData: void onWalletInactive(org.bitcoinj.wallet.Wallet)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileOptions)>":["<com.google.protobuf.DescriptorProtos$FileOptions: java.lang.Object access$12000(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setPyGenericServices(boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasJavaGenerateEqualsAndHash()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasJavaGenericServices()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasJavaOuterClassname()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaGenerateEqualsAndHash(boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: java.lang.Object access$12100(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setCcGenericServices(boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasGoPackage()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasDeprecated()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasPyGenericServices()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasCcGenericServices()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getCcGenericServices()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode getOptimizeFor()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getPyGenericServices()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaStringCheckUtf8(boolean)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getJavaGenerateEqualsAndHash()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getDeprecated()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setOptimizeFor(com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasJavaPackage()>","<com.google.protobuf.DescriptorProtos$FileOptions: java.lang.Object access$12600(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaGenericServices(boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaMultipleFiles(boolean)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setDeprecated(boolean)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasJavaStringCheckUtf8()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getJavaGenericServices()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getJavaMultipleFiles()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasOptimizeFor()>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean hasJavaMultipleFiles()>","<com.google.protobuf.DescriptorProtos$FileOptions: java.util.List access$13100(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.DescriptorProtos$FileOptions: boolean getJavaStringCheckUtf8()>"],"<org.bitcoinj.core.PeerGroup$14: void <init>(org.bitcoinj.core.PeerGroup,long,int,com.google.common.util.concurrent.SettableFuture)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.util.Bluetooth: boolean isBluetoothUrl(java.lang.String)>":["<de.schildbach.wallet.util.GenericUtils: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment parseDelimitedFrom(java.io.InputStream)>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.AbstractParser: java.lang.Object parseDelimitedFrom(java.io.InputStream)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1)>":["<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$1: com.google.protobuf.DescriptorProtos$SourceCodeInfo parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)>":["<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>","<androidx.collection.ArrayMap: void <init>()>","<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<ch.qos.logback.classic.Logger: boolean isDebugEnabled()>":["<ch.qos.logback.classic.Logger: boolean isDebugEnabled(org.slf4j.Marker)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void <init>()>":["<de.schildbach.wallet.ui.scan.ScanActivity$9: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity$7: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.CameraManager: void <init>()>","<de.schildbach.wallet.ui.scan.ScanActivity$8: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>"],"<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void <clinit>()>":["<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.MoreExecutors$DirectExecutor: void <clinit>()>"],"<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrapReversed(byte[])>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: byte[] reverseBytes(byte[])>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection,boolean,boolean)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.util.concurrent.AggregateFutureState: void <init>(int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4000()>"],"<org.bitcoinj.wallet.Protos$Tag: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: int encryptBlock(byte[],int,byte[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.engines.AESFastEngine: int processBlock(byte[],int,byte[],int)>"],"<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.ExtensionRegistry: void <init>(boolean)>":["<com.google.protobuf.ExtensionRegistryLite: void <init>(com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite getEmptyRegistry()>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>"],"<org.bitcoinj.core.Block: java.lang.String getHashAsString()>":["<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Sha256Hash: java.lang.String toString()>"],"<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash calculateHash()>":["<org.bitcoinj.core.UnsafeByteArrayOutputStream: byte[] toByteArray()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrapReversed(byte[])>","<org.bitcoinj.core.UnsafeByteArrayOutputStream: void <init>(int)>","<org.bitcoinj.core.Block: void writeHeader(java.io.OutputStream)>","<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[])>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$7: void onBadPassphrase()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: org.slf4j.Logger access$700()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.send.SweepWalletViewModel access$100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: android.widget.EditText access$1000(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: android.view.View access$900(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<com.google.common.collect.SingletonImmutableSet: java.util.Iterator iterator()>":["<com.google.common.collect.SingletonImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>"],"<com.google.protobuf.Utf8: int partialIsValidUtf8NonAscii(byte[],int,int)>":["<com.google.protobuf.Utf8: int incompleteStateFor(byte[],int,int)>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$3: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<androidx.fragment.app.FragmentActivity: void onStart()>":["<androidx.fragment.app.FragmentController: void dispatchActivityCreated()>","<androidx.fragment.app.FragmentController: void noteStateNotSaved()>","<androidx.fragment.app.FragmentController: boolean execPendingActions()>","<androidx.fragment.app.FragmentController: void dispatchStart()>","<android.app.Activity: void onStart()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder access$12900()>"],"<de.schildbach.wallet.ui.WalletActivity$14: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.InputParser: void cannotClassify(java.lang.String)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: int getOneofFieldNumber(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate build()>"],"<org.bitcoinj.script.Script: void <init>(byte[])>":["<java.lang.Object: void <init>()>","<org.bitcoinj.script.Script: void parse(byte[])>"],"<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>":["<ch.qos.logback.core.util.CachingDateFormatter: void <init>(java.lang.String)>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>"],"<org.spongycastle.asn1.DERFactory: org.spongycastle.asn1.ASN1Set createSet(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.DLSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.DERFactory: void <clinit>()>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.fragment.app.BackStackState: void <clinit>()>":["<androidx.fragment.app.BackStackState$1: void <init>()>","<androidx.fragment.app.BackStackState: void <clinit>()>"],"<java.lang.String: java.lang.String[] split(java.lang.String,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.MoreObjects$ToStringHelper: void <init>(java.lang.String,com.google.common.base.MoreObjects$1)>":["<com.google.common.base.MoreObjects$ToStringHelper: void <init>(java.lang.String)>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder addChunk(int,org.bitcoinj.script.ScriptChunk)>":["<java.util.LinkedList: void add(int,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder access$9000()>"],"<ch.qos.logback.core.android.SystemPropertiesProxy: void setClassLoader(java.lang.ClassLoader)>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Object: java.lang.Class getClass()>"],"<org.bitcoinj.wallet.Wallet: java.lang.String toString()>":["<org.bitcoinj.wallet.Wallet: java.lang.String toString(boolean,boolean,boolean,org.bitcoinj.core.AbstractBlockChain)>"],"<com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()>":["<java.util.NoSuchElementException: void <init>()>"],"<okio.Buffer: void <clinit>()>":["<okio.Buffer: void <clinit>()>"],"<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"],"<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.FullLifecycleObserver)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getFieldFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getNestedTypeFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getOneofDeclFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionRangeFieldBuilder()>"],"<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>":["<com.google.common.util.concurrent.SettableFuture: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput$Builder newBuilderForType()>"],"<com.google.protobuf.LazyStringArrayList: int size()>":["<java.util.ArrayList: int size()>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<java.security.SecureRandom: void <init>()>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.crypto.LinuxSecureRandom: void <init>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$7: int displayRotation()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.app.Activity: android.view.WindowManager getWindowManager()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Extension getExtension(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>":["<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>","<com.google.common.base.Joiner: java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[])>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.UninitializedMessageException: com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException()>","<org.bitcoin.protocols.payments.Protos$Payment: boolean isInitialized()>","<org.bitcoinj.wallet.Protos$Wallet: boolean isInitialized()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: boolean isInitialized()>","<com.google.protobuf.AbstractParser: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean isInitialized()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean isInitialized()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean isInitialized()>"],"<androidx.lifecycle.ProcessLifecycleOwner$1: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner$Builder newBuilderForType()>"],"<com.google.common.base.Equivalence: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>":["<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.util.SparseArray: java.lang.Object get(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<com.google.common.util.concurrent.AggregateFutureState: void <clinit>()>":["<java.util.logging.Level: void <clinit>()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<com.google.common.util.concurrent.AggregateFutureState: void <clinit>()>","<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>","<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>","<com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicIntegerFieldUpdater)>","<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: void <init>(com.google.common.util.concurrent.AggregateFutureState$1)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK buildPartial()>"],"<com.lambdaworks.jni.LibraryLoaders: com.lambdaworks.jni.LibraryLoader loader()>":["<com.lambdaworks.jni.JarLibraryLoader: void <init>()>","<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.lambdaworks.jni.SysLibraryLoader: void <init>()>","<java.lang.System: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.lambdaworks.jni.NilLibraryLoader: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void initFields()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: void <init>(java.lang.String)>":["<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker weakKeys()>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.MapMaker: void <init>()>","<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$7: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<androidx.collection.MapCollections$ArrayIterator: void remove()>":["<androidx.collection.ArrayMap$1: void colRemoveAt(int)>","<java.lang.IllegalStateException: void <init>()>"],"<com.google.common.net.InetAddresses: java.lang.IllegalArgumentException formatIllegalArgumentException(java.lang.String,java.lang.Object[])>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"],"<ch.qos.logback.core.pattern.parser.TokenStream$1: void <clinit>()>":["<ch.qos.logback.core.pattern.parser.TokenStream$1: void <clinit>()>","<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values()>","<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int,boolean)>":["<java.io.FilterInputStream: void <init>(java.io.InputStream)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$3: void run()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onFailure(java.lang.Exception)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onFailure(java.lang.Exception)>"],"<androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)>":["<java.lang.String: boolean equals(java.lang.Object)>","<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>","<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>","<androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentTransitionImpl$1: void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<com.google.protobuf.UnknownFieldSet: void <init>(java.util.Map,com.google.protobuf.UnknownFieldSet$1)>":["<com.google.protobuf.UnknownFieldSet: void <init>(java.util.Map)>"],"<androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)>":["<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>","<androidx.fragment.app.FragmentTransitionImpl$3: void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$11500()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace)>"],"<androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)>":["<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder access$1000()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder create()>"],"<org.bitcoinj.core.PeerGroup: void addConnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerConnectedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.Peer: void addConnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerConnectedEventListener)>","<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<org.spongycastle.asn1.DERPrintableString: void <init>(java.lang.String)>":["<org.spongycastle.asn1.DERPrintableString: void <init>(java.lang.String,boolean)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>":["<com.google.common.collect.MapMakerInternalMap: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference()>"],"<androidx.collection.SparseArrayCompat: void gc()>":["<androidx.collection.SparseArrayCompat: void <clinit>()>"],"<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.util.Map$Entry)>":["<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)>"],"<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>":["<com.google.common.collect.ImmutableSet: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$3: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DERSequence: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.DERSequence: int getBodyLength()>","<org.spongycastle.asn1.DEROutputStream: org.spongycastle.asn1.ASN1OutputStream getDERSubStream()>","<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>","<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>","<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>"],"<androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)>":["<android.os.Bundle: void putBoolean(java.lang.String,boolean)>","<androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])>","<android.os.Bundle: void putInt(java.lang.String,int)>","<android.os.Bundle: void <init>()>","<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>","<android.os.Bundle: void <init>(android.os.Bundle)>","<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.os.Bundle: void <clinit>()>","<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>","<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Wallet: void resetTxInputs(org.bitcoinj.wallet.SendRequest,java.util.List)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionInput)>","<org.bitcoinj.core.Transaction: void clearInputs()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.PeerGroup: void setDownloadPeer(org.bitcoinj.core.Peer)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: void removeDataEventListenerFromPeer(org.bitcoinj.core.Peer,org.bitcoinj.core.listeners.PeerDataEventListener)>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.net.FilterMerger: org.bitcoinj.core.BloomFilter getLastFilter()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void addDataEventListenerToPeer(java.util.concurrent.Executor,org.bitcoinj.core.Peer,org.bitcoinj.core.listeners.PeerDataEventListener)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.spongycastle.asn1.ASN1Generator: void <init>(java.io.OutputStream)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.FieldSet: java.lang.Object readPrimitiveField(com.google.protobuf.CodedInputStream,com.google.protobuf.WireFormat$FieldType,boolean)>":["<java.lang.Boolean: void <clinit>()>","<com.google.protobuf.CodedInputStream: double readDouble()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<com.google.protobuf.CodedInputStream: java.lang.String readString()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.CodedInputStream: int readFixed32()>","<com.google.protobuf.CodedInputStream: long readSFixed64()>","<com.google.protobuf.CodedInputStream: int readInt32()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.CodedInputStream: long readUInt64()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<com.google.protobuf.CodedInputStream: long readSInt64()>","<com.google.protobuf.CodedInputStream: long readInt64()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.CodedInputStream: float readFloat()>","<com.google.protobuf.CodedInputStream: int readSFixed32()>","<java.lang.Float: java.lang.Float valueOf(float)>","<com.google.protobuf.FieldSet$1: void <clinit>()>","<com.google.protobuf.CodedInputStream: long readFixed64()>","<java.lang.Float: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readSInt32()>","<java.lang.Double: java.lang.Double valueOf(double)>","<java.lang.Double: void <clinit>()>","<com.google.protobuf.CodedInputStream: java.lang.String readStringRequireUtf8()>"],"<org.bitcoinj.wallet.Wallet: void signTransaction(org.bitcoinj.wallet.SendRequest)>":["<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Throwable)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.DecryptingKeyBag: void <init>(org.bitcoinj.wallet.KeyBag,org.spongycastle.crypto.params.KeyParameter)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.signers.MissingSigResolutionSigner: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>","<java.util.ArrayList: int size()>","<org.bitcoinj.signers.MissingSigResolutionSigner: boolean signInputs(org.bitcoinj.signers.TransactionSigner$ProposedTransaction,org.bitcoinj.wallet.KeyBag)>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.util.ArrayList: java.lang.Object get(int)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<org.bitcoinj.signers.MissingSigResolutionSigner: void <init>(org.bitcoinj.wallet.Wallet$MissingSigsMode)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.signers.TransactionSigner$ProposedTransaction: void <init>(org.bitcoinj.core.Transaction)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput getInput(long)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.core.PeerGroup: java.util.List findPeersOfAtLeastVersion(long)>":["<java.util.ArrayList: void <init>(int)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.BasicKeyChain: java.util.List serializeToProtobuf()>":["<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.wallet.BasicKeyChain: java.util.Map serializeToEditableProtobufs()>","<java.util.LinkedHashMap: java.util.Collection values()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<org.bitcoinj.wallet.Protos$Tag: boolean access$15400()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$1: org.bitcoin.protocols.payments.Protos$PaymentDetails parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>":["<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void add(java.lang.Class,java.lang.String,java.lang.Class)>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onAttachedToWindow()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void setShowWhenLocked(boolean)>"],"<com.google.common.collect.Iterators$ArrayItr: void <init>(java.lang.Object[],int,int,int)>":["<com.google.common.collect.AbstractIndexedListIterator: void <init>(int,int)>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto$1: void <init>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void initFields()>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <clinit>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread: void <init>(android.bluetooth.BluetoothAdapter)>":["<de.schildbach.wallet.offline.AcceptBluetoothThread: void <init>(android.bluetooth.BluetoothServerSocket,de.schildbach.wallet.offline.AcceptBluetoothThread$1)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>"],"<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<org.bitcoinj.params.Networks: java.util.Set get()>","<org.bitcoinj.core.Address: boolean isAcceptableVersion(org.bitcoinj.core.NetworkParameters,int)>","<com.google.common.collect.SingletonImmutableSet: java.util.Iterator iterator()>","<org.bitcoinj.params.Networks: void <clinit>()>","<com.google.common.collect.Iterators$9: java.lang.Object next()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.collect.Iterators$9: boolean hasNext()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<org.bitcoinj.core.NetworkParameters: int[] getAcceptableAddressCodes()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.core.WrongNetworkException: void <init>(int,int[])>","<com.google.common.collect.RegularImmutableSet: java.util.Iterator iterator()>","<org.bitcoinj.core.AddressFormatException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>":["<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>"],"<com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1: com.google.protobuf.DescriptorProtos$MethodDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DynamicMessage: void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor[],com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.AbstractMessage: void <init>()>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask$1$1: void run()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$16: void onSuccess(org.spongycastle.crypto.params.KeyParameter,boolean)>"],"<org.bitcoinj.wallet.Protos$Transaction$1: org.bitcoinj.wallet.Protos$Transaction parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinPackagingData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<okhttp3.internal.Util$2: void <init>(java.lang.String,boolean)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.StoredBlock: void serializeCompact(java.nio.ByteBuffer)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<org.bitcoinj.core.StoredBlock: java.math.BigInteger getChainWork()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.bitcoinj.core.StoredBlock: int getHeight()>","<java.math.BigInteger: byte[] toByteArray()>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<org.bitcoinj.core.StoredBlock: void <clinit>()>"],"<com.google.common.hash.AbstractByteHasher: com.google.common.hash.Hasher putBytes(byte[],int,int)>":["<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void update(byte[],int,int)>","<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>"],"<ch.qos.logback.core.LayoutBase: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()>":["<androidx.lifecycle.LifecycleService: androidx.lifecycle.Lifecycle getLifecycle()>","<androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)>"],"<okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)>":["<org.conscrypt.Conscrypt: void setUseEngineSocket(javax.net.ssl.SSLSocketFactory,boolean)>","<org.conscrypt.Conscrypt: boolean isConscrypt(javax.net.ssl.SSLSocketFactory)>"],"<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>":["<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createOutputScript(org.bitcoinj.core.Address)>","<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,byte[])>","<org.bitcoinj.script.Script: byte[] getProgram()>"],"<com.google.common.base.Platform: com.google.common.base.PatternCompiler loadPatternCompiler()>":["<com.google.common.base.Platform$JdkPatternCompiler: void <init>(com.google.common.base.Platform$1)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$1: org.bitcoin.protocols.payments.Protos$PaymentACK parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Wallet$6: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getServiceFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getMessageTypeFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.SingleFieldBuilder getSourceCodeInfoFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.LazyECPoint: byte[] getEncoded(boolean)>":["<java.util.Arrays: byte[] copyOf(byte[],int)>","<org.bitcoinj.crypto.LazyECPoint: org.spongycastle.math.ec.ECPoint get()>","<org.bitcoinj.crypto.LazyECPoint: boolean isCompressed()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder access$7800()>"],"<org.bitcoinj.core.TransactionOutput: java.lang.String toString()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.script.Script: byte[] getPubKey()>","<org.bitcoinj.script.Script: org.bitcoinj.core.Address getToAddress(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.script.Script: boolean isSentToAddress()>","<org.bitcoinj.script.Script: boolean isSentToMultiSig()>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>","<org.bitcoinj.core.Coin: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.script.Script: boolean isPayToScriptHash()>","<org.bitcoinj.script.Script: boolean isSentToRawPubKey()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader)>":["<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getCodeLocation(java.lang.Class)>","<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String)>","<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getImplementationVersion(java.lang.Class)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.spi.ClassPackagingData: void <init>(java.lang.String,java.lang.String,boolean)>"],"<org.bitcoinj.wallet.Protos$Wallet: int getKeyCount()>":["<java.util.ArrayList: int size()>"],"<com.google.common.io.ByteStreams: void <clinit>()>":["<com.google.common.io.ByteStreams: void <clinit>()>","<com.google.common.io.ByteStreams$1: void <init>()>"],"<org.bitcoinj.core.Transaction: void shuffleOutputs()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: void shuffle(java.util.List)>"],"<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <init>(java.lang.String)>":["<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.android.SystemPropertiesProxy: void <init>(java.lang.ClassLoader)>":["<java.lang.Object: void <init>()>","<ch.qos.logback.core.android.SystemPropertiesProxy: void setClassLoader(java.lang.ClassLoader)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder create()>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6100()>"],"<de.schildbach.wallet.ui.InputParser: void <init>()>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.Logger: void setLevel(ch.qos.logback.classic.Level)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>","<ch.qos.logback.classic.LoggerContext: void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level)>","<ch.qos.logback.classic.Logger: void handleParentLevelChange(int)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<ch.qos.logback.classic.Logger: boolean isRootLogger()>","<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Level getEffectiveLevel()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder access$16200()>":["<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder create()>"],"<com.google.common.collect.ImmutableList: void <init>()>":["<com.google.common.collect.ImmutableCollection: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: int getSerializedSize()>":["<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: int computeInt32Size(int,int)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>","<com.google.protobuf.CodedOutputStream: int computeInt64Size(int,long)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.spongycastle.crypto.RuntimeCryptoException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.ECKey$ECDSASignature: org.bitcoinj.core.ECKey$ECDSASignature decodeFromDER(byte[])>":["<org.bitcoinj.core.ECKey$ECDSASignature: void <init>(java.math.BigInteger,java.math.BigInteger)>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>","<java.io.FilterInputStream: void close()>","<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>","<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>","<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder newBuilderForType()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16000()>"],"<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()>":["<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()>","<org.slf4j.helpers.Util: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService$5: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.service.BlockchainService$5: void onChanged(org.bitcoinj.core.Transaction)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Key getKey(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder access$7800()>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder create()>"],"<de.schildbach.wallet.ui.scan.CameraManager: void setTorchEnabled(android.hardware.Camera,boolean)>":["<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<java.lang.String: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager: java.lang.String findValue(java.util.Collection,java.lang.String[])>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.common.hash.AbstractHashFunction: com.google.common.hash.Hasher newHasher(int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>","<com.google.common.hash.MessageDigestHashFunction: com.google.common.hash.Hasher newHasher()>"],"<androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>":["<androidx.loader.content.AsyncTaskLoader: void executePendingTask()>"],"<org.bitcoinj.core.PeerGroup: void addDisconnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>","<org.bitcoinj.core.PeerGroup: java.util.List getConnectedPeers()>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Peer: void addDisconnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK build()>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK buildPartial()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean isInitialized()>"],"<org.bitcoinj.core.BloomFilter: void <init>(int,double,long,org.bitcoinj.core.BloomFilter$BloomUpdate)>":["<java.lang.Math: double log(double)>","<org.bitcoinj.core.Message: void <init>()>","<java.lang.Math: long min(long,long)>","<java.lang.Math: int min(int,int)>","<java.lang.Double: boolean isNaN(double)>","<java.lang.Math: long max(long,long)>","<java.lang.Enum: int ordinal()>","<java.lang.Double: void <clinit>()>","<java.lang.Math: int max(int,int)>","<java.lang.Math: double pow(double,double)>"],"<org.bitcoinj.core.Message: void <init>()>":["<java.lang.Object: void <init>()>","<org.bitcoinj.core.DummySerializer: void <clinit>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$2: void run()>":["<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask: de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback access$600(de.schildbach.wallet.offline.DirectPaymentTask)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1: void onFail(int,java.lang.Object[])>"],"<com.google.protobuf.CodedInputStream: int setSizeLimit(int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: void <init>(int)>"],"<org.spongycastle.crypto.digests.GeneralDigest: void update(byte)>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: void processWord(byte[],int)>"],"<okhttp3.internal.platform.JdkWithJettyBootPlatform: okhttp3.internal.platform.Platform buildIfSupported()>":["<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.internal.platform.JdkWithJettyBootPlatform: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.bitcoinj.core.Peer: void removeWallet(org.bitcoinj.wallet.Wallet)>":["<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder access$11700()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder addMessageType(com.google.protobuf.DescriptorProtos$DescriptorProto)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureMessageTypeIsMutable()>","<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<androidx.fragment.app.FragmentTransition$3: void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.crypto.digests.LongDigest: void processBlock()>":["<org.spongycastle.crypto.digests.LongDigest: void adjustByteCounts()>","<org.spongycastle.crypto.digests.LongDigest: long Sigma1(long)>","<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>","<org.spongycastle.crypto.digests.LongDigest: void <clinit>()>","<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>","<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>","<org.spongycastle.crypto.digests.LongDigest: long Sigma0(long)>","<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$2: void run()>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback access$400(de.schildbach.wallet.ui.send.RequestPaymentRequestTask)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$24: void onFail(int,java.lang.Object[])>"],"<java.lang.String: java.lang.String valueOf(char)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Throwable: java.lang.Throwable getCause()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.CharMatcher$Ascii: void <init>()>":["<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput$Builder setSpentByTransactionIndex(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.fragment.app.BackStackRecord$Op: void <init>(int,androidx.fragment.app.Fragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.scan.CameraManager: void close()>":["<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.core.PeerGroup$PeerListener: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.recovery.ResilientFileOutputStream: void <init>(java.io.File,boolean,long)>":["<java.io.FileOutputStream: void <init>(java.io.File,boolean)>","<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>"],"<com.google.protobuf.Descriptors: java.lang.String access$1500(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>":["<com.google.protobuf.Descriptors: java.lang.String computeFullName(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>","<com.google.protobuf.Descriptors: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$7: void run()>":["<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<android.app.Activity: void runOnUiThread(java.lang.Runnable)>","<de.schildbach.wallet.ui.scan.ScanActivity$7: int displayRotation()>","<android.graphics.RectF: void offsetTo(float,float)>","<de.schildbach.wallet.ui.scan.ScanActivity: java.lang.Runnable access$800(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.CameraManager: android.graphics.Rect getFrame()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity$7$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity$7,android.graphics.Rect,android.graphics.RectF,int,boolean)>","<de.schildbach.wallet.ui.scan.ScanActivity: android.os.Handler access$600(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.CameraManager: int getFacing()>","<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable: void <init>(de.schildbach.wallet.ui.scan.ScanActivity,android.hardware.Camera)>","<android.graphics.RectF: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity$9: void run()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager: int getOrientation()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable: void run()>","<java.lang.String: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.scan.ScanActivity: de.schildbach.wallet.ui.scan.ScanViewModel access$1000(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.CameraManager: android.hardware.Camera open(android.view.TextureView,int)>","<de.schildbach.wallet.ui.scan.ScanActivity: void access$700(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.ScanActivity: org.slf4j.Logger access$900()>","<android.graphics.RectF: void <init>(android.graphics.RectF)>","<de.schildbach.wallet.ui.scan.CameraManager: android.graphics.RectF getFramePreview()>","<de.schildbach.wallet.ui.scan.ScanActivity: android.view.TextureView access$300(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.Event: de.schildbach.wallet.ui.Event simple()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.scan.ScanActivity: de.schildbach.wallet.ui.scan.CameraManager access$200(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder create()>":["<com.google.protobuf.UnknownFieldSet$Builder: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: void reinitialize()>"],"<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)>":["<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity,androidx.lifecycle.ViewModelProvider$Factory)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder access$12900()>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder create()>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>":["<java.lang.System: void <clinit>()>","<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Wallet: void checkBalanceFuturesLocked(org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<org.bitcoinj.wallet.Wallet$9: void run()>","<org.bitcoinj.utils.Threading$UserThread: void execute(java.lang.Runnable)>","<org.bitcoinj.wallet.Wallet$9: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.wallet.Wallet$BalanceFutureRequest,org.bitcoinj.core.Coin)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.AbstractList: java.util.ListIterator listIterator()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<ch.qos.logback.classic.util.ContextInitializer: void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder getFieldBuilder(int)>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder addField(int,com.google.protobuf.UnknownFieldSet$Field)>","<java.lang.Integer: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: com.google.protobuf.UnknownFieldSet$Field$Builder newBuilder()>","<java.util.TreeMap: java.lang.Object get(java.lang.Object)>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field build()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder mergeFrom(com.google.protobuf.UnknownFieldSet$Field)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$14900()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData: void handleIntent(android.content.Intent)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<java.lang.String: boolean equals(java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>","<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<de.schildbach.wallet.service.BlockchainState$Impediment: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: org.slf4j.Logger access$1200()>","<ch.qos.logback.classic.Logger: boolean isInfoEnabled()>","<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>"],"<com.google.protobuf.SmallSortedMap$EmptySet: void <clinit>()>":["<com.google.protobuf.SmallSortedMap$EmptySet: void <clinit>()>","<com.google.protobuf.SmallSortedMap$EmptySet$1: void <init>()>","<com.google.protobuf.SmallSortedMap$EmptySet$2: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>":["<androidx.fragment.app.FragmentManagerImpl$2$1: void run()>","<androidx.fragment.app.FragmentManagerImpl$2$1: void <init>(androidx.fragment.app.FragmentManagerImpl$2)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationEnd(android.view.animation.Animation)>"],"<org.bitcoinj.wallet.KeyChainGroup: void setLookaheadSize(int)>":["<java.util.LinkedList: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaLetter()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaLetter: void <clinit>()>"],"<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<com.google.common.base.Ticker$1: long read()>"],"<com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringList getUnmodifiableView()>":["<com.google.protobuf.UnmodifiableLazyStringList: void <init>(com.google.protobuf.LazyStringList)>"],"<org.bitcoinj.params.UnitTestParams: void <init>()>":["<java.lang.System: long currentTimeMillis()>","<org.bitcoinj.core.Block: void setDifficultyTarget(long)>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <init>()>","<java.lang.System: void <clinit>()>","<java.math.BigInteger: void <init>(java.lang.String,int)>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.Block: void solve()>","<org.bitcoinj.core.Block: void setTime(long)>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$CType$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.BloomFilter: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>"],"<okhttp3.Dns: void <clinit>()>":["<okhttp3.Dns: void <clinit>()>","<okhttp3.Dns$1: void <init>()>"],"<com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.math.IntMath: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,char)>","<java.util.Arrays: void fill(byte[],byte)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Math: int min(int,int)>","<java.math.RoundingMode: void <clinit>()>","<java.lang.Integer: void <clinit>()>","<java.lang.String: void <clinit>()>","<java.lang.String: void <init>(char[])>","<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>","<com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>","<com.google.common.math.IntMath: int log2(int,java.math.RoundingMode)>","<java.lang.Integer: int lowestOneBit(int)>"],"<org.bitcoinj.core.Block: void setTime(long)>":["<org.bitcoinj.core.Block: void unCacheHeader()>"],"<com.google.protobuf.ExtensionRegistry$DescriptorIntPair: void <init>(com.google.protobuf.Descriptors$Descriptor,int)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>":["<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<java.lang.Object: java.lang.Class getClass()>","<com.google.protobuf.BoundedByteString: int size()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<com.google.protobuf.LiteralByteString: boolean equalsRange(com.google.protobuf.LiteralByteString,int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterScrypt: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<org.bitcoinj.crypto.EncryptedData: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionMessage: boolean equals(java.lang.Object)>","<java.io.File: boolean equals(java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.LazyECPoint: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<java.math.BigInteger: boolean equals(java.lang.Object)>","<java.lang.String: void <clinit>()>","<com.google.common.io.BaseEncoding$Alphabet: boolean equals(java.lang.Object)>","<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: void <init>(int)>"],"<org.xmlpull.v1.sax2.Driver: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>"],"<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Throwable)>":["<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Throwable)>","<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.protobuf.LiteralByteString: void <init>(byte[])>":["<com.google.protobuf.ByteString: void <init>()>"],"<de.schildbach.wallet.ui.AbstractWalletActivity: void setShowWhenLocked(boolean)>":["<android.app.Activity: void setShowWhenLocked(boolean)>","<android.os.Build$VERSION: void <clinit>()>","<android.app.Activity: android.view.Window getWindow()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence(org.bitcoinj.core.Context)>":["<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence(org.bitcoinj.core.TxConfidenceTable)>","<org.bitcoinj.core.Context: org.bitcoinj.core.TxConfidenceTable getConfidenceTable()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput buildPartial()>":["<org.bitcoinj.wallet.Protos$TransactionInput: int access$7402(org.bitcoinj.wallet.Protos$TransactionInput,int)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: int access$7002(org.bitcoinj.wallet.Protos$TransactionInput,int)>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.ByteString access$6902(org.bitcoinj.wallet.Protos$TransactionInput,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionInput: int access$7202(org.bitcoinj.wallet.Protos$TransactionInput,int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.ByteString access$7102(org.bitcoinj.wallet.Protos$TransactionInput,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$TransactionInput: long access$7302(org.bitcoinj.wallet.Protos$TransactionInput,long)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.crypto.TransactionSignature: org.bitcoinj.crypto.TransactionSignature dummy()>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.TransactionSignature: void <init>(java.math.BigInteger,java.math.BigInteger)>"],"<com.google.protobuf.SmallSortedMap: void <init>(int)>":["<java.util.AbstractMap: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>","<java.util.Collections: java.util.List emptyList()>"],"<ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy: void start()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: boolean isErrorFree()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void <init>(ch.qos.logback.core.rolling.helper.FileNamePattern,ch.qos.logback.core.rolling.helper.RollingCalendar)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: boolean hasIntegerTokenCOnverter()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void start()>"],"<androidx.lifecycle.ProcessLifecycleOwner: void <init>()>":["<java.lang.Object: void <init>()>","<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>","<androidx.lifecycle.ProcessLifecycleOwner$2: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>","<androidx.lifecycle.ProcessLifecycleOwner$1: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$10$1: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment$10)>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.Splitter: java.util.Iterator splittingIterator(java.lang.CharSequence)>":["<com.google.common.base.Splitter$1: java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>","<com.google.common.base.Splitter$2: java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder access$1400()>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder create()>"],"<java.lang.NoSuchFieldError: void <init>(java.lang.String)>":["<java.lang.IncompatibleClassChangeError: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.joran.spi.JoranException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.Descriptors$Descriptor: void crossLink()>":["<com.google.protobuf.Descriptors$FieldDescriptor: void access$800(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.Descriptors$Descriptor: void crossLink()>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl$3: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>":["<android.animation.AnimatorListenerAdapter: void <init>()>"],"<ch.qos.logback.core.helpers.CyclicBuffer: void <init>(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Object: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<ch.qos.logback.core.helpers.CyclicBuffer: void init(int)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4800()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>":["<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$2100()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void markDirty()>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.core.BlockChain: void <init>(org.bitcoinj.core.Context,java.util.List,org.bitcoinj.store.BlockStore)>":["<org.bitcoinj.core.AbstractBlockChain: void <init>(org.bitcoinj.core.Context,java.util.List,org.bitcoinj.store.BlockStore)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder access$18900()>":["<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder create()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$5: void <init>(de.schildbach.wallet.ui.scan.ScanActivity,int)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider$2: void <init>(de.schildbach.wallet.WalletBalanceWidgetProvider,android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle,android.content.BroadcastReceiver$PendingResult)>":["<java.lang.Object: void <init>()>"],"<com.squareup.moshi.Moshi$Builder: com.squareup.moshi.Moshi build()>":["<com.squareup.moshi.Moshi: void <clinit>()>","<com.squareup.moshi.Moshi: void <init>(com.squareup.moshi.Moshi$Builder)>"],"<de.schildbach.wallet.WalletApplication: void cleanupFiles()>":["<java.io.File: boolean delete()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.app.Application: java.io.File getFilesDir()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<android.app.Application: java.lang.String[] fileList()>","<java.io.File: void <clinit>()>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<java.io.File: void <init>(java.io.File,java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)>":["<okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: boolean equals(java.lang.Object)>","<okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)>"],"<org.bitcoinj.core.Transaction: void parse()>":["<org.bitcoinj.core.Message: long readVarInt(int)>","<org.bitcoinj.core.VarInt: int sizeOf(long)>","<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],int,org.bitcoinj.core.MessageSerializer)>","<java.lang.Math: int min(int,int)>","<org.bitcoinj.core.Message: long readVarInt()>","<org.bitcoinj.core.TransactionInput: void <clinit>()>","<org.bitcoinj.core.Message: long readUint32()>","<org.bitcoinj.core.Message: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],int,org.bitcoinj.core.MessageSerializer)>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>"],"<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>":["<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl getFragmentManagerImpl()>"],"<org.bitcoinj.core.TransactionInput$ConnectMode: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.service.BlockchainService$5: void onChanged(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.service.BlockchainService: java.util.concurrent.atomic.AtomicInteger access$1700(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.Configuration access$300(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.data.WalletLiveData access$1300(de.schildbach.wallet.service.BlockchainService)>","<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.core.Address getWalletAddressOfReceived(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void access$1800(de.schildbach.wallet.service.BlockchainService,org.bitcoinj.core.Address,org.bitcoinj.core.Coin,org.bitcoinj.core.Sha256Hash)>","<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>","<de.schildbach.wallet.service.BlockchainService: org.bitcoinj.core.BlockChain access$900(de.schildbach.wallet.service.BlockchainService)>"],"<com.google.protobuf.CodedInputStream: long readRawVarint64()>":["<com.google.protobuf.CodedInputStream: long readRawVarint64SlowPath()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>":["<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractService$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.ChildMessage: void adjustLength(int,int)>":["<org.bitcoinj.core.Message: void adjustLength(int,int)>","<org.bitcoinj.core.ChildMessage: void adjustLength(int,int)>"],"<de.schildbach.wallet.data.PaymentIntent: org.bitcoinj.core.Coin getAmount()>":["<de.schildbach.wallet.data.PaymentIntent$Output: boolean hasAmount()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<de.schildbach.wallet.data.PaymentIntent: boolean hasOutputs()>","<org.bitcoinj.core.Coin: int signum()>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.bitcoinj.core.Message: long readUint32()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: long readUint32(byte[],int)>","<org.bitcoinj.core.ProtocolException: void <init>(java.lang.Exception)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder access$4200()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder create()>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: void start(android.content.Context,de.schildbach.wallet.data.PaymentIntent,de.schildbach.wallet.ui.send.FeeCategory,int)>":["<android.content.Intent: android.content.Intent setFlags(int)>","<android.content.ContextWrapper: void startActivity(android.content.Intent)>","<android.app.Activity: void startActivity(android.content.Intent)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>","<android.content.Intent: void <clinit>()>"],"<com.google.common.collect.ImmutableSet: int chooseTableSize(int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<java.lang.Double: boolean isNaN(double)>","<java.lang.Integer: void <clinit>()>","<java.lang.Double: void <clinit>()>","<java.lang.Math: int max(int,int)>","<java.lang.Integer: int highestOneBit(int)>"],"<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Key$Type: org.bitcoinj.wallet.Protos$Key$Type[] values()>","<org.bitcoinj.wallet.Protos$Key$Type$1: void <init>()>","<org.bitcoinj.wallet.Protos$Key$Type: void <init>(java.lang.String,int,int,int)>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)>":["<java.lang.String: char charAt(int)>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: int decodeHexDigit(char)>"],"<de.schildbach.wallet.ui.preference.PreferenceActivity: void <init>()>":["<android.preference.PreferenceActivity: void <init>()>"],"<com.google.protobuf.ExtensionRegistryLite: void <init>(boolean)>":["<java.lang.Object: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>"],"<ch.qos.logback.core.status.StatusUtil: void <init>(ch.qos.logback.core.Context)>":["<java.lang.Object: void <init>()>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>":["<androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Transaction sendCoinsOffline(org.bitcoinj.wallet.SendRequest)>":["<org.bitcoinj.wallet.Wallet: void completeTx(org.bitcoinj.wallet.SendRequest)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: void commitTx(org.bitcoinj.core.Transaction)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag buildPartial()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$Tag: int access$15802(org.bitcoinj.wallet.Protos$Tag,int)>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.ByteString access$15702(org.bitcoinj.wallet.Protos$Tag,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$Tag: java.lang.Object access$15602(org.bitcoinj.wallet.Protos$Tag,java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask$1: void run()>":["<java.io.DataOutputStream: void close()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.AbstractMessageLite: void writeDelimitedTo(java.io.OutputStream)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<org.bitcoin.protocols.payments.Protos$Payment: int getTransactionsCount()>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask: void onResult(boolean)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.io.IOException: java.lang.String getMessage()>","<java.io.DataOutputStream: void <init>(java.io.OutputStream)>","<java.io.DataInputStream: void close()>","<java.io.DataOutputStream: void flush()>","<de.schildbach.wallet.util.Bluetooth: java.lang.String decompressMac(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<java.lang.String: boolean equals(java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK parseDelimitedFrom(java.io.InputStream)>","<de.schildbach.wallet.offline.DirectPaymentTask: org.slf4j.Logger access$100()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<de.schildbach.wallet.offline.DirectPaymentTask: void onFail(int,java.lang.Object[])>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentProtocol$Ack parsePaymentAck(org.bitcoin.protocols.payments.Protos$PaymentACK)>","<java.io.DataInputStream: void <init>(java.io.InputStream)>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask: android.bluetooth.BluetoothAdapter access$500(de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask)>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask: java.lang.String access$400(de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentProtocol$Ack: java.lang.String getMemo()>"],"<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>":["<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash calculateHash()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.CharMatcher$JavaDigit: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode valueOf(int)>":["<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData build()>"],"<de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter: void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)>":["<androidx.viewpager.widget.PagerAdapter: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDestroy()>":["<android.os.HandlerThread: android.os.Looper getLooper()>","<androidx.fragment.app.Fragment: void onDestroy()>"],"<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>":["<org.bitcoinj.core.AbstractBlockChain: org.bitcoinj.core.StoredBlock getChainHead()>","<org.bitcoinj.core.StoredBlock: int getHeight()>"],"<de.schildbach.wallet.data.AbstractWalletLiveData$1: void <init>(de.schildbach.wallet.data.AbstractWalletLiveData)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction build()>"],"<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>":["<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>","<okhttp3.logging.HttpLoggingInterceptor$Level: void <init>(java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getNestedType(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean access$6500()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<ch.qos.logback.core.rolling.RollingPolicyBase: java.lang.String getParentsRawFileProperty()>":["<ch.qos.logback.core.FileAppender: java.lang.String rawFileProperty()>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void initFields()>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1: void <init>()>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <clinit>()>"],"<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedInputStream: long readRawVarint64SlowPath()>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>","<com.google.protobuf.CodedInputStream: byte readRawByte()>"],"<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>":["<java.lang.Object: boolean equals(java.lang.Object)>","<com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)>","<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>"],"<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.RepeatedFieldBuilder: void ensureMutableMessageList()>","<com.google.protobuf.RepeatedFieldBuilder: void incrementModCounts()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: void onChanged()>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Address freshAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.Address freshAddress(org.bitcoinj.wallet.KeyChain$KeyPurpose)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: void saveNow()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>":["<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>","<org.spongycastle.asn1.DefiniteLengthInputStream: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>","<org.spongycastle.util.io.Streams: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.io.EOFException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>":["<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>"],"<org.bitcoinj.core.Coin: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>"],"<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: java.lang.Object clone()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Payment)>":["<org.bitcoin.protocols.payments.Protos$Payment: java.util.List access$5600(org.bitcoin.protocols.payments.Protos$Payment)>","<org.bitcoin.protocols.payments.Protos$Payment: boolean access$5900()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: void ensureTransactionsIsMutable()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.ByteString getMerchantData()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMerchantData(com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$Payment: java.lang.Object access$5700(org.bitcoin.protocols.payments.Protos$Payment)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment: boolean hasMemo()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstance()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.RepeatedFieldBuilder getRefundToFieldBuilder()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<org.bitcoin.protocols.payments.Protos$Payment: java.util.List access$5500(org.bitcoin.protocols.payments.Protos$Payment)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$Payment: boolean hasMerchantData()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: void ensureRefundToIsMutable()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<org.bitcoinj.wallet.Protos$TransactionInput: boolean access$6700()>":["<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: org.bitcoinj.wallet.Protos$TransactionConfidence$Source[] values()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source$1: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <init>(java.lang.String,int,int,int)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension build()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,android.bluetooth.BluetoothAdapter,java.lang.String)>":["<de.schildbach.wallet.offline.DirectPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$Script$Builder: void maybeForceBuilderInitialization()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.crypto.DeterministicKey: boolean isPubKeyOnly()>","<org.bitcoinj.crypto.DeterministicHierarchy: void <init>(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.wallet.DeterministicKeyChain: int calcDefaultLookaheadThreshold()>","<org.bitcoinj.wallet.DeterministicKeyChain: com.google.common.collect.ImmutableList getAccountPath()>","<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.wallet.DeterministicKeyChain: void addToBasicChain(org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<org.bitcoinj.wallet.DeterministicKeyChain: void initializeHierarchyUnencrypted(org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.wallet.BasicKeyChain: void <init>()>"],"<com.google.protobuf.Descriptors$OneofDescriptor: void <init>(com.google.protobuf.DescriptorProtos$OneofDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$OneofDescriptor: void <init>(com.google.protobuf.DescriptorProtos$OneofDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>"],"<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>"],"<ch.qos.logback.core.pattern.parser.FormattingNode: void <init>(int,java.lang.Object)>":["<ch.qos.logback.core.pattern.parser.Node: void <init>(int,java.lang.Object)>"],"<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>":["<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>","<java.util.LinkedHashSet: void <init>(java.util.Collection)>","<okhttp3.CertificatePinner: void <clinit>()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>":["<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <clinit>()>","<android.content.ContextWrapper: android.content.Context getApplicationContext()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <init>(android.content.Context)>"],"<org.spongycastle.crypto.engines.AESFastEngine: int inv_mcol(int)>":["<org.spongycastle.crypto.engines.AESFastEngine: int FFmulX(int)>","<org.spongycastle.crypto.engines.AESFastEngine: int shift(int,int)>","<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.FieldSet access$400(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addLengthDelimited(com.google.protobuf.ByteString)>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$802(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$800(com.google.protobuf.UnknownFieldSet$Field)>"],"<org.bitcoin.protocols.payments.Protos$Payment$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$Payment$1: org.bitcoin.protocols.payments.Protos$Payment parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: org.slf4j.Logger access$000()>":["<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <clinit>()>"],"<ch.qos.logback.core.pattern.DynamicConverter: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>(ch.qos.logback.core.spi.ContextAware)>","<ch.qos.logback.core.pattern.FormattingConverter: void <init>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(org.bitcoinj.wallet.Protos$ExchangeRate)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.collect.Iterators$ConcatenatedIterator: java.lang.Object next()>":["<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<java.util.NoSuchElementException: void <init>()>","<com.google.common.collect.Iterators$ConcatenatedIterator: boolean hasNext()>"],"<org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>":["<org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>"],"<com.google.protobuf.TextFormat: java.lang.String printToString(com.google.protobuf.MessageOrBuilder)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<com.google.protobuf.TextFormat: void print(com.google.protobuf.MessageOrBuilder,java.lang.Appendable)>"],"<com.google.common.base.Platform: void <clinit>()>":["<com.google.common.base.Platform: com.google.common.base.PatternCompiler loadPatternCompiler()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>","<com.google.common.base.Platform: void <clinit>()>"],"<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void start()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>"],"<ch.qos.logback.core.rolling.RollingFileAppender: void <init>()>":["<ch.qos.logback.core.FileAppender: void <init>()>"],"<okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>":["<java.lang.String: char charAt(int)>"],"<org.slf4j.helpers.MarkerIgnoringBase: void <init>()>":["<org.slf4j.helpers.NamedLoggerBase: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.Message)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onFailure(java.lang.Exception)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<java.lang.Throwable: java.lang.String toString()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<org.spongycastle.asn1.x500.style.BCStyle: void <init>()>":["<org.spongycastle.asn1.x500.style.BCStyle: void <clinit>()>","<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: void <init>()>","<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: java.util.Hashtable copyHashTable(java.util.Hashtable)>"],"<ch.qos.logback.classic.pattern.ThrowableHandlingConverter: void <init>()>":["<ch.qos.logback.classic.pattern.ClassicConverter: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$000()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore loadFallbackStore()>":["<java.lang.Object: java.lang.Class getClass()>","<org.bitcoinj.crypto.X509Utils: java.security.KeyStore loadKeyStore(java.lang.String,java.lang.String,java.io.InputStream)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance()>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: void <init>(org.bitcoinj.core.Context,org.bitcoinj.core.AbstractBlockChain,org.bitcoinj.net.ClientConnectionManager)>":["<org.bitcoinj.core.PeerGroup: void <init>(org.bitcoinj.core.Context,org.bitcoinj.core.AbstractBlockChain,org.bitcoinj.net.ClientConnectionManager,com.subgraph.orchid.TorClient)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onInvalidEncryptionKey()>":["<java.lang.RuntimeException: void <init>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$1: org.bitcoinj.wallet.Protos$ExchangeRate parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okhttp3.internal.platform.Platform: void <clinit>()>":["<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>","<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>","<okhttp3.internal.platform.Platform: void <clinit>()>"],"<com.google.protobuf.TextFormat$InvalidEscapeSequenceException: void <init>(java.lang.String)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.service.BlockchainService$1: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<org.bitcoinj.core.listeners.AbstractPeerDataEventListener: void <init>()>","<java.util.concurrent.atomic.AtomicLong: void <init>(long)>","<de.schildbach.wallet.service.BlockchainService$1$1: void <init>(de.schildbach.wallet.service.BlockchainService$1)>"],"<dummyMainClass: de.schildbach.wallet.ui.preference.PreferenceActivity dummyMainMethod_de_schildbach_wallet_ui_preference_PreferenceActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.preference.PreferenceActivity: void <init>()>","<de.schildbach.wallet.ui.preference.PreferenceActivity: boolean isValidFragment(java.lang.String)>","<de.schildbach.wallet.ui.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>","<de.schildbach.wallet.ui.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"],"<org.bitcoinj.script.Script: org.bitcoinj.core.Address getToAddress(org.bitcoinj.core.NetworkParameters,boolean)>":["<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPublicOnly(byte[])>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,byte[])>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromP2SHScript(org.bitcoinj.core.NetworkParameters,org.bitcoinj.script.Script)>","<org.bitcoinj.script.Script: boolean isPayToScriptHash()>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<org.bitcoinj.script.Script: boolean isSentToRawPubKey()>","<org.bitcoinj.script.Script: byte[] getPubKey()>","<org.bitcoinj.core.ECKey: org.bitcoinj.core.Address toAddress(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.script.Script: boolean isSentToAddress()>","<org.bitcoinj.script.Script: byte[] getPubKeyHash()>"],"<de.schildbach.wallet.ui.WalletActivity: void handleIntent(android.content.Intent)>":["<java.lang.String: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.WalletActivity$14: void <init>(de.schildbach.wallet.ui.WalletActivity,java.lang.String,byte[],java.lang.String)>","<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void parse()>","<de.schildbach.wallet.util.Nfc: byte[] extractMimePayload(java.lang.String,android.nfc.NdefMessage)>"],"<org.bitcoinj.signers.MissingSigResolutionSigner: boolean signInputs(org.bitcoinj.signers.TransactionSigner$ProposedTransaction,org.bitcoinj.wallet.KeyBag)>":["<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <clinit>()>","<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<org.bitcoinj.crypto.TransactionSignature: byte[] encodeToBitcoin()>","<org.bitcoinj.core.ECKey$MissingPrivateKeyException: void <init>()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.signers.TransactionSigner$MissingSignatureException: void <init>()>","<org.bitcoinj.signers.MissingSigResolutionSigner: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.crypto.TransactionSignature: org.bitcoinj.crypto.TransactionSignature dummy()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput getInput(long)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Type$1: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: org.bitcoinj.wallet.Protos$TransactionConfidence$Type[] values()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <init>(java.lang.String,int,int,int)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder mergeFrom(com.google.protobuf.Message)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$16: void onSuccess(org.spongycastle.crypto.params.KeyParameter,boolean)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2200(de.schildbach.wallet.ui.send.SendCoinsFragment,org.spongycastle.crypto.params.KeyParameter)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<de.schildbach.wallet.util.WalletUtils: void autoBackupWallet(android.content.Context,org.bitcoinj.wallet.Wallet)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<org.bitcoinj.net.NioClientManager: void <init>()>":["<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>","<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>","<java.util.HashSet: void <init>()>","<com.google.common.util.concurrent.AbstractExecutionThreadService: void <init>()>","<java.util.Collections: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<java.util.concurrent.LinkedBlockingQueue: void <init>()>"],"<org.bitcoinj.wallet.DefaultCoinSelector: void <init>()>":["<java.lang.Object: void <init>()>"],"<okhttp3.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>":["<okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)>","<okio.Buffer: void <init>()>","<okio.Buffer: byte readByte()>","<okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)>","<okio.Buffer: okio.Buffer writeUtf8CodePoint(int)>","<okhttp3.internal.Util: void <clinit>()>","<java.lang.String: int indexOf(int)>","<okio.Buffer: boolean exhausted()>","<java.lang.Character: int charCount(int)>","<java.lang.String: int codePointAt(int)>","<okio.Buffer: okio.Buffer writeUtf8(java.lang.String)>","<okhttp3.HttpUrl: void <clinit>()>","<java.lang.Character: void <clinit>()>","<okio.Buffer: okio.Buffer writeByte(int)>","<okio.Buffer: void <clinit>()>"],"<ch.qos.logback.core.spi.AppenderAttachableImpl: void <init>()>":["<java.lang.Object: void <init>()>","<ch.qos.logback.core.util.COWArrayList: void <init>(java.lang.Object[])>"],"<org.bitcoinj.core.Peer: void timeoutOccurred()>":["<org.bitcoinj.core.Peer: void connectionClosed()>","<org.bitcoinj.core.PeerSocketHandler: void timeoutOccurred()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>"],"<org.bitcoinj.core.PeerGroup$10: void <init>(org.bitcoinj.core.PeerGroup,org.bitcoinj.core.PeerGroup$FilterRecalculateMode,com.google.common.util.concurrent.SettableFuture)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.AbstractMessageLite: void writeTo(java.io.OutputStream)>":["<org.bitcoinj.wallet.Protos$Wallet: int getSerializedSize()>","<org.bitcoinj.wallet.Protos$Wallet: void writeTo(com.google.protobuf.CodedOutputStream)>","<com.google.protobuf.CodedOutputStream: int computePreferredBufferSize(int)>","<com.google.protobuf.CodedOutputStream: void flush()>","<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>"],"<org.spongycastle.asn1.LimitedInputStream: void <init>(java.io.InputStream,int)>":["<java.io.InputStream: void <init>()>"],"<org.spongycastle.crypto.digests.RIPEMD160Digest: void processWord(byte[],int)>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: void processBlock()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$CType: com.google.protobuf.DescriptorProtos$FieldOptions$CType[] values()>","<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <init>(java.lang.String,int,int,int)>","<com.google.protobuf.DescriptorProtos$FieldOptions$CType$1: void <init>()>"],"<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder setMandatory(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: boolean access$4400()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.CharMatcher$SingleWidth: void <init>()>":["<java.lang.String: char[] toCharArray()>","<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void error(int,java.lang.Object[])>":["<de.schildbach.wallet.ui.InputParser: void dialog(android.content.Context,android.content.DialogInterface$OnClickListener,int,int,java.lang.Object[])>"],"<org.bitcoinj.core.PeerGroup$16: void onFailure(java.lang.Throwable)>":["<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.bitcoinj.core.PeerGroup: java.util.Set access$2800(org.bitcoinj.core.PeerGroup)>"],"<okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>":["<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>","<android.os.Build$VERSION: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()>":["<com.google.protobuf.WireFormat$JavaType: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1: com.google.protobuf.DescriptorProtos$FieldDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)>":["<androidx.fragment.app.FragmentTransition$3: void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)>","<androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>","<android.graphics.Rect: void <init>()>","<androidx.collection.ArrayMap: java.util.Collection values()>","<android.graphics.Rect: void <clinit>()>","<androidx.collection.SimpleArrayMap: boolean isEmpty()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)>","<androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)>","<androidx.collection.SimpleArrayMap: void clear()>","<androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)>","<androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)>","<androidx.collection.ArrayMap: java.util.Set keySet()>","<androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)>","<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)>","<androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)>"],"<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int getUpdateOutputSize(int)>":["<java.lang.Math: int max(int,int)>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setScript(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.collect.RegularImmutableList: void <clinit>()>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.RegularImmutableList: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent fromAddress(org.bitcoinj.core.Address,java.lang.String)>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: void <init>(org.bitcoinj.core.Address,java.lang.String)>"],"<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder getFieldBuilder(int)>","<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addVarint(long)>"],"<okio.AsyncTimeout: okio.Source source(okio.Source)>":["<okio.AsyncTimeout$2: void <init>(okio.AsyncTimeout,okio.Source)>"],"<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.lang.String)>":["<ch.qos.logback.core.joran.spi.ElementPath: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Transaction: boolean isTimeLocked()>":["<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<org.bitcoinj.core.Transaction: long getLockTime()>"],"<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>":["<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>","<java.util.LinkedList: java.util.Iterator iterator()>"],"<java.lang.String: byte[] getBytes()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.CodedInputStream: int readRawLittleEndian32()>":["<com.google.protobuf.CodedInputStream: void refillBuffer(int)>"],"<org.slf4j.impl.StaticLoggerBinder: void <init>()>":["<java.lang.Object: void <init>()>","<ch.qos.logback.classic.LoggerContext: void setName(java.lang.String)>","<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <clinit>()>","<ch.qos.logback.classic.LoggerContext: void <init>()>","<ch.qos.logback.classic.util.ContextSelectorStaticBinder: ch.qos.logback.classic.util.ContextSelectorStaticBinder getSingleton()>"],"<de.schildbach.wallet.data.PaymentIntent$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder create()>":["<org.bitcoinj.wallet.Protos$Key$Builder: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message build()>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment build()>"],"<org.bitcoinj.protocols.payments.PaymentSession: java.lang.String getPaymentUrl()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getPaymentUrl()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasPaymentUrl()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1)>"],"<org.spongycastle.asn1.ASN1Enumerated: void <clinit>()>":["<org.spongycastle.asn1.ASN1Enumerated: void <clinit>()>"],"<androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>":["<android.app.Notification$Builder: android.app.Notification build()>","<android.os.Bundle: void putAll(android.os.Bundle)>","<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>","<android.os.Bundle: void <init>(android.os.Bundle)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.os.Bundle: void <clinit>()>","<android.app.Notification$Builder: android.app.Notification$Builder setExtras(android.os.Bundle)>","<androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)>","<androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)>","<android.app.Notification$Builder: android.app.Notification getNotification()>","<android.os.Bundle: boolean containsKey(java.lang.String)>","<android.os.Build$VERSION: void <clinit>()>","<android.os.Bundle: void remove(java.lang.String)>","<androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)>","<android.os.Bundle: java.util.Set keySet()>"],"<de.schildbach.wallet.WalletApplication$2: void onWalletLoaded(org.bitcoinj.wallet.Wallet)>":["<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$2: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$7: void onBadPassphrase()>"],"<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenerCallQueue$Event terminatedEvent(com.google.common.util.concurrent.Service$State)>":["<com.google.common.util.concurrent.AbstractService$3: void <init>(com.google.common.util.concurrent.Service$State)>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$1: void <init>(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,android.content.res.AssetManager,org.bitcoinj.core.Address)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>":["<android.util.Log: int w(java.lang.String,java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>","<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>","<androidx.collection.SparseArrayCompat: void remove(int)>","<androidx.fragment.app.FragmentController: void noteStateNotSaved()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>","<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>"],"<org.bitcoinj.net.NioClientManager: com.google.common.util.concurrent.ListenableFuture openConnection(java.net.SocketAddress,org.bitcoinj.net.StreamConnection)>":["<org.bitcoinj.net.NioClientManager$PendingConnect: void <init>(org.bitcoinj.net.NioClientManager,java.nio.channels.SocketChannel,org.bitcoinj.net.StreamConnection,java.net.SocketAddress)>","<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)>","<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>","<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>","<java.lang.IllegalStateException: void <init>()>","<com.google.common.util.concurrent.AbstractExecutionThreadService: boolean isRunning()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<java.lang.String: int hashCode()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractFuture$Failure$1: void <init>(java.lang.String)>":["<java.lang.Throwable: void <init>(java.lang.String)>"],"<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void <init>()>":["<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()>","<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DERPrintableString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<com.google.common.base.Optional: com.google.common.base.Optional absent()>":["<com.google.common.base.Absent: com.google.common.base.Optional withType()>","<com.google.common.base.Absent: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void onFail(int,java.lang.Object[])>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$3: void <init>(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$3: void run()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: void <init>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$2: void <init>(de.schildbach.wallet.offline.DirectPaymentTask,int,java.lang.Object[])>":["<java.lang.Object: void <init>()>"],"<okhttp3.Headers$Builder: okhttp3.Headers build()>":["<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>"],"<org.bitcoinj.wallet.Wallet: void setTag(java.lang.String,com.google.protobuf.ByteString)>":["<org.bitcoinj.utils.BaseTaggableObject: void setTag(java.lang.String,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Wallet: void saveNow()>"],"<com.google.protobuf.DynamicMessage$Builder: boolean isInitialized()>":["<com.google.protobuf.DynamicMessage: boolean isInitialized(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet)>"],"<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.protobuf.Descriptors$FileDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$DescriptorPool,boolean)>":["<com.google.protobuf.Descriptors$Descriptor: void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getEnumTypeCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getMessageType(int)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getExtensionCount()>","<com.google.protobuf.Descriptors$ServiceDescriptor: void <init>(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getDependency(int)>","<com.google.protobuf.Descriptors$EnumDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$FileDescriptor: java.lang.String getPackage()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getMessageTypeCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getDependencyCount()>","<com.google.protobuf.Descriptors$FieldDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean,com.google.protobuf.Descriptors$1)>","<java.lang.Object: java.lang.Object clone()>","<java.util.ArrayList: int size()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getService(int)>","<com.google.protobuf.Descriptors$DescriptorValidationException: void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String,com.google.protobuf.Descriptors$1)>","<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getPublicDependency(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.String: void <init>(java.lang.String)>","<java.lang.String: int length()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getPublicDependencyCount()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int)>","<java.lang.String: void <clinit>()>","<java.util.HashMap: void <init>()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getServiceCount()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<com.google.protobuf.Descriptors$DescriptorPool: void addPackage(java.lang.String,com.google.protobuf.Descriptors$FileDescriptor)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<ch.qos.logback.core.joran.event.SaxEventRecorder: void <init>(ch.qos.logback.core.Context)>":["<ch.qos.logback.core.spi.ContextAwareImpl: void <init>(ch.qos.logback.core.Context,java.lang.Object)>","<java.util.ArrayList: void <init>()>","<ch.qos.logback.core.joran.spi.ElementPath: void <init>()>","<org.xml.sax.helpers.DefaultHandler: void <init>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2700()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis: java.lang.String toString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>"],"<java.lang.StringBuffer: void <init>(int)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList concat(java.util.List,java.util.List)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>","<org.bitcoinj.crypto.ChildNumber: void <init>(int,boolean)>"],"<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: void <init>(com.google.zxing.common.reedsolomon.GenericGF)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.rolling.helper.Compressor: java.lang.String computeFileNameStrWithoutCompSuffix(java.lang.String,ch.qos.logback.core.rolling.helper.CompressionMode)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.rolling.helper.Compressor$1: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$21900()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<java.lang.Double: java.lang.Double valueOf(double)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.lifecycle.LifecycleRegistry: void popParentState()>":["<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: int size()>"],"<org.bitcoinj.core.PeerSocketHandler: void timeoutOccurred()>":["<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.PeerSocketHandler: org.bitcoinj.core.PeerAddress getAddress()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.PeerSocketHandler: void close()>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder create()>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field$Builder: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: void <init>(com.google.protobuf.UnknownFieldSet$1)>"],"<org.bitcoinj.wallet.Wallet: long getEarliestKeyCreationTime()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<java.lang.Math: long min(long,long)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.HashSet: java.util.Iterator iterator()>","<org.bitcoinj.wallet.KeyChainGroup: long getEarliestKeyCreationTime()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.TextFormat$Printer: void printUnknownField(int,int,java.util.List,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<java.lang.String: java.lang.String valueOf(int)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.TextFormat: void access$800(int,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>","<com.google.protobuf.TextFormat$TextGenerator: void print(java.lang.CharSequence)>"],"<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromP2SHScript(org.bitcoinj.core.NetworkParameters,org.bitcoinj.script.Script)>":["<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromP2SHHash(org.bitcoinj.core.NetworkParameters,byte[])>","<org.bitcoinj.script.Script: boolean isPayToScriptHash()>","<org.bitcoinj.script.Script: byte[] getPubKeyHash()>"],"<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readIndef(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.BERSetParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.BERSequenceParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<java.lang.Integer: java.lang.String toHexString(int)>","<org.spongycastle.asn1.DERExternalParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<org.spongycastle.asn1.BEROctetStringParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>","<java.lang.Integer: void <clinit>()>","<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.bitcoinj.wallet.Wallet: void addWalletTransaction(org.bitcoinj.wallet.WalletTransaction$Pool,org.bitcoinj.core.Transaction)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Enum: int ordinal()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.TransactionConfidence: void addEventListener(java.util.concurrent.Executor,org.bitcoinj.core.TransactionConfidence$Listener)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.HashSet: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.Wallet$11: void <clinit>()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<org.bitcoinj.core.Transaction: java.util.List getOutputs()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>":["<ch.qos.logback.core.spi.ContextAwareBase: java.lang.Object getDeclaredOrigin()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<org.bitcoinj.net.discovery.HttpDiscovery: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.net.discovery.HttpDiscovery: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$EncryptedData getEncryptedData()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: boolean isTransactionRisky(org.bitcoinj.core.Transaction,java.util.List)>":["<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.wallet.RiskAnalysis$Result: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis$Analyzer: org.bitcoinj.wallet.RiskAnalysis create(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: org.bitcoinj.wallet.RiskAnalysis$Result analyze()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: de.schildbach.wallet.data.ExchangeRate getExchangeRate(android.database.Cursor)>":["<org.bitcoinj.utils.Fiat: org.bitcoinj.utils.Fiat valueOf(java.lang.String,long)>","<org.bitcoinj.utils.Fiat: void <clinit>()>","<org.bitcoinj.utils.ExchangeRate: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.utils.Fiat)>","<de.schildbach.wallet.data.ExchangeRate: void <init>(org.bitcoinj.utils.ExchangeRate,java.lang.String)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>":["<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<com.google.protobuf.LiteralByteString: java.lang.String toString(java.lang.String)>"],"<org.bitcoinj.uri.BitcoinURI: org.bitcoinj.core.Coin getAmount()>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>"],"<org.spongycastle.asn1.DERUniversalString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>":["<okhttp3.internal.Util$2: void <init>(java.lang.String,boolean)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: org.bitcoinj.wallet.Protos$TransactionOutput getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.KeyChainGroup: boolean isMarried()>":["<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>","<java.util.LinkedList: boolean isEmpty()>"],"<com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.Futures$CallbackListener: void <init>(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback)>"],"<ch.qos.logback.core.util.IncompatibleClassException: void <init>(java.lang.Class,java.lang.Class)>":["<java.lang.Exception: void <init>()>"],"<androidx.loader.content.ModernAsyncTask$WorkerRunnable: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.LifecycleService: int onStartCommand(android.content.Intent,int,int)>":["<android.app.Service: int onStartCommand(android.content.Intent,int,int)>"],"<org.bitcoinj.params.RegTestParams: org.bitcoinj.params.RegTestParams get()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.RegTestParams: void <clinit>()>","<org.bitcoinj.params.RegTestParams: void <init>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence build()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions build()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean isInitialized()>"],"<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>":["<ch.qos.logback.classic.Logger: void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.squareup.moshi.Moshi$DeferredAdapter: void <init>(java.lang.Object)>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$24: void onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: org.slf4j.Logger access$500()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.os.Handler access$800(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.util.LinkedList: boolean isEmpty()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder singleDismissButton(android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$19: void run()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$24$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$24)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: java.lang.Runnable access$700(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<java.util.LinkedList: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2100(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object get(java.lang.Object,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void tryDrainReferenceQueues()>","<com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>","<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int)>"],"<androidx.fragment.app.FragmentActivity: void onResume()>":["<android.os.Handler: boolean sendEmptyMessage(int)>","<android.app.Activity: void onResume()>","<androidx.fragment.app.FragmentController: boolean execPendingActions()>","<androidx.fragment.app.FragmentActivity$1: void handleMessage(android.os.Message)>"],"<ch.qos.logback.classic.Logger: boolean isInfoEnabled()>":["<ch.qos.logback.classic.Logger: boolean isInfoEnabled(org.slf4j.Marker)>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.DateTokenConverter getPrimaryDateTokenConverter()>":["<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)>":["<android.app.Activity: android.view.View findViewById(int)>"],"<org.bitcoinj.wallet.Wallet: void maybeUpgradeToHD(org.spongycastle.crypto.params.KeyParameter)>":["<org.bitcoinj.wallet.Wallet: void upgradeToDeterministic(org.spongycastle.crypto.params.KeyParameter)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<ch.qos.logback.classic.Logger: void error(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>","<org.bitcoinj.wallet.KeyChainGroup: boolean isDeterministicUpgradeRequired()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<ch.qos.logback.core.joran.event.SaxEventRecorder: void addError(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String,java.lang.Throwable)>"],"<com.google.common.base.Throwables: java.lang.reflect.Method getSizeMethod()>":["<com.google.common.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])>","<com.google.common.base.Throwables: void <clinit>()>","<com.google.common.base.Throwables: java.lang.Object getJLA()>","<java.lang.Throwable: void <init>()>"],"<com.google.common.util.concurrent.SettableFuture: void <init>()>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture: java.lang.String toString()>":["<com.google.common.util.concurrent.AbstractFuture: java.lang.String pendingToString()>","<com.google.common.util.concurrent.AbstractFuture: void addDoneString(java.lang.StringBuilder)>","<java.lang.Object: java.lang.Class getClass()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>","<java.lang.Object: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>"],"<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: org.bitcoinj.core.PeerGroup$FilterRecalculateMode[] values()>":["<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedInputStream: boolean readBool()>":["<com.google.protobuf.CodedInputStream: long readRawVarint64()>"],"<org.bitcoinj.core.TransactionInput: void parse()>":["<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer)>","<org.bitcoinj.core.Message: long readVarInt()>","<org.bitcoinj.core.Message: int getMessageSize()>","<org.bitcoinj.core.Message: long readUint32()>","<org.bitcoinj.core.Message: byte[] readBytes(int)>"],"<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type[] values()>":["<java.lang.Object: java.lang.Object clone()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$9: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>":["<androidx.lifecycle.ReportFragment: void <init>()>","<android.app.Activity: android.app.FragmentManager getFragmentManager()>"],"<com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>":["<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<java.io.File: boolean equals(java.lang.Object)>","<com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>"],"<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.util.COWArrayList: java.lang.Object[] asTypedArray()>":["<ch.qos.logback.core.util.COWArrayList: void refreshCopyIfNecessary()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getNetwork()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>":["<okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$18,org.bitcoin.protocols.payments.Protos$Payment)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setOptimizeFor(com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<org.bitcoin.protocols.payments.Protos$PaymentACK$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.io.InputStream)>","<org.bitcoin.protocols.payments.Protos$Payment$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okio.RealBufferedSink: okio.Timeout timeout()>":["<okio.Okio$1: okio.Timeout timeout()>","<okio.AsyncTimeout$1: okio.Timeout timeout()>"],"<androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)>":["<org.bitcoinj.core.TransactionOutput: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: boolean equals(java.lang.Object)>","<java.io.File: boolean equals(java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.PeerAddress: boolean equals(java.lang.Object)>","<de.schildbach.wallet.ui.AddressAndLabel: boolean equals(java.lang.Object)>","<java.lang.Object: boolean equals(java.lang.Object)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<com.google.common.hash.HashCode: boolean equals(java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<okhttp3.HttpUrl: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean equals(java.lang.Object)>","<com.google.protobuf.AbstractMessage: boolean equals(java.lang.Object)>","<java.util.AbstractList: boolean equals(java.lang.Object)>","<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>","<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>","<androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>"],"<androidx.arch.core.internal.SafeIterableMap: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.WeakHashMap: void <init>()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>":["<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>","<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>","<android.os.Build$VERSION: void <clinit>()>","<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>","<android.media.AudioAttributes$Builder: void <init>()>"],"<androidx.collection.ArraySet: void <init>()>":["<androidx.collection.ArraySet: void <init>(int)>"],"<androidx.fragment.app.FragmentActivity: void onPause()>":["<androidx.fragment.app.FragmentController: void dispatchPause()>","<android.os.Handler: void removeMessages(int)>","<androidx.fragment.app.FragmentActivity: void onResumeFragments()>","<android.app.Activity: void onPause()>","<android.os.Handler: boolean hasMessages(int)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder access$18000()>"],"<org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>":["<java.io.ByteArrayOutputStream: void write(byte[],int,int)>","<org.spongycastle.util.io.Streams: void <clinit>()>","<org.spongycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>"],"<com.google.protobuf.CodedInputStream: boolean skipField(int)>":["<com.google.protobuf.WireFormat: int getTagFieldNumber(int)>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<com.google.protobuf.CodedInputStream: void skipMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidWireType()>","<com.google.protobuf.WireFormat: int getTagWireType(int)>","<com.google.protobuf.WireFormat: int makeTag(int,int)>","<com.google.protobuf.CodedInputStream: void skipRawBytes(int)>","<com.google.protobuf.WireFormat: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.CodedInputStream: void skipRawVarint()>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.DescriptorProtos$OneofDescriptorProto: void initFields()>"],"<com.squareup.moshi.Moshi$DeferredAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<okio.Buffer: byte readByte()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okio.SegmentPool: void recycle(okio.Segment)>","<okio.Segment: okio.Segment pop()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: int onStartCommand(android.content.Intent,int,int)>":["<de.schildbach.wallet.offline.AcceptBluetoothService$6: void run()>","<android.os.Handler: void removeCallbacks(java.lang.Runnable)>","<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>","<androidx.lifecycle.LifecycleService: int onStartCommand(android.content.Intent,int,int)>"],"<androidx.recyclerview.widget.OrientationHelper$2: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<androidx.recyclerview.widget.OrientationHelper: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.fragment.app.FragmentManagerImpl$1: void <init>(androidx.fragment.app.FragmentManagerImpl)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedInputStream: int readEnum()>":["<com.google.protobuf.CodedInputStream: int readRawVarint32()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FileOptions)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.collection.SimpleArrayMap: void clear()>":["<java.util.ConcurrentModificationException: void <init>()>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>"],"<org.bitcoinj.core.Coin: boolean isLessThan(org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$300(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void handleSweep()>"],"<org.bitcoinj.utils.Threading$UserThread: void execute(java.lang.Runnable)>":["<java.lang.Integer: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.bitcoinj.utils.Threading$UserThread: void <clinit>()>","<java.util.concurrent.LinkedBlockingQueue: int size()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<com.google.common.util.concurrent.Uninterruptibles: void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(com.google.protobuf.Message)>"],"<okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>":["<java.lang.String: char charAt(int)>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setPacked(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<ch.qos.logback.core.joran.spi.ElementSelector: boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath)>":["<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toStableString()>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1: com.google.protobuf.DescriptorProtos$EnumDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>":["<java.lang.Object: int hashCode()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setFiatCurrencyCode(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2900()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String,java.io.InputStream)>":["<de.schildbach.wallet.ui.InputParser$StreamInputParser: void <init>(java.lang.String,java.io.InputStream)>"],"<androidx.loader.content.ModernAsyncTask: void <clinit>()>":["<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>","<androidx.loader.content.ModernAsyncTask$1: void <init>()>","<androidx.loader.content.ModernAsyncTask: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int)>"],"<ch.qos.logback.core.pattern.ConverterUtil: ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter)>":["<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>"],"<org.spongycastle.asn1.BEROctetString: byte[] toBytes(org.spongycastle.asn1.ASN1OctetString[])>":["<java.io.IOException: java.lang.String toString()>","<java.io.ByteArrayOutputStream: void write(byte[])>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.ByteArrayOutputStream: void <init>()>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.spongycastle.asn1.ASN1Object: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Block: int hashCode()>":["<org.bitcoinj.core.Sha256Hash: int hashCode()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>"],"<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>":["<okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)>","<java.lang.Character: int charCount(int)>","<java.lang.String: int codePointAt(int)>","<okio.Buffer: void <init>()>","<okhttp3.HttpUrl: void <clinit>()>","<okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)>","<java.lang.String: int indexOf(int)>","<okio.Buffer: java.lang.String readUtf8()>","<java.lang.Character: void <clinit>()>","<okhttp3.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)>","<java.lang.String: java.lang.String substring(int,int)>","<okio.Buffer: void <clinit>()>"],"<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.core.spi.ContextAwareBase: java.lang.Object getDeclaredOrigin()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<okio.Timeout: void throwIfReached()>":["<java.lang.Thread: boolean interrupted()>","<java.lang.System: long nanoTime()>","<java.lang.System: void <clinit>()>","<java.lang.Thread: void interrupt()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.io.InterruptedIOException: void <init>(java.lang.String)>"],"<dummyMainClass: de.schildbach.wallet.offline.AcceptBluetoothService dummyMainMethod_de_schildbach_wallet_offline_AcceptBluetoothService(android.content.Intent)>":["<de.schildbach.wallet.offline.AcceptBluetoothService: android.os.IBinder onBind(android.content.Intent)>","<de.schildbach.wallet.offline.AcceptBluetoothService: void onCreate()>","<androidx.lifecycle.LifecycleService: void onStart(android.content.Intent,int)>","<de.schildbach.wallet.offline.AcceptBluetoothService: int onStartCommand(android.content.Intent,int,int)>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <init>()>","<de.schildbach.wallet.offline.AcceptBluetoothService: void onDestroy()>"],"<org.bitcoinj.wallet.MarriedKeyChain: void setLookaheadSize(int)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void setLookaheadSize(int)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.core.Block: void addTransaction(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.Block: void addTransaction(org.bitcoinj.core.Transaction,boolean)>"],"<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer)>":["<org.bitcoinj.core.ChildMessage: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,org.bitcoinj.core.Message,org.bitcoinj.core.MessageSerializer,int)>"],"<ch.qos.logback.core.joran.action.PropertyAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment)>","<com.google.common.collect.MapMakerInternalMap$Segment: boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment)>"],"<okio.Buffer: okio.Segment writableSegment(int)>":["<okio.Segment: okio.Segment push(okio.Segment)>","<okio.SegmentPool: okio.Segment take()>","<java.lang.IllegalArgumentException: void <init>()>"],"<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<org.bitcoinj.core.BloomFilter$BloomUpdate: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<okhttp3.internal.platform.JdkWithJettyBootPlatform: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)>":["<okhttp3.internal.platform.Platform: void <init>()>"],"<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<de.schildbach.wallet.service.BlockchainService: de.schildbach.wallet.service.BlockchainState getBlockchainState()>":["<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<org.bitcoinj.core.AbstractBlockChain: org.bitcoinj.core.StoredBlock getChainHead()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.bitcoinj.core.StoredBlock: int getHeight()>","<de.schildbach.wallet.service.BlockchainState: void <init>(java.util.Date,int,boolean,java.util.Set)>","<org.bitcoinj.core.Block: java.util.Date getTime()>"],"<java.lang.Object: int hashCode()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output getDefaultInstance()>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.PrintWriter: void print(java.lang.String)>","<java.io.PrintWriter: void println(java.lang.String)>","<java.io.PrintWriter: void print(int)>","<androidx.collection.SparseArrayCompat: int keyAt(int)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.collection.SparseArrayCompat: int size()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner getDefaultInstanceForType()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<java.lang.String: int codePointAt(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: boolean access$1600()>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>":["<android.app.Activity: android.app.Application getApplication()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.lifecycle.ViewModelStore: void <init>()>","<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>"],"<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bind(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>":["<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindMessage(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindFiat(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindConfidence(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindTime(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindAddress(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindIsSelected(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindValue(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindFee(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder()>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder access$5000()>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder mergeExchangeRate(org.bitcoinj.wallet.Protos$ExchangeRate)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate buildPartial()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(org.bitcoinj.wallet.Protos$ExchangeRate)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder(org.bitcoinj.wallet.Protos$ExchangeRate)>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstance()>"],"<ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter: void <init>()>":["<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void <init>()>"],"<com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.DLSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.ASN1Sequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onSuccess(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.ui.send.SendCoinsActivity: void setResult(int,android.content.Intent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: org.slf4j.Logger access$500()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.WalletActivity: void setResult(int,android.content.Intent)>","<de.schildbach.wallet.ui.send.SweepWalletActivity: void setResult(int,android.content.Intent)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void broadcastTransaction(android.content.Context,org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.AddressBookActivity: void setResult(int,android.content.Intent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.integration.android.BitcoinIntegration: void paymentToResult(android.content.Intent,byte[])>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$Payment createPaymentMessage(java.util.List,org.bitcoinj.core.Coin,org.bitcoinj.core.Address,java.lang.String,byte[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void directPay(org.bitcoin.protocols.payments.Protos$Payment)>","<de.schildbach.wallet.data.PaymentIntent$Standard: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void addEventListener(org.bitcoinj.core.TransactionConfidence$Listener)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<android.content.Intent: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: org.bitcoinj.core.TransactionConfidence$Listener access$2400(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<android.content.Intent: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<com.google.protobuf.AbstractMessageLite: byte[] toByteArray()>","<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: void setResult(int,android.content.Intent)>","<de.schildbach.wallet.ui.scan.ScanActivity: void setResult(int,android.content.Intent)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<de.schildbach.wallet.integration.android.BitcoinIntegration: void transactionHashToResult(android.content.Intent,java.lang.String)>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: void setResult(int,android.content.Intent)>","<android.app.Activity: android.content.ComponentName getCallingActivity()>","<org.bitcoinj.core.Message: void <clinit>()>","<de.schildbach.wallet.ui.ExchangeRatesActivity: void setResult(int,android.content.Intent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.widget.CheckBox access$2500(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.RequestCoinsActivity: void setResult(int,android.content.Intent)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void handleDirectTransaction(org.bitcoinj.core.Transaction)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentRequest)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setSerializedPaymentDetails(com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setSignature(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getPkiData()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasPkiType()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasSerializedPaymentDetails()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: int getPaymentDetailsVersion()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getSignature()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasPaymentDetailsVersion()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.Object access$3400(org.bitcoin.protocols.payments.Protos$PaymentRequest)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setPkiData(com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasPkiData()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getSerializedPaymentDetails()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasSignature()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setPaymentDetailsVersion(int)>"],"<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<okio.Okio$4: void <init>(java.net.Socket)>":["<okio.AsyncTimeout: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$1: org.bitcoin.protocols.payments.Protos$PaymentACK parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: org.spongycastle.asn1.ASN1Encodable stringToValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>":["<org.spongycastle.asn1.x500.style.BCStyle: org.spongycastle.asn1.ASN1Encodable encodeStringValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int length()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>","<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String,int)>","<java.lang.String: java.lang.String substring(int)>"],"<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object[])>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<org.spongycastle.asn1.DERGenerator: void writeLength(java.io.OutputStream,int)>":["<java.io.ByteArrayOutputStream: void write(int)>"],"<org.bitcoinj.script.Script: java.util.List getPubKeys()>":["<org.bitcoinj.core.ECKey: org.bitcoinj.core.ECKey fromPublicOnly(byte[])>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.script.Script: void <clinit>()>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<org.bitcoinj.script.Script: boolean isSentToMultiSig()>","<org.bitcoinj.script.Script: int decodeFromOpN(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Wallet$4: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.store.SPVBlockStore: int getRingCursor(java.nio.ByteBuffer)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>":["<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>"],"<com.google.common.base.Stopwatch: long elapsedNanos()>":["<com.google.common.base.Ticker$1: long read()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$800()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1: com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void <init>()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstance()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<ch.qos.logback.classic.spi.StackTraceElementProxy: void <init>(java.lang.StackTraceElement)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: int getPublicDependencyCount()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<ch.qos.logback.classic.pattern.ClassicConverter: void <init>()>":["<ch.qos.logback.core.pattern.DynamicConverter: void <init>()>"],"<okhttp3.ResponseBody: void <init>()>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.helpers.ThrowableToStringArray: void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[])>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.helpers.ThrowableToStringArray: int findNumberOfCommonFrames(java.lang.StackTraceElement[],java.lang.StackTraceElement[])>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<ch.qos.logback.core.helpers.ThrowableToStringArray: void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[])>","<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>"],"<org.bitcoinj.core.Peer: void access$000(org.bitcoinj.core.Peer)>":["<org.bitcoinj.core.Peer: void versionHandshakeComplete()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>":["<android.content.Intent: void <init>(java.lang.String)>","<de.schildbach.wallet.ui.RequestCoinsFragment: boolean access$900(de.schildbach.wallet.ui.RequestCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void access$1000(de.schildbach.wallet.ui.RequestCoinsFragment)>","<android.content.Intent: void <clinit>()>"],"<com.squareup.okhttp.internal.Internal: void <clinit>()>":["<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>","<com.squareup.okhttp.internal.Internal: void <clinit>()>"],"<androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()>":["<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<com.squareup.moshi.Moshi: java.lang.Object cacheKey(java.lang.reflect.Type,java.util.Set)>":["<java.util.Arrays: java.util.List asList(java.lang.Object[])>"],"<com.google.common.collect.ReverseNaturalOrdering: void <init>()>":["<com.google.common.collect.Ordering: void <init>()>"],"<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)>":["<okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)>","<okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>","<okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>","<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>","<okhttp3.internal.platform.Platform: void <clinit>()>"],"<ch.qos.logback.core.joran.action.DefinePropertyAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>":["<org.bitcoin.protocols.payments.Protos$Output$1: void <init>()>","<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: void <init>(boolean)>","<org.bitcoin.protocols.payments.Protos$Output: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.Splitter: com.google.common.base.Splitter on(com.google.common.base.CharMatcher)>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: int getCertificateCount()>":["<java.util.ArrayList: int size()>"],"<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void <init>(int)>":["<com.google.common.collect.ImmutableCollection$Builder: void <init>()>","<com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>"],"<org.bitcoinj.core.TransactionConfidence$Source: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>":["<androidx.fragment.app.Fragment$3: androidx.lifecycle.Lifecycle getLifecycle()>","<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>","<de.schildbach.wallet.ui.RequestCoinsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<de.schildbach.wallet.ui.ExchangeRatesFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<androidx.fragment.app.Fragment$3: void <init>(androidx.fragment.app.Fragment)>"],"<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>":["<org.bitcoinj.script.Script: void <clinit>()>","<org.bitcoinj.script.Script: void <init>(byte[])>"],"<org.bitcoinj.core.VerificationException$EmptyInputsOrOutputs: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: void initFields()>","<org.bitcoinj.wallet.Protos$TransactionSigner$1: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.DeterministicKeyChain getActiveKeyChain()>":["<org.bitcoinj.wallet.DeterministicUpgradeRequiredException: void <init>()>","<java.util.LinkedList: int size()>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.util.LinkedList: boolean isEmpty()>","<java.util.LinkedList: java.lang.Object get(int)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.bitcoinj.wallet.BasicKeyChain: int numKeys()>","<org.bitcoinj.wallet.KeyChainGroup: void createAndActivateNewHDChain()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void <init>()>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>"],"<org.bitcoinj.core.CheckpointManager: org.bitcoinj.core.StoredBlock getCheckpointBefore(long)>":["<org.bitcoinj.core.Block: org.bitcoinj.core.Block cloneAsHeader()>","<java.util.TreeMap: java.util.Map$Entry floorEntry(java.lang.Object)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.core.StoredBlock: void <init>(org.bitcoinj.core.Block,java.math.BigInteger,int)>","<org.bitcoinj.params.RegTestParams: org.bitcoinj.core.Block getGenesisBlock()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block getGenesisBlock()>","<org.bitcoinj.core.Block: long getTimeSeconds()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.Block: java.math.BigInteger getWork()>","<org.bitcoinj.core.StoredBlock: void <clinit>()>"],"<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECPoint)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates getDefaultInstance()>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.Fragment: void <clinit>()>":["<java.lang.Object: void <init>()>","<androidx.collection.SimpleArrayMap: void <init>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet buildPartial()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder setData(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.spongycastle.asn1.BEROctetString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1OctetString: void <init>(byte[])>"],"<org.bitcoin.protocols.payments.Protos$Payment: void writeTo(com.google.protobuf.CodedOutputStream)>":["<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<java.util.ArrayList: int size()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.ByteString getMemoBytes()>","<org.bitcoin.protocols.payments.Protos$Payment: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>"],"<com.google.protobuf.CodedInputStream: java.lang.String readStringRequireUtf8()>":["<java.lang.String: void <clinit>()>","<com.google.protobuf.CodedInputStream: byte[] readRawBytesSlowPath(int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>","<com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<java.lang.String: void <init>(byte[],int,int,java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.collect.MapMakerInternalMap$Strength$1: void <init>(java.lang.String,int)>":["<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension build()>":["<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Extension: boolean isInitialized()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateStateFrom(de.schildbach.wallet.data.PaymentIntent)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$23: void run()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$23: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaLowerCase()>":["<com.google.common.base.CharMatcher$JavaLowerCase: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: java.lang.String getNetworkIdentifier()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<com.google.common.collect.ForwardingObject: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ASN1Sequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<java.util.Vector: void <init>()>","<java.util.Vector: void addElement(java.lang.Object)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelProvider$Factory)>":["<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>","<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>","<androidx.lifecycle.ViewModelProviders: android.app.Activity checkActivity(androidx.fragment.app.Fragment)>","<androidx.lifecycle.ViewModelProviders: android.app.Application checkApplication(android.app.Activity)>","<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)>"],"<okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()>":["<java.lang.System: long nanoTime()>","<java.lang.System: void <clinit>()>","<okio.AsyncTimeout: long remainingNanos(long)>","<okio.AsyncTimeout: void <clinit>()>","<java.lang.Object: void wait(long,int)>","<java.lang.Object: void wait(long)>","<okio.Timeout: void <clinit>()>"],"<org.bitcoinj.core.Transaction$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)>":["<androidx.lifecycle.Lifecycling: void <clinit>()>","<java.util.ArrayList: void <init>(java.util.Collection)>","<androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)>","<androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>","<androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List singletonList(java.lang.Object)>","<androidx.lifecycle.ClassesInfoCache: void <clinit>()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: void <init>()>","<androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: void <init>()>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstance()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: void maybeForceBuilderInitialization()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate getDefaultInstance()>"],"<androidx.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>":["<androidx.lifecycle.ProcessLifecycleOwner: void <clinit>()>","<android.content.ContentProvider: android.content.Context getContext()>","<androidx.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>","<androidx.lifecycle.LifecycleDispatcher: void <clinit>()>","<androidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setStart(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>":["<androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>"],"<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.lang.Object remove(int)>"],"<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.LazyStringArrayList: void <init>(com.google.protobuf.LazyStringList)>":["<java.util.ArrayList: void <init>(int)>","<com.google.protobuf.LazyStringArrayList: int size()>","<java.util.AbstractList: void <init>()>","<com.google.protobuf.UnmodifiableLazyStringList: int size()>","<com.google.protobuf.LazyStringArrayList: boolean addAll(java.util.Collection)>"],"<org.bitcoinj.core.Address: boolean isP2SHAddress()>":["<org.bitcoinj.core.Address: org.bitcoinj.core.NetworkParameters getParameters()>"],"<ch.qos.logback.core.util.Loader$1: java.lang.Boolean run()>":["<java.lang.RuntimePermission: void <init>(java.lang.String)>","<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<java.security.AccessController: void checkPermission(java.security.Permission)>"],"<com.google.protobuf.FieldSet: void cloneFieldEntry(java.util.Map,java.util.Map$Entry)>":["<com.google.protobuf.SmallSortedMap$1: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder create()>":["<org.bitcoinj.wallet.Protos$Extension$Builder: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: boolean onCreateOptionsMenu(android.view.Menu)>":["<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>","<android.app.Activity: android.view.MenuInflater getMenuInflater()>"],"<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedOutputStream: void <init>(java.io.OutputStream,byte[])>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder access$16100()>":["<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder create()>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.DynamicMessage$Builder: void ensureIsMutable()>","<com.google.protobuf.FieldSet: void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>","<com.google.protobuf.DynamicMessage$Builder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<androidx.lifecycle.ClassesInfoCache$MethodReference: void <init>(int,java.lang.reflect.Method)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$16900()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onPause()>":["<de.schildbach.wallet.ui.scan.ScanActivity$8: void run()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<android.os.Handler: boolean post(java.lang.Runnable)>"],"<com.google.common.collect.MapMakerInternalMap$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<okio.Okio: okio.Source source(java.net.Socket)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.net.Socket: java.io.InputStream getInputStream()>","<okio.Okio: okio.AsyncTimeout timeout(java.net.Socket)>","<okio.Okio: void <clinit>()>","<okio.AsyncTimeout: okio.Source source(okio.Source)>","<okio.Okio: okio.Source source(java.io.InputStream,okio.Timeout)>","<java.io.IOException: void <init>(java.lang.String)>"],"<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet)>":["<com.google.common.io.BaseEncoding$Alphabet: char encode(int)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>","<com.google.common.io.BaseEncoding$Alphabet: char[] access$000(com.google.common.io.BaseEncoding$Alphabet)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2200()>"],"<ch.qos.logback.classic.PatternLayout: void <clinit>()>":["<java.util.HashMap: void putAll(java.util.Map)>","<ch.qos.logback.core.pattern.parser.Parser: void <clinit>()>","<java.util.HashMap: void <init>()>","<ch.qos.logback.classic.PatternLayout: void <clinit>()>","<java.lang.Class: java.lang.String getName()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.core.Sha256Hash: byte[] hash(byte[],int,int)>":["<org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: char charAt(int)>","<java.lang.Math: int min(int,int)>","<okio.Buffer: okio.Segment writableSegment(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>","<okio.Buffer: okio.Buffer writeByte(int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message build()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails build()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void readTransaction(org.bitcoinj.wallet.Protos$Transaction,org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.core.Transaction: void setVersion(int)>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.Transaction: void setMemo(java.lang.String)>","<org.bitcoinj.utils.Fiat: void <clinit>()>","<org.bitcoinj.core.Transaction: void addBlockAppearance(org.bitcoinj.core.Sha256Hash,int)>","<org.bitcoinj.core.TransactionInput: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionInput)>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>","<org.bitcoinj.core.TransactionInput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,byte[],org.bitcoinj.core.TransactionOutPoint,org.bitcoinj.core.Coin)>","<org.bitcoinj.utils.Fiat: org.bitcoinj.utils.Fiat valueOf(java.lang.String,long)>","<org.bitcoinj.core.TransactionOutput: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,byte[])>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.TransactionOutput)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Transaction: void setLockTime(long)>","<org.bitcoinj.core.Transaction: void setPurpose(org.bitcoinj.core.Transaction$Purpose)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.core.TransactionOutPoint: void <init>(org.bitcoinj.core.NetworkParameters,long,org.bitcoinj.core.Sha256Hash)>","<java.lang.String: void <clinit>()>","<org.bitcoinj.core.TransactionInput: void setSequenceNumber(long)>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.core.Sha256Hash byteStringToHash(com.google.protobuf.ByteString)>","<java.util.Date: void <init>(long)>","<org.bitcoinj.utils.ExchangeRate: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.utils.Fiat)>","<java.util.Locale: void <clinit>()>","<org.bitcoinj.core.Transaction: void setUpdateTime(java.util.Date)>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void setExchangeRate(org.bitcoinj.utils.ExchangeRate)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.lifecycle.LifecycleRegistry: void sync()>","<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>","<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>","<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>","<java.lang.Enum: int compareTo(java.lang.Enum)>","<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>","<java.lang.ref.WeakReference: java.lang.Object get()>","<androidx.lifecycle.LifecycleRegistry: void popParentState()>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)>"],"<org.bitcoinj.wallet.Protos$Key$Type$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence buildPartial()>"],"<org.bitcoinj.crypto.MnemonicCode: java.util.List toMnemonic(byte[])>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.crypto.MnemonicCode: boolean[] bytesToBits(byte[])>","<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<java.lang.System: void <clinit>()>","<java.util.ArrayList: void <init>()>","<org.bitcoinj.crypto.MnemonicException$MnemonicLengthException: void <init>(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<java.util.ArrayList: java.lang.Object get(int)>","<org.bitcoinj.core.Sha256Hash: byte[] hash(byte[])>"],"<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>":["<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<ch.qos.logback.core.ContextBase: void putProperty(java.lang.String,java.lang.String)>":["<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.common.base.CharMatcher$JavaUpperCase: void <clinit>()>":["<com.google.common.base.CharMatcher$JavaUpperCase: void <init>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaUpperCase: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture addPeerFilterProvider(org.bitcoinj.core.PeerFilterProvider)>":["<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.VersionMessage getVersionMessage()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.PeerGroup: void updateVersionMessageRelayTxesBeforeFilter(org.bitcoinj.core.VersionMessage)>","<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <clinit>()>","<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture recalculateFastCatchupAndFilter(org.bitcoinj.core.PeerGroup$FilterRecalculateMode)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.core.ECKey$ECDSASignature: boolean isCanonical()>":["<org.bitcoinj.core.ECKey: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.ProtocolException: void <init>(java.lang.String)>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask: void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,java.util.concurrent.Callable)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.InterruptibleTask: void <init>()>"],"<com.google.protobuf.Descriptors$EnumDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$EnumDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>"],"<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1: void run()>":["<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask: java.lang.String access$000(de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask: void onResult(boolean)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.Integer: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>","<okhttp3.Request$Builder: void <init>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<okhttp3.RealCall: okhttp3.Response execute()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.offline.DirectPaymentTask: org.slf4j.Logger access$100()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK parseFrom(java.io.InputStream)>","<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<okhttp3.Request$Builder: okhttp3.Request build()>","<de.schildbach.wallet.offline.DirectPaymentTask: void onFail(int,java.lang.Object[])>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask: java.lang.String access$200(de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask)>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentProtocol$Ack parsePaymentAck(org.bitcoin.protocols.payments.Protos$PaymentACK)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<okhttp3.CacheControl$Builder: void <init>()>","<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>","<okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)>","<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.offline.DirectPaymentTask: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentProtocol$Ack: java.lang.String getMemo()>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>"],"<org.bitcoinj.core.PeerGroup: int getMostCommonChainHeight(java.util.List)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.util.ArrayList: void <init>(int)>","<java.lang.Integer: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Utils: int maxOfMostFreq(java.util.List)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.util.concurrent.CopyOnWriteArrayList: int size()>"],"<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void writeWallet(org.bitcoinj.wallet.Wallet,java.io.OutputStream)>":["<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Wallet walletToProto(org.bitcoinj.wallet.Wallet)>","<com.google.protobuf.AbstractMessageLite: void writeTo(java.io.OutputStream)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: void ensureRefundToIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: boolean computeParentCleaningFlag(ch.qos.logback.core.rolling.helper.FileNamePattern)>":["<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>","<ch.qos.logback.core.pattern.LiteralConverter: java.lang.String convert(java.lang.Object)>","<java.lang.String: int indexOf(int)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(java.lang.Object)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.DateTokenConverter getPrimaryDateTokenConverter()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$ExtendableBuilder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<com.google.common.collect.ImmutableList$Itr: void <init>(com.google.common.collect.ImmutableList,int)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.AbstractIndexedListIterator: void <init>(int,int)>"],"<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>":["<okio.AsyncTimeout$1: void write(okio.Buffer,long)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okio.Okio$1: void write(okio.Buffer,long)>","<okio.Buffer: long completeSegmentByteCount()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$5: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService$5: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaMultipleFiles(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.signers.TransactionSigner$ProposedTransaction: void <init>(org.bitcoinj.core.Transaction)>":["<java.lang.Object: void <init>()>","<java.util.HashMap: void <init>()>"],"<com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)>":["<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>"],"<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<com.google.common.io.BaseEncoding$Alphabet: int decode(char)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<com.google.common.io.BaseEncoding$DecodingException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder access$3700()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder create()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<okio.Okio: okio.Sink sink(java.io.OutputStream,okio.Timeout)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<okio.Okio$1: void <init>(okio.Timeout,java.io.OutputStream)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto build()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: boolean isInitialized()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet emptySet()>"],"<com.squareup.moshi.CollectionJsonAdapter$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <init>(java.lang.String,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>":["<org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>","<org.slf4j.event.EventRecodingLogger: boolean isDebugEnabled()>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.protobuf.UnknownFieldSet$Builder: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>"],"<java.lang.Character: void <clinit>()>":["<java.lang.Character: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<org.bitcoinj.wallet.BasicKeyChain: int numKeys()>":["<java.util.LinkedHashMap: int size()>"],"<com.google.common.io.BaseEncoding$Alphabet: boolean hasUpperCase()>":["<com.google.common.base.Ascii: boolean isUpperCase(char)>"],"<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>":["<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>","<com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>"],"<org.spongycastle.util.io.Streams: void <clinit>()>":["<org.spongycastle.util.io.Streams: void <clinit>()>"],"<java.lang.AssertionError: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Error: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentDetails)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasPaymentUrl()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder setTime(long)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasMemo()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder setExpires(long)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: void ensureOutputsIsMutable()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasNetwork()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder setMerchantData(com.google.protobuf.ByteString)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.Object access$2100(org.bitcoin.protocols.payments.Protos$PaymentDetails)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.ByteString getMerchantData()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasExpires()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.Object access$2200(org.bitcoin.protocols.payments.Protos$PaymentDetails)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.Object access$1700(org.bitcoin.protocols.payments.Protos$PaymentDetails)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasMerchantData()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.RepeatedFieldBuilder getOutputsFieldBuilder()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.util.List access$1800(org.bitcoin.protocols.payments.Protos$PaymentDetails)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: long getTime()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasTime()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean access$2500()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: long getExpires()>"],"<org.bitcoinj.utils.MonetaryFormat: void <init>()>":["<java.lang.Object: void <init>()>","<java.math.RoundingMode: void <clinit>()>","<java.lang.String: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>":["<com.google.common.util.concurrent.AbstractFuture: boolean isDone()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$2: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onInsufficientMoney(org.bitcoinj.core.Coin)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onInsufficientMoney(org.bitcoinj.core.Coin)>"],"<androidx.arch.core.internal.FastSafeIterableMap: void <init>()>":["<androidx.arch.core.internal.SafeIterableMap: void <init>()>","<java.util.HashMap: void <init>()>"],"<ch.qos.logback.core.pattern.parser.TokenStream: java.util.List tokenize()>":["<java.lang.StringBuffer: java.lang.String toString()>","<ch.qos.logback.core.pattern.parser.TokenStream$1: void <clinit>()>","<ch.qos.logback.core.pattern.parser.TokenStream: void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer)>","<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>","<ch.qos.logback.core.pattern.parser.TokenStream: void processOption(char,java.util.List,java.lang.StringBuffer)>","<ch.qos.logback.core.pattern.parser.TokenStream: void addValuedToken(int,java.lang.StringBuffer,java.util.List)>","<ch.qos.logback.core.pattern.parser.TokenStream: void handleLiteralState(char,java.util.List,java.lang.StringBuffer)>","<java.lang.StringBuffer: void <init>()>","<java.lang.String: char charAt(int)>","<ch.qos.logback.core.pattern.parser.TokenStream: void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer)>","<java.util.ArrayList: void <init>()>","<ch.qos.logback.core.pattern.parser.TokenStream: void handleKeywordState(char,java.util.List,java.lang.StringBuffer)>","<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String)>"],"<ch.qos.logback.core.joran.spi.Interpreter: void startElement(ch.qos.logback.core.joran.event.StartEvent)>":["<ch.qos.logback.core.joran.spi.Interpreter: void setDocumentLocator(org.xml.sax.Locator)>","<ch.qos.logback.core.joran.spi.Interpreter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.WalletExtension[],org.bitcoinj.wallet.Protos$Wallet,boolean)>":["<org.bitcoinj.wallet.Protos$Wallet: long getKeyRotationTime()>","<com.google.protobuf.ByteString: byte[] toByteArray()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasLastSeenBlockHeight()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasEncryptionParameters()>","<org.bitcoinj.wallet.Wallet: void setDescription(java.lang.String)>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasVersion()>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.String getNetworkIdentifier()>","<org.bitcoinj.wallet.Protos$Wallet: java.lang.String getDescription()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasKeyRotationTime()>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasDescription()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void loadExtensions(org.bitcoinj.wallet.Wallet,org.bitcoinj.wallet.WalletExtension[],org.bitcoinj.wallet.Protos$Wallet)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>","<org.bitcoinj.wallet.Protos$Wallet: long getLastSeenBlockTimeSecs()>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getLastSeenBlockHash()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void addTransactionSigner(org.bitcoinj.signers.TransactionSigner)>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List getWatchedScriptList()>","<java.util.Date: void <init>(long)>","<org.bitcoinj.wallet.Protos$Wallet: int getVersion()>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <init>(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$Wallet: boolean hasLastSeenBlockHash()>","<org.bitcoinj.wallet.Wallet: void setLastBlockSeenHash(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.wallet.WalletProtobufSerializer$1: org.bitcoinj.wallet.Wallet create(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.KeyChainGroup)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>","<org.bitcoinj.wallet.Wallet: void addWalletTransaction(org.bitcoinj.wallet.WalletTransaction)>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void setVersion(int)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.NetworkParameters getParams()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$ScryptParameters getEncryptionParameters()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.wallet.Wallet: void setLastBlockSeenTimeSecs(long)>","<org.bitcoinj.script.Script: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List getKeyList()>","<org.bitcoinj.wallet.Wallet: void setTag(java.lang.String,com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Wallet: int addWatchedScripts(java.util.List)>","<org.bitcoinj.script.Script: void <init>(byte[],long)>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.WalletTransaction connectTransactionOutputs(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.Protos$Transaction)>","<org.bitcoinj.wallet.Wallet: void setKeyRotationTime(java.util.Date)>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.KeyChainGroup fromProtobufEncrypted(org.bitcoinj.core.NetworkParameters,java.util.List,org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.wallet.KeyChainFactory)>","<org.bitcoinj.wallet.UnreadableWalletException$WrongNetwork: void <init>()>","<org.bitcoinj.wallet.Protos$Wallet: int getLastSeenBlockHeight()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List getTagsList()>","<org.bitcoinj.wallet.UnreadableWalletException$FutureVersion: void <init>()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.KeyChainGroup fromProtobufUnencrypted(org.bitcoinj.core.NetworkParameters,java.util.List,org.bitcoinj.wallet.KeyChainFactory)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void readTransaction(org.bitcoinj.wallet.Protos$Transaction,org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<org.bitcoinj.wallet.Wallet: void setLastBlockSeenHeight(int)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.core.Sha256Hash byteStringToHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List getTransactionList()>","<java.util.HashMap: void clear()>","<org.bitcoinj.wallet.Protos$Wallet: java.util.List getTransactionSignersList()>"],"<ch.qos.logback.core.pattern.parser.OptionTokenizer: void emitOptionToken(java.util.List,java.util.List)>":["<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.util.List)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasScriptBytes()>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasTransactionOutPointHash()>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasTransactionOutPointIndex()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>"],"<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.squareup.moshi.StandardJsonAdapters$8: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<org.bitcoinj.uri.BitcoinURI: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<java.util.LinkedHashMap: void <init>()>","<org.bitcoinj.uri.BitcoinURI: void putWithValidation(java.lang.String,java.lang.Object)>","<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.lang.String: boolean startsWith(java.lang.String)>","<java.lang.String: boolean isEmpty()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String)>","<java.lang.String: int length()>","<org.bitcoinj.uri.BitcoinURI: void parseParameters(org.bitcoinj.core.NetworkParameters,java.lang.String,java.lang.String[])>","<java.lang.String: java.lang.String substring(int)>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>","<java.net.URI: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: java.lang.String[] split(java.lang.String,int)>","<java.lang.String: void <clinit>()>","<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.uri.BitcoinURI: java.lang.String getPaymentRequestUrl()>","<java.net.URI: java.lang.String getScheme()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$12600()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder setPayment(org.bitcoin.protocols.payments.Protos$Payment)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder setMessage(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.service.BlockchainService$LocalBinder: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<android.os.Binder: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue)>":["<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>","<com.google.common.collect.MapMakerInternalMap: void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry)>"],"<com.google.protobuf.UnknownFieldSet$Field: void <init>(com.google.protobuf.UnknownFieldSet$1)>":["<com.google.protobuf.UnknownFieldSet$Field: void <init>()>"],"<com.google.protobuf.ExtensionRegistry: com.google.protobuf.ExtensionRegistry getEmptyRegistry()>":["<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<com.google.protobuf.ExtensionRegistry: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: int getLastBlockSeenHeight()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.crypto.TransactionSignature: boolean isEncodingCanonical(byte[])>":["<org.bitcoinj.core.Transaction$SigHash: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void onResume()>":["<de.schildbach.wallet.ui.scan.ScanActivity: void maybeOpenCamera()>","<androidx.fragment.app.FragmentActivity: void onResume()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: boolean access$900(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<de.schildbach.wallet.ui.RequestCoinsFragment: boolean maybeStartBluetoothListening()>"],"<com.lambdaworks.jni.JarLibraryLoader: boolean load(java.lang.String,boolean)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.jar.JarFile: void close()>","<java.lang.System: void <clinit>()>","<com.lambdaworks.jni.JarLibraryLoader: java.util.List libCandidates(com.lambdaworks.jni.Platform,java.lang.String)>","<java.lang.System: void load(java.lang.String)>","<com.lambdaworks.jni.Platform: com.lambdaworks.jni.Platform detect()>","<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>","<java.util.jar.JarFile: void <init>(java.lang.String,boolean)>","<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>","<com.lambdaworks.jni.JarLibraryLoader: java.io.File extract(java.lang.String,java.io.InputStream)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionOutput: boolean access$8000()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader)>":["<ch.qos.logback.classic.spi.StackTraceElementProxy: void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData)>","<ch.qos.logback.classic.spi.PackagingDataCalculator: ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader)>"],"<okhttp3.CertificatePinner$Builder: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>()>"],"<com.google.common.hash.HashCode: com.google.common.hash.HashCode fromBytesNoCopy(byte[])>":["<com.google.common.hash.HashCode$BytesHashCode: void <init>(byte[])>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto parseFrom(byte[])>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(byte[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.asn1.DEROctetString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: android.os.Bundle getAppWidgetOptions(android.appwidget.AppWidgetManager,int)>":["<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.wallet.CoinSelection: void <init>(org.bitcoinj.core.Coin,java.util.Collection)>":["<java.lang.Object: void <init>()>"],"<androidx.collection.ArrayMap: java.util.Collection values()>":["<androidx.collection.MapCollections: java.util.Collection getValues()>","<androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()>"],"<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>":["<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoinj.core.VersionMessage: void <init>(org.bitcoinj.core.NetworkParameters,int)>":["<org.bitcoinj.core.VarInt: int sizeOf(long)>","<java.lang.System: long currentTimeMillis()>","<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: int getPort()>","<org.bitcoinj.core.PeerAddress: void <init>(java.net.InetAddress,int,int)>","<java.lang.String: int length()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>","<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>":["<java.lang.String: char charAt(int)>","<java.lang.String: int length()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<com.google.common.io.BaseEncoding$StandardBaseEncoding: int maxEncodedSize(int)>":["<java.math.RoundingMode: void <clinit>()>","<com.google.common.math.IntMath: void <clinit>()>","<com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto build()>"],"<ch.qos.logback.classic.joran.JoranConfigurator: void <init>()>":["<ch.qos.logback.core.joran.JoranConfiguratorBase: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: boolean hasChainCode()>"],"<androidx.fragment.app.FragmentManagerImpl: void <init>()>":["<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<androidx.fragment.app.FragmentManager: void <init>()>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$1: void <init>(androidx.fragment.app.FragmentManagerImpl)>"],"<de.schildbach.wallet.ui.send.FeeCategory: void <clinit>()>":["<de.schildbach.wallet.ui.send.FeeCategory: void <init>(java.lang.String,int)>","<de.schildbach.wallet.ui.send.FeeCategory: void <clinit>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)>":["<okio.AsyncTimeout: void <clinit>()>","<okio.Timeout: void <clinit>()>"],"<okhttp3.OkHttpClient$Builder: void <init>()>":["<okhttp3.ConnectionPool: void <init>()>","<java.lang.Object: void <init>()>","<okhttp3.EventListener: void <clinit>()>","<okhttp3.OkHttpClient: void <clinit>()>","<okhttp3.Authenticator: void <clinit>()>","<okhttp3.Dispatcher: void <clinit>()>","<okhttp3.ConnectionPool: void <clinit>()>","<okhttp3.Dispatcher: void <init>()>","<okhttp3.CertificatePinner: void <clinit>()>","<okhttp3.internal.proxy.NullProxySelector: void <init>()>","<okhttp3.CookieJar: void <clinit>()>","<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>","<okhttp3.Dns: void <clinit>()>","<java.util.ArrayList: void <init>()>","<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>","<okhttp3.EventListener: okhttp3.EventListener$Factory factory(okhttp3.EventListener)>","<java.net.ProxySelector: java.net.ProxySelector getDefault()>"],"<de.schildbach.wallet.service.BlockchainState: void <init>(java.util.Date,int,boolean,java.util.Set)>":["<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>","<java.lang.Object: void <init>()>"],"<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.spi.LogbackLock: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>"],"<de.schildbach.wallet.Constants: void <clinit>()>":["<okhttp3.logging.HttpLoggingInterceptor: void <clinit>()>","<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base16()>","<org.bitcoinj.params.TestNet3Params: void <clinit>()>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding lowerCase()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat optionalDecimals(int[])>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.OkHttpClient$Builder: void <init>()>","<java.lang.Character: void <clinit>()>","<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>","<okhttp3.logging.HttpLoggingInterceptor: void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger)>","<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.Character: java.lang.String toString(char)>","<org.bitcoinj.core.Context: void <init>(org.bitcoinj.core.NetworkParameters)>","<com.google.common.io.BaseEncoding: void <clinit>()>","<java.lang.String: boolean equals(java.lang.Object)>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)>","<java.lang.StringBuilder: void <init>()>","<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: void <init>()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<de.schildbach.wallet.Constants$1: void <init>()>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor setLevel(okhttp3.logging.HttpLoggingInterceptor$Level)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>","<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<org.bitcoinj.core.Context: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat noCode()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: org.bitcoinj.params.TestNet3Params get()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstanceForType()>":["<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstance(com.google.protobuf.Descriptors$Descriptor)>"],"<org.bitcoinj.core.PeerGroup: boolean access$800(org.bitcoinj.core.PeerGroup)>":["<org.bitcoinj.core.PeerGroup: boolean maybeCheckForLocalhostPeer()>"],"<de.schildbach.wallet.data.AppDatabase$1: void <init>(int,int)>":["<androidx.room.migration.Migration: void <init>(int,int)>"],"<org.bitcoinj.wallet.WalletFiles$1: void <init>(org.bitcoinj.wallet.WalletFiles,org.bitcoinj.wallet.Wallet)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5300()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilderForType()>"],"<org.bitcoinj.wallet.Wallet: boolean isNotSpendingTxnsInConfidenceType(org.bitcoinj.core.Transaction,org.bitcoinj.core.TransactionConfidence$ConfidenceType)>":["<org.bitcoinj.core.Transaction: java.util.List getInputs()>","<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.TransactionConfidence$ConfidenceType getConfidenceType()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Transaction getTransaction(org.bitcoinj.core.Sha256Hash)>","<java.lang.Enum: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>"],"<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: org.bitcoin.protocols.payments.Protos$X509Certificates$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$X509Certificates)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.spongycastle.asn1.DERGenerator: void writeDEREncoded(int,byte[])>":["<java.io.ByteArrayOutputStream: void <init>()>","<org.spongycastle.asn1.DERGenerator: void writeDEREncoded(java.io.OutputStream,int,byte[])>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>"],"<org.bitcoinj.wallet.Wallet$11: void <clinit>()>":["<org.bitcoinj.wallet.WalletTransaction$Pool: org.bitcoinj.wallet.WalletTransaction$Pool[] values()>","<java.lang.Enum: int ordinal()>","<org.bitcoinj.wallet.Wallet$11: void <clinit>()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$PeerAddress: boolean access$500()>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Block: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<org.bitcoinj.core.Sha256Hash: boolean equals(java.lang.Object)>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onInsufficientMoney(org.bitcoinj.core.Coin)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$18)>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(java.lang.CharSequence)>","<de.schildbach.wallet.Configuration: org.bitcoinj.utils.MonetaryFormat getFormat()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1000(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<androidx.fragment.app.Fragment: java.lang.String getString(int)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.Configuration access$1100(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<org.bitcoinj.utils.MonetaryFormat: java.lang.CharSequence format(org.bitcoinj.core.Monetary)>","<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$1200(de.schildbach.wallet.ui.send.SendCoinsFragment)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$Output createPayToAddressOutput(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>":["<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createOutputScript(org.bitcoinj.core.Address)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setAmount(long)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output$Builder newBuilder()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setScript(com.google.protobuf.ByteString)>","<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output build()>","<org.bitcoinj.script.Script: byte[] getProgram()>"],"<com.lambdaworks.jni.JarLibraryLoader: void <init>(java.security.CodeSource,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedOutputStream: void writeRawBytes(com.google.protobuf.ByteString,int,int)>":["<com.google.protobuf.CodedOutputStream: void refreshBuffer()>","<com.google.protobuf.ByteString: void writeTo(java.io.OutputStream,int,int)>","<com.google.protobuf.ByteString: void copyTo(byte[],int,int,int)>"],"<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void processOption(char,java.util.List,java.lang.StringBuffer)>":["<ch.qos.logback.core.pattern.parser.OptionTokenizer: void tokenize(char,java.util.List)>","<ch.qos.logback.core.pattern.parser.OptionTokenizer: void <init>(ch.qos.logback.core.pattern.parser.TokenStream)>"],"<java.lang.Integer: java.lang.String toHexString(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder(org.bitcoinj.wallet.Protos$ExchangeRate)>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(org.bitcoinj.wallet.Protos$ExchangeRate)>","<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Extension: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)>":["<androidx.collection.ArraySet: void <clinit>()>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: int size()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList$Itr: void <init>(com.google.common.collect.ImmutableList,int)>","<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>","<java.util.AbstractCollection: boolean isEmpty()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1200()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Script$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Script$1: org.bitcoinj.wallet.Protos$Script parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<java.util.Timer: void schedule(java.util.TimerTask,long)>":["<org.bitcoinj.net.AbstractTimeoutHandler$1: void run()>"],"<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>":["<com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.GeneratedMessage$1)>"],"<org.spongycastle.math.ec.FixedPointCombMultiplier: org.spongycastle.math.ec.ECPoint multiplyPositive(org.spongycastle.math.ec.ECPoint,java.math.BigInteger)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.spongycastle.math.ec.FixedPointPreCompInfo: org.spongycastle.math.ec.ECPoint[] getPreComp()>","<java.math.BigInteger: boolean testBit(int)>","<org.spongycastle.math.ec.FixedPointUtil: int getCombSize(org.spongycastle.math.ec.ECCurve)>","<org.spongycastle.math.ec.FixedPointPreCompInfo: int getWidth()>","<org.spongycastle.math.ec.FixedPointUtil: org.spongycastle.math.ec.FixedPointPreCompInfo precompute(org.spongycastle.math.ec.ECPoint,int)>","<java.math.BigInteger: int bitLength()>","<org.spongycastle.math.ec.FixedPointCombMultiplier: int getWidthForCombSize(int)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onFail(int,java.lang.Object[])>":["<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$2: void run()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$2: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask,int,java.lang.Object[])>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <clinit>()>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <init>()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: boolean access$8000()>":["<org.bitcoinj.wallet.Protos$TransactionOutput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate build()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: boolean isInitialized()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>"],"<androidx.lifecycle.LiveData: void <clinit>()>":["<androidx.lifecycle.LiveData: void <clinit>()>","<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1)>":["<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.PeerGroup: void updateVersionMessageRelayTxesBeforeFilter(org.bitcoinj.core.VersionMessage)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.BlockChain: boolean shouldVerifyTransactions()>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void maybeForceBuilderInitialization()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>":["<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder access$000()>"],"<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <init>(java.lang.String,int,int,int)>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: org.bitcoinj.wallet.Protos$Wallet$EncryptionType[] values()>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType$1: void <init>()>"],"<okhttp3.CacheControl: void <clinit>()>":["<java.util.concurrent.TimeUnit: void <clinit>()>","<okhttp3.CacheControl: void <clinit>()>","<okhttp3.CacheControl$Builder: void <init>()>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>","<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>"],"<org.spongycastle.crypto.engines.AESFastEngine: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.collection.ContainerHelpers: void <clinit>()>":["<androidx.collection.ContainerHelpers: void <clinit>()>"],"<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String[] convert(java.lang.Throwable)>":["<java.util.LinkedList: void <init>()>","<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>","<java.lang.String: void <clinit>()>","<ch.qos.logback.core.helpers.ThrowableToStringArray: void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[])>"],"<de.schildbach.wallet.ui.WalletActivity$10: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)>":["<java.lang.String: boolean equals(java.lang.Object)>"],"<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>":["<java.lang.Object: void <init>()>","<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>","<org.slf4j.impl.StaticLoggerBinder: void init()>","<org.slf4j.impl.StaticLoggerBinder: void <init>()>"],"<com.google.protobuf.Internal: boolean isValidUtf8(byte[])>":["<com.google.protobuf.Utf8: boolean isValidUtf8(byte[])>"],"<org.bitcoinj.core.TransactionBroadcast$2: void <init>(org.bitcoinj.core.TransactionBroadcast)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>":["<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <clinit>()>":["<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2: void <init>(java.lang.String,int)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.crypto.LinuxSecureRandom: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void <init>()>":["<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet emptySet()>"],"<okio.Okio$4: void timedOut()>":["<okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)>","<java.net.Socket: void close()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.logging.Level: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okio.Okio: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity: void <init>()>":["<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>","<androidx.core.app.ComponentActivity: void <init>()>","<androidx.fragment.app.FragmentActivity$1: void <init>(androidx.fragment.app.FragmentActivity)>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String getTime()>":["<org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int length()>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>","<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String calculateGMTOffset()>"],"<org.bitcoinj.wallet.UnreadableWalletException$FutureVersion: void <init>()>":["<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>"],"<dummyMainClass: de.schildbach.wallet.service.BlockchainService dummyMainMethod_de_schildbach_wallet_service_BlockchainService(android.content.Intent)>":["<de.schildbach.wallet.service.BlockchainService: android.os.IBinder onBind(android.content.Intent)>","<de.schildbach.wallet.service.BlockchainService: boolean onUnbind(android.content.Intent)>","<de.schildbach.wallet.service.BlockchainService: void onCreate()>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void <init>()>","<androidx.lifecycle.LifecycleService: void onStart(android.content.Intent,int)>","<de.schildbach.wallet.service.BlockchainService: void onDestroy()>","<de.schildbach.wallet.service.BlockchainService: int onStartCommand(android.content.Intent,int,int)>"],"<com.google.protobuf.TextFormat$Parser$Builder: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void setLastBlockSeenHeight(int)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.FieldSet: java.util.Map getAllFields()>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<com.google.protobuf.SmallSortedMap$EmptySet$1: boolean hasNext()>","<com.google.protobuf.SmallSortedMap: boolean isImmutable()>","<com.google.protobuf.SmallSortedMap$1: void makeImmutable()>","<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>","<com.google.protobuf.FieldSet: void cloneFieldEntry(java.util.Map,java.util.Map$Entry)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()>","<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>","<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap newFieldMap(int)>","<com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()>","<com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()>"],"<okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okio.Buffer: okio.Buffer writeUtf8(java.lang.String)>","<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>"],"<ch.qos.logback.core.pattern.util.RegularEscapeUtil: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$ServiceOptions)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat code(int,java.lang.String)>":["<java.lang.String: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>"],"<ch.qos.logback.core.status.StatusUtil: boolean hasXMLParsingErrors(long)>":["<ch.qos.logback.core.status.StatusUtil: boolean containsMatch(long,int,java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Payment$1: org.bitcoin.protocols.payments.Protos$Payment parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoin.protocols.payments.Protos$1)>"],"<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)>":["<androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)>","<java.util.HashMap: java.lang.Object remove(java.lang.Object)>"],"<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.MessageSerializer getDefaultSerializer()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.BitcoinSerializer getSerializer(boolean)>"],"<com.google.protobuf.SmallSortedMap: void <init>(int,com.google.protobuf.SmallSortedMap$1)>":["<com.google.protobuf.SmallSortedMap: void <init>(int)>"],"<de.schildbach.wallet.service.BlockchainService$7: void <init>(de.schildbach.wallet.service.BlockchainService)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>":["<org.bitcoinj.core.Coin: void <init>(long)>","<com.google.common.math.LongMath: long checkedMultiply(long,long)>","<com.google.common.math.LongMath: void <clinit>()>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.spongycastle.asn1.DERBMPString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>"],"<org.bitcoinj.wallet.Protos$Transaction: boolean access$12400()>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addGroup(com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$902(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$900(com.google.protobuf.UnknownFieldSet$Field)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.PeerAddress: void <init>(org.bitcoinj.core.NetworkParameters,java.net.InetSocketAddress)>":["<org.bitcoinj.core.PeerAddress: void <init>(org.bitcoinj.core.NetworkParameters,java.net.InetAddress,int)>"],"<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.TrustedListenableFutureTask create(java.lang.Runnable,java.lang.Object)>":["<java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object)>","<com.google.common.util.concurrent.TrustedListenableFutureTask: void <init>(java.util.concurrent.Callable)>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaIsoControl()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaIsoControl: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>":["<androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>","<android.view.animation.AnimationSet: java.util.List getAnimations()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.base.CharMatcher$Whitespace: boolean matches(char)>":["<com.google.common.base.CharMatcher$Whitespace: void <clinit>()>","<com.google.common.base.CharMatcher: void <clinit>()>","<java.lang.String: char charAt(int)>"],"<ch.qos.logback.core.android.SystemPropertiesProxy: ch.qos.logback.core.android.SystemPropertiesProxy getInstance()>":["<ch.qos.logback.core.android.SystemPropertiesProxy: void <clinit>()>"],"<org.spongycastle.crypto.params.AsymmetricKeyParameter: void <init>(boolean)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void setMainURL(java.net.URL)>":["<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void addAsFileToWatch(java.net.URL)>"],"<com.google.common.util.concurrent.AbstractFuture: void releaseWaiters()>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void unpark()>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void <clinit>()>"],"<okhttp3.internal.Internal: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.util.Toast$3: void run()>":["<de.schildbach.wallet.util.Toast: void longToast(int,java.lang.Object[])>"],"<java.lang.Class: boolean isPrimitive()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Transaction: void verify()>":["<org.bitcoinj.core.VerificationException$LargerThanMaxBlockSize: void <init>()>","<org.bitcoinj.core.VerificationException$CoinbaseScriptSizeOutOfRange: void <init>()>","<org.bitcoinj.core.Message: int getMessageSize()>","<org.bitcoinj.core.VerificationException$ExcessiveValue: void <init>()>","<java.util.HashSet: boolean contains(java.lang.Object)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Transaction: boolean isCoinBase()>","<java.lang.IllegalArgumentException: void <init>()>","<org.bitcoinj.core.Coin: int signum()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>","<org.bitcoinj.core.Coin: int compareTo(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.VerificationException$UnexpectedCoinbaseInput: void <init>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.VerificationException$DuplicatedOutPoint: void <init>()>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.HashSet: void <init>()>","<org.bitcoinj.core.VerificationException$NegativeValueOutput: void <init>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: boolean hasMaxMoney()>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<org.bitcoinj.core.VerificationException$EmptyInputsOrOutputs: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void drainValueReferenceQueue(java.lang.ref.ReferenceQueue)>":["<com.google.common.collect.MapMakerInternalMap: void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference)>","<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>"],"<com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<java.lang.ArithmeticException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: void ensureBlockHashIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>":["<okhttp3.RequestBody: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,android.content.Context)>":["<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>","<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$3: void <init>(de.schildbach.wallet.ui.scan.ScanActivity,int,int)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>":["<com.google.protobuf.FieldSet: void mergeFrom(com.google.protobuf.FieldSet)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void ensureExtensionsIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: com.google.protobuf.FieldSet access$500(com.google.protobuf.GeneratedMessage$ExtendableMessage)>"],"<org.bitcoin.protocols.payments.Protos$Output: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.core.ECKey: byte[] getPubKeyHash()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.crypto.LazyECPoint: byte[] getEncoded()>","<org.bitcoinj.core.Utils: byte[] sha256hash160(byte[])>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1200()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base64()>":["<com.google.common.io.BaseEncoding: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void initFields()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>":["<androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>","<android.os.Build$VERSION: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: int getOneofDeclCount()>":["<java.util.ArrayList: int size()>"],"<org.spongycastle.asn1.DERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>","<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.RepeatedFieldBuilder getRefundToFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoinj.core.TransactionOutput: boolean isMine(org.bitcoinj.core.TransactionBag)>":["<org.bitcoinj.wallet.Wallet: boolean isPubKeyMine(byte[])>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.script.Script: byte[] getPubKey()>","<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.script.Script: byte[] getPubKeyHash()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.wallet.Wallet: boolean isPubKeyHashMine(byte[])>","<org.bitcoinj.script.Script: boolean isPayToScriptHash()>","<org.bitcoinj.wallet.Wallet: boolean isPayToScriptHashMine(byte[])>","<org.bitcoinj.script.Script: boolean isSentToRawPubKey()>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>","<java.lang.Throwable: java.lang.String toString()>","<org.bitcoinj.core.TransactionOutput: void <clinit>()>"],"<androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()>":["<androidx.collection.ArrayMap$1: void <init>(androidx.collection.ArrayMap)>"],"<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>"],"<org.bitcoinj.wallet.BasicKeyChain: void <init>()>":["<org.bitcoinj.wallet.BasicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter)>"],"<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void start()>":["<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void withErrors()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.File: long lastModified()>","<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String getPattern()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void setDateInCurrentPeriod(java.util.Date)>","<ch.qos.logback.core.rolling.helper.RollingCalendar: void printPeriodicity(ch.qos.logback.core.spi.ContextAwareBase)>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: long getCurrentTime()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: boolean isCollisionFree()>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: void <init>(java.lang.String,java.util.TimeZone,java.util.Locale)>","<ch.qos.logback.core.rolling.RollingPolicyBase: java.lang.String getParentsRawFileProperty()>","<java.io.File: boolean canRead()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>","<java.util.Date: void <init>(long)>","<java.io.File: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<java.util.Locale: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.DateTokenConverter getPrimaryDateTokenConverter()>","<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void computeNextCheck()>","<java.io.File: boolean exists()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.crypto.digests.LongDigest: void copyIn(org.spongycastle.crypto.digests.LongDigest)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<java.lang.Class: java.lang.String getCanonicalName()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.asn1.ASN1Integer: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>"],"<com.google.common.base.CharMatcher$None: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$None: void <init>()>","<com.google.common.base.CharMatcher$None: void <clinit>()>"],"<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>":["<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher)>","<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher whitespace()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>":["<androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>"],"<com.google.common.collect.MapMakerInternalMap: void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int)>"],"<org.bitcoinj.store.SPVBlockStore: void put(org.bitcoinj.core.StoredBlock)>":["<org.bitcoinj.store.SPVBlockStore: void setRingCursor(java.nio.ByteBuffer,int)>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.store.SPVBlockStore: int getRingCursor(java.nio.ByteBuffer)>","<org.bitcoinj.store.SPVBlockStore: int getFileSize()>","<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>","<org.bitcoinj.core.StoredBlock: void serializeCompact(java.nio.ByteBuffer)>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.bitcoinj.core.Sha256Hash: byte[] getBytes()>"],"<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>":["<java.io.PrintWriter: void <init>(java.io.Writer)>","<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>","<java.lang.String: void <clinit>()>","<androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<java.lang.IllegalArgumentException: java.lang.String getMessage()>","<androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<android.util.Log: int e(java.lang.String,java.lang.String)>","<java.lang.IllegalStateException: java.lang.String getMessage()>","<androidx.core.util.LogWriter: void <init>(java.lang.String)>"],"<org.bitcoinj.protocols.payments.PaymentSession: java.util.List getOutputs()>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.protocols.payments.PaymentProtocol$Output: void <init>(org.bitcoinj.core.Coin,byte[])>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.util.List getOutputsList()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: int getOutputsCount()>"],"<com.google.common.base.Splitter$SplittingIterator: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter: int access$400(com.google.common.base.Splitter)>","<com.google.common.base.Splitter: boolean access$300(com.google.common.base.Splitter)>","<com.google.common.base.Splitter: com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter)>","<com.google.common.base.AbstractIterator: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: org.slf4j.Logger access$100()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$FileDescriptor access$20902(com.google.protobuf.Descriptors$FileDescriptor)>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.crypto.TrustStoreLoader$DefaultTrustStoreLoader: java.security.KeyStore loadIcsKeyStore()>":["<java.security.KeyStoreException: void <init>(java.lang.Throwable)>","<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>"],"<ch.qos.logback.core.util.CachingDateFormatter: java.lang.String format(long)>":["<java.util.Date: void <init>(long)>","<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>"],"<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function)>":["<com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>","<com.google.common.util.concurrent.AbstractTransformFuture: com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)>"],"<androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>":["<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"],"<com.google.protobuf.MessageReflection: java.lang.String subMessagePrefix(java.lang.String,com.google.protobuf.Descriptors$FieldDescriptor,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.wallet.DecryptingKeyBag: void <init>(org.bitcoinj.wallet.KeyBag,org.spongycastle.crypto.params.KeyParameter)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void <init>(de.schildbach.wallet.WalletApplication)>":["<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>","<androidx.lifecycle.LiveData: void <init>()>","<java.lang.String: void <clinit>()>","<de.schildbach.wallet.data.ExchangeRatesProvider: android.net.Uri contentUri(java.lang.String,boolean)>","<de.schildbach.wallet.data.SelectedExchangeRateLiveData$1: void <init>(de.schildbach.wallet.data.SelectedExchangeRateLiveData,android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>"],"<com.google.common.util.concurrent.ListenerCallQueue: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.Collections: java.util.List synchronizedList(java.util.List)>","<java.util.ArrayList: void <init>()>","<java.util.Collections: void <clinit>()>"],"<com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable: void <init>(com.google.common.util.concurrent.InterruptibleTask$1)>":["<com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable: void <init>()>"],"<com.google.protobuf.CodedInputStream: void skipRawVarint()>":["<com.google.protobuf.CodedInputStream: void skipRawVarintSlowPath()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)>":["<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>","<java.util.concurrent.atomic.AtomicReferenceArray: int length()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>","<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>","<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>"],"<de.schildbach.wallet.ui.WalletActivity: void onCreate(android.os.Bundle)>":["<de.schildbach.wallet.ui.WalletActivity: android.content.Intent getIntent()>","<de.schildbach.wallet.util.OnFirstPreDraw: void <clinit>()>","<de.schildbach.wallet.util.OnFirstPreDraw: void listen(android.view.View,de.schildbach.wallet.util.OnFirstPreDraw$Callback)>","<de.schildbach.wallet.ui.WalletActivity: android.animation.AnimatorSet buildEnterAnimation(android.view.View)>","<de.schildbach.wallet.ui.WalletActivity$3: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.ui.WalletActivity$6: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>","<androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)>","<de.schildbach.wallet.Configuration: void touchLastUsed()>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<de.schildbach.wallet.ui.WalletActivity$5: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.ui.AlertDialogsFragment: void add(androidx.fragment.app.FragmentManager)>","<de.schildbach.wallet.ui.WalletActivity$8: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.ui.WalletActivity$2: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.ui.WalletActivity: void handleIntent(android.content.Intent)>","<android.app.Activity: android.view.View findViewById(int)>","<de.schildbach.wallet.ui.WalletActivity$4: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void add(androidx.fragment.app.FragmentManager)>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<de.schildbach.wallet.ui.WalletActivity$1: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>","<de.schildbach.wallet.ui.AbstractWalletActivity: de.schildbach.wallet.WalletApplication getWalletApplication()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void <clinit>()>","<de.schildbach.wallet.ui.Event: de.schildbach.wallet.ui.Event simple()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<android.os.Build$VERSION: void <clinit>()>","<de.schildbach.wallet.ui.AlertDialogsFragment: void <clinit>()>","<de.schildbach.wallet.util.CrashReporter: boolean hasSavedCrashTrace()>","<de.schildbach.wallet.ui.WalletActivity$7: void <init>(de.schildbach.wallet.ui.WalletActivity)>","<android.app.Activity: void setContentView(int)>"],"<com.google.protobuf.ByteString: void <clinit>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.LiteralByteString: void <init>(byte[])>"],"<com.google.common.util.concurrent.ImmediateFuture: void <init>()>":["<com.google.common.util.concurrent.FluentFuture: void <init>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo buildPartial()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: java.util.List access$23502(com.google.protobuf.DescriptorProtos$SourceCodeInfo,java.util.List)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<org.spongycastle.asn1.BERSetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<java.io.IOException: java.lang.String getMessage()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>","<org.spongycastle.asn1.BERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: java.util.List fromProtobuf(java.util.List,org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.wallet.KeyChainFactory)>":["<org.bitcoinj.crypto.ChildNumber: void <init>(int)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>","<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>","<org.bitcoinj.wallet.DeterministicKeyChain: void setSigsRequiredToSpend(int)>","<java.util.LinkedList: boolean add(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.LinkedList: boolean isEmpty()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>","<org.bitcoinj.wallet.DeterministicKeyChain: com.google.common.collect.ImmutableList getAccountPath()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.crypto.ChildNumber: int num()>","<org.bitcoinj.wallet.DeterministicKeyChain: boolean isFollowing()>","<org.bitcoinj.crypto.DeterministicHierarchy: void putKey(org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<java.util.LinkedList: int size()>","<org.bitcoinj.crypto.DeterministicKey: void setCreationTimeSeconds(long)>","<com.google.common.collect.Iterators$PeekingImpl: boolean hasNext()>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.BasicKeyChain: void importKey(org.bitcoinj.core.ECKey)>","<java.lang.Math: int max(int,int)>","<org.bitcoinj.wallet.DefaultKeyChainFactory: org.bitcoinj.wallet.DeterministicKeyChain makeWatchingKeyChain(org.bitcoinj.wallet.Protos$Key,org.bitcoinj.wallet.Protos$Key,org.bitcoinj.crypto.DeterministicKey,boolean,boolean)>","<org.bitcoinj.wallet.DeterministicKeyChain: void setLookaheadSize(int)>","<com.google.common.collect.Iterators$PeekingImpl: java.lang.Object peek()>","<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.LazyECPoint,java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.DefaultKeyChainFactory: org.bitcoinj.wallet.DeterministicKeyChain makeKeyChain(org.bitcoinj.wallet.Protos$Key,org.bitcoinj.wallet.Protos$Key,org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter,boolean)>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>","<java.math.BigInteger: void <init>(int,byte[])>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.EncryptedData: void <init>(byte[],byte[])>","<org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>","<org.bitcoinj.crypto.DeterministicHierarchy: org.bitcoinj.crypto.DeterministicKey get(java.util.List,boolean,boolean)>","<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.ChildNumber getChildNumber()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<com.google.common.collect.Iterators: com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator)>","<java.util.LinkedList: java.lang.Object removeLast()>","<com.google.common.collect.Iterators$PeekingImpl: java.lang.Object next()>","<org.bitcoinj.wallet.MarriedKeyChain: void setLookaheadSize(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(java.lang.String,byte[],java.lang.String,long)>","<ch.qos.logback.classic.Logger: boolean isDebugEnabled()>","<org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>","<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.crypto.LazyECPoint,org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.wallet.DeterministicKeyChain: void maybeLookAhead()>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<org.bitcoinj.crypto.DeterministicHierarchy: void <init>(org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.collect.RegularImmutableList: int size()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECCurve,byte[])>","<java.math.BigInteger: void <clinit>()>","<java.util.LinkedList: java.lang.Object get(int)>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.EncryptedData,long)>"],"<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void <init>(androidx.arch.core.internal.SafeIterableMap)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.pattern.EnsureExceptionHandling: boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter)>":["<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>"],"<com.google.protobuf.BoundedByteString: void <init>(byte[],int,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.LiteralByteString: void <init>(byte[])>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: void <init>(int)>"],"<com.google.protobuf.DynamicMessage$Builder: void ensureEnumValueDescriptor(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.DynamicMessage$Builder: void ensureSingularEnumValueDescriptor(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<androidx.collection.SparseArrayCompat: int indexOfKey(int)>":["<androidx.collection.SparseArrayCompat: void gc()>","<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setUpdatedAt(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.core.TransactionConfidence: boolean markBroadcastBy(org.bitcoinj.core.PeerAddress)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>","<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.TransactionConfidence$ConfidenceType getConfidenceType()>","<org.bitcoinj.core.Utils: java.util.Date now()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask$1: void <init>(de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask,org.bitcoin.protocols.payments.Protos$Payment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Block: void copyBitcoinHeaderTo(org.bitcoinj.core.Block)>":["<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getMerkleRoot()>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()>":["<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManagerImpl)>"],"<org.spongycastle.asn1.DEROctetStringParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>":["<org.spongycastle.asn1.DEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.IOException: java.lang.String getMessage()>","<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.bitcoinj.core.CheckpointManager: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<com.google.common.io.BaseEncoding: void <clinit>()>","<org.bitcoinj.core.CheckpointManager: void <clinit>()>","<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base64()>","<org.slf4j.LoggerFactory: void <clinit>()>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding omitPadding()>"],"<com.google.protobuf.TextFormat: java.lang.String unsignedToString(int)>":["<java.lang.Integer: java.lang.String toString(int)>","<java.lang.Long: java.lang.String toString(long)>","<java.lang.Integer: void <clinit>()>","<java.lang.Long: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$800()>"],"<org.bitcoinj.crypto.PBKDF2SHA512: byte[] derive(java.lang.String,java.lang.String,int,int)>":["<java.io.ByteArrayOutputStream: void write(byte[])>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.bitcoinj.crypto.PBKDF2SHA512: byte[] F(java.lang.String,java.lang.String,int,int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.io.ByteArrayOutputStream: void <init>()>","<java.io.ByteArrayOutputStream: byte[] toByteArray()>","<java.lang.System: void <clinit>()>","<java.lang.Double: boolean isNaN(double)>","<java.lang.Double: void <clinit>()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<java.lang.Math: double ceil(double)>","<java.lang.Math: double pow(double,double)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$21800()>"],"<com.google.protobuf.Descriptors$Descriptor: boolean isExtensionNumber(int)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List getExtensionRangeList()>"],"<com.squareup.moshi.internal.Util: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>":["<java.lang.Class: java.lang.Class getComponentType()>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>","<com.squareup.moshi.internal.Util: void <clinit>()>","<com.squareup.moshi.internal.Util: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>","<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>","<java.lang.Class: boolean isArray()>","<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>"],"<com.google.common.collect.FluentIterable$3$1: java.lang.Object get(int)>":["<com.google.common.collect.FluentIterable$3$1: java.util.Iterator get(int)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void requestPaymentRequest()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void setState(de.schildbach.wallet.ui.send.SendCoinsViewModel$State)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask: void requestPaymentRequest(java.lang.String)>","<android.net.Uri: void <clinit>()>","<android.net.Uri: android.net.Uri parse(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$24: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String)>","<de.schildbach.wallet.util.Bluetooth: boolean isBluetoothUrl(java.lang.String)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask: void requestPaymentRequest(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getBluetoothMac(java.lang.String)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,java.lang.String)>","<de.schildbach.wallet.WalletApplication: java.lang.String httpUserAgent()>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>","<de.schildbach.wallet.util.Bluetooth: java.lang.String decompressMac(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>":["<com.google.common.util.concurrent.AbstractFuture: boolean isCancelled()>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink$2: void <init>(de.schildbach.wallet.ui.CurrencyCalculatorLink)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.uri.BitcoinURI: org.bitcoinj.core.Address getAddress()>":["<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>"],"<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>":["<androidx.fragment.app.FragmentActivity: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void directPay(org.bitcoin.protocols.payments.Protos$Payment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$18$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment$18,org.bitcoin.protocols.payments.Protos$Payment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.WalletApplication access$2800(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,java.lang.String,java.lang.String)>","<de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask: void send(org.bitcoin.protocols.payments.Protos$Payment)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.bluetooth.BluetoothAdapter access$1500(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getBluetoothMac(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: de.schildbach.wallet.ui.send.SendCoinsViewModel access$300(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask: void send(org.bitcoin.protocols.payments.Protos$Payment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: android.os.Handler access$2700(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.WalletApplication: java.lang.String httpUserAgent()>","<de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask: void <init>(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,android.bluetooth.BluetoothAdapter,java.lang.String)>"],"<androidx.collection.SparseArrayCompat: int size()>":["<androidx.collection.SparseArrayCompat: void gc()>"],"<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1Encodable)>"],"<androidx.recyclerview.widget.AsyncListDiffer: void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig)>":["<java.lang.Object: void <init>()>","<java.util.Collections: void <clinit>()>","<androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getMainThreadExecutor()>","<androidx.recyclerview.widget.AsyncListDiffer: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder access$10600()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor: java.lang.Object coerceType(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void readConfidence(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Protos$TransactionConfidence,org.bitcoinj.core.TransactionConfidence)>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void setLastBroadcastedAt(java.util.Date)>","<org.bitcoinj.core.TransactionConfidence: void setSource(org.bitcoinj.core.TransactionConfidence$Source)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.math.BigInteger: java.math.BigInteger valueOf(long)>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>","<org.bitcoinj.core.TransactionConfidence: void setAppearedAtChainHeight(int)>","<org.bitcoinj.core.PeerAddress: void <init>(org.bitcoinj.core.NetworkParameters,java.net.InetAddress,int)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.PeerAddress: void setServices(java.math.BigInteger)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void setDepthInBlocks(int)>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<java.util.Date: void <init>(long)>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.TransactionConfidence: void setConfidenceType(org.bitcoinj.core.TransactionConfidence$ConfidenceType)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.TransactionConfidence$ConfidenceType getConfidenceType()>","<java.math.BigInteger: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.TransactionConfidence: boolean markBroadcastBy(org.bitcoinj.core.PeerAddress)>","<org.bitcoinj.core.TransactionConfidence: void setOverridingTransaction(org.bitcoinj.core.Transaction)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: java.lang.Object coerceType(java.lang.Object)>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message build()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void setState(de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void updateView()>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: void setProto(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto)>":["<com.google.protobuf.Descriptors$MethodDescriptor: void access$2700(com.google.protobuf.Descriptors$MethodDescriptor,com.google.protobuf.DescriptorProtos$MethodDescriptorProto)>"],"<de.schildbach.wallet.service.UpgradeWalletService: void startUpgrade(android.content.Context)>":["<androidx.core.content.ContextCompat: void <clinit>()>","<androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: void writeConfidence(org.bitcoinj.wallet.Protos$Transaction$Builder,org.bitcoinj.core.TransactionConfidence,org.bitcoinj.wallet.Protos$TransactionConfidence$Builder)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder addBroadcastBy(org.bitcoinj.wallet.Protos$PeerAddress)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setIpAddress(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.WalletProtobufSerializer: com.google.protobuf.ByteString hashToByteString(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setLastBroadcastedAt(long)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setSource(org.bitcoinj.wallet.Protos$TransactionConfidence$Source)>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setPort(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setDepth(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setOverridingTransaction(com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setAppearedAtHeight(int)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: org.bitcoinj.wallet.Protos$TransactionConfidence$Type valueOf(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setType(org.bitcoinj.wallet.Protos$TransactionConfidence$Type)>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder setServices(long)>","<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress build()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: org.bitcoinj.wallet.Protos$Transaction$Builder setConfidence(org.bitcoinj.wallet.Protos$TransactionConfidence$Builder)>"],"<androidx.collection.ArrayMap: void <init>()>":["<androidx.collection.SimpleArrayMap: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilderForType()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilder()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey,boolean)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.DeterministicKey)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean isInitialized()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasTime()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$Output getOutputs(int)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: int getOutputsCount()>"],"<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1200()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<com.google.common.base.Splitter$2$1: int separatorEnd(int)>":["<java.lang.String: int length()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$ServiceOptions)>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$ServiceOptions)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.utils.Fiat: void <clinit>()>":["<org.bitcoinj.utils.Fiat: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat postfixCode()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat noCode()>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat repeatOptionalDecimals(int,int)>","<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat minDecimals(int)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.common.collect.AbstractIndexedListIterator: void <init>(int)>":["<com.google.common.collect.AbstractIndexedListIterator: void <init>(int,int)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: org.bitcoinj.wallet.Protos$ExchangeRate$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder access$20100()>"],"<org.bitcoinj.core.Sha256Hash: void <init>(byte[])>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: void checkArgument(boolean)>"],"<com.google.protobuf.DynamicMessage$Builder: void <init>(com.google.protobuf.Descriptors$Descriptor)>":["<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet newFieldSet()>","<com.google.protobuf.AbstractMessage$Builder: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<org.bitcoinj.core.TxConfidenceTable$WeakConfidenceReference: void <init>(org.bitcoinj.core.TransactionConfidence,java.lang.ref.ReferenceQueue)>":["<org.bitcoinj.core.TransactionConfidence: org.bitcoinj.core.Sha256Hash getTransactionHash()>","<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>"],"<com.google.common.util.concurrent.CollectionFuture$ListFuture: void <init>(com.google.common.collect.ImmutableCollection,boolean)>":["<com.google.common.util.concurrent.CollectionFuture: void <init>()>","<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: void <init>(com.google.common.util.concurrent.CollectionFuture$ListFuture,com.google.common.collect.ImmutableCollection,boolean)>","<com.google.common.util.concurrent.AggregateFuture: void init(com.google.common.util.concurrent.AggregateFuture$RunningState)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setVersion(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<androidx.lifecycle.ReportFragment: void <init>()>":["<android.app.Fragment: void <init>()>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: java.lang.String getType(android.net.Uri)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: com.google.protobuf.ByteString hashToByteString(org.bitcoinj.core.Sha256Hash)>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: byte[] getBytes()>"],"<org.spongycastle.crypto.macs.HMac: int getByteLength(org.spongycastle.crypto.Digest)>":["<org.spongycastle.crypto.macs.HMac: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.spongycastle.crypto.digests.LongDigest: int getByteLength()>","<java.util.Hashtable: java.lang.Object get(java.lang.Object)>","<org.spongycastle.crypto.digests.SHA512Digest: java.lang.String getAlgorithmName()>"],"<com.google.protobuf.TextFormat: long parseInteger(java.lang.String,boolean,boolean)>":["<java.lang.NumberFormatException: void <init>(java.lang.String)>","<java.lang.String: boolean startsWith(java.lang.String,int)>","<java.lang.String: int length()>","<java.lang.String: void <init>(java.lang.String)>","<java.lang.Long: void <clinit>()>","<java.lang.String: java.lang.String substring(int)>","<java.math.BigInteger: long longValue()>","<java.math.BigInteger: java.math.BigInteger negate()>","<java.lang.String: void <clinit>()>","<java.math.BigInteger: void <init>(java.lang.String,int)>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.math.BigInteger: void <clinit>()>","<java.lang.Long: long parseLong(java.lang.String,int)>","<java.math.BigInteger: int bitLength()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<com.google.protobuf.AbstractParser: void <clinit>()>":["<com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite getEmptyRegistry()>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<com.google.protobuf.AbstractParser: void <clinit>()>"],"<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback)>":["<android.os.Handler: void <init>(android.os.Looper)>","<java.lang.Object: void <init>()>","<android.os.Looper: android.os.Looper myLooper()>"],"<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void error(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(com.google.protobuf.Message)>"],"<androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)>":["<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>","<androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void ensureLocationIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder newBuilderForType()>"],"<com.google.common.base.AbstractIterator: boolean hasNext()>":["<com.google.common.base.AbstractIterator: boolean tryToComputeNext()>","<com.google.common.base.AbstractIterator$1: void <clinit>()>","<java.lang.Enum: int ordinal()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<com.google.common.base.AbstractIterator$State: void <clinit>()>"],"<androidx.core.content.FileProvider: int modeToMode(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.bitcoinj.core.VerificationException$DuplicatedOutPoint: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.pattern.parser.Node: java.lang.Object getValue()>","<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context)>"],"<com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.CharSequence trimTrailingPadding(java.lang.CharSequence)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.lang.String: char charAt(int)>","<java.lang.String: java.lang.CharSequence subSequence(int,int)>","<java.lang.String: int length()>"],"<androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()>":["<java.util.ArrayList: boolean isEmpty()>","<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<android.os.Handler: void removeCallbacks(java.lang.Runnable)>","<java.util.ArrayList: int size()>","<androidx.fragment.app.FragmentManagerImpl$1: void run()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<okhttp3.logging.HttpLoggingInterceptor$Level: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>":["<java.lang.Math: int min(int,int)>","<java.util.ArrayList: int size()>","<androidx.collection.ArraySet: boolean add(java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>"],"<androidx.fragment.app.Fragment: void <init>()>":["<java.lang.Object: void <init>()>","<androidx.lifecycle.MutableLiveData: void <init>()>","<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>"],"<org.bitcoinj.core.Block: void <init>(org.bitcoinj.core.NetworkParameters,long)>":["<java.lang.System: long currentTimeMillis()>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void initStateFromBitcoinUri(android.net.Uri)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String)>","<de.schildbach.wallet.ui.InputParser$StringInputParser: void parse()>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat postfixCode()>":["<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>"],"<ch.qos.logback.core.rolling.RollingFileAppender: void setFile(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.FileAppender: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.rolling.RollingFileAppender: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>","<ch.qos.logback.core.FileAppender: void setFile(java.lang.String)>"],"<ch.qos.logback.classic.Logger: boolean isInfoEnabled(org.slf4j.Marker)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.classic.Logger: ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.core.spi.FilterReply: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void runCleanup()>":["<com.google.common.collect.MapMakerInternalMap$Segment: void runLockedCleanup()>"],"<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean)>":["<java.util.Vector: void <init>()>","<java.util.Vector: void addElement(java.lang.Object)>","<org.spongycastle.asn1.ASN1Set: void sort()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<org.bitcoinj.core.VerificationException$UnexpectedCoinbaseInput: void <init>()>":["<org.bitcoinj.core.VerificationException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.service.BootstrapReceiver: void <init>()>":["<android.content.BroadcastReceiver: void <init>()>"],"<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int,com.google.common.collect.Maps$1)>":["<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureEnumTypeIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<androidx.fragment.app.FragmentTransitionCompat21: void <init>()>":["<androidx.fragment.app.FragmentTransitionImpl: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<ch.qos.logback.classic.Logger: void debug(java.lang.String)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<ch.qos.logback.core.util.Duration: void <init>(long)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.TextFormat$Parser: void <init>(boolean,com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy,com.google.protobuf.TextFormat$1)>":["<com.google.protobuf.TextFormat$Parser: void <init>(boolean,com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy)>"],"<androidx.room.RoomDatabase$Builder: void <init>(android.content.Context,java.lang.Class,java.lang.String)>":["<java.lang.Object: void <init>()>","<androidx.room.RoomDatabase$JournalMode: void <clinit>()>","<androidx.room.RoomDatabase$MigrationContainer: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder setDeprecated(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.ui.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>":["<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>"],"<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>":["<okhttp3.HttpUrl$Builder: java.lang.String toString()>","<java.lang.Object: void <init>()>","<okhttp3.HttpUrl: void <clinit>()>","<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>","<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>","<okhttp3.HttpUrl$Builder: int effectivePort()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>"],"<ch.qos.logback.classic.LoggerContext: void updateLoggerContextVO()>":["<ch.qos.logback.classic.spi.LoggerContextVO: void <init>(ch.qos.logback.classic.LoggerContext)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: java.util.Comparator access$1300()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: void <init>(java.io.InputStream,int)>":["<java.io.FilterInputStream: void <init>(java.io.InputStream)>"],"<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream)>":["<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4000()>"],"<com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>":["<java.lang.ArithmeticException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter: void <init>(de.schildbach.wallet.ui.monitor.NetworkMonitorActivity,androidx.fragment.app.FragmentManager)>":["<androidx.fragment.app.FragmentStatePagerAdapter: void <init>(androidx.fragment.app.FragmentManager)>"],"<com.google.protobuf.LiteralByteString: void copyToInternal(byte[],int,int,int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>":["<okhttp3.OkHttpClient: void <clinit>()>","<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>"],"<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint getPubKeyPoint()>":["<org.bitcoinj.crypto.LazyECPoint: org.spongycastle.math.ec.ECPoint get()>"],"<de.schildbach.wallet.ui.WalletActivity$13: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DeterministicSeed: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$8: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$1100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])>":["<androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)>","<androidx.core.app.NotificationCompatJellybean: void <clinit>()>","<android.os.Bundle: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13900()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$MessageOptions$1: com.google.protobuf.DescriptorProtos$MessageOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.collect.ImmutableMap: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)>":["<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>","<androidx.lifecycle.Lifecycle$Event: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>","<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.ui.ExchangeRatesFragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void onCreate(android.os.Bundle)>"],"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Wallet: void saveToFile(java.io.File,java.io.File)>":["<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.io.FileOutputStream: java.io.FileDescriptor getFD()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.io.File: boolean renameTo(java.io.File)>","<java.io.FileOutputStream: void <init>(java.io.File)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<java.io.FileOutputStream: void flush()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.Wallet: void saveToFileStream(java.io.OutputStream)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<java.io.IOException: void <init>(java.lang.String)>","<org.bitcoinj.core.Utils: void <clinit>()>","<java.io.File: boolean delete()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.lang.StringBuilder: void <init>()>","<java.io.File: java.io.File getCanonicalFile()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.io.FileOutputStream: void close()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.Utils: boolean isWindows()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<java.io.File: boolean exists()>"],"<com.google.protobuf.LiteralByteString: boolean equalsRange(com.google.protobuf.LiteralByteString,int,int)>":["<com.google.protobuf.BoundedByteString: int size()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.LiteralByteString: int size()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.LiteralByteString: int getOffsetIntoBytes()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>"],"<de.schildbach.wallet.ui.RequestCoinsActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.core.PeerGroup: void setVersionMessage(org.bitcoinj.core.VersionMessage)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.spongycastle.crypto.digests.LongDigest: void <clinit>()>":["<org.spongycastle.crypto.digests.LongDigest: void <clinit>()>"],"<org.bitcoinj.wallet.BasicKeyChain: long getEarliestKeyCreationTime()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.lang.Math: long min(long,long)>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.LinkedHashMap: java.util.Collection values()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindIsSelected(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>":["<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindConfidence(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindTime(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>","<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindAddress(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>"],"<org.bitcoinj.crypto.ChildNumber: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$4700()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>":["<java.lang.Object: void <init>()>","<java.lang.String: void <clinit>()>","<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>","<java.util.ArrayList: int size()>"],"<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher javaLetterOrDigit()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaLetterOrDigit: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$ScryptParameters getEncryptionParameters()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<androidx.room.RoomDatabase$MigrationContainer: void <init>()>":["<androidx.collection.SparseArrayCompat: void <clinit>()>","<java.lang.Object: void <init>()>","<androidx.collection.SparseArrayCompat: void <init>()>"],"<com.google.common.net.InetAddresses: void <clinit>()>":["<com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>","<com.google.common.net.InetAddresses: java.net.InetAddress forString(java.lang.String)>","<com.google.common.base.Splitter: com.google.common.base.Splitter limit(int)>","<com.google.common.net.InetAddresses: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.BCStyle: org.spongycastle.asn1.x500.RDN[] fromString(java.lang.String)>":["<org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String,org.spongycastle.asn1.x500.X500NameStyle)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$1: com.google.protobuf.DescriptorProtos$SourceCodeInfo parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.monitor.BlockListFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService$7: void onChanged(java.lang.Object)>":["<de.schildbach.wallet.service.BlockchainService$7: void onChanged(java.util.Set)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.PeerGroup: void removeWallet(org.bitcoinj.wallet.Wallet)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.Peer: void removeWallet(org.bitcoinj.wallet.Wallet)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>"],"<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>":["<com.google.common.collect.RegularImmutableMap: void <clinit>()>","<com.google.common.collect.ImmutableMap$Builder: void sortEntries()>","<com.google.common.collect.ImmutableMap: void <clinit>()>","<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[])>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: org.slf4j.Logger access$300()>":["<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator: void run()>":["<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator: void run()>"],"<org.bitcoinj.core.Peer: void addDisconnectedEventListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<okhttp3.internal.Util: java.lang.String inet6AddressToAscii(byte[])>":["<okio.Buffer: void <init>()>","<okio.Buffer: java.lang.String readUtf8()>","<okio.Buffer: okio.Buffer writeByte(int)>","<okio.Buffer: void <clinit>()>","<okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)>"],"<org.slf4j.helpers.NOPLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>":["<org.slf4j.helpers.NOPLogger: void <clinit>()>"],"<org.bitcoinj.params.MainNetParams: org.bitcoinj.params.MainNetParams get()>":["<org.bitcoinj.params.MainNetParams: void <init>()>"],"<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void appendIfNotNull(java.lang.StringBuilder,java.lang.String)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListeningScheduledExecutorService createPrivateExecutor()>":["<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <clinit>()>","<com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService)>","<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <init>(java.lang.String)>","<org.bitcoinj.core.PeerGroup$5: void run()>","<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>","<org.bitcoinj.core.PeerGroup$5: void <init>(org.bitcoinj.core.PeerGroup)>","<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin subtract(org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.Coin: void <init>(long)>","<com.google.common.math.LongMath: long checkedSubtract(long,long)>","<org.bitcoinj.core.Coin: void <clinit>()>","<com.google.common.math.LongMath: void <clinit>()>"],"<com.google.common.math.LongMath: void <clinit>()>":["<com.google.common.math.LongMath: void <clinit>()>"],"<ch.qos.logback.core.pattern.FormattingConverter: void <init>()>":["<ch.qos.logback.core.pattern.Converter: void <init>()>"],"<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,int)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureKeyIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)>":["<android.graphics.Rect: void set(int,int,int,int)>"],"<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>":["<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>","<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>"],"<com.squareup.moshi.StandardJsonAdapters: void <clinit>()>":["<com.squareup.moshi.StandardJsonAdapters$7: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$9: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$10: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$3: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$6: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$4: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$1: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$2: void <init>()>","<com.squareup.moshi.StandardJsonAdapters: void <clinit>()>","<com.squareup.moshi.StandardJsonAdapters$8: void <init>()>","<com.squareup.moshi.StandardJsonAdapters$5: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.squareup.okhttp.internal.Internal: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<java.lang.Double: void <clinit>()>":["<java.lang.Double: void <clinit>()>"],"<org.bitcoinj.core.VersionedChecksummedBytes: int hashCode()>":["<java.util.Arrays: int hashCode(byte[])>","<com.google.common.base.Objects: int hashCode(java.lang.Object[])>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.core.Sha256Hash: byte[] hash(byte[])>":["<org.bitcoinj.core.Sha256Hash: byte[] hash(byte[],int,int)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)>":["<androidx.fragment.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>"],"<androidx.loader.content.AsyncTaskLoader: void <init>(android.content.Context)>":["<androidx.loader.content.ModernAsyncTask: void <clinit>()>","<androidx.loader.content.AsyncTaskLoader: void <init>(android.content.Context,java.util.concurrent.Executor)>"],"<okhttp3.Authenticator: void <clinit>()>":["<okhttp3.Authenticator: void <clinit>()>","<okhttp3.Authenticator$1: void <init>()>"],"<de.schildbach.wallet.ui.WalletActivity$9: void run()>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<de.schildbach.wallet.service.BlockchainService: void start(android.content.Context,boolean)>"],"<com.google.protobuf.CodedOutputStream: void writeEnum(int,int)>":["<com.google.protobuf.CodedOutputStream: void writeEnumNoTag(int)>","<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>"],"<org.bitcoinj.core.PeerGroup: void setMaxConnections(int)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.net.NioClientManager: void closeConnections(int)>","<org.bitcoinj.net.NioClientManager: int getConnectedClientCount()>","<org.bitcoinj.core.PeerGroup: void triggerConnections()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.core.PeerGroup: boolean isRunning()>"],"<okio.Okio: okio.BufferedSink buffer(okio.Sink)>":["<okio.RealBufferedSink: void <init>(okio.Sink)>"],"<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilderForType()>"],"<okio.Okio$4: java.io.IOException newTimeoutException(java.io.IOException)>":["<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>","<java.net.SocketTimeoutException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.util.List)>":["<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String,java.util.List)>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>"],"<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture allAsList(com.google.common.util.concurrent.ListenableFuture[])>":["<com.google.common.util.concurrent.CollectionFuture$ListFuture: void <init>(com.google.common.collect.ImmutableCollection,boolean)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message buildPartial()>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions buildPartial()>"],"<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] headerBytes()>":["<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void appendIfNotNull(java.lang.StringBuilder,java.lang.String)>","<ch.qos.logback.core.CoreConstants: void <clinit>()>","<ch.qos.logback.core.LayoutBase: java.lang.String getFileHeader()>","<java.lang.StringBuilder: int length()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] convertToBytes(java.lang.String)>","<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String getPresentationHeader()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchDestroyView()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<org.spongycastle.asn1.DLSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean)>"],"<androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FieldOptions)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label valueOf(int)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void initFields()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type valueOf(int)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$Builder toBuilder()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions buildPartial()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>"],"<org.slf4j.impl.StaticLoggerBinder: void init()>":["<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.status.StatusUtil: boolean contextHasStatusListener(ch.qos.logback.core.Context)>","<java.lang.Class: java.lang.String getName()>","<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void init(ch.qos.logback.classic.LoggerContext,java.lang.Object)>","<ch.qos.logback.classic.util.ContextInitializer: void <init>(ch.qos.logback.classic.LoggerContext)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.util.StatusPrinter: void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context)>","<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>","<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>","<org.slf4j.helpers.Util: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String get(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeFrom(org.bitcoinj.wallet.Protos$Wallet)>"],"<org.bitcoinj.utils.Threading$UserThread: void run()>":["<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.WalletApplication$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)>","<com.google.common.util.concurrent.Uninterruptibles: java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.utils.Threading$UserThread: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean access$1600(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean everythingPlausible()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$3: void <init>(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,int,java.lang.Object[])>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.Throwables: java.lang.Object getJLA()>":["<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>"],"<com.google.common.util.concurrent.InterruptibleTask: void interruptTask()>":["<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>","<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.InterruptibleTask: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed,org.bitcoinj.crypto.KeyCrypter)>"],"<okhttp3.Protocol: void <clinit>()>":["<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>","<okhttp3.Protocol: void <clinit>()>"],"<okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$2100(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()>":["<org.conscrypt.Conscrypt: boolean isAvailable()>","<okhttp3.internal.platform.ConscryptPlatform: void <init>()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<de.schildbach.wallet.WalletApplication: java.lang.String httpUserAgent()>":["<de.schildbach.wallet.WalletApplication: java.lang.String httpUserAgent(java.lang.String)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<de.schildbach.wallet.WalletApplication: android.content.pm.PackageInfo packageInfo()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: javax.net.ssl.SSLSocketFactory sslTrustAllCertificates()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: void <clinit>()>","<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<ch.qos.logback.core.ContextBase: void <init>()>":["<java.lang.System: long currentTimeMillis()>","<java.lang.Object: void <init>()>","<java.util.ArrayList: void <init>(int)>","<java.lang.System: void <clinit>()>","<java.util.HashMap: void <init>()>","<ch.qos.logback.core.ContextBase: void initCollisionMaps()>","<ch.qos.logback.core.BasicStatusManager: void <init>()>","<ch.qos.logback.core.spi.LogbackLock: void <init>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$OneofAccessor: void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String,java.lang.Class,java.lang.Class)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Object: void <init>()>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.lang.String: void <init>(java.lang.String)>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder()>":["<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>(com.google.common.base.MoreObjects$1)>"],"<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.io.File convertToFile(java.net.URL)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: boolean equals(java.lang.Object)>","<java.net.URL: java.lang.String getProtocol()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.net.URL: java.lang.String getFile()>","<java.net.URLDecoder: java.lang.String decode(java.lang.String)>","<java.io.File: void <clinit>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<java.io.File: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.scan.ScannerView: void onDraw(android.graphics.Canvas)>":["<android.view.View: void postInvalidateDelayed(long)>","<java.lang.System: long currentTimeMillis()>","<android.graphics.Paint: void setAlpha(int)>","<java.util.HashMap: java.util.Set entrySet()>","<java.lang.System: void <clinit>()>","<android.graphics.Paint: void setColor(int)>","<android.graphics.Matrix: void mapPoints(float[],float[])>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.data.WalletLiveData: void <init>(de.schildbach.wallet.WalletApplication)>":["<de.schildbach.wallet.data.AbstractWalletLiveData: void <init>(de.schildbach.wallet.WalletApplication,long)>"],"<org.bitcoinj.crypto.MnemonicCode: java.io.InputStream openDefaultWords()>":["<java.io.FileNotFoundException: void <init>(java.lang.String)>","<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>"],"<dummyMainClass: de.schildbach.wallet.data.ExchangeRatesProvider dummyMainMethod_de_schildbach_wallet_data_ExchangeRatesProvider(android.content.Intent)>":["<de.schildbach.wallet.data.ExchangeRatesProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>","<de.schildbach.wallet.data.ExchangeRatesProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>","<java.lang.String: void <clinit>()>","<de.schildbach.wallet.data.ExchangeRatesProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>","<de.schildbach.wallet.data.ExchangeRatesProvider: java.lang.String getType(android.net.Uri)>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <init>()>","<de.schildbach.wallet.data.ExchangeRatesProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>"],"<com.google.common.util.concurrent.AbstractFuture$Listener: void <clinit>()>":["<com.google.common.util.concurrent.AbstractFuture$Listener: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>"],"<org.bitcoinj.wallet.Wallet$CouldNotAdjustDownwards: void <init>()>":["<org.bitcoinj.wallet.Wallet$CompletionException: void <init>()>"],"<okio.Buffer: okio.Buffer writeUtf8(java.lang.String)>":["<okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)>","<java.lang.String: int length()>"],"<androidx.fragment.app.FragmentManager: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder access$5000()>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder create()>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.crypto.params.ParametersWithIV: byte[] getIV()>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.engines.AESFastEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>","<org.spongycastle.crypto.modes.CBCBlockCipher: void reset()>","<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>"],"<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>":["<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment self()>"],"<com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture: void <init>(java.lang.Throwable)>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>","<com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)>"],"<com.google.common.base.CharMatcher$JavaUpperCase: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage$Builder getBuilder()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage$Builder: void markClean()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: boolean isCollisionFree()>":["<java.lang.Enum: int ordinal()>","<ch.qos.logback.core.rolling.helper.RollingCalendar$1: void <clinit>()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: boolean collision(long)>"],"<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity: void onCreate(android.os.Bundle)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)>","<de.schildbach.wallet.ui.monitor.BlockListFragment: void <init>()>","<de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter: void <init>(de.schildbach.wallet.ui.monitor.NetworkMonitorActivity,androidx.fragment.app.FragmentManager)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>","<de.schildbach.wallet.ui.monitor.PeerListFragment: void <init>()>","<android.app.Activity: void setContentView(int)>","<de.schildbach.wallet.ui.monitor.BlockListFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<android.app.Activity: android.view.View findViewById(int)>"],"<androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)>":["<androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)>"],"<com.google.common.util.concurrent.AbstractTransformFuture: void run()>":["<com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)>","<com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>","<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: void setResult(java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean cancel(boolean)>","<java.lang.Throwable: java.lang.Throwable getCause()>","<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>"],"<org.spongycastle.crypto.macs.HMac: void <init>(org.spongycastle.crypto.Digest)>":["<org.spongycastle.crypto.macs.HMac: void <clinit>()>","<org.spongycastle.crypto.macs.HMac: void <init>(org.spongycastle.crypto.Digest,int)>","<org.spongycastle.crypto.macs.HMac: int getByteLength(org.spongycastle.crypto.Digest)>"],"<androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>":["<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>","<android.util.SparseArray: int size()>","<androidx.fragment.app.FragmentManagerImpl: void saveNonConfig()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<androidx.fragment.app.FragmentState: void <clinit>()>","<androidx.fragment.app.FragmentManagerState: void <clinit>()>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>","<androidx.fragment.app.BackStackState: void <init>(androidx.fragment.app.BackStackRecord)>","<android.os.Bundle: void putInt(java.lang.String,int)>","<android.os.Bundle: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<android.os.Bundle: void <clinit>()>","<androidx.fragment.app.BackStackState: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerState: void <init>()>"],"<org.spongycastle.asn1.BERSet: void <init>()>":["<org.spongycastle.asn1.ASN1Set: void <init>()>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$19700()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.spongycastle.crypto.macs.HMac: int doFinal(byte[],int)>":["<org.spongycastle.crypto.digests.SHA512Digest: int getDigestSize()>","<org.spongycastle.crypto.digests.SHA512Digest: int doFinal(byte[],int)>","<org.spongycastle.crypto.digests.SHA512Digest: void reset(org.spongycastle.util.Memoable)>","<org.spongycastle.crypto.digests.LongDigest: void update(byte[],int,int)>"],"<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData: void <init>(org.bitcoinj.wallet.Wallet)>":["<androidx.lifecycle.LiveData: void <init>()>","<de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener: void <init>(de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData,de.schildbach.wallet.service.BlockchainService$1)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$100(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void updateView()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder setLookaheadSize(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder access$14700()>":["<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder create()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void <init>()>":["<android.appwidget.AppWidgetProvider: void <init>()>"],"<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>":["<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>","<okhttp3.internal.Util: void <clinit>()>","<okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>","<okhttp3.CertificatePinner: void <clinit>()>"],"<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Throwable)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<org.bitcoinj.core.Coin: java.lang.String toString()>":["<java.lang.Long: java.lang.String toString(long)>","<java.lang.Long: void <clinit>()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>":["<org.spongycastle.crypto.ec.CustomNamedCurves: void <clinit>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$6: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$3: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves: void defineCurveWithOID(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x9.X9ECParametersHolder)>","<org.spongycastle.crypto.ec.CustomNamedCurves: void defineCurveAlias(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier)>","<org.spongycastle.crypto.ec.CustomNamedCurves$5: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$2: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$8: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves: void defineCurve(java.lang.String,org.spongycastle.asn1.x9.X9ECParametersHolder)>","<java.util.Hashtable: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$1: void <init>()>","<org.spongycastle.asn1.sec.SECObjectIdentifiers: void <clinit>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$4: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$9: void <init>()>","<org.spongycastle.crypto.ec.CustomNamedCurves$7: void <init>()>"],"<org.bitcoinj.wallet.BasicKeyChain: org.bitcoinj.wallet.Protos$Key$Builder serializeEncryptableItem(org.bitcoinj.crypto.EncryptableItem)>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder setInitialisationVector(com.google.protobuf.ByteString)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setSecretBytes(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setType(org.bitcoinj.wallet.Protos$Key$Type)>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key: void <clinit>()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder getEncryptedDataBuilder()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder setEncryptedPrivateKey(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Key: org.bitcoinj.wallet.Protos$Key$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setCreationTimestamp(long)>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<dummyMainClass: de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity dummyMainMethod_de_schildbach_wallet_ui_backup_RestoreWalletFromExternalActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: void <init>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<androidx.fragment.app.FragmentActivity: void onResume()>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<ch.qos.logback.core.util.StatusPrinter: void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long)>":["<ch.qos.logback.core.util.StatusPrinter: void print(ch.qos.logback.core.status.StatusManager,long)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<ch.qos.logback.core.status.StatusUtil: void <init>(ch.qos.logback.core.Context)>","<ch.qos.logback.core.status.StatusUtil: int getHighestLevel(long)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.ContextBase: java.lang.String getName()>","<ch.qos.logback.core.util.StatusPrinter: void <clinit>()>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(java.io.InputStream)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(java.io.InputStream)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.RepeatedFieldBuilder getLocationFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Peer: void <clinit>()>":["<org.bitcoinj.core.Peer: void <clinit>()>","<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$FileOptions)>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions buildPartial()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstance()>"],"<de.schildbach.wallet.data.PaymentIntent: java.lang.String toString()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.Object: java.lang.Class getClass()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<de.schildbach.wallet.data.PaymentIntent: boolean hasPayee()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>","<java.util.Arrays: java.lang.String toString(java.lang.Object[])>","<de.schildbach.wallet.data.PaymentIntent: boolean hasOutputs()>"],"<org.bitcoinj.wallet.Wallet: void saveToFileStream(java.io.OutputStream)>":["<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void writeWallet(org.bitcoinj.wallet.Wallet,java.io.OutputStream)>"],"<ch.qos.logback.core.android.AndroidContextUtil: android.content.ContextWrapper getContext()>":["<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<androidx.lifecycle.LifecycleService: androidx.lifecycle.Lifecycle getLifecycle()>":["<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.Lifecycle getLifecycle()>"],"<org.bitcoinj.core.ECKey$2: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.common.primitives.UnsignedBytes: java.util.Comparator lexicographicalComparator()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>":["<androidx.fragment.app.Fragment: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float)>":["<android.view.animation.AlphaAnimation: void setDuration(long)>","<android.view.animation.AlphaAnimation: void <init>(float,float)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>","<android.view.animation.AlphaAnimation: void setInterpolator(android.view.animation.Interpolator)>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder setData(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.spongycastle.asn1.DERSet: void <init>()>":["<org.spongycastle.asn1.ASN1Set: void <init>()>"],"<com.google.protobuf.DescriptorProtos$OneofDescriptorProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$OneofDescriptorProto$1: com.google.protobuf.DescriptorProtos$OneofDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.ByteString getDescriptionBytes()>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.ByteString: void <clinit>()>"],"<com.google.protobuf.AbstractParser: java.lang.Object parseDelimitedFrom(java.io.InputStream)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseDelimitedFrom(java.io.InputStream)>"],"<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2700()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: org.slf4j.Logger access$000()>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>":["<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.StringBuffer: java.lang.String toString()>","<java.lang.StringBuffer: void setLength(int)>"],"<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>":["<com.google.common.collect.Iterators$9: void <init>(java.lang.Object)>"],"<ch.qos.logback.core.util.FileUtil: java.lang.String prefixRelativePath(java.lang.String,java.lang.String)>":["<ch.qos.logback.core.util.OptionHelper: boolean isEmpty(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.File: boolean isAbsolute()>","<java.lang.String: java.lang.String trim()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>"],"<org.bitcoinj.core.DummySerializer: void <clinit>()>":["<org.bitcoinj.core.DummySerializer: void <clinit>()>","<org.bitcoinj.core.DummySerializer: void <init>()>"],"<com.google.protobuf.TextFormat$Parser$Builder: com.google.protobuf.TextFormat$Parser build()>":["<com.google.protobuf.TextFormat$Parser: void <init>(boolean,com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy,com.google.protobuf.TextFormat$1)>"],"<com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>"],"<org.bitcoinj.protocols.payments.PaymentSession: java.util.Date getExpires()>":["<java.util.Date: void <init>(long)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasExpires()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: long getExpires()>"],"<ch.qos.logback.core.UnsynchronizedAppenderBase: void <init>()>":["<ch.qos.logback.core.spi.FilterAttachableImpl: void <init>()>","<java.lang.ThreadLocal: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.util.List)>":["<ch.qos.logback.core.joran.spi.ElementPath: void <init>(java.util.List)>"],"<org.slf4j.LoggerFactory: void performInitialization()>":["<org.slf4j.LoggerFactory: void bind()>","<org.slf4j.LoggerFactory: void versionSanityCheck()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<com.google.protobuf.MessageReflection$1: void <clinit>()>":["<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type[] values()>","<com.google.protobuf.MessageReflection$1: void <clinit>()>","<java.lang.Enum: int ordinal()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity$5: void run()>":["<de.schildbach.wallet.ui.scan.CameraManager: void setTorch(boolean)>","<de.schildbach.wallet.ui.scan.ScanActivity: de.schildbach.wallet.ui.scan.CameraManager access$200(de.schildbach.wallet.ui.scan.ScanActivity)>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: void <init>()>":["<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: void maybeForceBuilderInitialization()>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstance()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>":["<okio.Util: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>","<okio.ByteString: void <init>(byte[])>","<okio.ByteString: void <clinit>()>"],"<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: long readUInt64()>":["<com.google.protobuf.CodedInputStream: long readRawVarint64()>"],"<org.bitcoinj.store.SPVBlockStore: void setChainHead(org.bitcoinj.core.StoredBlock)>":["<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.bitcoinj.core.Sha256Hash: byte[] getBytes()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.core.CheckpointManager: void checkpoint(org.bitcoinj.core.NetworkParameters,java.io.InputStream,org.bitcoinj.store.BlockStore,long)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.io.BufferedInputStream: void <init>(java.io.InputStream)>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(long)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.CheckpointManager: void <clinit>()>","<org.bitcoinj.core.CheckpointManager: org.bitcoinj.core.StoredBlock getCheckpointBefore(long)>","<org.bitcoinj.core.CheckpointManager: void <init>(org.bitcoinj.core.NetworkParameters,java.io.InputStream)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.store.SPVBlockStore: void put(org.bitcoinj.core.StoredBlock)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.store.SPVBlockStore: void setChainHead(org.bitcoinj.core.StoredBlock)>"],"<com.google.protobuf.CodedOutputStream: void refreshBuffer()>":["<java.io.DataOutputStream: void write(byte[],int,int)>","<java.io.FileOutputStream: void write(byte[],int,int)>","<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidgets(android.content.Context,android.appwidget.AppWidgetManager,int[],org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>":["<de.schildbach.wallet.WalletBalanceWidgetProvider: android.os.Bundle getAppWidgetOptions(android.appwidget.AppWidgetManager,int)>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>"],"<com.google.protobuf.Descriptors$FieldDescriptor: void access$1200(com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.DescriptorProtos$FieldDescriptorProto)>":["<com.google.protobuf.Descriptors$FieldDescriptor: void setProto(com.google.protobuf.DescriptorProtos$FieldDescriptorProto)>"],"<org.bitcoin.protocols.payments.Protos$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object get(int)>":["<com.google.common.base.Preconditions: int checkElementIndex(int,int)>"],"<ch.qos.logback.core.pattern.parser.OptionTokenizer: void escape(java.lang.String,java.lang.StringBuffer)>":["<java.lang.String: char charAt(int)>","<ch.qos.logback.core.pattern.util.AsIsEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>"],"<org.bitcoinj.core.Peer: void connectionClosed()>":["<org.bitcoinj.core.Peer$3: void <init>(org.bitcoinj.core.Peer,org.bitcoinj.utils.ListenerRegistration)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Peer$3: void run()>"],"<java.lang.Float: java.lang.Float valueOf(float)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.ContextBase: void setName(java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13400()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>":["<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>"],"<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Transaction: java.lang.String toString(org.bitcoinj.core.AbstractBlockChain)>":["<java.lang.Long: java.lang.String toHexString(long)>","<org.bitcoinj.core.Transaction: boolean hasRelativeLockTime()>","<org.bitcoinj.core.Transaction: boolean isOptInFullRBF()>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(long)>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getFee()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(java.util.Date)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<java.lang.Long: void <clinit>()>","<org.bitcoinj.core.Transaction: boolean isCoinBase()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin multiply(long)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.io.IOException: java.lang.String getMessage()>","<java.lang.Throwable: java.lang.String getMessage()>","<java.util.ArrayList: java.lang.Object get(int)>","<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>","<org.bitcoinj.core.Transaction: boolean isTimeLocked()>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin divide(long)>","<java.lang.IllegalArgumentException: java.lang.String getMessage()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>","<org.bitcoinj.core.Message: byte[] unsafeBitcoinSerialize()>","<java.lang.IllegalStateException: java.lang.String getMessage()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addVarint(long)>":["<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$502(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Long: void <clinit>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$500(com.google.protobuf.UnknownFieldSet$Field)>"],"<okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)>":["<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>","<java.lang.AssertionError: void <init>(java.lang.Object)>"],"<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder(com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap: void <clinit>()>":["<com.google.common.collect.MapMakerInternalMap: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$1: void <init>()>"],"<okhttp3.EventListener: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.crypto.EncryptedData: void <init>(byte[],byte[])>":["<java.lang.Object: void <init>()>","<java.util.Arrays: byte[] copyOf(byte[],int)>"],"<androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)>":["<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()>"],"<com.lambdaworks.crypto.SCrypt: void <clinit>()>":["<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<com.lambdaworks.jni.LibraryLoaders: com.lambdaworks.jni.LibraryLoader loader()>","<com.lambdaworks.jni.SysLibraryLoader: boolean load(java.lang.String,boolean)>","<com.lambdaworks.jni.JarLibraryLoader: boolean load(java.lang.String,boolean)>","<com.lambdaworks.jni.NilLibraryLoader: boolean load(java.lang.String,boolean)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Wallet$3: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Transaction)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.LoggerFactory: void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: void report(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Wallet$EncryptionType$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String)>":["<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String,java.util.List)>"],"<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[])>":["<org.bitcoinj.script.ScriptChunk: void <init>(int,byte[],int)>"],"<com.google.common.util.concurrent.AggregateFuture: void <init>()>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>"],"<ch.qos.logback.core.OutputStreamAppender: void start()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.UnsynchronizedAppenderBase: void start()>","<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<org.bitcoinj.core.DumpedPrivateKey: org.bitcoinj.core.DumpedPrivateKey fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>":["<org.bitcoinj.core.DumpedPrivateKey: void <init>(org.bitcoinj.core.NetworkParameters,java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl$2$1: void <init>(androidx.fragment.app.FragmentManagerImpl$2)>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.Futures$CallbackListener: void run()>":["<org.bitcoinj.core.PeerGroup$16: void onSuccess(java.lang.Object)>","<org.bitcoinj.core.PeerGroup$16: void onFailure(java.lang.Throwable)>","<com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>","<java.lang.Throwable: java.lang.Throwable getCause()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord: void <init>(android.content.Intent,java.util.ArrayList)>":["<java.lang.Object: void <init>()>"],"<com.google.common.hash.HashCode$BytesHashCode: int asInt()>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,int)>"],"<org.bitcoinj.core.PeerGroup: void addInactive(org.bitcoinj.core.PeerAddress)>":["<java.util.PriorityQueue: boolean offer(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.utils.ExponentialBackoff: void <init>(org.bitcoinj.utils.ExponentialBackoff$Params)>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <init>(java.lang.String,int)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.TextFormat$3: void <clinit>()>":["<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type[] values()>","<java.lang.Enum: int ordinal()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.TextFormat$3: void <clinit>()>"],"<androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)>":["<androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)>","<androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)>","<androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>","<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)>","<androidx.fragment.app.Fragment$2: boolean onHasView()>","<androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment$2: android.view.View onFindViewById(int)>","<androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()>","<androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>","<androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)>","<androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>","<androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)>"],"<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[],int,int)>":["<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>","<java.io.FilterInputStream: int read(byte[],int,int)>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read(byte[],int,int)>"],"<okio.Segment: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.service.InactivityNotificationService: void handleDismissForever()>":["<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>","<java.util.Collections: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: void maybeForceBuilderInitialization()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>":["<org.bitcoinj.wallet.Protos$TransactionInput: void initFields()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$TransactionInput$1: void <init>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.crypto.MnemonicCode: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: void <init>(java.lang.String,int,int,int)>","<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode: com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode[] values()>","<com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode$1: void <init>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>":["<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Transaction: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.Transaction$1: void <init>()>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<java.math.BigInteger: java.math.BigInteger valueOf(long)>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Transaction$2: void <init>()>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.bitcoinj.crypto.HDUtils: com.google.common.collect.ImmutableList concat(java.util.List,java.util.List)>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>","<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>"],"<androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)>":["<android.os.Build$VERSION: void <clinit>()>","<java.io.File: void <clinit>()>"],"<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>":["<de.schildbach.wallet.Configuration: void <init>(android.content.SharedPreferences,android.content.res.Resources)>","<android.app.Application: android.content.res.Resources getResources()>","<de.schildbach.wallet.Configuration: void <clinit>()>","<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$19800()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.base.Splitter$1$1: void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter$SplittingIterator: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>":["<com.google.common.base.Joiner: void <init>(java.lang.String)>"],"<org.bitcoinj.crypto.TransactionSignature: void <init>(java.math.BigInteger,java.math.BigInteger)>":["<org.bitcoinj.core.Transaction$SigHash: void <clinit>()>","<org.bitcoinj.crypto.TransactionSignature: void <init>(java.math.BigInteger,java.math.BigInteger,int)>"],"<androidx.lifecycle.ProcessLifecycleOwner: void <clinit>()>":["<androidx.lifecycle.ProcessLifecycleOwner: void <clinit>()>","<androidx.lifecycle.ProcessLifecycleOwner: void <init>()>"],"<com.google.common.math.LongMath: long checkedMultiply(long,long)>":["<java.lang.Long: int numberOfLeadingZeros(long)>","<com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)>","<java.lang.Long: void <clinit>()>"],"<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.Message$Builder newBuilderForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.Message$Builder newBuilderForType()>","<com.google.protobuf.GeneratedMessage: java.util.Map getAllFields()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DynamicMessage: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DynamicMessage: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.Message$Builder newBuilderForType()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DynamicMessage: java.util.Map getAllFields()>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message$Builder newBuilderForType()>","<com.google.protobuf.SmallSortedMap$EntryIterator: boolean hasNext()>","<com.google.protobuf.GeneratedMessage$Builder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message$Builder newBuilderForType()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.Message getDefaultInstanceForType()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.SmallSortedMap: java.util.Set entrySet()>","<com.google.protobuf.DynamicMessage$Builder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.SmallSortedMap$EntrySet: java.util.Iterator iterator()>","<com.google.protobuf.DynamicMessage: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.Message getDefaultInstanceForType()>","<java.util.TreeMap: java.util.Set entrySet()>","<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.Message$Builder newBuilderForType()>","<com.google.protobuf.DynamicMessage: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message build()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoin.protocols.payments.Protos$X509Certificates: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$Wallet: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.Message$Builder newBuilderForType()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.Message build()>","<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$Script: com.google.protobuf.Message$Builder newBuilderForType()>","<com.google.protobuf.SmallSortedMap$EntryIterator: java.lang.Object next()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.util.Map getAllFields()>","<org.bitcoinj.wallet.Protos$ExchangeRate: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$Extension: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$TransactionSigner: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<org.bitcoinj.wallet.Protos$EncryptedData: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.Message getDefaultInstanceForType()>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message build()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo: com.google.protobuf.Message getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.NetworkParameters)>":["<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.Context)>","<org.bitcoinj.core.Context: org.bitcoinj.core.Context getOrCreate(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.core.Context: void <clinit>()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>":["<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.Descriptors$Descriptor: void <init>(java.lang.String)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilder()>","<java.lang.String: int lastIndexOf(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder addExtensionRange(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange)>","<com.google.protobuf.Descriptors$FileDescriptor: void <init>(java.lang.String,com.google.protobuf.Descriptors$Descriptor)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilder()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange build()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder setName(java.lang.String)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setEnd(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto build()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setStart(int)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context)>":["<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader)>","<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object)>","<ch.qos.logback.core.util.Loader: void <clinit>()>"],"<com.google.protobuf.TextFormat$Printer: void printSingleField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>":["<com.google.protobuf.TextFormat$Printer: void printFieldValue(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator)>","<com.google.protobuf.TextFormat$TextGenerator: void indent()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<com.google.protobuf.TextFormat$TextGenerator: void outdent()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.TextFormat$TextGenerator: void print(java.lang.CharSequence)>"],"<androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>":["<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)>","<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>","<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()>","<java.lang.Enum: int compareTo(java.lang.Enum)>","<androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()>","<androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()>","<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)>","<androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()>","<androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()>","<androidx.lifecycle.LifecycleRegistry: void popParentState()>"],"<com.google.protobuf.DynamicMessage: com.google.protobuf.DynamicMessage getDefaultInstance(com.google.protobuf.Descriptors$Descriptor)>":["<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet emptySet()>","<com.google.protobuf.DynamicMessage: void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor[],com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: void setUserAgent(java.lang.String,java.lang.String)>":["<org.bitcoinj.core.PeerGroup: void setUserAgent(java.lang.String,java.lang.String,java.lang.String)>"],"<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.LazyECPoint,java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>":["<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.bitcoinj.crypto.LazyECPoint)>","<org.bitcoinj.core.ECKey: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.Arrays: byte[] copyOf(byte[],int)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.core.ECKey: org.bitcoinj.crypto.LazyECPoint compressPoint(org.bitcoinj.crypto.LazyECPoint)>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: int getFingerprint()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void initFields()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$DeterministicKey$1: void <init>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void restoreInstanceState(android.os.Bundle)>":["<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromBase58(org.bitcoinj.core.NetworkParameters,java.lang.String)>"],"<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>()>":["<java.io.IOException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.BasicKeyChain: int importKeys(java.util.List)>":["<java.util.ArrayList: void <init>(int)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<org.bitcoinj.wallet.BasicKeyChain: void importKeyLocked(org.bitcoinj.core.ECKey)>","<org.bitcoinj.wallet.BasicKeyChain: void checkKeyEncryptionStateMatches(org.bitcoinj.core.ECKey)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<com.google.common.collect.RegularImmutableList: int size()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.BasicKeyChain: boolean hasKey(org.bitcoinj.core.ECKey)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.wallet.BasicKeyChain: void queueOnKeysAdded(java.util.List)>","<java.util.ArrayList: int size()>"],"<com.lambdaworks.jni.JarLibraryLoader: java.util.List libCandidates(com.lambdaworks.jni.Platform,java.lang.String)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.ArrayList: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Enum: int ordinal()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.lambdaworks.jni.JarLibraryLoader$1: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setEncryptionParameters(org.bitcoinj.wallet.Protos$ScryptParameters)>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder setMessage(com.google.protobuf.GeneratedMessage)>","<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilderForType()>"],"<com.google.common.net.InetAddresses: byte[] ipStringToBytes(java.lang.String)>":["<com.google.common.net.InetAddresses: java.lang.String convertDottedQuadToHex(java.lang.String)>","<java.lang.String: char charAt(int)>","<java.lang.Character: int digit(char,int)>","<java.lang.String: int length()>","<com.google.common.net.InetAddresses: byte[] textToNumericFormatV4(java.lang.String)>","<java.lang.Character: void <clinit>()>","<com.google.common.net.InetAddresses: byte[] textToNumericFormatV6(java.lang.String)>","<com.google.common.net.InetAddresses: void <clinit>()>"],"<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>":["<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>","<java.lang.Object: void <init>()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<okhttp3.OkHttpClient: int callTimeoutMillis()>","<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>","<okhttp3.RealCall$1: void <init>(okhttp3.RealCall)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$13800()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<com.google.protobuf.FieldSet: boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite)>"],"<com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>":["<com.google.common.base.Present: void <init>(java.lang.Object)>","<com.google.common.base.Optional: com.google.common.base.Optional absent()>"],"<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>":["<org.spongycastle.asn1.DERUniversalString: void <clinit>()>","<org.spongycastle.asn1.DERT61String: void <init>(byte[])>","<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)>","<org.spongycastle.asn1.DERNumericString: void <init>(byte[])>","<org.spongycastle.asn1.ASN1GeneralizedTime: void <init>(byte[])>","<org.spongycastle.asn1.ASN1Boolean: void <clinit>()>","<org.spongycastle.asn1.DERNull: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.DERUTF8String: void <init>(byte[])>","<org.spongycastle.asn1.ASN1InputStream: byte[] getBuffer(org.spongycastle.asn1.DefiniteLengthInputStream,byte[][])>","<org.spongycastle.asn1.DERUniversalString: void <init>(byte[])>","<org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean fromOctetString(byte[])>","<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier fromOctetString(byte[])>","<org.spongycastle.asn1.ASN1Integer: void <init>(byte[],boolean)>","<org.spongycastle.asn1.DERBitString: void <clinit>()>","<org.spongycastle.asn1.DERGeneralString: void <init>(byte[])>","<org.spongycastle.asn1.DERIA5String: void <init>(byte[])>","<java.io.IOException: void <init>(java.lang.String)>","<org.spongycastle.asn1.DefiniteLengthInputStream: int getRemaining()>","<org.spongycastle.asn1.ASN1Enumerated: org.spongycastle.asn1.ASN1Enumerated fromOctetString(byte[])>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.spongycastle.asn1.ASN1InputStream: char[] getBMPCharBuffer(org.spongycastle.asn1.DefiniteLengthInputStream)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>","<org.spongycastle.asn1.DERVisibleString: void <init>(byte[])>","<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>","<org.spongycastle.asn1.ASN1Enumerated: void <clinit>()>","<org.spongycastle.asn1.ASN1UTCTime: void <init>(byte[])>","<org.spongycastle.asn1.DERBMPString: void <init>(char[])>","<org.spongycastle.asn1.DERPrintableString: void <init>(byte[])>"],"<ch.qos.logback.classic.util.ContextInitializer: void <init>(ch.qos.logback.classic.LoggerContext)>":["<java.lang.Object: void <init>()>","<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object)>","<ch.qos.logback.core.util.Loader: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$1: com.google.protobuf.DescriptorProtos$DescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.DividerItemDecoration: void <init>(android.content.Context,int)>":["<de.schildbach.wallet.ui.DividerItemDecoration: void <clinit>()>","<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void <init>()>","<de.schildbach.wallet.ui.DividerItemDecoration: void setOrientation(int)>","<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>"],"<org.bitcoinj.utils.Threading$3: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService$2: void onChanged(org.bitcoinj.core.Coin)>":["<de.schildbach.wallet.WalletBalanceWidgetProvider: void <clinit>()>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<de.schildbach.wallet.WalletBalanceWidgetProvider: void updateWidgets(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)>"],"<com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getWatchedScriptFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.core.Context: org.bitcoinj.core.Context getOrCreate(org.bitcoinj.core.NetworkParameters)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.core.Context: void <init>(org.bitcoinj.core.NetworkParameters)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.bitcoinj.core.Context: org.bitcoinj.core.Context get()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<org.bitcoinj.core.Context: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.bitcoinj.core.Context: org.bitcoinj.core.NetworkParameters getParams()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>":["<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<androidx.collection.MapCollections: java.util.Collection getValues()>":["<androidx.collection.MapCollections$ValuesCollection: void <init>(androidx.collection.MapCollections)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: void popLimit(int)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void initFields()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.lang.Integer: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.CodedInputStream: int getBytesUntilLimit()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$18700()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>"],"<com.google.zxing.qrcode.decoder.Decoder: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.zxing.common.reedsolomon.GenericGF: void <clinit>()>","<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: void <init>(com.google.zxing.common.reedsolomon.GenericGF)>"],"<org.bitcoinj.script.Script: boolean isPayToScriptHash()>":["<org.bitcoinj.script.Script: byte[] getProgram()>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void onInactive()>":["<androidx.loader.content.Loader: void stopLoading()>"],"<org.bitcoinj.wallet.Protos$Transaction$Pool: org.bitcoinj.wallet.Protos$Transaction$Pool valueOf(int)>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>":["<java.util.LinkedList: java.util.Iterator descendingIterator()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.google.common.base.Splitter$5: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setN(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FieldOptions)>":["<com.google.protobuf.DescriptorProtos$FieldOptions: boolean hasPacked()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setDeprecated(boolean)>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$CType getCtype()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean getLazy()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean getWeak()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setWeak(boolean)>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setLazy(boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setPacked(boolean)>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean hasLazy()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean getPacked()>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean hasWeak()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean hasCtype()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean hasExperimentalMapKey()>","<com.google.protobuf.DescriptorProtos$FieldOptions: java.lang.Object access$15400(com.google.protobuf.DescriptorProtos$FieldOptions)>","<com.google.protobuf.DescriptorProtos$FieldOptions: java.util.List access$15600(com.google.protobuf.DescriptorProtos$FieldOptions)>","<com.google.protobuf.DescriptorProtos$FieldOptions$Builder: com.google.protobuf.DescriptorProtos$FieldOptions$Builder setCtype(com.google.protobuf.DescriptorProtos$FieldOptions$CType)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean getDeprecated()>","<com.google.protobuf.DescriptorProtos$FieldOptions: boolean hasDeprecated()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void initFields()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <init>(java.lang.String,int,java.lang.Object)>","<com.google.protobuf.ByteString: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.Float: java.lang.Float valueOf(float)>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<java.lang.Integer: void <clinit>()>","<java.lang.Float: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<java.lang.Double: void <clinit>()>","<java.lang.Double: java.lang.Double valueOf(double)>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto build()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean isInitialized()>"],"<org.spongycastle.asn1.x500.style.BCStyle: void <clinit>()>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>","<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.Hashtable: void <init>()>","<org.spongycastle.asn1.x509.X509ObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: void <clinit>()>","<org.spongycastle.asn1.x500.style.BCStyle: void <init>()>","<org.spongycastle.asn1.x500.style.BCStyle: void <clinit>()>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilder()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder access$17100()>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment$1: void <init>(de.schildbach.wallet.ui.ExchangeRatesFragment)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions: com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FieldOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>":["<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.google.common.base.Equivalence$Equals: void <clinit>()>":["<com.google.common.base.Equivalence$Equals: void <clinit>()>","<com.google.common.base.Equivalence$Equals: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstanceForType()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto buildPartial()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$MessageOptions access$4702(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.DescriptorProtos$MessageOptions)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4402(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4302(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.lang.Object access$4002(com.google.protobuf.DescriptorProtos$DescriptorProto,java.lang.Object)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4102(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4602(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List)>","<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4502(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: java.util.List access$4202(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: int access$4802(com.google.protobuf.DescriptorProtos$DescriptorProto,int)>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$Segment self()>"],"<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>":["<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.String: int indexOf(int)>"],"<androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>","<java.lang.Class: java.lang.String getName()>"],"<org.bitcoinj.store.SPVBlockStore: void <init>(org.bitcoinj.core.NetworkParameters,java.io.File)>":["<java.nio.channels.FileChannel$MapMode: void <clinit>()>","<java.lang.Object: void <init>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.store.SPVBlockStore: int getFileSize()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<java.io.RandomAccessFile: void setLength(long)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.store.SPVBlockStore$2: void <init>(org.bitcoinj.store.SPVBlockStore)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.store.ChainFileLockedException: void <init>(java.lang.String)>","<org.bitcoinj.store.SPVBlockStore$1: void <init>(org.bitcoinj.store.SPVBlockStore)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.store.SPVBlockStore: void <clinit>()>","<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>","<java.io.RandomAccessFile: long length()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>","<org.bitcoinj.store.SPVBlockStore: void initNewStore(org.bitcoinj.core.NetworkParameters)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.io.RandomAccessFile: void close()>","<java.lang.String: void <clinit>()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.Throwable)>","<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>","<java.io.File: boolean exists()>","<java.lang.String: void <init>(byte[],java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void sendCoinsOffline(org.bitcoinj.wallet.SendRequest)>":["<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask,org.bitcoinj.wallet.SendRequest)>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1: void run()>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void onActive()>":["<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void onCurrencyChange()>","<androidx.loader.content.Loader: void startLoading()>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>"],"<androidx.recyclerview.widget.AsyncDifferConfig: void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidEndTag()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage buildPartial()>":["<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<com.google.protobuf.DynamicMessage: void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor[],com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.FieldSet: void makeImmutable()>"],"<de.schildbach.wallet.data.ThrottelingLiveData: void <init>(long)>":["<androidx.lifecycle.LiveData: void <init>()>","<android.os.Handler: void <init>()>"],"<org.spongycastle.asn1.DERPrintableString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.spongycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>","<org.spongycastle.asn1.LimitedInputStream: void <init>(java.io.InputStream,int)>"],"<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void collectOneValue(boolean,int,java.lang.Object)>":["<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>","<com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>","<com.google.common.collect.ImmutableList: java.lang.Object set(int,java.lang.Object)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner build()>":["<org.bitcoinj.wallet.Protos$TransactionSigner: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner buildPartial()>"],"<java.lang.Float: java.lang.Float valueOf(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Transaction$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionInputFieldBuilder()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.SingleFieldBuilder getExchangeRateFieldBuilder()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.SingleFieldBuilder getConfidenceFieldBuilder()>","<org.bitcoinj.wallet.Protos$Transaction: boolean access$10800()>","<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.RepeatedFieldBuilder getTransactionOutputFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.collect.Iterators$ArrayItr: void <clinit>()>":["<com.google.common.collect.Iterators$ArrayItr: void <clinit>()>","<com.google.common.collect.Iterators$ArrayItr: void <init>(java.lang.Object[],int,int,int)>"],"<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readUInt32()>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.CodedInputStream: int readInt32()>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters buildPartial()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder toBuilder()>","<com.google.protobuf.CodedInputStream: long readUInt64()>","<com.google.protobuf.CodedInputStream: long readInt64()>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: org.bitcoinj.wallet.Protos$Wallet$EncryptionType valueOf(int)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<org.bitcoinj.wallet.Protos$Key: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void initFields()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.KeyChainGroup: long getEarliestKeyCreationTime()>":["<java.lang.Math: long min(long,long)>","<org.bitcoinj.wallet.BasicKeyChain: long getEarliestKeyCreationTime()>","<java.util.LinkedList: java.util.Iterator iterator()>"],"<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)>":["<java.lang.Object: java.lang.Object clone()>","<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>","<com.google.common.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)>"],"<org.slf4j.event.EventRecodingLogger: void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue)>":["<java.lang.Object: void <init>()>","<org.slf4j.helpers.SubstituteLogger: java.lang.String getName()>"],"<com.google.common.util.concurrent.Service$State$3: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float)>":["<android.view.animation.ScaleAnimation: void setInterpolator(android.view.animation.Interpolator)>","<android.view.animation.AlphaAnimation: void setDuration(long)>","<android.view.animation.AnimationSet: void <init>(boolean)>","<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>","<android.view.animation.AlphaAnimation: void <init>(float,float)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<android.view.animation.ScaleAnimation: void setDuration(long)>","<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>","<android.view.animation.AlphaAnimation: void setInterpolator(android.view.animation.Interpolator)>","<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>"],"<org.bitcoinj.wallet.DeterministicSeed: void <init>(java.lang.String,byte[],java.lang.String,long)>":["<org.bitcoinj.wallet.DeterministicSeed: java.util.List decodeMnemonicCode(java.lang.String)>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(java.util.List,byte[],java.lang.String,long)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void onDestroyView()>":["<androidx.fragment.app.Fragment: void onDestroyView()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: boolean getExchangeDirection()>","<de.schildbach.wallet.Configuration: void setLastExchangeDirection(boolean)>"],"<org.bitcoinj.core.TxConfidenceTable: void <init>(int)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.core.TxConfidenceTable$1: void <init>(org.bitcoinj.core.TxConfidenceTable,int)>","<java.lang.ref.ReferenceQueue: void <init>()>"],"<de.schildbach.wallet.util.OnFirstPreDraw: void <init>(android.view.ViewTreeObserver,de.schildbach.wallet.util.OnFirstPreDraw$Callback)>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>","<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.joran.action.ShutdownHookAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<org.bitcoinj.core.PeerSocketHandler: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.PeerAddress)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <init>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.MessageSerializer getDefaultSerializer()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void <init>()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void maybeForceBuilderInitialization()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.wallet.Protos$Wallet$EncryptionType getUnderstoodEncryptionType()>":["<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>"],"<ch.qos.logback.core.joran.spi.EventPlayer: void play(java.util.List)>":["<ch.qos.logback.core.joran.spi.Interpreter: void endElement(ch.qos.logback.core.joran.event.EndEvent)>","<ch.qos.logback.core.joran.spi.Interpreter: void startElement(ch.qos.logback.core.joran.event.StartEvent)>","<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext()>","<java.util.ArrayList: int size()>","<ch.qos.logback.core.joran.spi.Interpreter: void characters(ch.qos.logback.core.joran.event.BodyEvent)>","<java.util.ArrayList: java.lang.Object get(int)>","<ch.qos.logback.core.joran.spi.InterpretationContext: void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent)>"],"<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.google.protobuf.GeneratedMessage$Builder: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Extension$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>","<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Transaction$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>","<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<java.util.Collections: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$X509Certificates$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$200(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<org.bitcoin.protocols.payments.Protos$Output$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.crypto.DeterministicKey: java.lang.String toString()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)>","<org.bitcoinj.crypto.DeterministicKey: boolean isEncrypted()>","<com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper omitNullValues()>","<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>","<org.bitcoinj.crypto.DeterministicKey: boolean isPubKeyOnly()>","<org.bitcoinj.crypto.LazyECPoint: byte[] getEncoded()>","<org.bitcoinj.crypto.DeterministicKey: java.lang.String getPathAsString()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long)>","<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>"],"<com.google.common.base.Joiner: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>"],"<com.google.common.util.concurrent.AbstractService$StateSnapshot: com.google.common.util.concurrent.Service$State externalState()>":["<com.google.common.util.concurrent.Service$State: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(java.lang.Object,java.lang.Object)>":["<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(com.google.common.base.Function,java.lang.Object)>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: void <init>(java.lang.String)>":["<ch.qos.logback.core.rolling.helper.PeriodicityType: void <clinit>()>","<java.util.GregorianCalendar: void <init>()>","<ch.qos.logback.core.rolling.helper.RollingCalendar: ch.qos.logback.core.rolling.helper.PeriodicityType computePeriodicityType()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Output: boolean access$500()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.AbstractBlockChain: void addReorganizeListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.ReorganizeListener)>":["<org.bitcoinj.utils.ListenerRegistration: void <init>(java.lang.Object,java.util.concurrent.Executor)>","<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>"],"<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object)>":["<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$9$1: void <init>(de.schildbach.wallet.ui.scan.ScanActivity$9)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$PeerAddress: org.bitcoinj.wallet.Protos$PeerAddress$Builder newBuilderForType()>"],"<com.google.protobuf.Descriptors$MethodDescriptor: void access$2700(com.google.protobuf.Descriptors$MethodDescriptor,com.google.protobuf.DescriptorProtos$MethodDescriptorProto)>":["<com.google.protobuf.Descriptors$MethodDescriptor: void setProto(com.google.protobuf.DescriptorProtos$MethodDescriptorProto)>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>":["<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.Converter compile()>","<ch.qos.logback.core.pattern.parser.Compiler: void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>"],"<de.schildbach.wallet.ui.WalletActivity: void onActivityResult(int,int,android.content.Intent)>":["<de.schildbach.wallet.ui.WalletActivity$15: void <init>(de.schildbach.wallet.ui.WalletActivity,java.lang.String)>","<androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>","<de.schildbach.wallet.ui.InputParser$StringInputParser: void parse()>"],"<org.bitcoinj.core.Sha256Hash: java.lang.String toString()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>"],"<org.bitcoin.protocols.payments.Protos: void <clinit>()>":["<com.google.protobuf.Descriptors$FileDescriptor: java.util.List getMessageTypes()>","<com.google.protobuf.Descriptors$FileDescriptor: void internalBuildGeneratedFileFrom(java.lang.String[],com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$FileDescriptor$InternalDescriptorAssigner)>","<java.lang.String: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$1: void <init>()>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>","<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String[])>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Wallet walletToProto(org.bitcoinj.wallet.Wallet)>":["<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag$Builder newBuilder()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.util.Date: long getTime()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.wallet.Protos$ScryptParameters getScryptParameters()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addAllKey(java.lang.Iterable)>","<org.bitcoinj.utils.BaseTaggableObject: java.util.Map getTags()>","<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder setTag(java.lang.String)>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script build()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Sha256Hash getLastBlockSeenHash()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.crypto.KeyCrypter getKeyCrypter()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder setClassName(java.lang.String)>","<org.bitcoinj.wallet.Wallet: int getLastBlockSeenHeight()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addTransaction(org.bitcoinj.wallet.Protos$Transaction)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setVersion(int)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Wallet: java.lang.Iterable getWalletTransactions()>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.wallet.Wallet: java.util.List getWatchedScripts()>","<org.bitcoinj.wallet.Wallet: long getLastBlockSeenTimeSecs()>","<org.bitcoinj.wallet.WalletProtobufSerializer: com.google.protobuf.ByteString hashToByteString(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setNetworkIdentifier(java.lang.String)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setKeyRotationTime(long)>","<java.util.HashMap: java.util.Set entrySet()>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockTimeSecs(long)>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addWatchedScript(org.bitcoinj.wallet.Protos$Script)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addTransactionSigners(org.bitcoinj.wallet.Protos$TransactionSigner$Builder)>","<org.bitcoinj.wallet.Wallet: java.lang.String getDescription()>","<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<org.bitcoinj.wallet.Wallet: int getVersion()>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder setProgram(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setDescription(java.lang.String)>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setEncryptionParameters(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void populateExtensions(org.bitcoinj.wallet.Wallet,org.bitcoinj.wallet.Protos$Wallet$Builder)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.NetworkParameters getNetworkParameters()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script$Builder newBuilder()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Protos$Transaction makeTxProto(org.bitcoinj.wallet.WalletTransaction)>","<org.bitcoinj.wallet.Protos$TransactionSigner: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addTags(org.bitcoinj.wallet.Protos$Tag$Builder)>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner$Builder setData(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setEncryptionType(org.bitcoinj.wallet.Protos$Wallet$EncryptionType)>","<org.bitcoinj.wallet.Protos$TransactionSigner: org.bitcoinj.wallet.Protos$TransactionSigner$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder setCreationTimestamp(long)>","<org.bitcoinj.wallet.Wallet: java.util.List getTransactionSigners()>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockHeight(int)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet build()>","<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.wallet.Protos$Wallet$EncryptionType getUnderstoodEncryptionType()>","<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet$Builder newBuilder()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder setData(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Wallet: java.util.Date getKeyRotationTime()>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>","<java.util.HashSet: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Wallet: java.util.List serializeKeyChainGroupToProtobuf()>"],"<ch.qos.logback.core.spi.AppenderAttachableImpl: void addAppender(ch.qos.logback.core.Appender)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<ch.qos.logback.core.util.COWArrayList: void addIfAbsent(java.lang.Object)>"],"<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])>":["<java.lang.Object: void <init>()>"],"<androidx.lifecycle.LiveData: void <init>()>":["<androidx.lifecycle.LiveData: void <clinit>()>","<androidx.arch.core.internal.SafeIterableMap: void <init>()>","<java.lang.Object: void <init>()>","<androidx.lifecycle.LiveData$1: void <init>(androidx.lifecycle.LiveData)>"],"<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(org.xml.sax.InputSource)>":["<java.lang.System: long currentTimeMillis()>","<ch.qos.logback.core.joran.event.SaxEventRecorder: java.util.List getSaxEventList()>","<ch.qos.logback.core.joran.event.SaxEventRecorder: void <init>(ch.qos.logback.core.Context)>","<ch.qos.logback.core.status.StatusUtil: void <init>(ch.qos.logback.core.Context)>","<ch.qos.logback.core.joran.event.SaxEventRecorder: java.util.List recordEvents(org.xml.sax.InputSource)>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.util.List)>","<ch.qos.logback.core.joran.GenericConfigurator: void registerSafeConfiguration(java.util.List)>","<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<ch.qos.logback.core.status.StatusUtil: boolean noXMLParsingErrorsOccurred(long)>"],"<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>":["<java.util.TreeMap: java.util.Set entrySet()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: void initFields()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<org.bitcoin.protocols.payments.Protos$Output: void <clinit>()>","<java.io.IOException: java.lang.String getMessage()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.CodedInputStream: long readUInt64()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<androidx.arch.core.internal.SafeIterableMap$DescendingIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>","<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>":["<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<org.bitcoinj.core.Sha256Hash: java.lang.String toString()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction: org.bitcoinj.core.Sha256Hash getHash()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureMessageTypeIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>":["<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<com.google.common.collect.ImmutableList$Itr: java.lang.Object get(int)>","<java.util.NoSuchElementException: void <init>()>","<com.google.common.collect.FluentIterable$3$1: java.lang.Object get(int)>","<com.google.common.collect.Iterators$ArrayItr: java.lang.Object get(int)>"],"<com.google.protobuf.CodedInputStream: int readRawVarint32()>":["<com.google.protobuf.CodedInputStream: long readRawVarint64SlowPath()>"],"<com.google.protobuf.TextFormat: void print(com.google.protobuf.MessageOrBuilder,java.lang.Appendable)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat$Printer: void access$400(com.google.protobuf.TextFormat$Printer,com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator)>","<com.google.protobuf.TextFormat$TextGenerator: void <init>(java.lang.Appendable,com.google.protobuf.TextFormat$1)>"],"<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void computeNextCheck()>":["<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date getNextTriggeringDate(java.util.Date)>","<java.util.Date: long getTime()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output build()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output buildPartial()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Output: boolean isInitialized()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.common.base.Preconditions: int checkElementIndex(int,int)>":["<com.google.common.base.Preconditions: int checkElementIndex(int,int,java.lang.String)>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: org.bitcoinj.crypto.EncryptedData encrypt(byte[],org.spongycastle.crypto.params.KeyParameter)>":["<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.bitcoinj.crypto.EncryptedData: void <init>(byte[],byte[])>","<org.spongycastle.crypto.engines.AESFastEngine: void <init>()>","<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>","<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>","<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>","<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int doFinal(byte[],int)>","<java.util.Arrays: byte[] copyOf(byte[],int)>","<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>","<java.security.SecureRandom: void nextBytes(byte[])>","<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>","<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int getOutputSize(int)>"],"<com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Extension: void <init>(boolean)>","<org.bitcoinj.wallet.Protos$Extension: void initFields()>","<org.bitcoinj.wallet.Protos$Extension$1: void <init>()>","<org.bitcoinj.wallet.Protos$Extension: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)>":["<java.util.ArrayList: boolean add(java.lang.Object)>"],"<org.spongycastle.asn1.DERUTF8String: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl$2$1: void run()>":["<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>","<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>","<androidx.fragment.app.Fragment: int getStateAfterAnimating()>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>"],"<com.google.protobuf.Descriptors$EnumValueDescriptor: com.google.protobuf.Message toProto()>":["<com.google.protobuf.Descriptors$EnumValueDescriptor: com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto toProto()>"],"<ch.qos.logback.classic.util.ContextSelectorStaticBinder: ch.qos.logback.classic.util.ContextSelectorStaticBinder getSingleton()>":["<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <clinit>()>"],"<org.spongycastle.crypto.digests.GeneralDigest: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: void <init>(com.google.common.util.concurrent.AggregateFutureState$1)>":["<com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper: void <init>()>"],"<org.bitcoinj.wallet.Wallet: java.util.Map getTransactionPool(org.bitcoinj.wallet.WalletTransaction$Pool)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.Enum: int ordinal()>","<org.bitcoinj.wallet.Wallet$11: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$1000()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<org.bitcoinj.core.TransactionInput: void setSequenceNumber(long)>":["<org.bitcoinj.core.ChildMessage: void unCache()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$DescriptorProto)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$6: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onFailure(java.lang.Exception)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void onFailure(java.lang.Exception)>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder toBuilder()>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder(org.bitcoin.protocols.payments.Protos$Payment)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.Sha256Hash: byte[] hashTwice(byte[],int,int)>":["<org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<ch.qos.logback.core.util.CachingDateFormatter: void <init>(java.lang.String,java.util.Locale)>":["<java.lang.Object: void <init>()>","<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>"],"<org.bitcoinj.core.Address: org.bitcoinj.core.Address fromP2SHHash(org.bitcoinj.core.NetworkParameters,byte[])>":["<org.bitcoinj.core.NetworkParameters: int getP2SHHeader()>","<org.bitcoinj.core.Address: void <init>(org.bitcoinj.core.NetworkParameters,int,byte[])>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<de.schildbach.wallet.WalletApplication: void <clinit>()>":["<java.lang.System: long currentTimeMillis()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<java.lang.Class: java.lang.Package getPackage()>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent fromBitcoinUri(org.bitcoinj.uri.BitcoinURI)>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<org.bitcoinj.uri.BitcoinURI: java.lang.String getLabel()>","<de.schildbach.wallet.data.PaymentIntent: void <init>(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.uri.BitcoinURI: java.lang.Object getParameterByName(java.lang.String)>","<org.bitcoinj.uri.BitcoinURI: org.bitcoinj.core.Address getAddress()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.uri.BitcoinURI: org.bitcoinj.core.Coin getAmount()>","<org.bitcoinj.uri.BitcoinURI: java.lang.String getPaymentRequestUrl()>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent$Output[] buildSimplePayTo(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>","<de.schildbach.wallet.data.PaymentIntent$Standard: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: byte[] base64UrlDecode(java.lang.String)>"],"<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.bitcoinj.wallet.KeyChainGroup: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.ui.RequestCoinsFragment$2: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Utils: byte[] sha256hash160(byte[])>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: int doFinal(byte[],int)>","<org.spongycastle.crypto.digests.RIPEMD160Digest: void <init>()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: byte[] hash(byte[])>","<org.spongycastle.crypto.digests.GeneralDigest: void update(byte[],int,int)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.CodedInputStream: int readFixed32()>":["<com.google.protobuf.CodedInputStream: int readRawLittleEndian32()>"],"<org.bitcoinj.wallet.Protos$TransactionOutput: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$7600()>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>":["<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>"],"<org.bitcoinj.wallet.Wallet: void toStringHelper(java.lang.StringBuilder,java.util.Map,org.bitcoinj.core.AbstractBlockChain,java.util.Comparator)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.util.TreeSet: void <init>(java.util.Comparator)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.util.HashMap: java.util.Collection values()>","<java.util.TreeSet: boolean addAll(java.util.Collection)>","<java.util.TreeSet: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<com.google.common.base.Absent: void <init>()>":["<com.google.common.base.Optional: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void onSuccess(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.WalletApplication: void processDirectTransaction(org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.send.SweepWalletViewModel access$100(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.WalletApplication access$1200(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence: void addEventListener(org.bitcoinj.core.TransactionConfidence$Listener)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$500(de.schildbach.wallet.ui.send.SweepWalletFragment,de.schildbach.wallet.ui.send.SweepWalletViewModel$State)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionConfidence getConfidence()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: org.bitcoinj.core.TransactionConfidence$Listener access$1400(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.lifecycle.LifecycleDispatcher: void <clinit>()>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>","<androidx.lifecycle.LifecycleDispatcher: void <clinit>()>"],"<de.schildbach.wallet.ui.CurrencyCalculatorLink: void update()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<java.lang.ArithmeticException: void <init>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: org.bitcoinj.core.Coin getMaxMoney()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Transaction: java.util.List getOutputs()>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Collections: void <clinit>()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager$1: void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper)>":["<android.os.Handler: void <init>(android.os.Looper)>"],"<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(java.lang.String,java.lang.String)>":["<java.lang.String: char[] toCharArray()>","<com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>","<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet)>"],"<androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)>":["<androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress build()>"],"<com.google.protobuf.Utf8: int partialIsValidUtf8(byte[],int,int)>":["<com.google.protobuf.Utf8: int partialIsValidUtf8NonAscii(byte[],int,int)>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread: void <init>(android.bluetooth.BluetoothAdapter)>":["<de.schildbach.wallet.offline.AcceptBluetoothThread: void <init>(android.bluetooth.BluetoothServerSocket,de.schildbach.wallet.offline.AcceptBluetoothThread$1)>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>"],"<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.CharMatcher$FastMatcher: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.lang.Object)>":["<com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.util.Map$Entry)>"],"<org.bitcoinj.wallet.DefaultCoinSelector: boolean isSelectable(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void queueOnTransactionConfidenceChanged(org.bitcoinj.core.Transaction)>":["<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Wallet$3: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Transaction)>","<org.bitcoinj.wallet.Wallet$3: void run()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<androidx.fragment.app.FragmentManagerImpl: void saveNonConfig()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.util.ArrayList: void <init>(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.util.SparseArray: int size()>","<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.List,java.util.List,java.util.List)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureExtensionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: void <init>(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.spongycastle.asn1.ASN1GeneralizedTime: java.util.Date getDate()>","<org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.wallet.KeyChain$KeyPurpose: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<okio.Timeout: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$ServiceDescriptor: void <init>(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,int,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$ServiceDescriptor: void <init>(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,int)>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6100()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: long readSFixed64()>":["<com.google.protobuf.CodedInputStream: long readRawLittleEndian64()>"],"<androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>":["<androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>","<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: java.util.List getFragments()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: void <init>()>"],"<androidx.collection.ArraySet: void <init>(int)>":["<java.lang.Object: void <init>()>","<androidx.collection.ArraySet: void allocArrays(int)>","<androidx.collection.ArraySet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setFiatValue(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.bitcoinj.wallet.Wallet: boolean isWatchedScript(org.bitcoinj.script.Script)>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.HashSet: boolean contains(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean everythingPlausible()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isPayeePlausible()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isPasswordPlausible()>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: boolean isAmountPlausible()>"],"<org.spongycastle.asn1.DERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>","<org.spongycastle.asn1.DERApplicationSpecific: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERUTF8String: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERSequence: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.ASN1Integer: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.ASN1GeneralizedTime: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.ASN1Boolean: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERBitString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERT61String: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERBMPString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERPrintableString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERIA5String: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERNumericString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERNull: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERVisibleString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.ASN1Enumerated: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.BERSequence: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>","<org.spongycastle.asn1.DERGeneralString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DEROctetString: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DLSequence: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.ASN1UTCTime: void encode(org.spongycastle.asn1.ASN1OutputStream)>","<org.spongycastle.asn1.DERUniversalString: void encode(org.spongycastle.asn1.ASN1OutputStream)>"],"<org.spongycastle.crypto.engines.AESFastEngine: int subWord(int)>":["<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilder(org.bitcoinj.wallet.Protos$DeterministicKey)>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilder()>","<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder mergeFrom(org.bitcoinj.wallet.Protos$DeterministicKey)>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder access$9000()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder create()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: boolean isInitialized()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$MessageOptions getOptions()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: int getExtensionCount()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: boolean isInitialized()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getField(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: boolean hasOptions()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getNestedType(int)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: int getNestedTypeCount()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: int getEnumTypeCount()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: int getFieldCount()>","<com.google.protobuf.DescriptorProtos$MessageOptions: boolean isInitialized()>"],"<de.schildbach.wallet.ui.TransactionsAdapter$ListItem: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>":["<android.util.AndroidRuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.WalletFiles: void <init>(org.bitcoinj.wallet.Wallet,java.io.File,long,java.util.concurrent.TimeUnit)>":["<java.lang.Object: void <init>()>","<java.util.concurrent.atomic.AtomicBoolean: void <init>()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <clinit>()>","<org.bitcoinj.wallet.WalletFiles$1: void <init>(org.bitcoinj.wallet.WalletFiles,org.bitcoinj.wallet.Wallet)>","<org.bitcoinj.utils.ContextPropagatingThreadFactory: void <init>(java.lang.String,int)>","<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>","<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>","<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>","<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.String)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment: void onAttach(android.content.Context)>":["<de.schildbach.wallet.ui.AbstractWalletActivity: de.schildbach.wallet.WalletApplication getWalletApplication()>","<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setDepth(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder: void bindFee(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)>":["<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin negate()>"],"<org.spongycastle.crypto.engines.AESFastEngine: void unpackBlock(byte[],int)>":["<org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>"],"<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint compressPoint(org.spongycastle.math.ec.ECPoint)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.Arrays: byte[] copyOf(byte[],int)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.core.ECKey: org.spongycastle.math.ec.ECPoint publicPointFromPrivate(java.math.BigInteger)>","<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.spongycastle.math.ec.ECPoint)>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: int getFingerprint()>"],"<androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>":["<androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)>"],"<androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void <init>()>":["<java.lang.Object: void <init>()>","<android.os.Handler: void <init>(android.os.Looper)>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<com.google.protobuf.AbstractMessageLite$Builder: void addAll(java.lang.Iterable,java.util.Collection)>":["<java.lang.NullPointerException: void <init>()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.google.protobuf.AbstractMessageLite$Builder: void checkForNullValues(java.lang.Iterable)>","<com.google.common.collect.ImmutableList: java.util.Iterator iterator()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<ch.qos.logback.core.joran.spi.EventPlayer: void <init>(ch.qos.logback.core.joran.spi.Interpreter)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.crypto.KeyCrypterException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>"],"<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.ByteString: byte[] toByteArray()>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.LiteralByteString: void copyToInternal(byte[],int,int,int)>","<com.google.protobuf.Internal: void <clinit>()>","<com.google.protobuf.BoundedByteString: void copyToInternal(byte[],int,int,int)>"],"<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream)>"],"<ch.qos.logback.core.pattern.util.AsIsEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>":["<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"],"<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.ByteString: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Tag$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag buildPartial()>"],"<org.bitcoinj.wallet.Protos$Key$Type: org.bitcoinj.wallet.Protos$Key$Type[] values()>":["<java.lang.Object: java.lang.Object clone()>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<ch.qos.logback.core.pattern.PatternLayoutBase: void <init>()>":["<java.util.HashMap: void <init>()>","<ch.qos.logback.core.LayoutBase: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$1: com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor)>":["<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$FileDescriptor access$7002(com.google.protobuf.Descriptors$FileDescriptor)>","<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerState$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions$1: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void initFields()>"],"<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>":["<org.bitcoinj.core.PeerGroup$6: void run()>","<java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)>","<org.bitcoinj.core.PeerGroup$5: void run()>","<org.bitcoinj.core.PeerGroup$10: void run()>"],"<org.bitcoinj.net.FilterMerger: void <init>(double)>":["<java.lang.Object: void <init>()>","<java.lang.Math: double random()>"],"<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>":["<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>","<com.google.protobuf.CodedOutputStream: void writeBytesNoTag(com.google.protobuf.ByteString)>"],"<org.bitcoinj.core.PeerGroup$10: void go()>":["<org.bitcoinj.core.PeerGroup: java.util.concurrent.CopyOnWriteArrayList access$2200(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup: void <clinit>()>","<org.bitcoinj.core.PeerGroup: void setFastCatchupTimeSecs(long)>","<java.lang.UnsupportedOperationException: void <init>()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.net.FilterMerger access$100(org.bitcoinj.core.PeerGroup)>","<java.lang.Enum: int ordinal()>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>","<org.bitcoinj.core.PeerGroup: java.util.concurrent.CopyOnWriteArrayList access$2100(org.bitcoinj.core.PeerGroup)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.PeerGroup: java.util.Map access$2300(org.bitcoinj.core.PeerGroup)>","<org.bitcoinj.core.PeerGroup$17: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.bitcoinj.core.PeerGroup: boolean access$2000(org.bitcoinj.core.PeerGroup)>","<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.core.PeerGroup$FilterRecalculateMode: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.AbstractBlockChain: void resetFalsePositiveEstimate()>","<org.bitcoinj.net.FilterMerger: org.bitcoinj.net.FilterMerger$Result calculate(com.google.common.collect.ImmutableList)>","<org.bitcoinj.core.BlockChain: boolean shouldVerifyTransactions()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<androidx.room.migration.Migration: void <init>(int,int)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<org.spongycastle.crypto.digests.LongDigest: void <init>()>":["<java.lang.Object: void <init>()>","<org.spongycastle.crypto.digests.SHA512Digest: void reset()>"],"<org.spongycastle.crypto.digests.SHA512Digest: int doFinal(byte[],int)>":["<org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>","<org.spongycastle.crypto.digests.LongDigest: void finish()>","<org.spongycastle.crypto.digests.SHA512Digest: void reset()>"],"<okio.Buffer: void readFully(byte[])>":["<okio.Buffer: int read(byte[],int,int)>","<java.io.EOFException: void <init>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: void runLockedCleanup()>":["<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: void maybeDrainReferenceQueues()>","<java.util.concurrent.atomic.AtomicInteger: void set(int)>","<com.google.common.collect.MapMakerInternalMap$Segment: void maybeDrainReferenceQueues()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: void maybeDrainReferenceQueues()>","<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: void maybeDrainReferenceQueues()>"],"<okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)>":["<java.lang.String: boolean startsWith(java.lang.String)>","<java.lang.String: boolean isEmpty()>","<okhttp3.internal.Util: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int length()>","<java.lang.String: boolean contains(java.lang.CharSequence)>","<okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)>","<java.lang.AssertionError: void <init>(java.lang.Object)>","<okhttp3.internal.Util: java.lang.String inet6AddressToAscii(byte[])>","<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>","<java.net.IDN: java.lang.String toASCII(java.lang.String)>","<java.lang.String: boolean endsWith(java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.FieldSet: void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>","<com.google.protobuf.DynamicMessage$Builder: void ensureIsMutable()>","<com.google.protobuf.DynamicMessage$Builder: void ensureEnumValueDescriptor(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.DynamicMessage$Builder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.FieldSet: void clearField(com.google.protobuf.FieldSet$FieldDescriptorLite)>"],"<com.google.protobuf.CodedInputStream: int readSFixed32()>":["<com.google.protobuf.CodedInputStream: int readRawLittleEndian32()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput getInput(long)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void access$800(de.schildbach.wallet.ui.send.SweepWalletFragment,org.bitcoinj.core.ECKey)>":["<de.schildbach.wallet.ui.send.SweepWalletFragment: void askConfirmSweep(org.bitcoinj.core.ECKey)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureEnumTypeIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<java.lang.String: boolean endsWith(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Thread: java.lang.String getName()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: void <init>(java.lang.Class,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.spi.PackagingDataCalculator: void calculate(ch.qos.logback.classic.spi.IThrowableProxy)>":["<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed()>","<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.IThrowableProxy getCause()>","<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray()>","<ch.qos.logback.classic.spi.PackagingDataCalculator: void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[])>"],"<com.google.protobuf.Descriptors$OneofDescriptor: void <init>(com.google.protobuf.DescriptorProtos$OneofDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>":["<java.lang.Object: void <init>()>","<com.google.protobuf.Descriptors: java.lang.String access$1500(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String)>","<com.google.protobuf.Descriptors: void <clinit>()>"],"<de.schildbach.wallet.data.SelectedExchangeRateLiveData$1: void deliverResult(android.database.Cursor)>":["<de.schildbach.wallet.data.ExchangeRatesProvider: de.schildbach.wallet.data.ExchangeRate getExchangeRate(android.database.Cursor)>","<de.schildbach.wallet.data.SelectedExchangeRateLiveData: void access$000(de.schildbach.wallet.data.SelectedExchangeRateLiveData,java.lang.Object)>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.Message getDefaultInstanceForType()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.KeyChainGroup: int numKeys()>":["<java.util.LinkedList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.BasicKeyChain: int numKeys()>"],"<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>(java.lang.String)>"],"<org.bitcoinj.params.RegTestParams: void <init>()>":["<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.RegTestParams: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.params.TestNet2Params: void <init>()>"],"<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List getLoggers()>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.HashMap: java.util.Collection values()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$1: boolean handleTx(org.bitcoinj.core.Transaction)>":["<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<de.schildbach.wallet.offline.AcceptBluetoothService: boolean access$000(de.schildbach.wallet.offline.AcceptBluetoothService,org.bitcoinj.core.Transaction)>"],"<ch.qos.logback.core.recovery.RecoveryCoordinator: long getBackoffCoefficient()>":["<ch.qos.logback.core.recovery.RecoveryCoordinator: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void sendPayment(org.bitcoinj.wallet.SendRequest,org.bitcoinj.core.Coin)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,org.bitcoinj.wallet.Wallet,android.os.Handler,org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Coin)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void sendCoinsOffline(org.bitcoinj.wallet.SendRequest)>"],"<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void <init>(java.util.concurrent.ExecutorService)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.AbstractListeningExecutorService: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: boolean access$13100()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>":["<java.lang.Object: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.rolling.RollingFileAppender: boolean checkForCollisionsInPreviousRollingFileAppenders()>":["<ch.qos.logback.core.rolling.RollingFileAppender: boolean innerCheckForFileNamePatternCollisionInPreviousRFA(ch.qos.logback.core.rolling.helper.FileNamePattern)>"],"<org.bitcoinj.wallet.Protos$Key$Type: org.bitcoinj.wallet.Protos$Key$Type valueOf(int)>":["<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<de.schildbach.wallet.WalletApplication$3: void loadWalletFromProtobuf()>":["<de.schildbach.wallet.WalletApplication: org.slf4j.Logger access$000()>","<java.lang.Error: void <init>(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<de.schildbach.wallet.util.WalletUtils: void <clinit>()>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration access$400(de.schildbach.wallet.WalletApplication)>","<de.schildbach.wallet.util.WalletUtils: void autoBackupWallet(android.content.Context,org.bitcoinj.wallet.Wallet)>","<java.io.FileInputStream: void <init>(java.io.File)>","<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.WalletFiles access$202(de.schildbach.wallet.WalletApplication,org.bitcoinj.wallet.WalletFiles)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.NetworkParameters getParams()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.WalletApplication: void autosaveWalletNow()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.WalletFiles autosaveToFile(java.io.File,long,java.util.concurrent.TimeUnit,org.bitcoinj.wallet.WalletFiles$Listener)>","<de.schildbach.wallet.util.Toast: void <init>(android.content.Context)>","<org.bitcoinj.wallet.Wallet: void cleanup()>","<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(java.io.InputStream,org.bitcoinj.wallet.WalletExtension[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.NetworkParameters)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.Constants: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.UnreadableWalletException: void <init>(java.lang.String)>","<de.schildbach.wallet.WalletApplication: java.io.File access$300(de.schildbach.wallet.WalletApplication)>","<java.lang.StringBuilder: void <init>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<org.bitcoinj.wallet.Wallet: boolean isConsistent()>","<org.bitcoinj.core.NetworkParameters: boolean equals(java.lang.Object)>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<de.schildbach.wallet.util.Toast: void postLongToast(int,java.lang.Object[])>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <clinit>()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer: void <init>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.util.WalletUtils: org.bitcoinj.wallet.Wallet restoreWalletFromAutoBackup(android.content.Context)>","<de.schildbach.wallet.Configuration: void armBackupReminder()>","<java.io.FileInputStream: void close()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>"],"<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>":["<org.spongycastle.crypto.CryptoException: void <init>(java.lang.String)>"],"<org.bitcoinj.store.SPVBlockStore: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.lang.Object: void <init>()>","<org.bitcoinj.store.SPVBlockStore: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<ch.qos.logback.core.joran.action.NOPAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.squareup.okhttp.Protocol: void <clinit>()>":["<com.squareup.okhttp.Protocol: void <clinit>()>","<com.squareup.okhttp.Protocol: void <init>(java.lang.String,int,java.lang.String)>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,java.lang.String)>":["<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <init>(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback)>"],"<org.bitcoinj.crypto.KeyCrypterScrypt: org.spongycastle.crypto.params.KeyParameter deriveKey(java.lang.CharSequence)>":["<org.bitcoinj.wallet.Protos$ScryptParameters: long getN()>","<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>","<org.bitcoinj.wallet.Protos$ScryptParameters: com.google.protobuf.ByteString getSalt()>","<org.bitcoinj.crypto.KeyCrypterException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getR()>","<org.bitcoinj.crypto.KeyCrypterScrypt: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<com.google.protobuf.ByteString: byte[] toByteArray()>","<com.lambdaworks.crypto.SCrypt: byte[] scrypt(byte[],byte[],int,int,int,int)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.util.Arrays: void fill(byte[],byte)>","<com.lambdaworks.crypto.SCrypt: void <clinit>()>","<org.bitcoinj.crypto.KeyCrypterScrypt: byte[] convertToByteArray(java.lang.CharSequence)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.wallet.Protos$ScryptParameters: int getP()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>"],"<org.bitcoinj.wallet.BasicKeyChain$State: void <clinit>()>":["<org.bitcoinj.wallet.BasicKeyChain$State: void <clinit>()>","<org.bitcoinj.wallet.BasicKeyChain$State: void <init>(java.lang.String,int)>"],"<de.schildbach.wallet.ui.RequestCoinsFragment: void onViewCreated(android.view.View,android.os.Bundle)>":["<de.schildbach.wallet.Configuration: boolean getLastExchangeDirection()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void requestFocus()>","<de.schildbach.wallet.ui.CurrencyCalculatorLink: void setExchangeDirection(boolean)>","<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>"],"<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters)>":["<java.util.ArrayList: void <init>(int)>","<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.BasicKeyChain,java.util.List,java.util.EnumMap,org.bitcoinj.crypto.KeyCrypter)>"],"<org.bitcoinj.wallet.DefaultRiskAnalysis$Analyzer: org.bitcoinj.wallet.RiskAnalysis create(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List)>":["<org.bitcoinj.wallet.DefaultRiskAnalysis$Analyzer: org.bitcoinj.wallet.DefaultRiskAnalysis create(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,java.util.List)>"],"<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable[])>":["<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1Encodable[],boolean)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: com.google.protobuf.Message buildPartial()>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput buildPartial()>"],"<de.schildbach.wallet.ui.WalletActivity: void handleScan(android.view.View)>":["<android.animation.AnimatorSet: void end()>","<de.schildbach.wallet.ui.AbstractWalletActivity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void <clinit>()>","<android.app.Activity: void <clinit>()>","<de.schildbach.wallet.ui.scan.ScanActivity: void startForResult(android.app.Activity,android.view.View,int)>"],"<de.schildbach.wallet.Configuration: void touchLastUsed()>":["<java.lang.System: long currentTimeMillis()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.lang.System: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.Configuration: void <clinit>()>"],"<androidx.loader.content.ModernAsyncTask$3: void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable)>":["<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>"],"<ch.qos.logback.core.pattern.util.RegularEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>":["<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<ch.qos.logback.core.pattern.util.RegularEscapeUtil: java.lang.String formatEscapeCharsForListing(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int indexOf(int)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<org.bitcoinj.wallet.Wallet: boolean isTxConsistent(org.bitcoinj.core.Transaction,boolean)>":["<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<ch.qos.logback.classic.Logger: void error(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>"],"<java.lang.Error: void <init>(java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<org.bitcoinj.script.ScriptChunk: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>"],"<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>":["<org.bitcoinj.core.Coin: void <init>(long)>","<com.google.common.math.LongMath: long checkedAdd(long,long)>","<com.google.common.math.LongMath: void <clinit>()>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<com.google.protobuf.TextFormat$Printer: void <init>(com.google.protobuf.TextFormat$1)>":["<com.google.protobuf.TextFormat$Printer: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.protobuf.FieldSet: boolean isInitialized(java.util.Map$Entry)>":["<com.google.protobuf.WireFormat$JavaType: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<com.google.protobuf.SmallSortedMap: java.lang.Object get(java.lang.Object)>":["<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>","<java.util.TreeMap: java.lang.Object get(java.lang.Object)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.spongycastle.asn1.DefiniteLengthInputStream: int read(byte[],int,int)>":["<org.spongycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.spongycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>","<java.lang.Math: int min(int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read(byte[],int,int)>","<java.io.FilterInputStream: int read(byte[],int,int)>","<java.io.EOFException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$2500()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)>":["<androidx.localbroadcastmanager.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<android.os.Handler: boolean hasMessages(int)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord: void <init>(android.content.Intent,java.util.ArrayList)>","<android.content.Intent: int getFlags()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<android.content.Intent: java.lang.String getAction()>","<android.os.Handler: boolean sendEmptyMessage(int)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.lang.Integer: void <clinit>()>","<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>","<java.util.ArrayList: void <init>()>","<android.content.Intent: java.lang.String getScheme()>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<android.content.Intent: android.net.Uri getData()>","<android.content.Intent: java.util.Set getCategories()>"],"<androidx.fragment.app.FragmentController: void dispatchStop()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStop()>"],"<androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.Class: boolean isInstance(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <init>(java.lang.String,int,java.lang.Object)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<java.lang.String: java.lang.String trim()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>":["<java.lang.Object: void <init>()>"],"<java.lang.Integer: int rotateLeft(int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type[] values()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <init>(java.lang.String,int,int,int)>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type$1: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>"],"<androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>":["<java.lang.String: char charAt(int)>"],"<androidx.fragment.app.Fragment$AnimationInfo: void <init>()>":["<java.lang.Object: void <init>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)>":["<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>"],"<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200()>":["<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>"],"<java.lang.Long: java.lang.String toString(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.ByteString getMemoBytes()>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.ByteString: void <clinit>()>"],"<ch.qos.logback.classic.Logger: int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent)>":["<ch.qos.logback.core.spi.AppenderAttachableImpl: int appendLoopOnAppenders(java.lang.Object)>"],"<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.crypto.LazyECPoint,org.bitcoinj.crypto.EncryptedData,org.bitcoinj.crypto.DeterministicKey)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.LazyECPoint,java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$7: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment,android.os.Handler)>":["<de.schildbach.wallet.ui.send.DecodePrivateKeyTask: void <init>(android.os.Handler)>"],"<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Transaction$Pool: void <clinit>()>","<org.bitcoinj.core.TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: void <clinit>()>","<org.bitcoinj.wallet.WalletProtobufSerializer$2: void <clinit>()>","<org.bitcoinj.core.Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.WalletTransaction$Pool: org.bitcoinj.wallet.WalletTransaction$Pool[] values()>","<java.lang.Enum: int ordinal()>","<org.bitcoinj.wallet.Protos$Transaction$Pool: org.bitcoinj.wallet.Protos$Transaction$Pool[] values()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Type: org.bitcoinj.wallet.Protos$TransactionConfidence$Type[] values()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Source: org.bitcoinj.wallet.Protos$TransactionConfidence$Source[] values()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: org.bitcoinj.wallet.Protos$Transaction$Purpose[] values()>","<org.bitcoinj.core.Transaction$Purpose: org.bitcoinj.core.Transaction$Purpose[] values()>","<org.bitcoinj.core.TransactionConfidence$Source: org.bitcoinj.core.TransactionConfidence$Source[] values()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.lang.String access$300(de.schildbach.wallet.ui.send.RequestWalletBalanceTask,java.security.cert.Certificate)>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask: java.lang.String sslCertificateFingerprint(java.security.cert.Certificate)>"],"<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1EncodableVector buildEncodableVector()>":["<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>","<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>","<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>"],"<com.google.common.base.Joiner$2: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner)>":["<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1)>"],"<com.google.common.math.LongMath: long checkedAdd(long,long)>":["<com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>":["<org.slf4j.event.EventRecodingLogger: boolean isInfoEnabled()>","<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>","<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Wallet: java.util.List serializeKeyChainGroupToProtobuf()>":["<org.bitcoinj.wallet.KeyChainGroup: java.util.List serializeToProtobuf()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>":["<java.lang.Integer: void <clinit>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>"],"<org.bitcoinj.utils.Fiat: boolean isPositive()>":["<org.bitcoinj.utils.Fiat: int signum()>"],"<com.google.protobuf.UnmodifiableLazyStringList: java.lang.String get(int)>":["<com.google.protobuf.LazyStringArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.PeerAddress: void <init>(java.net.InetAddress,int,int)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.core.ChildMessage: void <init>()>","<java.math.BigInteger: void <clinit>()>"],"<org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String[] toValueArray(java.util.Vector)>":["<java.lang.String: void <clinit>()>","<java.util.Vector: java.lang.Object elementAt(int)>","<java.util.Vector: int size()>"],"<com.google.protobuf.Descriptors$FileDescriptor: void setProto(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getService(int)>","<com.google.protobuf.Descriptors$EnumDescriptor: void access$1000(com.google.protobuf.Descriptors$EnumDescriptor,com.google.protobuf.DescriptorProtos$EnumDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int)>","<com.google.protobuf.Descriptors$FieldDescriptor: void access$1200(com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.DescriptorProtos$FieldDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getMessageType(int)>","<com.google.protobuf.Descriptors$Descriptor: void access$900(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.DescriptorProtos$DescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int)>","<com.google.protobuf.Descriptors$ServiceDescriptor: void access$1100(com.google.protobuf.Descriptors$ServiceDescriptor,com.google.protobuf.DescriptorProtos$ServiceDescriptorProto)>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainState$Impediment: void <clinit>()>":["<de.schildbach.wallet.service.BlockchainState$Impediment: void <clinit>()>","<de.schildbach.wallet.service.BlockchainState$Impediment: void <init>(java.lang.String,int)>"],"<ch.qos.logback.core.util.EnvUtil: boolean isJDK5()>":["<ch.qos.logback.core.util.EnvUtil: boolean isJDK_N_OrHigher(int)>","<ch.qos.logback.core.util.EnvUtil: void <clinit>()>"],"<com.squareup.moshi.JsonReader: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.String: void <clinit>()>"],"<org.bitcoinj.utils.BaseTaggableObject: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type[] values()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$Type[] values()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()>","<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type: void <clinit>()>","<com.google.protobuf.WireFormat$FieldType: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setSequence(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)>":["<java.lang.Object: void <init>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: boolean access$1200(com.google.protobuf.Descriptors$FileDescriptor)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method access$1000(java.lang.Class,java.lang.String,java.lang.Class[])>","<java.lang.String: void <init>(java.lang.String)>","<java.lang.String: int length()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$FieldDescriptor$JavaType: void <clinit>()>","<java.lang.String: java.lang.String concat(java.lang.String)>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.Descriptors$Descriptor: void access$600(com.google.protobuf.Descriptors$Descriptor)>":["<com.google.protobuf.Descriptors$Descriptor: void crossLink()>"],"<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>":["<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>"],"<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>":["<org.spongycastle.crypto.engines.AESFastEngine: void <clinit>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,java.lang.String,byte[])>":["<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void <init>(java.lang.String,byte[])>"],"<org.bitcoinj.crypto.LazyECPoint: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>","<org.bitcoinj.crypto.LazyECPoint: byte[] getCanonicalEncoding()>"],"<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>":["<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$1100()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.spongycastle.math.ec.AbstractECMultiplier: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$2: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$23: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,de.schildbach.wallet.data.PaymentIntent)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.MessageSerializer getDefaultSerializer()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>"],"<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: java.lang.Object get()>":["<com.google.common.util.concurrent.AbstractFuture: java.lang.Object get()>"],"<com.google.common.util.concurrent.ImmediateFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<com.google.common.util.concurrent.ImmediateFuture: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.logging.Level: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.utils.Threading$2: void execute(java.lang.Runnable)>","<org.bitcoinj.core.TransactionBroadcast$EnoughAvailablePeers: void run()>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$1: void <init>(de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1,org.bitcoinj.core.ECKey)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>":["<java.lang.Object: void <init>()>"],"<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>":["<java.util.ArrayList: void <init>(int)>","<okhttp3.HttpUrl: void <clinit>()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String convert(int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: java.lang.String toString(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"],"<de.schildbach.wallet.ui.AbstractWalletActivity: boolean onOptionsItemSelected(android.view.MenuItem)>":["<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>","<androidx.fragment.app.FragmentActivity: void onBackPressed()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$6: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.math.ec.AbstractECMultiplier: org.spongycastle.math.ec.ECPoint multiply(org.spongycastle.math.ec.ECPoint,java.math.BigInteger)>":["<java.math.BigInteger: int signum()>","<org.spongycastle.math.ec.ECAlgorithms: org.spongycastle.math.ec.ECPoint validatePoint(org.spongycastle.math.ec.ECPoint)>","<java.math.BigInteger: java.math.BigInteger abs()>","<org.spongycastle.math.ec.FixedPointCombMultiplier: org.spongycastle.math.ec.ECPoint multiplyPositive(org.spongycastle.math.ec.ECPoint,java.math.BigInteger)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: void <clinit>()>":["<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: void <init>(java.lang.String,int)>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer$Type: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Output: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<ch.qos.logback.core.pattern.DynamicConverter: void setContext(ch.qos.logback.core.Context)>":["<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>"],"<androidx.collection.ArraySet: int indexOf(java.lang.Object,int)>":["<androidx.collection.ContainerHelpers: void <clinit>()>","<androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)>"],"<org.spongycastle.asn1.OIDTokenizer: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.spi.ContextAwareBase: void <init>(ch.qos.logback.core.spi.ContextAware)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: org.bitcoinj.wallet.Protos$DeterministicKey$Builder access$2400()>"],"<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)>":["<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(boolean)>"],"<com.google.common.io.BaseEncoding: void <clinit>()>":["<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(java.lang.String,java.lang.String,java.lang.Character)>","<com.google.common.io.BaseEncoding: void <clinit>()>","<java.lang.Character: java.lang.Character valueOf(char)>","<java.lang.Character: void <clinit>()>","<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(java.lang.String,java.lang.String,java.lang.Character)>","<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(java.lang.String,java.lang.String)>"],"<org.bitcoinj.wallet.Wallet: boolean isPubKeyMine(byte[])>":["<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubKey(byte[])>"],"<com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.ECKey: int hashCode()>":["<org.bitcoinj.core.ECKey: byte[] getPubKey()>","<com.google.common.primitives.Ints: int fromBytes(byte,byte,byte,byte)>"],"<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator: void <clinit>()>":["<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator: void <clinit>()>","<com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator: void <init>(java.lang.String,int)>"],"<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>":["<de.schildbach.wallet.offline.AcceptBluetoothService$6: void run()>","<de.schildbach.wallet.ui.WalletActivity$9: void run()>"],"<com.google.protobuf.CodedInputStream: boolean tryRefillBuffer(int)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException sizeLimitExceeded()>","<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int read(byte[],int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.io.FileInputStream: int read(byte[],int,int)>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.CodedInputStream: boolean tryRefillBuffer(int)>","<com.google.protobuf.CodedInputStream: void recomputeBufferSizeAfterLimit()>"],"<androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)>":["<androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>","<androidx.fragment.app.FragmentManagerImpl$3: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl: android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator: void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>","<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>","<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>","<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$ServiceOptions$1: com.google.protobuf.DescriptorProtos$ServiceOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.spongycastle.asn1.DERUniversalString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.DERUniversalString: byte[] getOctets()>","<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void handlePrivateKey(org.bitcoinj.core.VersionedChecksummedBytes)>":["<de.schildbach.wallet.ui.send.SweepWalletActivity: void start(android.content.Context,org.bitcoinj.core.VersionedChecksummedBytes)>","<android.app.Activity: void finish()>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: void startDonate(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.ui.send.FeeCategory,int)>":["<de.schildbach.wallet.data.PaymentIntent: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent 'from'(java.lang.String,java.lang.String,org.bitcoinj.core.Coin)>","<de.schildbach.wallet.ui.send.SendCoinsActivity: void start(android.content.Context,de.schildbach.wallet.data.PaymentIntent,de.schildbach.wallet.ui.send.FeeCategory,int)>","<android.app.IntentService: java.lang.String getString(int)>"],"<com.squareup.moshi.StandardJsonAdapters$5: void <init>()>":["<com.squareup.moshi.JsonAdapter: void <init>()>"],"<com.google.protobuf.Descriptors$FileDescriptor: java.lang.String getPackage()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.String getPackage()>"],"<org.bitcoinj.wallet.Wallet: void maybeQueueOnWalletChanged()>":["<org.bitcoinj.wallet.Wallet$4: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration)>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.Wallet$4: void run()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>"],"<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.Message build()>":["<com.google.protobuf.DynamicMessage$Builder: com.google.protobuf.DynamicMessage build()>"],"<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setIcon(int)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCustomTitle(android.view.View)>"],"<org.bitcoinj.crypto.DeterministicKey: java.math.BigInteger derivePrivateKeyDownwards(org.bitcoinj.crypto.DeterministicKey,byte[])>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.LazyECPoint: boolean equals(java.lang.Object)>","<org.bitcoinj.crypto.KeyCrypterException: void <init>(java.lang.String)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>","<com.google.common.collect.RegularImmutableList: int size()>","<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveChildKey(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.LazyECPoint,java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>","<java.math.BigInteger: void <clinit>()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>","<java.math.BigInteger: void <init>(int,byte[])>"],"<androidx.fragment.app.BackStackRecord: int commit()>":["<androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>"],"<ch.qos.logback.classic.joran.action.ConfigurationAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<com.google.protobuf.LazyStringArrayList: void <clinit>()>":["<com.google.protobuf.LazyStringArrayList: void <clinit>()>","<com.google.protobuf.LazyStringArrayList: void <init>()>","<com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringList getUnmodifiableView()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchResume()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<org.bitcoinj.core.Utils: java.math.BigInteger decodeMPI(byte[],boolean)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.math.BigInteger: java.math.BigInteger negate()>","<java.math.BigInteger: void <init>(byte[])>","<org.bitcoinj.core.Utils: long readUint32BE(byte[],int)>","<java.lang.System: void <clinit>()>","<java.math.BigInteger: void <clinit>()>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask: void <init>(android.os.Handler,int)>":["<android.os.Handler: void <init>(android.os.Looper)>","<java.lang.Object: void <init>()>","<android.os.Looper: android.os.Looper myLooper()>"],"<androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)>":["<androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)>"],"<org.bitcoinj.wallet.Protos$Tag: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag getDefaultInstanceForType()>"],"<com.google.common.collect.Maps: java.util.IdentityHashMap newIdentityHashMap()>":["<java.util.IdentityHashMap: void <init>()>"],"<com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>":["<java.util.TreeMap: java.util.Set entrySet()>","<com.google.protobuf.Internal: void <clinit>()>","<com.google.protobuf.Internal: int hashEnumList(java.util.List)>","<com.google.protobuf.Descriptors$FieldDescriptor$Type: void <clinit>()>","<com.google.protobuf.Internal: int hashEnum(com.google.protobuf.Internal$EnumLite)>"],"<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>(com.google.common.base.MoreObjects$1)>":["<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$Descriptor access$6000()>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<de.schildbach.wallet.service.BlockchainService: boolean onUnbind(android.content.Intent)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<android.app.Service: boolean onUnbind(android.content.Intent)>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment: void handleCancel()>":["<android.app.Activity: void finish()>","<android.app.Activity: void setResult(int)>","<de.schildbach.wallet.ui.send.SendCoinsViewModel$State: void <clinit>()>"],"<org.slf4j.LoggerFactory: void <clinit>()>":["<org.slf4j.helpers.SubstituteLoggerFactory: void <init>()>","<java.lang.String: void <clinit>()>","<org.slf4j.helpers.NOPLoggerFactory: void <init>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: boolean safeGetBooleanSystemProperty(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2600()>"],"<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>":["<java.io.IOException: java.lang.String toString()>","<org.bitcoinj.core.Peer: java.lang.String toString()>","<org.bitcoinj.crypto.ChildNumber: java.lang.String toString()>","<com.google.common.util.concurrent.AbstractFuture: java.lang.String toString()>","<org.bitcoinj.core.Transaction: java.lang.String toString()>","<java.lang.String: java.lang.String toString()>","<com.google.protobuf.AbstractMessage: java.lang.String toString()>","<okhttp3.HttpUrl: java.lang.String toString()>","<de.schildbach.wallet.data.PaymentIntent: java.lang.String toString()>","<java.util.AbstractCollection: java.lang.String toString()>","<org.bitcoinj.core.Sha256Hash: java.lang.String toString()>","<java.lang.Enum: java.lang.String toString()>","<com.google.common.hash.HashCode: java.lang.String toString()>","<org.bitcoinj.wallet.SendRequest: java.lang.String toString()>","<org.bitcoinj.core.PeerAddress: java.lang.String toString()>","<org.bitcoinj.core.Block: java.lang.String toString()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.base.Stopwatch: java.lang.String toString()>","<java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>","<org.bitcoinj.wallet.DefaultRiskAnalysis: java.lang.String toString()>","<java.io.File: java.lang.String toString()>","<androidx.collection.SparseArrayCompat: java.lang.String toString()>","<org.bitcoinj.crypto.DeterministicKey: java.lang.String toString()>","<de.schildbach.wallet.ui.AddressAndLabel: java.lang.String toString()>","<org.bitcoinj.wallet.DeterministicSeed: java.lang.String toString()>","<org.bitcoinj.core.VersionedChecksummedBytes: java.lang.String toString()>","<java.lang.Object: java.lang.String toString()>","<java.lang.Throwable: java.lang.String toString()>","<org.bitcoinj.core.TransactionOutput: java.lang.String toString()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions$Builder toBuilder()>":["<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumOptions)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.asn1.DEROctetStringParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>","<org.spongycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>"],"<okhttp3.RealCall: java.io.IOException timeoutExit(java.io.IOException)>":["<okio.AsyncTimeout: boolean exit()>","<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>","<java.io.InterruptedIOException: void <init>(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output$Builder newBuilderForType()>"],"<androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()>":["<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.bitcoinj.core.VersionMessage: org.bitcoinj.core.VersionMessage duplicate()>":["<org.bitcoinj.core.VersionMessage: void <init>(org.bitcoinj.core.NetworkParameters,int)>"],"<okhttp3.EventListener$1: void <init>()>":["<okhttp3.EventListener: void <init>()>"],"<androidx.fragment.app.FragmentTransitionCompat21$2: void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$6: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.wallet.Wallet$CompletionException)>":["<java.lang.Object: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: void maybeDrainReferenceQueues()>":["<com.google.common.collect.MapMakerInternalMap$Segment: void drainValueReferenceQueue(java.lang.ref.ReferenceQueue)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.common.base.Splitter: com.google.common.base.Splitter limit(int)>":["<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int)>","<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>"],"<org.bitcoinj.store.SPVBlockStore: void close()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.io.RandomAccessFile: void close()>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<java.lang.System: void <clinit>()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.Throwable)>","<org.bitcoinj.store.WindowsMMapHack: void forceRelease(java.nio.MappedByteBuffer)>","<org.bitcoinj.store.SPVBlockStore: void <clinit>()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<ch.qos.logback.core.FileAppender: boolean checkForFileCollisionInPreviousFileAppenders()>":["<ch.qos.logback.core.FileAppender: void addErrorForCollision(java.lang.String,java.lang.String,java.lang.String)>","<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>","<ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String getName()>"],"<okhttp3.internal.Util: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)>":["<java.lang.String: char charAt(int)>"],"<org.bitcoinj.wallet.KeyChainGroup: void extractFollowingKeychains(java.util.List)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.LinkedList: java.util.Iterator iterator()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>","<java.lang.IllegalStateException: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions build()>":["<com.google.protobuf.DescriptorProtos$FileOptions: boolean isInitialized()>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>","<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions buildPartial()>"],"<org.bitcoinj.crypto.LinuxSecureRandom: void <init>()>":["<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<java.security.SecureRandomSpi: void <init>()>","<java.io.DataInputStream: void <init>(java.io.InputStream)>"],"<com.google.protobuf.TextFormat$1: int size()>":["<com.google.protobuf.LiteralByteString: int size()>"],"<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>":["<java.lang.Object: void <init>()>"],"<com.google.common.io.BaseEncoding: byte[] extract(byte[],int)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>"],"<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>":["<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <clinit>()>","<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>","<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>"],"<org.bitcoinj.wallet.Wallet: java.util.List calculateAllSpendCandidates(boolean,boolean)>":["<java.util.ArrayList: void <init>(int)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: java.util.LinkedList calculateAllSpendCandidatesFromUTXOProvider(boolean)>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Transaction getParentTransaction()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<org.bitcoinj.core.Transaction: boolean isMature()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.Wallet: boolean canSignFor(org.bitcoinj.script.Script)>","<java.util.HashSet: int size()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.HashSet: java.util.Iterator iterator()>","<org.bitcoinj.core.TransactionOutput: org.bitcoinj.script.Script getScriptPubKey()>"],"<com.google.common.collect.Iterators$ConcatenatedIterator: boolean hasNext()>":["<java.util.ArrayDeque: boolean isEmpty()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.ArrayDeque: void addFirst(java.lang.Object)>","<com.google.common.collect.Iterators$ConcatenatedIterator: java.util.Iterator getTopMetaIterator()>","<java.util.ArrayDeque: void <init>()>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>"],"<de.schildbach.wallet.ui.send.SendCoinsActivity: void start(android.content.Context,de.schildbach.wallet.data.PaymentIntent)>":["<de.schildbach.wallet.ui.send.SendCoinsActivity: void start(android.content.Context,de.schildbach.wallet.data.PaymentIntent,de.schildbach.wallet.ui.send.FeeCategory,int)>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat shift(int)>":["<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>":["<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>","<android.app.Activity: void startActivityForResult(android.content.Intent,int)>"],"<ch.qos.logback.core.status.StatusBase: void add(ch.qos.logback.core.status.Status)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<ch.qos.logback.core.ContextBase: java.util.Map getCopyOfPropertyMap()>":["<java.util.HashMap: void <init>(java.util.Map)>"],"<com.google.protobuf.CodedInputStream: int readUInt32()>":["<com.google.protobuf.CodedInputStream: int readRawVarint32()>"],"<java.lang.String: boolean startsWith(java.lang.String,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Thread: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto getMessageType(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder singleDismissButton(android.content.DialogInterface$OnClickListener)>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>"],"<org.bitcoinj.params.TestNet2Params: void <init>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Block: void setDifficultyTarget(long)>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <init>()>","<org.bitcoinj.core.Utils: java.math.BigInteger decodeCompactBits(long)>","<org.bitcoinj.core.Block: void setNonce(long)>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Block: void setTime(long)>","<org.bitcoinj.core.Block: java.lang.String getHashAsString()>"],"<com.google.common.util.concurrent.AbstractFuture: java.lang.Object get()>":["<java.util.concurrent.locks.LockSupport: void park(java.lang.Object)>","<java.lang.Thread: boolean interrupted()>","<java.lang.InterruptedException: void <init>()>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void setNext(com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture: void removeWaiter(com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Waiter: void <init>()>","<com.google.common.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>"],"<com.google.common.util.concurrent.ImmediateFuture: void <clinit>()>":["<com.google.common.util.concurrent.ImmediateFuture: void <clinit>()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.util.logging.Logger: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.VersionedChecksummedBytes: boolean equals(java.lang.Object)>":["<java.lang.Object: java.lang.Class getClass()>","<java.util.Arrays: boolean equals(byte[],byte[])>"],"<de.schildbach.wallet.WalletApplication$3: void initMnemonicCode()>":["<de.schildbach.wallet.WalletApplication: org.slf4j.Logger access$000()>","<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<java.lang.Error: void <init>(java.lang.Throwable)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<android.app.Application: android.content.res.AssetManager getAssets()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.crypto.MnemonicCode: void <init>(java.io.InputStream,java.lang.String)>"],"<org.bitcoinj.params.RegTestParams: org.bitcoinj.core.Block getGenesisBlock()>":["<org.bitcoinj.core.Block: void setDifficultyTarget(long)>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.RegTestParams: void <clinit>()>","<org.bitcoinj.core.Block: void setNonce(long)>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.Block getGenesisBlock()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Block: void setTime(long)>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.core.Block: java.lang.String getHashAsString()>"],"<com.google.common.hash.HashCode: int hashCode()>":["<com.google.common.hash.HashCode$BytesHashCode: byte[] getBytesInternal()>","<com.google.common.hash.HashCode$BytesHashCode: int asInt()>","<com.google.common.hash.HashCode$BytesHashCode: int bits()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$Payment getPayment()>":["<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage getMessage()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilderForType()>"],"<com.google.protobuf.SmallSortedMap: void checkMutable()>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<com.google.protobuf.CodedInputStream: byte readRawByte()>":["<com.google.protobuf.CodedInputStream: void refillBuffer(int)>"],"<com.google.common.base.Equivalence$Equals: boolean doEquivalent(java.lang.Object,java.lang.Object)>":["<java.lang.Object: boolean equals(java.lang.Object)>"],"<org.bitcoinj.core.Transaction: void setLockTime(long)>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Transaction: void unCache()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$EncryptedData$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<java.lang.NullPointerException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void <init>(java.security.MessageDigest,int)>":["<com.google.common.hash.AbstractByteHasher: void <init>()>"],"<okio.AsyncTimeout: okio.Sink sink(okio.Sink)>":["<okio.AsyncTimeout$1: void <init>(okio.AsyncTimeout,okio.Sink)>"],"<org.bitcoinj.core.PeerGroup: int countConnectedAndPendingPeers()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.util.concurrent.CopyOnWriteArrayList: int size()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<de.schildbach.wallet.ui.WalletActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>","<android.os.Handler: void <init>()>"],"<com.google.common.util.concurrent.InterruptibleTask: void <init>()>":["<java.util.concurrent.atomic.AtomicReference: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(okio.BufferedSource)>":["<com.squareup.moshi.Moshi$DeferredAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>","<com.squareup.moshi.JsonReader: com.squareup.moshi.JsonReader of(okio.BufferedSource)>"],"<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable)>":["<java.lang.System: long currentTimeMillis()>","<java.lang.Object: void <init>()>","<java.lang.System: void <clinit>()>"],"<org.bitcoinj.wallet.WalletTransaction$Pool: org.bitcoinj.wallet.WalletTransaction$Pool[] values()>":["<java.lang.Object: java.lang.Object clone()>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: java.lang.Object getKey()>":["<java.lang.ref.WeakReference: java.lang.Object get()>"],"<org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)>":["<org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>","<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.spongycastle.util.io.Streams: void <clinit>()>","<org.spongycastle.asn1.DERBitString: void <clinit>()>","<org.spongycastle.asn1.DERBitString: void <init>(byte[],int)>","<java.io.EOFException: void <init>(java.lang.String)>"],"<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()>":["<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>(org.slf4j.helpers.Util$1)>"],"<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Sha256Hash: java.math.BigInteger toBigInteger()>":["<java.math.BigInteger: void <clinit>()>","<java.math.BigInteger: void <init>(int,byte[])>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionInput addInput(org.bitcoinj.core.TransactionInput)>":["<org.bitcoinj.core.ChildMessage: void setParent(org.bitcoinj.core.Message)>","<org.bitcoinj.core.Transaction: void unCache()>","<org.bitcoinj.core.ChildMessage: void adjustLength(int,int)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>"],"<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)>":["<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>"],"<org.bitcoinj.core.Sha256Hash: void <clinit>()>":["<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>"],"<org.bitcoinj.core.TransactionInput$ConnectionResult: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState$1: void <init>(com.google.common.util.concurrent.AggregateFuture$RunningState,int,com.google.common.util.concurrent.ListenableFuture)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String)>":["<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>","<ch.qos.logback.core.pattern.util.RegularEscapeUtil: void <init>()>"],"<java.lang.IllegalAccessError: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.IncompatibleClassChangeError: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$MessageOptions$1: void <init>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: void initFields()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<java.lang.String: boolean equals(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder toBuilder()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilder(org.bitcoinj.wallet.Protos$TransactionConfidence)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.crypto.HDUtils: byte[] hmacSha512(byte[],byte[])>":["<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<org.bitcoinj.crypto.HDUtils: org.spongycastle.crypto.macs.HMac createHmacSha512Digest(byte[])>","<org.bitcoinj.crypto.HDUtils: byte[] hmacSha512(org.spongycastle.crypto.macs.HMac,byte[])>"],"<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()>":["<androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()>"],"<androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()>":["<android.os.Bundle: void <init>()>","<android.os.Bundle: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1600(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getMessageTypeFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$2100(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileOptions getOptions()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.Object access$1300(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$SourceCodeInfo getSourceCodeInfo()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1800(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensurePublicDependencyIsMutable()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureDependencyIsMutable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean hasName()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureWeakDependencyIsMutable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getServiceFieldBuilder()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$FileOptions)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean hasPackage()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.LazyStringList access$1500(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder()>","<java.util.AbstractCollection: boolean addAll(java.util.Collection)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$2000(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.lang.Object access$1400(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1700(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<com.google.protobuf.LazyStringArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean hasSourceCodeInfo()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: java.util.List access$1900(com.google.protobuf.DescriptorProtos$FileDescriptorProto)>","<java.util.AbstractCollection: boolean isEmpty()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureMessageTypeIsMutable()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto: boolean hasOptions()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureServiceIsMutable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeSourceCodeInfo(com.google.protobuf.DescriptorProtos$SourceCodeInfo)>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureEnumTypeIsMutable()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: void ensureExtensionIsMutable()>"],"<org.spongycastle.asn1.DERTaggedObject: void <clinit>()>":["<org.spongycastle.asn1.DERTaggedObject: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: boolean shouldRunOnHWLayer(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>":["<androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>","<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<android.os.Build$VERSION: void <clinit>()>","<androidx.core.view.ViewCompat: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTagsIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<de.schildbach.wallet.ui.scan.ScanActivity$8: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context)>":["<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>"],"<ch.qos.logback.core.FileAppender: void <clinit>()>":["<ch.qos.logback.core.FileAppender: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor: java.lang.Object get(com.google.protobuf.GeneratedMessage)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.asn1.x500.X500Name: void <init>(java.lang.String)>":["<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.X500NameStyle,java.lang.String)>","<org.spongycastle.asn1.x500.X500Name: void <clinit>()>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$2: void <init>(de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1)>":["<java.lang.Object: void <init>()>"],"<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Throwable)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.common.collect.MapMakerInternalMap$Segment: boolean containsKey(java.lang.Object,int)>":["<com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>","<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int)>"],"<okhttp3.internal.connection.RouteDatabase: void <init>()>":["<java.lang.Object: void <init>()>","<java.util.LinkedHashSet: void <init>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15900()>"],"<de.schildbach.wallet.WalletBalanceWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>":["<android.appwidget.AppWidgetProvider: android.content.BroadcastReceiver$PendingResult goAsync()>","<de.schildbach.wallet.WalletBalanceWidgetProvider$1: void <init>(de.schildbach.wallet.WalletBalanceWidgetProvider,android.content.Context,android.appwidget.AppWidgetManager,int[],android.content.BroadcastReceiver$PendingResult)>","<android.os.AsyncTask: void <clinit>()>","<android.os.AsyncTask: void execute(java.lang.Runnable)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.Message$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilderForType()>"],"<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Tag: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>":["<okhttp3.internal.platform.ConscryptPlatform: java.security.Provider getProvider()>","<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>","<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>"],"<org.bitcoin.protocols.payments.Protos$Payment: boolean access$5200()>":["<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.Service$State$1: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>"],"<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<de.schildbach.wallet.ui.scan.CameraManager: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.ui.scan.CameraManager$1: void <init>()>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer connectToLocalHost()>":["<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.PeerAddress: org.bitcoinj.core.PeerAddress localhost(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.utils.ExponentialBackoff: void <init>(org.bitcoinj.utils.ExponentialBackoff$Params)>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer connectTo(org.bitcoinj.core.PeerAddress,boolean,int)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.SingleFieldBuilder getEncryptionParametersFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$ScryptParameters getEncryptionParameters()>"],"<org.spongycastle.asn1.DERBitString: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<org.spongycastle.asn1.DERBitString: int getPadBits()>","<java.lang.System: void <clinit>()>","<org.spongycastle.asn1.DERBitString: byte[] getBytes()>","<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoinj.protocols.payments.PaymentSession parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>":["<org.bitcoinj.protocols.payments.PaymentSession: void <init>(org.bitcoin.protocols.payments.Protos$PaymentRequest,boolean,org.bitcoinj.crypto.TrustStoreLoader)>","<org.bitcoinj.protocols.payments.PaymentSession: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Tag: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<ch.qos.logback.core.spi.FilterReply: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.core.Block: void setNonce(long)>":["<org.bitcoinj.core.Block: void unCacheHeader()>"],"<com.google.common.base.Platform: boolean stringIsNullOrEmpty(java.lang.String)>":["<java.lang.String: boolean isEmpty()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask,de.schildbach.wallet.data.PaymentIntent)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>":["<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.utils.MonetaryFormat: java.lang.CharSequence format(org.bitcoinj.core.Monetary)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: boolean access$19200()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: void onCreate()>":["<java.lang.Object: java.lang.Class getClass()>","<android.app.Service: void stopSelf()>","<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>","<de.schildbach.wallet.data.WalletLiveData: void <init>(de.schildbach.wallet.WalletApplication)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<android.app.Service: android.app.Application getApplication()>","<androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>","<de.schildbach.wallet.util.CrashReporter: void saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<de.schildbach.wallet.offline.AcceptBluetoothService$3: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<java.io.IOException: java.lang.String getMessage()>","<androidx.lifecycle.LifecycleService: void onCreate()>","<de.schildbach.wallet.offline.AcceptBluetoothService$2: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService,android.bluetooth.BluetoothAdapter)>","<de.schildbach.wallet.util.Toast: void <init>(android.content.Context)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<android.app.Service: java.lang.Object getSystemService(java.lang.String)>","<java.lang.System: long currentTimeMillis()>","<android.app.Service: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<de.schildbach.wallet.offline.AcceptBluetoothService$1: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService,android.bluetooth.BluetoothAdapter)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<java.lang.System: void <clinit>()>","<de.schildbach.wallet.util.Toast: void longToast(int,java.lang.Object[])>","<android.content.IntentFilter: void <init>(java.lang.String)>","<android.content.IntentFilter: void <clinit>()>"],"<org.spongycastle.asn1.BERSetParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$21900()>"],"<androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>":["<java.util.ArrayList: boolean removeAll(java.util.Collection)>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>","<androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>"],"<java.lang.Throwable: java.lang.String getMessage()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$FieldOptions$CType: com.google.protobuf.DescriptorProtos$FieldOptions$CType valueOf(int)>":["<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$Failure: void <clinit>()>":["<com.google.common.util.concurrent.AbstractFuture$Failure$1: void <init>(java.lang.String)>","<com.google.common.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture$Failure: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder setAllowAlias(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>":["<com.google.protobuf.CodedOutputStream: void writeRawVarint64(long)>","<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>"],"<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: void <init>(java.lang.Object[],int,int)>":["<com.google.common.collect.ImmutableList: void <init>()>"],"<okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoinj.wallet.Protos$Extension$Builder: org.bitcoinj.wallet.Protos$Extension$Builder mergeFrom(org.bitcoinj.wallet.Protos$Extension)>"],"<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<java.lang.String: java.lang.String valueOf(boolean)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>":["<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>","<android.os.Handler: void removeCallbacks(java.lang.Runnable)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: void clear()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<java.lang.String: java.lang.CharSequence subSequence(int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.ByteString)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: java.lang.String escapeBytes(com.google.protobuf.TextFormat$ByteSequence)>","<com.google.protobuf.TextFormat$1: void <init>(com.google.protobuf.ByteString)>"],"<com.google.common.util.concurrent.AbstractExecutionThreadService: boolean isRunning()>":["<com.google.common.util.concurrent.AbstractService: boolean isRunning()>"],"<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>":["<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.security.Security: int insertProviderAt(java.security.Provider,int)>","<org.bitcoinj.crypto.LinuxSecureRandom$LinuxSecureRandomProvider: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<ch.qos.logback.classic.Logger: void error(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>","<java.io.FileInputStream: int read()>","<java.io.FileInputStream: void <init>(java.io.File)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$18: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment,org.bitcoinj.wallet.Wallet,android.os.Handler,org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Coin)>":["<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <init>(org.bitcoinj.wallet.Wallet,android.os.Handler)>"],"<de.schildbach.wallet.data.AbstractWalletLiveData: void onActive()>":["<de.schildbach.wallet.WalletApplication: void <clinit>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>","<de.schildbach.wallet.data.AbstractWalletLiveData: void loadWallet()>","<android.content.IntentFilter: void <init>(java.lang.String)>","<android.content.IntentFilter: void <clinit>()>"],"<java.lang.Class: java.lang.ClassLoader getClassLoader()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.data.PaymentIntent: de.schildbach.wallet.data.PaymentIntent$Output[] buildSimplePayTo(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>":["<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.Script createOutputScript(org.bitcoinj.core.Address)>","<de.schildbach.wallet.data.PaymentIntent$Output: void <init>(org.bitcoinj.core.Coin,org.bitcoinj.script.Script)>","<de.schildbach.wallet.data.PaymentIntent$Output: void <clinit>()>"],"<org.bitcoinj.net.FilterMerger: org.bitcoinj.net.FilterMerger$Result calculate(com.google.common.collect.ImmutableList)>":["<org.bitcoinj.core.BloomFilter: void <init>(int,double,long,org.bitcoinj.core.BloomFilter$BloomUpdate)>","<org.bitcoinj.core.BloomFilter$BloomUpdate: void <clinit>()>","<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<org.bitcoinj.net.FilterMerger$Result: void <init>()>","<java.lang.Math: long min(long,long)>","<org.bitcoinj.core.BloomFilter: void merge(org.bitcoinj.core.BloomFilter)>","<org.bitcoinj.core.BloomFilter: boolean equals(java.lang.Object)>","<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>","<java.util.LinkedList: java.util.Iterator iterator()>","<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.DescriptorProtos$EnumValueOptions getDefaultInstance()>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<okhttp3.CipherSuite: void <init>(java.lang.String)>":["<java.lang.NullPointerException: void <init>()>","<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.ASN1Set: void <init>(org.spongycastle.asn1.ASN1Encodable[],boolean)>":["<java.util.Vector: void <init>()>","<org.spongycastle.asn1.ASN1Set: void sort()>","<java.util.Vector: void addElement(java.lang.Object)>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<androidx.recyclerview.widget.ListAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback)>":["<androidx.recyclerview.widget.AsyncDifferConfig$Builder: void <clinit>()>","<androidx.recyclerview.widget.AdapterListUpdateCallback: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter)>","<androidx.recyclerview.widget.RecyclerView$Adapter: void <init>()>","<androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig build()>","<androidx.recyclerview.widget.AsyncDifferConfig$Builder: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback)>","<androidx.recyclerview.widget.AsyncListDiffer: void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig)>","<androidx.recyclerview.widget.AsyncListDiffer: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <clinit>()>":["<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture: boolean access$300()>"],"<com.google.common.net.InetAddresses: java.net.InetAddress forString(java.lang.String)>":["<com.google.common.net.InetAddresses: java.lang.IllegalArgumentException formatIllegalArgumentException(java.lang.String,java.lang.Object[])>","<com.google.common.net.InetAddresses: java.net.InetAddress bytesToInetAddress(byte[])>","<com.google.common.net.InetAddresses: byte[] ipStringToBytes(java.lang.String)>","<com.google.common.net.InetAddresses: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.TokenStream: void addValuedToken(int,java.lang.StringBuffer,java.util.List)>":["<java.lang.StringBuffer: java.lang.String toString()>","<java.lang.StringBuffer: void setLength(int)>","<java.lang.StringBuffer: int length()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.Token: void <clinit>()>","<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String)>"],"<org.spongycastle.crypto.digests.RIPEMD160Digest: void reset()>":["<org.spongycastle.crypto.digests.GeneralDigest: void reset()>"],"<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.recyclerview.widget.RecyclerView$Adapter: void <init>()>":["<java.lang.Object: void <init>()>","<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void <init>()>"],"<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type,java.util.Set)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.squareup.moshi.Moshi: java.lang.Object cacheKey(java.lang.reflect.Type,java.util.Set)>","<com.squareup.moshi.internal.Util: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.squareup.moshi.internal.Util: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>","<java.lang.ThreadLocal: void set(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.squareup.moshi.internal.Util: java.lang.String typeAnnotatedWithAnnotations(java.lang.reflect.Type,java.util.Set)>","<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: boolean equals(java.lang.Object)>","<com.squareup.moshi.internal.Util$WildcardTypeImpl: boolean equals(java.lang.Object)>","<java.util.ArrayList: int size()>","<com.squareup.moshi.Moshi$DeferredAdapter: void ready(com.squareup.moshi.JsonAdapter)>","<java.util.ArrayList: java.lang.Object get(int)>","<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.ThreadLocal: void remove()>","<java.lang.Object: boolean equals(java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.squareup.moshi.internal.Util$ParameterizedTypeImpl: boolean equals(java.lang.Object)>","<com.squareup.moshi.Moshi$DeferredAdapter: void <init>(java.lang.Object)>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.ThreadLocal: java.lang.Object get()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: void <init>()>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<de.schildbach.wallet.ui.send.DecodePrivateKeyTask$1$1: void run()>":["<de.schildbach.wallet.ui.send.SweepWalletFragment$7: void onSuccess(org.bitcoinj.core.ECKey)>"],"<ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport: java.lang.Object getOrigin()>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.Class: java.lang.String getName()>","<ch.qos.logback.core.spi.ContextAwareImpl: java.lang.Object getOrigin()>"],"<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base16()>":["<com.google.common.io.BaseEncoding: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: void <init>(java.lang.String,ch.qos.logback.core.Context)>":["<ch.qos.logback.core.pattern.ConverterUtil: void startConverters(ch.qos.logback.core.pattern.Converter)>","<ch.qos.logback.core.rolling.helper.FileFilterUtil: java.lang.String slashify(java.lang.String)>","<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: void setPattern(java.lang.String)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: void parse()>"],"<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Throwable)>":["<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>","<org.slf4j.event.Level: void <clinit>()>"],"<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>":["<com.google.protobuf.ExtensionRegistryLite: void <init>(boolean)>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>"],"<com.google.protobuf.GeneratedMessage: void <clinit>()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)>":["<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)>"],"<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.joran.event.SaxEventRecorder: org.xmlpull.v1.sax2.Driver buildPullParser()>":["<org.xmlpull.v1.sax2.Driver: void <init>()>","<ch.qos.logback.core.joran.spi.JoranException: void <init>(java.lang.String,java.lang.Throwable)>","<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)>","<ch.qos.logback.core.joran.event.SaxEventRecorder: void addError(java.lang.String,java.lang.Throwable)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<org.bitcoinj.utils.MonetaryFormat: org.bitcoinj.utils.MonetaryFormat positiveSign(char)>":["<java.lang.Character: boolean isDigit(char)>","<org.bitcoinj.utils.MonetaryFormat: void <init>(char,char,char,char,int,java.util.List,int,java.math.RoundingMode,java.lang.String[],char,boolean)>","<com.google.common.base.Preconditions: void checkArgument(boolean)>","<org.bitcoinj.utils.MonetaryFormat: void <clinit>()>","<java.lang.Character: void <clinit>()>"],"<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder op(int)>":["<java.util.LinkedList: int size()>","<org.bitcoinj.script.ScriptBuilder: org.bitcoinj.script.ScriptBuilder op(int,int)>"],"<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void add(androidx.fragment.app.FragmentManager)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()>","<androidx.fragment.app.BackStackRecord: int commit()>","<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void <init>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.MaybeMaintenanceFragment: void <clinit>()>","<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>"],"<androidx.fragment.app.Fragment$2: void <init>(androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentContainer: void <init>()>"],"<org.bitcoinj.core.Peer: boolean removeGetDataEventListener(org.bitcoinj.core.listeners.GetDataEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>"],"<com.google.common.hash.AbstractByteHasher: void update(byte[])>":["<com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: void update(byte[],int,int)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.RepeatedFieldBuilder getTagsFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter of(okio.BufferedSink)>":["<com.squareup.moshi.JsonUtf8Writer: void <clinit>()>","<com.squareup.moshi.JsonUtf8Writer: void <init>(okio.BufferedSink)>"],"<java.lang.AssertionError: void <init>(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Error: void <init>()>"],"<org.bitcoinj.core.Message: long readInt64()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: long readInt64(byte[],int)>","<org.bitcoinj.core.ProtocolException: void <init>(java.lang.Exception)>"],"<org.spongycastle.asn1.DERVisibleString: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread: void run()>":["<de.schildbach.wallet.Constants: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$PaymentACK createPaymentAck(org.bitcoin.protocols.payments.Protos$Payment,java.lang.String)>","<java.io.DataOutputStream: void close()>","<org.bitcoinj.protocols.payments.PaymentProtocol: java.util.List parseTransactionsFromPaymentMessage(org.bitcoinj.core.NetworkParameters,org.bitcoin.protocols.payments.Protos$Payment)>","<com.google.protobuf.AbstractMessageLite: void writeDelimitedTo(java.io.OutputStream)>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment parseDelimitedFrom(java.io.InputStream)>","<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.io.DataOutputStream: void <init>(java.io.OutputStream)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.concurrent.atomic.AtomicBoolean: boolean get()>","<java.io.DataInputStream: void <init>(java.io.InputStream)>","<java.io.DataInputStream: void close()>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<org.bitcoinj.core.Context: void <clinit>()>","<de.schildbach.wallet.offline.AcceptBluetoothService$2: boolean handleTx(org.bitcoinj.core.Transaction)>"],"<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Object: void <init>()>","<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <clinit>()>","<java.lang.Class: java.lang.String getName()>","<java.lang.Boolean: boolean parseBoolean(java.lang.String)>","<java.util.logging.Level: void <clinit>()>","<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.System: void <clinit>()>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>","<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>","<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>","<java.util.logging.Logger: void <clinit>()>","<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>"],"<ch.qos.logback.core.joran.GenericConfigurator: void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL)>":["<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <clinit>()>","<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL)>"],"<org.bitcoinj.protocols.payments.PaymentSession: void <clinit>()>":["<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.protocols.payments.PaymentSession: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Tag$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Tag$1: org.bitcoinj.wallet.Protos$Tag parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol$PkiVerificationData: void <init>(java.lang.String,java.security.PublicKey,java.security.cert.TrustAnchor)>":["<java.lang.Object: void <init>()>","<org.bitcoinj.protocols.payments.PaymentProtocolException$PkiVerificationException: void <init>(java.lang.Exception)>","<org.bitcoinj.crypto.X509Utils: java.lang.String getDisplayNameFromCertificate(java.security.cert.X509Certificate,boolean)>"],"<de.schildbach.wallet.data.ExchangeRatesProvider: de.schildbach.wallet.data.ExchangeRate bestExchangeRate(java.lang.String)>":["<de.schildbach.wallet.data.ExchangeRatesProvider: java.lang.String defaultCurrencyCode()>","<java.util.TreeMap: java.lang.Object get(java.lang.Object)>"],"<androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)>":["<androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)>"],"<androidx.recyclerview.widget.DiffUtil$ItemCallback: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.TextFormat$TextGenerator: void <init>(java.lang.Appendable,com.google.protobuf.TextFormat$1)>":["<com.google.protobuf.TextFormat$TextGenerator: void <init>(java.lang.Appendable)>"],"<androidx.core.util.Preconditions: void checkArgument(boolean)>":["<java.lang.IllegalArgumentException: void <init>()>"],"<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Level getEffectiveLevel()>":["<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(int)>","<ch.qos.logback.classic.Level: void <clinit>()>"],"<androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>","<androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>","<androidx.lifecycle.LifecycleService: androidx.lifecycle.Lifecycle getLifecycle()>","<androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>"],"<com.google.common.net.InetAddresses: java.lang.String convertDottedQuadToHex(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Integer: java.lang.String toHexString(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: int lastIndexOf(int)>","<com.google.common.net.InetAddresses: byte[] textToNumericFormatV4(java.lang.String)>","<com.google.common.net.InetAddresses: void <clinit>()>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.String: java.lang.String substring(int)>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: org.bitcoinj.wallet.Protos$EncryptedData$Builder mergeFrom(org.bitcoinj.wallet.Protos$EncryptedData)>","<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder(org.bitcoinj.wallet.Protos$ScryptParameters)>":["<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder mergeFrom(org.bitcoinj.wallet.Protos$ScryptParameters)>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters$Builder newBuilder()>"],"<androidx.fragment.app.FragmentManagerState: void <clinit>()>":["<androidx.fragment.app.FragmentManagerState: void <clinit>()>","<androidx.fragment.app.FragmentManagerState$1: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder create()>":["<com.google.protobuf.DescriptorProtos$FileOptions$Builder: void <init>()>"],"<de.schildbach.wallet.ui.ExchangeRatesAdapter: void <init>(android.content.Context,de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener)>":["<de.schildbach.wallet.ui.ExchangeRatesAdapter$1: void <init>()>","<androidx.recyclerview.widget.ListAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback)>","<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>"],"<de.schildbach.wallet.util.MonetarySpannable: de.schildbach.wallet.util.MonetarySpannable applyMarkup(java.lang.Object[],java.lang.Object[])>":["<de.schildbach.wallet.util.MonetarySpannable: void applyMarkup(android.text.Spannable,java.lang.Object[],java.lang.Object[],java.lang.Object[])>","<de.schildbach.wallet.util.MonetarySpannable: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasWindowAnimations()>":["<android.app.Activity: android.view.Window getWindow()>"],"<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatus(ch.qos.logback.core.status.Status)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>":["<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>"],"<ch.qos.logback.core.FileAppender: void addErrorForCollision(java.lang.String,java.lang.String,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>"],"<org.bitcoinj.uri.BitcoinURI: void putWithValidation(java.lang.String,java.lang.Object)>":["<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.String: void <clinit>()>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>":["<org.spongycastle.crypto.engines.AESFastEngine: int getBlockSize()>"],"<androidx.collection.SimpleArrayMap: void <init>()>":["<java.lang.Object: void <init>()>","<androidx.collection.ContainerHelpers: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: boolean access$13100()>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.core.TxConfidenceTable$1: void <init>(org.bitcoinj.core.TxConfidenceTable,int)>":["<java.util.LinkedHashMap: void <init>()>"],"<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>":["<okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform buildIfSupported()>","<okhttp3.internal.platform.JdkWithJettyBootPlatform: okhttp3.internal.platform.Platform buildIfSupported()>","<okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()>","<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>","<okhttp3.internal.platform.Platform: void <init>()>","<okhttp3.internal.platform.Platform: void <clinit>()>","<okhttp3.internal.platform.Platform: boolean isConscryptPreferred()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void maybeDecodeKey()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void askConfirmSweep(org.bitcoinj.core.ECKey)>","<de.schildbach.wallet.ui.send.DecodePrivateKeyTask: void decodePrivateKey(org.bitcoinj.crypto.BIP38PrivateKey,java.lang.String)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$7: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment,android.os.Handler)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.Fragment: java.lang.String getString(int)>","<androidx.core.util.Preconditions: void checkState(boolean)>","<de.schildbach.wallet.ui.send.SweepWalletViewModel$State: void <clinit>()>"],"<ch.qos.logback.core.rolling.helper.FileNamePattern: void <clinit>()>":["<java.util.HashMap: void <init>()>","<java.lang.Class: java.lang.String getName()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<ch.qos.logback.core.rolling.helper.FileNamePattern: void <clinit>()>"],"<androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>":["<java.io.PrintWriter: void <init>(java.io.Writer)>","<java.io.PrintWriter: void close()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<android.util.Log: int v(java.lang.String,java.lang.String)>","<androidx.core.util.LogWriter: void <init>(java.lang.String)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>","<androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)>","<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>"],"<com.google.protobuf.FieldSet$1: void <clinit>()>":["<com.google.protobuf.FieldSet$1: void <clinit>()>","<com.google.protobuf.WireFormat$JavaType: void <clinit>()>","<com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()>","<com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()>","<java.lang.Enum: int ordinal()>","<com.google.protobuf.WireFormat$FieldType: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder setLastSeenBlockTimeSecs(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.FieldSet: com.google.protobuf.FieldSet newFieldSet()>":["<com.google.protobuf.FieldSet: void <clinit>()>","<com.google.protobuf.FieldSet: void <init>()>"],"<de.schildbach.wallet.ui.send.DeriveKeyTask$1$1: void <init>(de.schildbach.wallet.ui.send.DeriveKeyTask$1,org.spongycastle.crypto.params.KeyParameter,boolean)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.classic.LoggerContext: org.slf4j.Logger getLogger(java.lang.String)>":["<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.Logger getLogger(java.lang.String)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$6: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: boolean access$2600()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: void <init>()>":["<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: void maybeForceBuilderInitialization()>"],"<de.schildbach.wallet.util.CrashReporter: void appendTrace(java.io.PrintWriter,java.lang.Throwable)>":["<org.spongycastle.asn1.ASN1Exception: java.lang.Throwable getCause()>","<org.spongycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()>","<java.io.PrintWriter: void println(java.lang.String)>","<org.spongycastle.crypto.CryptoException: java.lang.Throwable getCause()>","<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>","<ch.qos.logback.core.spi.ScanException: java.lang.Throwable getCause()>","<java.lang.Throwable: java.lang.Throwable getCause()>"],"<com.google.zxing.qrcode.QRCodeReader: void <init>()>":["<java.lang.Object: void <init>()>","<com.google.zxing.qrcode.decoder.Decoder: void <init>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder access$18000()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions$Builder: com.google.protobuf.DescriptorProtos$ServiceOptions$Builder create()>"],"<de.schildbach.wallet.util.Bluetooth: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<java.util.UUID: java.util.UUID fromString(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<ch.qos.logback.core.rolling.helper.RenameUtil: void <init>()>":["<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>"],"<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.NetworkParameters fromID(java.lang.String)>":["<org.bitcoinj.params.UnitTestParams: org.bitcoinj.params.UnitTestParams get()>","<java.lang.String: boolean equals(java.lang.Object)>","<org.bitcoinj.params.RegTestParams: org.bitcoinj.params.RegTestParams get()>","<org.bitcoinj.params.TestNet3Params: void <clinit>()>","<org.bitcoinj.params.AbstractBitcoinNetParams: void <clinit>()>","<org.bitcoinj.params.MainNetParams: org.bitcoinj.params.MainNetParams get()>","<org.bitcoinj.params.RegTestParams: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: void <clinit>()>","<org.bitcoinj.params.TestNet3Params: org.bitcoinj.params.TestNet3Params get()>"],"<com.squareup.moshi.JsonWriter: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.String: void <clinit>()>"],"<org.bitcoinj.wallet.SendRequest: org.bitcoinj.wallet.SendRequest emptyWallet(org.bitcoinj.core.Address)>":["<org.bitcoinj.wallet.SendRequest: void <init>()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Address: org.bitcoinj.core.NetworkParameters getParameters()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput addOutput(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.Transaction: void <clinit>()>","<org.bitcoinj.core.Transaction: void <init>(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message buildPartial()>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto buildPartial()>"],"<org.spongycastle.asn1.DERExternalParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.DERExternal: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String,java.lang.Throwable)>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>","<java.lang.IllegalArgumentException: java.lang.String getMessage()>"],"<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object,int)>":["<com.google.common.collect.ImmutableSet: void <init>()>"],"<org.bitcoin.protocols.payments.Protos: com.google.protobuf.Descriptors$FileDescriptor access$7002(com.google.protobuf.Descriptors$FileDescriptor)>":["<org.bitcoin.protocols.payments.Protos: void <clinit>()>"],"<ch.qos.logback.classic.Logger: void error(java.lang.String)>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<ch.qos.logback.classic.Level: void <clinit>()>","<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>"],"<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)>":["<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$800(com.google.common.util.concurrent.AbstractFuture)>","<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$802(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16900()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>"],"<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>":["<com.google.common.collect.RegularImmutableSet: void <clinit>()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>":["<org.bitcoinj.wallet.Protos$Transaction$Purpose$1: void <init>()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <clinit>()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: org.bitcoinj.wallet.Protos$Transaction$Purpose[] values()>","<org.bitcoinj.wallet.Protos$Transaction$Purpose: void <init>(java.lang.String,int,int,int)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionConfidence)>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Type getType()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence getDefaultInstance()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: int getDepth()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean access$10200()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setLastBroadcastedAt(long)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setAppearedAtHeight(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void ensureBroadcastByIsMutable()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setType(org.bitcoinj.wallet.Protos$TransactionConfidence$Type)>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.RepeatedFieldBuilder getBroadcastByFieldBuilder()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean hasDepth()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: long getLastBroadcastedAt()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Source getSource()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: int getAppearedAtHeight()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.ByteString getOverridingTransaction()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean hasSource()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean hasAppearedAtHeight()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setSource(org.bitcoinj.wallet.Protos$TransactionConfidence$Source)>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setDepth(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean hasType()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder setOverridingTransaction(com.google.protobuf.ByteString)>","<java.util.ArrayList: boolean isEmpty()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean hasLastBroadcastedAt()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean hasOverridingTransaction()>","<org.bitcoinj.wallet.Protos$TransactionConfidence: java.util.List access$9800(org.bitcoinj.wallet.Protos$TransactionConfidence)>"],"<com.google.common.base.Preconditions: void checkArgument(boolean)>":["<java.lang.IllegalArgumentException: void <init>()>"],"<androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)>":["<android.transition.TransitionSet: android.transition.Transition addTarget(android.view.View)>"],"<org.bitcoinj.wallet.Protos$PeerAddress$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<org.slf4j.helpers.Util$ClassContextSecurityManager: java.lang.Class[] getClassContext()>":["<java.lang.SecurityManager: java.lang.Class[] getClassContext()>"],"<org.bitcoinj.wallet.Wallet$FeeCalculation: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>"],"<org.bitcoinj.crypto.HDUtils: java.lang.String formatPath(java.util.List)>":["<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>","<org.bitcoinj.crypto.HDUtils: void <clinit>()>","<java.util.Collections: java.util.Set singleton(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.google.common.collect.Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>"],"<com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)>":["<com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>","<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>"],"<org.bitcoinj.net.AbstractTimeoutHandler$1: void <init>(org.bitcoinj.net.AbstractTimeoutHandler)>":["<java.util.TimerTask: void <init>()>"],"<okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)>","<java.lang.StringBuilder: java.lang.String toString()>","<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>","<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okhttp3.internal.Util: void <clinit>()>","<java.util.Arrays: java.lang.String toString(java.lang.Object[])>"],"<de.schildbach.wallet.ui.send.SweepWalletActivity: void start(android.content.Context)>":["<android.app.Activity: void startActivity(android.content.Intent)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.content.Intent: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstanceForType()>"],"<dummyMainClass: de.schildbach.wallet.ui.WalletActivity dummyMainMethod_de_schildbach_wallet_ui_WalletActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.WalletActivity$13: void onAnimationUpdate(android.animation.ValueAnimator)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<de.schildbach.wallet.ui.WalletActivity: void onPause()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.WalletActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.WalletActivity: void onActivityResult(int,int,android.content.Intent)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.WalletActivity$12: void onAnimationUpdate(android.animation.ValueAnimator)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<de.schildbach.wallet.ui.WalletActivity: void onCreate(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<de.schildbach.wallet.ui.WalletActivity: void onNewIntent(android.content.Intent)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<de.schildbach.wallet.ui.WalletActivity: boolean onCreateOptionsMenu(android.view.Menu)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<de.schildbach.wallet.ui.WalletActivity$13: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.WalletActivity$11: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<de.schildbach.wallet.ui.WalletActivity: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<de.schildbach.wallet.ui.WalletActivity$10: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<de.schildbach.wallet.ui.WalletActivity$12: void <init>(de.schildbach.wallet.ui.WalletActivity,android.view.View)>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.WalletActivity: void onResume()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<de.schildbach.wallet.ui.WalletActivity$10: void onAnimationUpdate(android.animation.ValueAnimator)>","<androidx.fragment.app.Fragment: void <init>()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<de.schildbach.wallet.ui.WalletActivity$11: void onAnimationUpdate(android.animation.ValueAnimator)>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.WalletActivity: boolean onPrepareOptionsMenu(android.view.Menu)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper)>":["<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int)>","<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int)>","<java.lang.Math: int min(int,int)>","<com.google.common.collect.MapMaker: int getInitialCapacity()>","<java.util.AbstractMap: void <init>()>","<com.google.common.collect.MapMaker: int getConcurrencyLevel()>","<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>"],"<androidx.lifecycle.ProcessLifecycleOwnerInitializer: void <init>()>":["<android.content.ContentProvider: void <init>()>"],"<com.google.protobuf.GeneratedMessage: java.lang.reflect.Method getMethodOrDie(java.lang.Class,java.lang.String,java.lang.Class[])>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.String: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.Class: java.lang.String getName()>","<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>"],"<com.google.common.util.concurrent.AbstractService$IsStoppableGuard: void <init>(com.google.common.util.concurrent.AbstractService)>":["<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Monitor access$000(com.google.common.util.concurrent.AbstractService)>","<com.google.common.util.concurrent.AbstractService: void <clinit>()>","<com.google.common.util.concurrent.Monitor$Guard: void <init>(com.google.common.util.concurrent.Monitor)>"],"<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.wallet.KeyChainGroup)>":["<org.bitcoinj.core.Context: org.bitcoinj.core.Context getOrCreate(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.Context,org.bitcoinj.wallet.KeyChainGroup)>","<org.bitcoinj.core.Context: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: long readSInt64()>":["<com.google.protobuf.CodedInputStream: long readRawVarint64()>","<com.google.protobuf.CodedInputStream: long decodeZigZag64(long)>"],"<org.bitcoinj.crypto.MnemonicCode: void <init>(java.io.InputStream,java.lang.String)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.io.BufferedReader: java.lang.String readLine()>","<java.util.ArrayList: void <init>(int)>","<java.lang.Object: void <init>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.io.BufferedReader: void close()>","<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>","<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>","<java.io.BufferedReader: void <init>(java.io.Reader)>","<org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>","<java.util.ArrayList: int size()>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>"],"<org.bitcoinj.core.TransactionOutput: org.bitcoinj.core.Coin getValue()>":["<java.lang.IllegalArgumentException: java.lang.String getMessage()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin valueOf(long)>","<org.bitcoinj.core.Coin: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>"],"<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)>":["<java.util.HashMap: java.lang.Object get(java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<com.google.protobuf.DescriptorProtos$FileOptions: com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>"],"<org.bitcoinj.signers.MissingSigResolutionSigner: void <init>(org.bitcoinj.wallet.Wallet$MissingSigsMode)>":["<org.bitcoinj.wallet.Wallet$MissingSigsMode: void <clinit>()>","<org.bitcoinj.signers.StatelessTransactionSigner: void <init>()>"],"<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Message toProto()>":["<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.DescriptorProtos$FieldDescriptorProto toProto()>"],"<org.bitcoinj.wallet.Wallet: int estimateBytesForSigning(org.bitcoinj.wallet.CoinSelection)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.wallet.RedeemData findRedeemDataFromScriptHash(byte[])>","<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.ECKey findKeyFromPubHash(byte[])>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: com.google.protobuf.MessageReflection$MergeTarget setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.FieldSet: void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>"],"<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<android.util.SparseArray: int size()>","<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>"],"<com.google.common.base.CharMatcher: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1: void run()>":["<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Transaction sendCoinsOffline(org.bitcoinj.wallet.SendRequest)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$3: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.core.ECKey$KeyIsEncryptedException)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$4: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,boolean,org.bitcoinj.crypto.KeyCrypterException)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$6: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.wallet.Wallet$CompletionException)>","<java.lang.Throwable: java.lang.String getMessage()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: org.bitcoinj.wallet.Wallet access$100(de.schildbach.wallet.ui.send.SendCoinsOfflineTask)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.Constants: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: android.os.Handler access$200(de.schildbach.wallet.ui.send.SendCoinsOfflineTask)>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask: org.slf4j.Logger access$000()>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$1: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$5: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$2: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.core.InsufficientMoneyException)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$2: void run()>","<org.bitcoinj.wallet.Wallet: boolean isEncrypted()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$4: void run()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$3: void run()>","<org.bitcoinj.core.Context: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$1: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,org.bitcoinj.core.Transaction)>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$5: void run()>","<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$6: void run()>"],"<org.bitcoinj.core.VersionedChecksummedBytes: java.lang.String toString()>":["<org.bitcoinj.core.VersionedChecksummedBytes: java.lang.String toBase58()>"],"<org.spongycastle.asn1.BERFactory: org.spongycastle.asn1.BERSequence createSequence(org.spongycastle.asn1.ASN1EncodableVector)>":["<org.spongycastle.asn1.BERFactory: void <clinit>()>","<org.spongycastle.asn1.BERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1EncodableVector: int size()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder addTransactionSigners(org.bitcoinj.wallet.Protos$TransactionSigner$Builder)>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTransactionSignersIsMutable()>","<org.bitcoinj.wallet.Protos$TransactionSigner$Builder: org.bitcoinj.wallet.Protos$TransactionSigner build()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>"],"<dummyMainClass: de.schildbach.wallet.ui.RequestCoinsActivity dummyMainMethod_de_schildbach_wallet_ui_RequestCoinsActivity(android.content.Intent)>":["<de.schildbach.wallet.ui.RequestCoinsActivity: void onCreate(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void onClick(android.view.View)>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationRepeat(android.view.animation.Animation)>","<androidx.fragment.app.FragmentManagerImpl: void <clinit>()>","<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <clinit>()>","<androidx.fragment.app.FragmentActivity: void onStart()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onSaveInstanceState(android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onResume()>","<de.schildbach.wallet.ui.RequestCoinsActivity: void onAttachedToWindow()>","<de.schildbach.wallet.ui.RequestCoinsActivity: boolean onCreateOptionsMenu(android.view.Menu)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$11: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentActivity: void onStop()>","<androidx.fragment.app.FragmentManagerImpl$2: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$12: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>","<androidx.fragment.app.FragmentActivity: void onDestroy()>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void <init>(de.schildbach.wallet.ui.RequestCoinsFragment,android.bluetooth.BluetoothAdapter)>","<androidx.fragment.app.FragmentActivity: void onResume()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void <init>(android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.RequestCoinsFragment$7: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<androidx.fragment.app.Fragment: void onStart()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$2: void onClick(android.view.View)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onPause()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>","<de.schildbach.wallet.ui.RequestCoinsActivity: void <init>()>","<androidx.fragment.app.FragmentManagerImpl: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void <init>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void onStop()>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void onClick(android.view.View)>","<androidx.fragment.app.Fragment: void <init>()>","<androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper: void onAnimationStart(android.view.animation.Animation)>","<de.schildbach.wallet.ui.RequestCoinsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <init>()>","<androidx.fragment.app.Fragment: void onDetach()>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onDestroyView()>","<androidx.fragment.app.Fragment: void <clinit>()>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.view.animation.Animation)>","<androidx.fragment.app.FragmentActivity: void onPostResume()>","<androidx.fragment.app.FragmentActivity: void onPause()>","<androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>","<de.schildbach.wallet.ui.RequestCoinsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onViewCreated(android.view.View,android.os.Bundle)>","<de.schildbach.wallet.ui.send.SweepWalletFragment$3: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.RequestCoinsFragment: void onCreate(android.os.Bundle)>","<androidx.fragment.app.Fragment: void onDestroy()>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseMessageFromBytes(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>":["<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<com.google.protobuf.CodedOutputStream: void writeStringNoTag(java.lang.String)>":["<java.lang.String: byte[] getBytes(java.lang.String)>","<com.google.protobuf.CodedOutputStream: void writeRawBytes(byte[])>","<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>"],"<org.bitcoinj.crypto.DeterministicKey: void <init>(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.DeterministicKey)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.ImmutableList$SubList: int size()>","<org.bitcoinj.crypto.LazyECPoint: org.spongycastle.math.ec.ECPoint get()>","<org.bitcoinj.core.ECKey: void <init>(java.math.BigInteger,org.spongycastle.math.ec.ECPoint)>","<org.bitcoinj.crypto.DeterministicKey: int getFingerprint()>"],"<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(java.security.SecureRandom)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.core.Utils: long currentTimeSeconds()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(java.security.SecureRandom,int,java.lang.String,long)>"],"<androidx.loader.content.Loader: void <init>(android.content.Context)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.store.SPVBlockStore: void setRingCursor(java.nio.ByteBuffer,int)>":["<com.google.common.base.Preconditions: void checkArgument(boolean)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent)>":["<org.bitcoinj.wallet.Protos$EncryptedData$Builder: void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.bitcoinj.wallet.Protos$1)>"],"<com.lambdaworks.jni.Platform: void <init>(com.lambdaworks.jni.Platform$Arch,com.lambdaworks.jni.Platform$OS)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.spi.ContextAwareImpl: void addStatus(ch.qos.logback.core.status.Status)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.System: void <clinit>()>","<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$1: void run()>":["<de.schildbach.wallet.ui.send.SendCoinsFragment$24: void onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback access$400(de.schildbach.wallet.ui.send.RequestPaymentRequestTask)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>":["<ch.qos.logback.classic.spi.ThrowableProxyUtil: void indent(java.lang.StringBuilder,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>"],"<org.spongycastle.asn1.ASN1Exception: void <init>(java.lang.String,java.lang.Throwable)>":["<java.io.IOException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: long getCurrentTime()>":["<java.lang.System: long currentTimeMillis()>","<java.lang.System: void <clinit>()>"],"<ch.qos.logback.core.pattern.PatternLayoutBase: java.util.Map getEffectiveConverterMap()>":["<ch.qos.logback.classic.PatternLayout: java.util.Map getDefaultConverterMap()>","<ch.qos.logback.core.LayoutBase: ch.qos.logback.core.Context getContext()>","<java.util.HashMap: void putAll(java.util.Map)>","<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>","<java.util.HashMap: void <init>()>"],"<com.google.protobuf.SmallSortedMap: void makeImmutable()>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.Map emptyMap()>","<java.util.AbstractMap: boolean isEmpty()>"],"<org.bitcoinj.core.PeerGroup$1: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<okhttp3.Headers$Builder: void <init>()>":["<java.util.ArrayList: void <init>(int)>","<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.DefaultCoinSelector: boolean shouldSelect(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.wallet.DefaultCoinSelector: boolean isSelectable(org.bitcoinj.core.Transaction)>"],"<de.schildbach.wallet.WalletApplication: void onCreate()>":["<android.app.Application: java.lang.Object getSystemService(java.lang.String)>","<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>","<de.schildbach.wallet.WalletApplication$1: void <init>(de.schildbach.wallet.WalletApplication,android.content.pm.PackageInfo)>","<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>","<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskWrites()>","<de.schildbach.wallet.util.Bluetooth: java.lang.String getAddress(android.bluetooth.BluetoothAdapter)>","<de.schildbach.wallet.util.CrashReporter: void init(java.io.File)>","<org.bitcoinj.core.Context: void enableStrictMode()>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<org.bitcoinj.utils.Threading: void throwOnLockCycles()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<de.schildbach.wallet.util.Bluetooth: void <clinit>()>","<de.schildbach.wallet.Configuration: void updateLastBluetoothAddress(java.lang.String)>","<de.schildbach.wallet.WalletApplication: de.schildbach.wallet.Configuration getConfiguration()>","<de.schildbach.wallet.WalletApplication: void cleanupFiles()>","<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<android.app.Application: java.io.File getFilesDir()>","<android.app.Application: java.io.File getCacheDir()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.Constants$Files: void <clinit>()>","<de.schildbach.wallet.Constants: void <clinit>()>","<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskReads()>","<android.app.Application: void onCreate()>","<org.bitcoinj.core.Context: void propagate(org.bitcoinj.core.Context)>","<android.app.Application: java.io.File getFileStreamPath(java.lang.String)>","<org.bitcoinj.crypto.LinuxSecureRandom: void <init>()>","<de.schildbach.wallet.Configuration: void updateLastVersionCode(int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>","<de.schildbach.wallet.WalletApplication: void initNotificationManager()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyLog()>","<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>","<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectAll()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.Context: void <clinit>()>","<de.schildbach.wallet.WalletApplication: android.content.pm.PackageInfo packageInfo()>","<de.schildbach.wallet.Logging: void init(java.io.File)>"],"<com.google.zxing.qrcode.QRCodeWriter: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.core.Transaction: boolean isFinal(int,long)>":["<org.bitcoinj.core.Transaction: boolean isTimeLocked()>","<org.bitcoinj.core.Transaction: long getLockTime()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.spongycastle.crypto.ec.CustomNamedCurves$9: void <init>()>":["<org.spongycastle.asn1.x9.X9ECParametersHolder: void <init>()>"],"<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>"],"<org.bitcoinj.wallet.DeterministicSeed: java.util.List decodeMnemonicCode(java.lang.String)>":["<com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>","<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(java.security.SecureRandom,int,java.lang.String,long)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed)>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(java.security.SecureRandom,int,java.lang.String,long)>"],"<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag$Builder newBuilder()>":["<org.bitcoinj.wallet.Protos$Tag$Builder: org.bitcoinj.wallet.Protos$Tag$Builder access$15200()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$FieldOptions: void initFields()>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$1: void <init>()>","<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(boolean)>"],"<com.google.common.hash.AbstractHasher: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.localbroadcastmanager.content.LocalBroadcastManager: void <init>(android.content.Context)>":["<java.lang.Object: void <init>()>","<android.content.ContextWrapper: android.os.Looper getMainLooper()>","<java.util.HashMap: void <init>()>","<java.util.ArrayList: void <init>()>","<androidx.localbroadcastmanager.content.LocalBroadcastManager$1: void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper)>"],"<org.bitcoinj.core.VersionedChecksummedBytes: void <init>(java.lang.String)>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.Object: void <init>()>","<org.bitcoinj.core.Base58: void <clinit>()>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.Base58: byte[] decodeChecked(java.lang.String)>"],"<com.lambdaworks.jni.Platform$Arch: void <init>(java.lang.String,int,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Enum: void <init>(java.lang.String,int)>","<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>"],"<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int)>":["<org.bitcoinj.params.AbstractBitcoinNetParams: int getProtocolVersionNum(org.bitcoinj.core.NetworkParameters$ProtocolVersion)>","<org.bitcoinj.core.Message: void <init>(org.bitcoinj.core.NetworkParameters,byte[],int,int,org.bitcoinj.core.MessageSerializer,int)>","<org.bitcoinj.core.NetworkParameters$ProtocolVersion: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: org.bitcoinj.core.MessageSerializer getDefaultSerializer()>"],"<org.bitcoinj.wallet.Wallet: void cleanup()>":["<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>","<java.util.HashMap: java.util.Collection values()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.core.Coin: java.lang.String toFriendlyString()>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>","<org.bitcoinj.wallet.Wallet: boolean isTransactionRisky(org.bitcoinj.core.Transaction,java.util.List)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<java.util.HashSet: boolean add(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet$BalanceType: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.util.HashSet: boolean remove(java.lang.Object)>","<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>","<ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>","<org.bitcoinj.wallet.Wallet: org.bitcoinj.core.Coin getBalance(org.bitcoinj.wallet.Wallet$BalanceType)>","<java.util.HashMap: java.lang.Object remove(java.lang.Object)>","<org.bitcoinj.wallet.Wallet: void saveLater()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<ch.qos.logback.classic.Logger: boolean isInfoEnabled()>","<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>","<org.bitcoinj.wallet.Wallet: void isConsistentOrThrow()>"],"<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoinj.wallet.Protos$TransactionInput: boolean access$6700()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.Context)>":["<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.Context,org.bitcoinj.wallet.KeyChainGroup)>","<org.bitcoinj.wallet.KeyChainGroup: void <clinit>()>","<org.bitcoinj.wallet.KeyChainGroup: void <init>(org.bitcoinj.core.NetworkParameters)>","<org.bitcoinj.core.Context: org.bitcoinj.core.NetworkParameters getParams()>"],"<de.schildbach.wallet.ui.WalletAddressesFragment: void <clinit>()>":["<de.schildbach.wallet.ui.WalletAddressesFragment: void <clinit>()>","<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.slf4j.LoggerFactory: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>"],"<com.google.common.base.Charsets: void <clinit>()>":["<com.google.common.base.Charsets: void <clinit>()>","<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>"],"<ch.qos.logback.core.rolling.helper.CompressionMode: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<org.bitcoinj.utils.BaseTaggableObject: void setTag(java.lang.String,com.google.protobuf.ByteString)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<java.util.HashMap: void <init>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$1: com.google.protobuf.DescriptorProtos$EnumValueOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>","<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$19800()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream)>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>","<com.google.protobuf.ExtensionRegistry: com.google.protobuf.ExtensionRegistry getEmptyRegistry()>","<com.google.protobuf.ExtensionRegistry: void <clinit>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void <init>(de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1,java.lang.String,byte[])>":["<de.schildbach.wallet.ui.InputParser$BinaryInputParser: void <init>(java.lang.String,byte[])>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite)>":["<com.google.protobuf.AbstractMessage: com.google.protobuf.UninitializedMessageException newUninitializedMessageException()>","<com.google.protobuf.UninitializedMessageException: void <init>(com.google.protobuf.MessageLite)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.AbstractMessageLite: byte[] toByteArray()>":["<org.bitcoin.protocols.payments.Protos$PaymentRequest: int getSerializedSize()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[])>","<org.bitcoin.protocols.payments.Protos$Payment: void writeTo(com.google.protobuf.CodedOutputStream)>","<org.bitcoin.protocols.payments.Protos$PaymentRequest: void writeTo(com.google.protobuf.CodedOutputStream)>","<org.bitcoin.protocols.payments.Protos$Payment: int getSerializedSize()>","<com.google.protobuf.CodedOutputStream: void checkNoSpaceLeft()>"],"<okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>":["<java.lang.System: java.lang.String getProperty(java.lang.String)>","<java.lang.String: boolean equals(java.lang.Object)>","<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>","<java.lang.System: void <clinit>()>","<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>"],"<org.spongycastle.asn1.BERSequence: void encode(org.spongycastle.asn1.ASN1OutputStream)>":["<org.spongycastle.asn1.ASN1OutputStream: void write(int)>","<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>","<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment: void onDestroy()>":["<android.os.HandlerThread: android.os.Looper getLooper()>","<androidx.fragment.app.Fragment: void onDestroy()>"],"<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <clinit>()>":["<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <init>(java.lang.String,int)>","<com.google.protobuf.Descriptors$DescriptorPool$SearchFilter: void <clinit>()>"],"<dummyMainClass: void dummyMainMethod(java.lang.String[])>":["<dummyMainClass: de.schildbach.wallet.ui.RequestCoinsActivity dummyMainMethod_de_schildbach_wallet_ui_RequestCoinsActivity(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.AddressBookActivity dummyMainMethod_de_schildbach_wallet_ui_AddressBookActivity(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.send.SendCoinsActivity dummyMainMethod_de_schildbach_wallet_ui_send_SendCoinsActivity(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity dummyMainMethod_de_schildbach_wallet_ui_backup_RestoreWalletFromExternalActivity(android.content.Intent)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<dummyMainClass: de.schildbach.wallet.data.ExchangeRatesProvider dummyMainMethod_de_schildbach_wallet_data_ExchangeRatesProvider(android.content.Intent)>","<de.schildbach.wallet.data.ExchangeRatesProvider: boolean onCreate()>","<dummyMainClass: de.schildbach.wallet.offline.AcceptBluetoothService dummyMainMethod_de_schildbach_wallet_offline_AcceptBluetoothService(android.content.Intent)>","<dummyMainClass: androidx.lifecycle.ProcessLifecycleOwnerInitializer dummyMainMethod_androidx_lifecycle_ProcessLifecycleOwnerInitializer(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.WalletActivity dummyMainMethod_de_schildbach_wallet_ui_WalletActivity(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.service.InactivityNotificationService dummyMainMethod_de_schildbach_wallet_service_InactivityNotificationService(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.send.SweepWalletActivity dummyMainMethod_de_schildbach_wallet_ui_send_SweepWalletActivity(android.content.Intent)>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: void <init>()>","<dummyMainClass: androidx.core.content.FileProvider dummyMainMethod_androidx_core_content_FileProvider(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.preference.PreferenceActivity dummyMainMethod_de_schildbach_wallet_ui_preference_PreferenceActivity(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.WalletBalanceWidgetProvider dummyMainMethod_de_schildbach_wallet_WalletBalanceWidgetProvider(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.service.BootstrapReceiver dummyMainMethod_de_schildbach_wallet_service_BootstrapReceiver(android.content.Intent)>","<androidx.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>","<dummyMainClass: de.schildbach.wallet.ui.ExchangeRatesActivity dummyMainMethod_de_schildbach_wallet_ui_ExchangeRatesActivity(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.ui.scan.ScanActivity dummyMainMethod_de_schildbach_wallet_ui_scan_ScanActivity(android.content.Intent)>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <clinit>()>","<androidx.core.content.FileProvider: void <clinit>()>","<de.schildbach.wallet.WalletApplication: void onCreate()>","<de.schildbach.wallet.data.ExchangeRatesProvider: void <init>()>","<dummyMainClass: de.schildbach.wallet.service.BlockchainService dummyMainMethod_de_schildbach_wallet_service_BlockchainService(android.content.Intent)>","<dummyMainClass: de.schildbach.wallet.service.UpgradeWalletService dummyMainMethod_de_schildbach_wallet_service_UpgradeWalletService(android.content.Intent)>","<androidx.core.content.FileProvider: void <init>()>","<dummyMainClass: de.schildbach.wallet.ui.monitor.NetworkMonitorActivity dummyMainMethod_de_schildbach_wallet_ui_monitor_NetworkMonitorActivity(android.content.Intent)>","<de.schildbach.wallet.WalletApplication: void <init>()>","<dummyMainClass: de.schildbach.wallet.ui.SendCoinsQrActivity dummyMainMethod_de_schildbach_wallet_ui_SendCoinsQrActivity(android.content.Intent)>","<androidx.core.content.FileProvider: boolean onCreate()>"],"<androidx.recyclerview.widget.AsyncListDiffer: void <clinit>()>":["<androidx.recyclerview.widget.AsyncListDiffer: void <clinit>()>","<androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: boolean isInitialized()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: int getUninterpretedOptionCount()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean extensionsAreInitialized()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int)>"],"<org.bitcoinj.wallet.DeterministicSeed: void <init>(java.security.SecureRandom,int,java.lang.String,long)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(byte[],java.lang.String,long)>","<org.bitcoinj.wallet.DeterministicSeed: byte[] getEntropy(java.security.SecureRandom,int)>"],"<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(byte[],java.lang.String,long)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.wallet.DeterministicSeed)>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(byte[],java.lang.String,long)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$PeerAddress getBroadcastBy(int)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.Transaction$Purpose: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.google.common.util.concurrent.AbstractService$StateSnapshot: void <init>(com.google.common.util.concurrent.Service$State)>":["<com.google.common.util.concurrent.AbstractService$StateSnapshot: void <init>(com.google.common.util.concurrent.Service$State,boolean,java.lang.Throwable)>"],"<com.squareup.moshi.internal.Util$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>":["<java.lang.Object: void <init>()>","<com.squareup.moshi.internal.Util: void <clinit>()>","<com.squareup.moshi.internal.Util: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>"],"<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>","<org.spongycastle.asn1.ASN1Boolean: void <clinit>()>"],"<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<androidx.arch.core.internal.FastSafeIterableMap: void <init>()>","<java.util.ArrayList: void <init>()>","<java.lang.ref.WeakReference: void <init>(java.lang.Object)>","<androidx.lifecycle.Lifecycle: void <init>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void maybeTriggerSceneTransition()>":["<de.schildbach.wallet.ui.scan.ScanActivity$4: void <init>(de.schildbach.wallet.ui.scan.ScanActivity)>"],"<androidx.loader.app.LoaderManagerImpl: void <clinit>()>":["<androidx.loader.app.LoaderManagerImpl: void <clinit>()>"],"<ch.qos.logback.core.joran.JoranConfiguratorBase: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>":["<ch.qos.logback.core.joran.action.ShutdownHookAction: void <init>()>","<ch.qos.logback.core.joran.action.NewRuleAction: void <init>()>","<ch.qos.logback.core.joran.action.AppenderAction: void <init>()>","<ch.qos.logback.core.joran.action.DefinePropertyAction: void <init>()>","<ch.qos.logback.core.joran.action.ParamAction: void <init>()>","<ch.qos.logback.core.joran.action.PropertyAction: void <init>()>","<ch.qos.logback.core.joran.action.TimestampAction: void <clinit>()>","<ch.qos.logback.core.joran.action.PropertyAction: void <clinit>()>","<ch.qos.logback.core.joran.action.TimestampAction: void <init>()>","<ch.qos.logback.core.joran.action.AppenderRefAction: void <init>()>","<ch.qos.logback.core.joran.action.StatusListenerAction: void <init>()>","<ch.qos.logback.core.joran.action.ConversionRuleAction: void <init>()>","<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>","<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.lang.String)>","<ch.qos.logback.core.joran.action.ParamAction: void <clinit>()>"],"<androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>":["<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()>","<androidx.fragment.app.BackStackRecord: int commit()>","<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)>"],"<com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void initFields()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.DescriptorProtos$ServiceOptions getDefaultInstance()>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: void ensureTransactionSignersIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.protobuf.UnknownFieldSet: void <init>(java.util.Map)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: void printPeriodicity(ch.qos.logback.core.spi.ContextAwareBase)>":["<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<ch.qos.logback.core.rolling.helper.RollingCalendar$1: void <clinit>()>","<java.lang.Enum: int ordinal()>"],"<com.google.protobuf.Utf8: int incompleteStateFor(byte[],int,int)>":["<com.google.protobuf.Utf8: int incompleteStateFor(int)>","<java.lang.AssertionError: void <init>()>","<com.google.protobuf.Utf8: int incompleteStateFor(int,int)>","<com.google.protobuf.Utf8: int incompleteStateFor(int,int,int)>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Wallet: java.util.Date getLastBlockSeenTime()>":["<java.util.Date: void <init>(long)>","<org.bitcoinj.wallet.Wallet: long getLastBlockSeenTimeSecs()>"],"<org.bitcoinj.wallet.Protos$Extension$1: void <init>()>":["<com.google.protobuf.AbstractParser: void <init>()>"],"<com.google.protobuf.UnknownFieldSet$Field$Builder: com.google.protobuf.UnknownFieldSet$Field$Builder addFixed64(long)>":["<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$700(com.google.protobuf.UnknownFieldSet$Field)>","<com.google.protobuf.UnknownFieldSet$Field: void <clinit>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet$Field: java.util.List access$702(com.google.protobuf.UnknownFieldSet$Field,java.util.List)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>"],"<androidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])>":["<androidx.room.RoomDatabase$MigrationContainer: void addMigration(androidx.room.migration.Migration)>"],"<ch.qos.logback.classic.joran.action.ReceiverAction: void <init>()>":["<ch.qos.logback.core.joran.action.Action: void <init>()>"],"<com.google.protobuf.CodedOutputStream: void writeBytesNoTag(com.google.protobuf.ByteString)>":["<com.google.protobuf.BoundedByteString: int size()>","<com.google.protobuf.LiteralByteString: int size()>","<com.google.protobuf.CodedOutputStream: void writeRawBytes(com.google.protobuf.ByteString)>","<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>"],"<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13400()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder setCoinValue(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<org.spongycastle.crypto.macs.HMac: void reset()>":["<org.spongycastle.crypto.digests.SHA512Digest: void reset()>","<org.spongycastle.crypto.digests.LongDigest: void update(byte[],int,int)>"],"<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>":["<com.google.protobuf.UnknownFieldSet$Builder: boolean mergeFieldFrom(int,com.google.protobuf.CodedInputStream)>"],"<org.bitcoinj.wallet.Protos$Wallet: int getTagsCount()>":["<java.util.ArrayList: int size()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$MethodOptions$1: com.google.protobuf.DescriptorProtos$MethodOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<ch.qos.logback.classic.spi.LoggerContextVO: void <init>(ch.qos.logback.classic.LoggerContext)>":["<ch.qos.logback.core.ContextBase: long getBirthTime()>","<java.lang.Object: void <init>()>","<ch.qos.logback.core.ContextBase: java.util.Map getCopyOfPropertyMap()>","<ch.qos.logback.core.ContextBase: java.lang.String getName()>"],"<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: org.spongycastle.asn1.ASN1Encodable encodeStringValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>":["<org.spongycastle.asn1.DERUTF8String: void <init>(java.lang.String)>"],"<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader)>":["<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.common.util.concurrent.MoreExecutors$5$1: void <init>(com.google.common.util.concurrent.MoreExecutors$5,java.lang.Runnable)>":["<java.lang.Object: void <init>()>"],"<androidx.collection.ArrayMap$1: void <init>(androidx.collection.ArrayMap)>":["<androidx.collection.MapCollections: void <init>()>"],"<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>":["<java.util.ArrayList: boolean isEmpty()>","<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$Payment createPaymentMessage(java.util.List,org.bitcoinj.core.Coin,org.bitcoinj.core.Address,java.lang.String,byte[])>":["<com.google.common.collect.ImmutableList: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$Output createPayToAddressOutput(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>","<org.bitcoinj.protocols.payments.PaymentProtocol: org.bitcoin.protocols.payments.Protos$Payment createPaymentMessage(java.util.List,java.util.List,java.lang.String,byte[])>","<com.google.common.collect.ImmutableCollection: void <clinit>()>"],"<com.squareup.moshi.internal.Util$WildcardTypeImpl: boolean equals(java.lang.Object)>":["<com.squareup.moshi.Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getNextToken()>":["<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<okhttp3.EventListener: void <clinit>()>":["<okhttp3.EventListener$1: void <init>()>","<okhttp3.EventListener: void <clinit>()>"],"<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node Eopt()>":["<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node E()>","<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>"],"<org.bitcoinj.wallet.BasicKeyChain: void importKeyLocked(org.bitcoinj.core.ECKey)>":["<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>","<org.bitcoinj.core.ECKey: byte[] getPubKeyHash()>","<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.core.ECKey: byte[] getPubKey()>","<org.bitcoinj.core.ECKey: boolean isWatching()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<java.util.LinkedHashMap: boolean isEmpty()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$13: void onClick(android.view.View)>":["<de.schildbach.wallet.ui.send.SendCoinsFragment: void access$1900(de.schildbach.wallet.ui.send.SendCoinsFragment)>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment: void <clinit>()>"],"<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>":["<java.util.Vector: java.util.Enumeration elements()>"],"<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>"],"<com.google.protobuf.DescriptorProtos$EnumValueOptions: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.KeyChainGroup: java.util.List getImportedKeys()>":["<org.bitcoinj.wallet.BasicKeyChain: java.util.List getKeys()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$5200()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.util.concurrent.InterruptibleTask: void <clinit>()>":["<com.google.common.util.concurrent.InterruptibleTask: void <clinit>()>","<com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable: void <init>(com.google.common.util.concurrent.InterruptibleTask$1)>"],"<okio.ByteString: void <clinit>()>":["<okio.ByteString: okio.ByteString of(byte[])>","<okio.ByteString: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto$1: void <init>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$DescriptorProto: void initFields()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder mergeFrom(org.bitcoinj.wallet.Protos$TransactionInput)>":["<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setSequence(int)>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasScriptBytes()>","<org.bitcoinj.wallet.Protos$TransactionInput: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput getDefaultInstance()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setTransactionOutPointHash(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasTransactionOutPointHash()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setScriptBytes(com.google.protobuf.ByteString)>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasSequence()>","<org.bitcoinj.wallet.Protos$TransactionInput: long getValue()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.ByteString getTransactionOutPointHash()>","<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.ByteString getScriptBytes()>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setTransactionOutPointIndex(int)>","<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setValue(long)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasValue()>","<org.bitcoinj.wallet.Protos$TransactionInput: int getSequence()>","<org.bitcoinj.wallet.Protos$TransactionInput: int getTransactionOutPointIndex()>","<org.bitcoinj.wallet.Protos$TransactionInput: boolean hasTransactionOutPointIndex()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: void ensureUninterpretedOptionIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<com.google.common.hash.HashCode: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$ExtendableBuilder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>"],"<com.google.common.collect.NaturalOrdering: com.google.common.collect.Ordering reverse()>":["<com.google.common.collect.ReverseNaturalOrdering: void <clinit>()>"],"<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>":["<android.os.Build$VERSION: void <clinit>()>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode: void checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)>":["<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>","<com.google.common.collect.Sets: java.util.Set newIdentityHashSet()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode)>","<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace: void <clinit>()>","<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1: void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException)>","<com.google.common.collect.MapMakerInternalMap: java.lang.Object get(java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap: boolean containsKey(java.lang.Object)>","<com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace getConflictingStackTrace()>","<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<com.google.common.collect.MapMakerInternalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<com.squareup.moshi.Moshi: void <clinit>()>":["<java.util.ArrayList: void <init>(int)>","<com.squareup.moshi.Moshi: void <clinit>()>","<com.squareup.moshi.MapJsonAdapter: void <clinit>()>","<com.squareup.moshi.ClassJsonAdapter: void <clinit>()>","<com.squareup.moshi.ArrayJsonAdapter: void <clinit>()>","<com.squareup.moshi.CollectionJsonAdapter: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.squareup.moshi.StandardJsonAdapters: void <clinit>()>"],"<org.bitcoinj.core.Peer: boolean removeDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>":["<org.bitcoinj.utils.ListenerRegistration: boolean removeFromList(java.lang.Object,java.util.List)>"],"<ch.qos.logback.classic.Level: void <init>(int,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>":["<android.view.View: void <clinit>()>","<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>","<android.util.SparseArray: int size()>","<android.util.SparseArray: void <init>()>","<androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)>","<android.util.SparseArray: int keyAt(int)>","<androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)>","<android.view.View: void <init>(android.content.Context)>","<androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)>","<androidx.fragment.app.FragmentTransition: void <clinit>()>","<androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8800()>"],"<de.schildbach.wallet.ui.send.SendCoinsFragment$9: void <init>(de.schildbach.wallet.ui.send.SendCoinsFragment)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.protocols.payments.PaymentProtocolException$InvalidPkiData: void <init>(java.lang.Exception)>":["<org.bitcoinj.protocols.payments.PaymentProtocolException: void <init>(java.lang.Exception)>"],"<org.bitcoinj.wallet.Protos$Transaction: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10400()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<org.slf4j.LoggerFactory: void versionSanityCheck()>":["<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>","<java.lang.String: boolean startsWith(java.lang.String)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.Util: void <clinit>()>","<org.slf4j.helpers.Util: void report(java.lang.String)>"],"<com.google.protobuf.DynamicMessage$Builder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"],"<androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>":["<android.os.Build$VERSION: void <clinit>()>"],"<com.google.protobuf.LiteralByteString: void writeToInternal(java.io.OutputStream,int,int)>":["<java.io.DataOutputStream: void write(byte[],int,int)>","<com.google.protobuf.LiteralByteString: int getOffsetIntoBytes()>","<java.io.FileOutputStream: void write(byte[],int,int)>","<com.google.protobuf.BoundedByteString: int getOffsetIntoBytes()>"],"<org.bitcoinj.wallet.Wallet: void queueOnCoinsReceived(org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>":["<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>","<com.google.common.base.Preconditions: void checkState(boolean)>","<org.bitcoinj.wallet.Wallet$5: void run()>","<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>","<org.bitcoinj.wallet.Wallet$5: void <init>(org.bitcoinj.wallet.Wallet,org.bitcoinj.utils.ListenerRegistration,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)>"],"<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object parseGroup(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message)>":["<com.google.protobuf.CodedInputStream: void readGroup(int,com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.MessageReflection$ExtensionAdapter: java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>":["<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>","<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>","<java.util.ArrayList: void add(int,java.lang.Object)>","<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>","<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object setValue(java.lang.Object)>","<com.google.protobuf.SmallSortedMap: void ensureEntryArrayMutable()>","<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>","<com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>","<java.util.ArrayList: java.lang.Object remove(int)>","<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>","<com.google.protobuf.SmallSortedMap: void checkMutable()>"],"<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>":["<java.lang.Object: void <init>()>","<okhttp3.OkHttpClient: void <clinit>()>","<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>","<okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>","<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>","<okhttp3.internal.Util: java.util.List immutableList(java.util.List)>","<okhttp3.internal.Util: void <clinit>()>","<java.util.ArrayList: boolean contains(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<okhttp3.internal.platform.Platform: void <clinit>()>","<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)>","<okhttp3.internal.platform.Platform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)>","<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>"],"<org.bitcoinj.wallet.Protos$TransactionInput$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$TransactionInput$1: org.bitcoinj.wallet.Protos$TransactionInput parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: void ensureNestedTypeIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()>":["<android.app.Activity: void invalidateOptionsMenu()>"],"<org.bitcoinj.core.Block: void <clinit>()>":["<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>","<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.core.ECKey: byte[] getPubKey()>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.core.Block: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.bitcoinj.core.Message: void <clinit>()>","<org.bitcoinj.core.ECKey: void <init>()>"],"<org.bitcoinj.wallet.Wallet: java.util.EnumSet getContainingPools(org.bitcoinj.core.Transaction)>":["<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<org.bitcoinj.core.Transaction: org.bitcoinj.core.Sha256Hash getHash()>","<java.util.HashMap: boolean containsKey(java.lang.Object)>","<org.bitcoinj.wallet.WalletTransaction$Pool: void <clinit>()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: com.google.common.collect.ImmutableList getAccountPath()>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>"],"<dummyMainClass: de.schildbach.wallet.service.InactivityNotificationService dummyMainMethod_de_schildbach_wallet_service_InactivityNotificationService(android.content.Intent)>":["<de.schildbach.wallet.service.InactivityNotificationService: void <init>()>","<de.schildbach.wallet.service.InactivityNotificationService: void <clinit>()>","<de.schildbach.wallet.service.InactivityNotificationService: void onCreate()>","<de.schildbach.wallet.service.InactivityNotificationService: android.os.IBinder onBind(android.content.Intent)>","<de.schildbach.wallet.service.InactivityNotificationService: void onHandleIntent(android.content.Intent)>"],"<okio.Okio$1: void write(okio.Buffer,long)>":["<okio.Util: void <clinit>()>","<okio.SegmentPool: void recycle(okio.Segment)>","<java.lang.Math: long min(long,long)>","<okio.Segment: okio.Segment pop()>","<okio.Timeout: void throwIfReached()>","<okio.Util: void checkOffsetAndCount(long,long,long)>"],"<org.bitcoinj.wallet.Protos$Wallet: java.lang.String getDescription()>":["<com.google.protobuf.ByteString: java.lang.String toStringUtf8()>","<com.google.protobuf.LiteralByteString: boolean isValidUtf8()>"],"<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>":["<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.protobuf.SmallSortedMap$EntryIterator: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)>":["<com.google.protobuf.SmallSortedMap$EntryIterator: void <init>(com.google.protobuf.SmallSortedMap)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaStringCheckUtf8(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilderForType()>":["<com.google.protobuf.DescriptorProtos$MessageOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MessageOptions: com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$ScryptParameters: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>":["<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>"],"<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>":["<java.util.LinkedList: void <init>()>"],"<org.spongycastle.asn1.ASN1Enumerated: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.TransactionBroadcast broadcastTransaction(org.bitcoinj.core.Transaction)>":["<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.TransactionBroadcast broadcastTransaction(org.bitcoinj.core.Transaction,int)>","<java.lang.Math: int max(int,int)>","<org.bitcoinj.core.PeerGroup: int getMinBroadcastConnections()>"],"<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>":["<ch.qos.logback.core.rolling.helper.RollingCalendar: void <clinit>()>","<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>"],"<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<okhttp3.HttpUrl: void <clinit>()>","<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>","<okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>","<java.lang.StringBuilder: void <init>()>","<java.lang.String: java.lang.String substring(int)>"],"<com.google.common.base.Splitter$SplittingIterator: java.lang.Object computeNext()>":["<com.google.common.base.Splitter$SplittingIterator: java.lang.String computeNext()>"],"<org.spongycastle.asn1.LazyEncodedSequence: void <init>(byte[])>":["<org.spongycastle.asn1.ASN1Sequence: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder access$300()>":["<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress$Builder create()>"],"<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest: void <init>(java.lang.String,java.lang.String[])>":["<java.lang.Object: void <init>()>","<de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest: void <clinit>()>"],"<com.google.protobuf.CodedInputStream: int readRawVarint32(int,java.io.InputStream)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>","<java.io.FilterInputStream: int read()>"],"<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>":["<org.bitcoinj.core.Utils: void <clinit>()>","<org.bitcoinj.crypto.LinuxSecureRandom: void <clinit>()>","<org.bitcoinj.core.Utils: boolean isAndroidRuntime()>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<java.security.SecureRandom: void <init>()>","<java.math.BigInteger: void <clinit>()>","<java.math.BigInteger: void <init>(int,java.util.Random)>","<org.bitcoinj.crypto.LinuxSecureRandom: void <init>()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>","<org.bitcoinj.wallet.Protos: void <clinit>()>","<org.bitcoinj.wallet.Protos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2200()>"],"<com.google.protobuf.Descriptors$Descriptor: void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$Descriptor: void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int)>"],"<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String)>":["<ch.qos.logback.core.spi.ContextAwareImpl: void addStatus(ch.qos.logback.core.status.Status)>","<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>","<ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport: java.lang.Object getOrigin()>"],"<com.google.protobuf.CodedInputStream: void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>","<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>","<com.google.protobuf.CodedInputStream: int pushLimit(int)>","<com.google.protobuf.CodedInputStream: void popLimit(int)>"],"<androidx.core.util.LogWriter: void <init>(java.lang.String)>":["<java.io.Writer: void <init>()>","<java.lang.StringBuilder: void <init>(int)>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$11: void showInsufficientMoneyDialog()>":["<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>","<android.app.AlertDialog$Builder: android.app.AlertDialog show()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder warn(android.content.Context,int)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: de.schildbach.wallet.ui.AbstractWalletActivity access$400(de.schildbach.wallet.ui.send.SweepWalletFragment)>","<de.schildbach.wallet.ui.send.SweepWalletFragment: void <clinit>()>","<androidx.fragment.app.Fragment: void <clinit>()>","<de.schildbach.wallet.ui.DialogBuilder: de.schildbach.wallet.ui.DialogBuilder setMessage(int)>"],"<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)>":["<android.util.SparseArray: int size()>","<android.util.SparseArray: java.lang.Object valueAt(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture waitForPeersOfVersion(int,long)>":["<org.bitcoinj.core.PeerGroup$14: void <init>(org.bitcoinj.core.PeerGroup,long,int,com.google.common.util.concurrent.SettableFuture)>","<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>","<org.bitcoinj.core.PeerGroup: java.util.List findPeersOfAtLeastVersion(long)>","<java.util.ArrayList: int size()>","<com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>","<org.bitcoinj.core.PeerGroup: void addConnectedEventListener(org.bitcoinj.core.listeners.PeerConnectedEventListener)>"],"<de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1$4: void <init>(de.schildbach.wallet.ui.send.SendCoinsOfflineTask$1,boolean,org.bitcoinj.crypto.KeyCrypterException)>":["<java.lang.Object: void <init>()>"],"<com.google.common.base.CharMatcher$JavaLetter: void <init>()>":["<com.google.common.base.CharMatcher: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService: int onStartCommand(android.content.Intent,int,int)>":["<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<android.app.Service: void stopSelf()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<org.bitcoinj.core.Coin: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>","<java.util.LinkedList: void clear()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.TransactionBroadcast broadcastTransaction(org.bitcoinj.core.Transaction)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<androidx.lifecycle.LifecycleService: int onStartCommand(android.content.Intent,int,int)>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>":["<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>","<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>"],"<com.google.common.collect.ImmutableCollection: boolean add(java.lang.Object)>":["<java.lang.UnsupportedOperationException: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: void maybeForceBuilderInitialization()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.RepeatedFieldBuilder getOutputsFieldBuilder()>","<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean access$1500()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.spongycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>":["<java.lang.String: void <clinit>()>","<java.lang.String: void <init>(char[])>","<java.lang.String: char[] toCharArray()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: void writeField(java.io.ByteArrayOutputStream,java.math.BigInteger)>":["<java.io.ByteArrayOutputStream: void write(int)>","<java.io.ByteArrayOutputStream: void write(byte[],int,int)>","<java.math.BigInteger: java.math.BigInteger shiftRight(int)>","<java.math.BigInteger: int bitLength()>","<java.math.BigInteger: int intValue()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setAmount(long)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.Message)>"],"<com.squareup.moshi.JsonReader: java.lang.String getPath()>":["<com.squareup.moshi.JsonScope: java.lang.String getPath(int,int[],java.lang.String[],int[])>"],"<org.bitcoin.protocols.payments.Protos$Output: boolean isInitialized()>":["<org.bitcoin.protocols.payments.Protos$Output: boolean hasScript()>"],"<org.bitcoinj.wallet.Protos$PeerAddress$Builder: org.bitcoinj.wallet.Protos$PeerAddress buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoinj.wallet.Protos$PeerAddress: int access$802(org.bitcoinj.wallet.Protos$PeerAddress,int)>","<org.bitcoinj.wallet.Protos$PeerAddress: int access$1002(org.bitcoinj.wallet.Protos$PeerAddress,int)>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: com.google.protobuf.ByteString access$702(org.bitcoinj.wallet.Protos$PeerAddress,com.google.protobuf.ByteString)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>","<org.bitcoinj.wallet.Protos$PeerAddress: long access$902(org.bitcoinj.wallet.Protos$PeerAddress,long)>"],"<org.bitcoinj.uri.BitcoinURI: void parseParameters(org.bitcoinj.core.NetworkParameters,java.lang.String,java.lang.String[])>":["<org.bitcoinj.uri.BitcoinURI: void putWithValidation(java.lang.String,java.lang.Object)>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.String: boolean startsWith(java.lang.String)>","<org.bitcoinj.core.Coin: boolean isGreaterThan(org.bitcoinj.core.Coin)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<org.bitcoinj.uri.RequiredFieldValidationException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.bitcoinj.core.Coin: int signum()>","<org.bitcoinj.core.Coin: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<org.bitcoinj.uri.OptionalFieldValidationException: void <init>(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin parseCoin(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>","<java.lang.ArithmeticException: void <init>(java.lang.String)>","<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.DescriptorProtos$FileOptions$1: com.google.protobuf.DescriptorProtos$FileOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)>":["<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>","<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>","<java.lang.String: boolean equals(java.lang.Object)>","<androidx.collection.SimpleArrayMap: int size()>"],"<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey dropPrivateBytes()>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: com.google.common.collect.ImmutableList getPath()>","<org.bitcoinj.crypto.DeterministicKey: boolean isPubKeyOnly()>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],org.bitcoinj.crypto.LazyECPoint,java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: byte[] getChainCode()>"],"<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>":["<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int)>","<org.spongycastle.asn1.StreamUtil: void <clinit>()>","<org.spongycastle.asn1.StreamUtil: int findLimit(java.io.InputStream)>"],"<org.spongycastle.crypto.paddings.PKCS7Padding: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>":["<org.spongycastle.asn1.ConstructedOctetStream: void <init>(org.spongycastle.asn1.ASN1StreamParser)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: int access$6902(org.bitcoin.protocols.payments.Protos$PaymentACK,int)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: java.lang.Object access$6802(org.bitcoin.protocols.payments.Protos$PaymentACK,java.lang.Object)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoin.protocols.payments.Protos$1)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$Payment access$6702(org.bitcoin.protocols.payments.Protos$PaymentACK,org.bitcoin.protocols.payments.Protos$Payment)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.SingleFieldBuilder: void markDirty()>":["<com.google.protobuf.SingleFieldBuilder: void onChanged()>"],"<de.schildbach.wallet.ui.ExchangeRatesFragment$2: void <init>(de.schildbach.wallet.ui.ExchangeRatesFragment)>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.SweepWalletFragment$5: void <init>(de.schildbach.wallet.ui.send.SweepWalletFragment)>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$FileOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoinj.core.Utils: java.lang.String dateTimeFormat(long)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>","<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>","<java.util.Locale: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.text.DateFormat: java.lang.String format(java.lang.Object)>"],"<ch.qos.logback.core.pattern.Converter: void <init>()>":["<java.lang.Object: void <init>()>"],"<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)>":["<androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)>"],"<androidx.collection.SparseArrayCompat: void remove(int)>":["<androidx.collection.SparseArrayCompat: void delete(int)>"],"<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subListUnchecked(int,int)>":["<com.google.common.collect.ImmutableList$SubList: void <init>(com.google.common.collect.ImmutableList,int,int)>"],"<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.SingleFieldBuilder getSourceCodeInfoFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder: com.google.protobuf.DescriptorProtos$SourceCodeInfo getSourceCodeInfo()>","<com.google.protobuf.SingleFieldBuilder: void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.bitcoinj.wallet.Protos$DeterministicKey: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey getDefaultInstanceForType()>"],"<org.bitcoinj.net.AbstractTimeoutHandler: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.StoredBlock getPrev(org.bitcoinj.store.BlockStore)>":["<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock get(org.bitcoinj.core.Sha256Hash)>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getPrevBlockHash()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>"],"<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<org.bitcoinj.utils.Fiat: void <init>(java.lang.String,long)>":["<java.lang.Object: void <init>()>"],"<okio.AsyncTimeout$1: void write(okio.Buffer,long)>":["<okio.AsyncTimeout$1: void write(okio.Buffer,long)>","<okio.Util: void <clinit>()>","<okio.Okio$1: void write(okio.Buffer,long)>","<okio.AsyncTimeout: void exit(boolean)>","<okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>","<okio.AsyncTimeout: void enter()>","<okio.Util: void checkOffsetAndCount(long,long,long)>"],"<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManagerImpl)>":["<java.util.ArrayList: void <init>()>","<androidx.fragment.app.FragmentTransaction: void <init>()>"],"<de.schildbach.wallet.ui.scan.ScanActivity: void startForResult(android.app.Activity,int)>":["<androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.app.Activity: void startActivityForResult(android.content.Intent,int)>","<android.content.Intent: void <clinit>()>"],"<de.schildbach.wallet.offline.AcceptBluetoothService: boolean handleTx(org.bitcoinj.core.Transaction)>":["<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<de.schildbach.wallet.offline.AcceptBluetoothService$4: void run()>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.offline.AcceptBluetoothService: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.core.Transaction: java.lang.String getHashAsString()>","<de.schildbach.wallet.offline.AcceptBluetoothService$4: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService,org.bitcoinj.core.Transaction)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<android.os.Handler: boolean post(java.lang.Runnable)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>"],"<com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>":["<com.google.common.base.Platform: java.lang.String emptyToNull(java.lang.String)>","<com.google.common.base.Platform: void <clinit>()>"],"<com.google.common.util.concurrent.AggregateFuture$RunningState: void handleException(java.lang.Throwable)>":["<com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)>","<java.util.logging.Level: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture: java.util.logging.Logger access$500()>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void releaseResourcesAfterFailure()>","<com.google.common.util.concurrent.AggregateFuture: boolean access$400(java.util.Set,java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture: void <clinit>()>","<com.google.common.util.concurrent.AggregateFutureState: java.util.Set getOrInitSeenExceptions()>","<com.google.common.util.concurrent.AggregateFuture: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$X509Certificates$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoin.protocols.payments.Protos$X509Certificates$1: org.bitcoin.protocols.payments.Protos$X509Certificates parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>"],"<androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>":["<androidx.fragment.app.FragmentTransitionCompat21$3: void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)>","<android.transition.TransitionSet: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>"],"<org.bitcoinj.wallet.Protos$Tag: org.bitcoinj.wallet.Protos$Tag getDefaultInstance()>":["<org.bitcoinj.wallet.Protos$Tag: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicSeed: void <init>(java.util.List,byte[],java.lang.String,long)>":["<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.crypto.MnemonicCode: void <clinit>()>","<org.bitcoinj.wallet.DeterministicSeed: void <init>(byte[],java.util.List,long)>","<org.bitcoinj.crypto.MnemonicCode: byte[] toSeed(java.util.List,java.lang.String)>"],"<com.google.protobuf.CodedInputStream: void skipRawBytesSlowPath(int)>":["<com.google.protobuf.CodedInputStream: void skipRawBytes(int)>","<com.google.protobuf.CodedInputStream: void refillBuffer(int)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException negativeSize()>"],"<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>":["<java.lang.Object: void <init>()>"],"<com.google.common.io.BaseEncoding: byte[] decodeChecked(java.lang.CharSequence)>":["<com.google.common.io.BaseEncoding$Base64Encoding: int decodeTo(byte[],java.lang.CharSequence)>","<com.google.common.io.BaseEncoding: void <clinit>()>","<com.google.common.io.BaseEncoding$Base16Encoding: int decodeTo(byte[],java.lang.CharSequence)>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.CharSequence trimTrailingPadding(java.lang.CharSequence)>","<com.google.common.io.BaseEncoding: byte[] extract(byte[],int)>","<java.lang.String: int length()>","<com.google.common.io.BaseEncoding$StandardBaseEncoding: int maxDecodedSize(int)>"],"<org.bitcoinj.wallet.Protos$Wallet$Builder: org.bitcoinj.wallet.Protos$Wallet$Builder clearTransaction()>":["<com.google.protobuf.RepeatedFieldBuilder: void clear()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$Script$1: org.bitcoinj.wallet.Protos$Script parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<org.bitcoinj.wallet.Protos$Script: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.bitcoinj.wallet.Protos$1)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder addBroadcastBy(org.bitcoinj.wallet.Protos$PeerAddress)>":["<java.lang.NullPointerException: void <init>()>","<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: void ensureBroadcastByIsMutable()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage)>"],"<java.lang.String: boolean isEmpty()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Throwable: java.lang.String getLocalizedMessage()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>":["<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>"],"<de.schildbach.wallet.data.PaymentIntent$Output$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<okio.RealBufferedSink: void flush()>":["<okio.AsyncTimeout$1: void write(okio.Buffer,long)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<okio.Okio$1: void write(okio.Buffer,long)>","<okio.Okio$1: void flush()>","<okio.AsyncTimeout$1: void flush()>"],"<de.schildbach.wallet.ui.InputParser: void cannotClassify(java.lang.String)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask$1$1: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.SendCoinsFragment$22: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void error(int,java.lang.Object[])>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.SendCoinsFragment$20: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.WalletActivity$14: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.SendCoinsQrActivity$1: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.InputParser: void <clinit>()>","<de.schildbach.wallet.ui.send.SendCoinsFragment$21: void error(int,java.lang.Object[])>","<de.schildbach.wallet.ui.WalletActivity$15: void error(int,java.lang.Object[])>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<ch.qos.logback.classic.Logger: void addAppender(ch.qos.logback.core.Appender)>":["<ch.qos.logback.core.spi.AppenderAttachableImpl: void <init>()>","<ch.qos.logback.core.spi.AppenderAttachableImpl: void addAppender(ch.qos.logback.core.Appender)>","<ch.qos.logback.core.spi.AppenderAttachableImpl: void <clinit>()>"],"<org.bitcoinj.script.Script: boolean isSentToRawPubKey()>":["<java.util.LinkedList: int size()>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<com.google.protobuf.GeneratedMessage$ExtendableMessage: java.util.Map getExtensionFields()>":["<com.google.protobuf.FieldSet: java.util.Map getAllFields()>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.TransactionOutput getOutput(long)>":["<java.util.ArrayList: java.lang.Object get(int)>"],"<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey createMasterPrivKeyFromBytes(byte[],byte[])>":["<org.bitcoinj.core.ECKey: void <clinit>()>","<com.google.common.collect.ImmutableList: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void assertLessThanN(java.math.BigInteger,java.lang.String)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>","<org.bitcoinj.crypto.DeterministicKey: void <init>(com.google.common.collect.ImmutableList,byte[],java.math.BigInteger,org.bitcoinj.crypto.DeterministicKey)>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<java.math.BigInteger: void <clinit>()>","<org.bitcoinj.crypto.DeterministicKey: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation: void assertNonZero(java.math.BigInteger,java.lang.String)>","<java.math.BigInteger: void <init>(int,byte[])>"],"<ch.qos.logback.core.rolling.RollingPolicyBase: void determineCompressionMode()>":["<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>","<ch.qos.logback.core.rolling.helper.CompressionMode: void <clinit>()>"],"<okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>":["<okio.AsyncTimeout: boolean exit()>","<okio.Okio$4: java.io.IOException newTimeoutException(java.io.IOException)>"],"<org.bitcoinj.core.VersionMessage: void checkSubVerComponent(java.lang.String)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.String: boolean contains(java.lang.CharSequence)>"],"<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void <init>(com.google.common.util.concurrent.CollectionFuture,com.google.common.collect.ImmutableCollection,boolean)>":["<com.google.common.collect.RegularImmutableList: int size()>","<com.google.common.collect.ImmutableCollection: boolean add(java.lang.Object)>","<com.google.common.collect.ImmutableList: void <clinit>()>","<com.google.common.util.concurrent.AggregateFuture$RunningState: void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection,boolean,boolean)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>","<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>","<com.google.common.collect.ImmutableCollection: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.AbstractCollection: boolean isEmpty()>"],"<com.google.common.util.concurrent.Service$State$6: void <init>(java.lang.String,int)>":["<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1)>"],"<de.schildbach.wallet.WalletApplication: org.bitcoinj.wallet.Wallet getWallet()>":["<de.schildbach.wallet.WalletApplication$2: void <init>(de.schildbach.wallet.WalletApplication,com.google.common.util.concurrent.SettableFuture)>","<com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: java.lang.Object get()>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<de.schildbach.wallet.WalletApplication: void getWalletAsync(de.schildbach.wallet.WalletApplication$OnWalletLoadedListener)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<android.os.Looper: android.os.Looper myLooper()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<java.lang.RuntimeException: void <init>()>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<androidx.collection.SimpleArrayMap: int indexOfNull()>":["<androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)>"],"<com.google.common.collect.ImmutableSet: void <init>()>":["<com.google.common.collect.ImmutableCollection: void <init>()>"],"<androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>":["<androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)>","<androidx.core.content.FileProvider: int modeToMode(java.lang.String)>","<androidx.core.content.FileProvider: void <clinit>()>","<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>","<android.os.ParcelFileDescriptor: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$21800()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(java.lang.String)>":["<org.bitcoinj.core.Utils: void <clinit>()>","<com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>"],"<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>":["<org.spongycastle.asn1.ASN1TaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>"],"<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$FileDescriptor buildFrom(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor[],boolean)>":["<com.google.protobuf.Descriptors$DescriptorPool: void <clinit>()>","<com.google.protobuf.Descriptors$FileDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$DescriptorPool,boolean)>","<com.google.protobuf.Descriptors$FileDescriptor: void crossLink()>","<com.google.protobuf.Descriptors$DescriptorPool: void <init>(com.google.protobuf.Descriptors$FileDescriptor[],boolean)>"],"<com.google.common.math.LongMath$1: void <clinit>()>":["<java.math.RoundingMode: void <clinit>()>","<com.google.common.math.LongMath$1: void <clinit>()>","<java.math.RoundingMode: java.math.RoundingMode[] values()>"],"<ch.qos.logback.classic.spi.LoggingEvent: java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[])>":["<ch.qos.logback.classic.spi.EventArgUtil: java.lang.Object[] trimmedCopy(java.lang.Object[])>","<ch.qos.logback.classic.spi.EventArgUtil: boolean successfulExtraction(java.lang.Throwable)>","<ch.qos.logback.classic.spi.EventArgUtil: java.lang.Throwable extractThrowable(java.lang.Object[])>"],"<androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>","<androidx.collection.SparseArrayCompat: int indexOfKey(int)>","<androidx.collection.SparseArrayCompat: int size()>"],"<de.schildbach.wallet.ui.send.SweepWalletActivity: void <init>()>":["<de.schildbach.wallet.ui.AbstractWalletActivity: void <init>()>"],"<org.bitcoinj.wallet.Wallet: void <init>(org.bitcoinj.core.Context,org.bitcoinj.wallet.KeyChainGroup)>":["<java.util.LinkedHashMap: void <init>()>","<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>","<org.bitcoinj.signers.LocalTransactionSigner: void <clinit>()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<org.bitcoinj.wallet.KeyChainGroup: int numKeys()>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.core.Context: org.bitcoinj.core.NetworkParameters getParams()>","<org.bitcoinj.wallet.KeyChainGroup: void createAndActivateNewHDChain()>","<org.bitcoinj.signers.LocalTransactionSigner: void <init>()>","<org.bitcoinj.utils.Threading: java.util.concurrent.locks.ReentrantLock lock(java.lang.String)>","<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>","<org.bitcoinj.utils.BaseTaggableObject: void <init>()>","<com.google.common.collect.Sets: java.util.HashSet newHashSet()>","<java.lang.String: boolean equals(java.lang.Object)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<org.bitcoinj.wallet.KeyChainGroup: void setLookaheadSize(int)>","<org.bitcoinj.wallet.DefaultCoinSelector: void <init>()>","<org.bitcoinj.wallet.Wallet: void addTransactionSigner(org.bitcoinj.signers.TransactionSigner)>","<org.bitcoinj.wallet.DefaultRiskAnalysis: void <clinit>()>","<org.bitcoinj.core.NetworkParameters: java.lang.String getId()>","<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>","<java.util.HashMap: void <init>()>","<java.util.ArrayList: void <init>()>","<org.bitcoinj.wallet.Wallet: void createTransientState()>","<org.bitcoinj.wallet.Wallet$1: void <init>(org.bitcoinj.wallet.Wallet)>"],"<com.google.protobuf.Descriptors$FieldDescriptor: com.google.protobuf.Descriptors$FieldDescriptor$JavaType getJavaType()>":["<com.google.protobuf.Descriptors$FieldDescriptor$Type: com.google.protobuf.Descriptors$FieldDescriptor$JavaType getJavaType()>"],"<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>":["<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<org.slf4j.impl.StaticLoggerBinder: org.slf4j.ILoggerFactory getLoggerFactory()>","<org.slf4j.LoggerFactory: void performInitialization()>","<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>","<org.slf4j.LoggerFactory: void <clinit>()>"],"<androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)>":["<androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()>","<java.lang.StringBuilder: void <init>()>","<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.Transaction: org.bitcoinj.core.Coin getFee()>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.util.Iterator iterator()>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin subtract(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: org.bitcoinj.core.Coin add(org.bitcoinj.core.Coin)>","<org.bitcoinj.core.Coin: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(boolean)>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void initFields()>","<com.google.protobuf.DescriptorProtos$ServiceOptions$1: void <init>()>","<com.google.protobuf.DescriptorProtos$ServiceOptions: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>":["<org.bitcoinj.wallet.Protos$ExchangeRate$Builder: org.bitcoinj.wallet.Protos$ExchangeRate$Builder mergeFrom(com.google.protobuf.Message)>"],"<org.bitcoinj.crypto.DeterministicKey: boolean hasPrivKey()>":["<org.bitcoinj.crypto.DeterministicKey: org.bitcoinj.crypto.DeterministicKey findParentWithPrivKey()>"],"<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getFilesDirectoryPath()>":["<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String absPath(java.io.File)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: void <init>(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: void <init>(com.google.protobuf.GeneratedMessage$Builder)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>"],"<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: void maybeForceBuilderInitialization()>":["<com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<de.schildbach.wallet.data.PaymentIntent$Output: void <clinit>()>":["<de.schildbach.wallet.data.PaymentIntent$Output$1: void <init>()>","<de.schildbach.wallet.data.PaymentIntent$Output: void <clinit>()>"],"<org.spongycastle.asn1.ASN1Sequence: void <init>()>":["<java.util.Vector: void <init>()>","<org.spongycastle.asn1.ASN1Primitive: void <init>()>"],"<java.lang.Integer: java.lang.Integer valueOf(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.spongycastle.crypto.modes.CBCBlockCipher: void reset()>":["<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>","<java.lang.System: void <clinit>()>","<org.spongycastle.crypto.engines.AESFastEngine: void reset()>","<org.spongycastle.util.Arrays: void fill(byte[],byte)>"],"<java.lang.Throwable: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$12600()>":["<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<com.google.common.io.BaseEncoding$Base16Encoding: int decodeTo(byte[],java.lang.CharSequence)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: char charAt(int)>","<com.google.common.io.BaseEncoding$Alphabet: int decode(char)>","<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>","<com.google.common.io.BaseEncoding$DecodingException: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.lang.String: int length()>"],"<com.squareup.moshi.Moshi$DeferredAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Object)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<org.bitcoinj.wallet.Wallet: java.util.List getWatchedScripts()>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.TextFormat$Parser: void <init>(boolean,com.google.protobuf.TextFormat$Parser$SingularOverwritePolicy)>":["<java.lang.Object: void <init>()>"],"<org.spongycastle.asn1.BERSetParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.BERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>","<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1EncodableVector readVector()>"],"<androidx.arch.core.executor.DefaultTaskExecutor$1: void <init>(androidx.arch.core.executor.DefaultTaskExecutor)>":["<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>","<java.lang.Object: void <init>()>"],"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<org.bitcoinj.core.AbstractBlockChain: void addWallet(org.bitcoinj.wallet.Wallet)>":["<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.AbstractBlockChain: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.AbstractBlockChain: int getBestChainHeight()>","<org.bitcoinj.core.AbstractBlockChain: void addReorganizeListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.ReorganizeListener)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.utils.Threading: void <clinit>()>","<org.bitcoinj.core.AbstractBlockChain: void addNewBestBlockListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.NewBestBlockListener)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<org.bitcoinj.core.Block: org.bitcoinj.core.Sha256Hash getHash()>","<java.lang.Integer: void <clinit>()>","<org.bitcoinj.core.StoredBlock: org.bitcoinj.core.Block getHeader()>","<org.bitcoinj.core.AbstractBlockChain: org.bitcoinj.core.StoredBlock getChainHead()>","<org.bitcoinj.core.AbstractBlockChain: void addTransactionReceivedListener(java.util.concurrent.Executor,org.bitcoinj.core.listeners.TransactionReceivedInBlockListener)>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>","<org.bitcoinj.core.BlockChain: void rollbackBlockStore(int)>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<ch.qos.logback.classic.Logger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>"],"<androidx.collection.ArraySet: void <clinit>()>":["<androidx.collection.ArraySet: void <clinit>()>"],"<com.google.protobuf.TextFormat: int parseInt32(java.lang.String)>":["<com.google.protobuf.TextFormat: void <clinit>()>","<com.google.protobuf.TextFormat: long parseInteger(java.lang.String,boolean,boolean)>"],"<org.bitcoinj.wallet.Protos$ExchangeRate: boolean access$20300()>":["<org.bitcoinj.wallet.Protos$ExchangeRate: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.util.concurrent.TrustedListenableFutureTask: void <init>(java.util.concurrent.Callable)>":["<com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask: void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,java.util.concurrent.Callable)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>"],"<org.bitcoinj.wallet.Protos$EncryptedData$Builder: com.google.protobuf.Descriptors$Descriptor getDescriptorForType()>":["<org.bitcoinj.wallet.Protos: com.google.protobuf.Descriptors$Descriptor access$1100()>","<org.bitcoinj.wallet.Protos: void <clinit>()>"],"<androidx.fragment.app.ListFragment$1: void <init>(androidx.fragment.app.ListFragment)>":["<java.lang.Object: void <init>()>"],"<okhttp3.Authenticator$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.service.BlockchainService: void onDestroy()>":["<ch.qos.logback.classic.Logger: void info(java.lang.String)>","<androidx.lifecycle.LiveData: java.lang.Object getValue()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener: void stop()>","<org.bitcoinj.core.PeerGroup: com.google.common.util.concurrent.ListenableFuture stopAsync()>","<java.lang.StringBuilder: java.lang.StringBuilder append(long)>","<ch.qos.logback.classic.Logger: void debug(java.lang.String)>","<de.schildbach.wallet.service.BlockchainService: void scheduleStart(de.schildbach.wallet.WalletApplication)>","<android.app.Service: void stopForeground(boolean)>","<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>","<org.bitcoinj.core.PeerGroup: boolean removeConnectedEventListener(org.bitcoinj.core.listeners.PeerConnectedEventListener)>","<java.lang.StringBuilder: java.lang.String toString()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<androidx.lifecycle.LifecycleService: void onDestroy()>","<org.bitcoinj.store.SPVBlockStore: void close()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<java.io.File: boolean delete()>","<java.lang.System: long currentTimeMillis()>","<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>","<de.schildbach.wallet.service.BlockchainService: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<java.lang.StringBuilder: void <init>()>","<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>","<java.lang.System: void <clinit>()>","<org.bitcoinj.core.PeerGroup: boolean removeDisconnectedEventListener(org.bitcoinj.core.listeners.PeerDisconnectedEventListener)>","<org.bitcoinj.core.PeerGroup: void removeWallet(org.bitcoinj.wallet.Wallet)>"],"<okhttp3.internal.platform.AndroidPlatform: boolean supportsAlpn()>":["<java.security.Security: java.security.Provider getProvider(java.lang.String)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<org.bitcoinj.wallet.Protos$Key$Type: void <init>(java.lang.String,int,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<androidx.arch.core.internal.SafeIterableMap$ListIterator: void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$Script: org.bitcoinj.wallet.Protos$Script getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Script: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>":["<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object)>","<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.squareup.moshi.StandardJsonAdapters$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask$1$1: void handlePaymentIntent(de.schildbach.wallet.data.PaymentIntent)>":["<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void <clinit>()>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: void onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>","<de.schildbach.wallet.ui.send.RequestPaymentRequestTask: org.slf4j.Logger access$000()>"],"<okio.SegmentPool: void recycle(okio.Segment)>":["<java.lang.IllegalArgumentException: void <init>()>"],"<com.google.protobuf.Descriptors$EnumValueDescriptor: void <init>(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$EnumDescriptor,int)>":["<java.lang.StringBuilder: java.lang.String toString()>","<com.google.protobuf.Descriptors$DescriptorPool: void addEnumValueByNumber(com.google.protobuf.Descriptors$EnumValueDescriptor)>","<java.lang.String: void <clinit>()>","<com.google.protobuf.Descriptors$GenericDescriptor: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.String: int length()>","<java.lang.StringBuilder: void <init>(int)>","<com.google.protobuf.Descriptors$EnumDescriptor: java.lang.String getFullName()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<com.google.protobuf.Descriptors$FileDescriptor: com.google.protobuf.Descriptors$DescriptorPool access$1300(com.google.protobuf.Descriptors$FileDescriptor)>","<com.google.protobuf.Descriptors$DescriptorPool: void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor)>"],"<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$PaymentACK)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: java.lang.Object access$6800(org.bitcoin.protocols.payments.Protos$PaymentACK)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean hasPayment()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<org.bitcoin.protocols.payments.Protos$PaymentACK: boolean hasMemo()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$Payment getPayment()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder mergePayment(org.bitcoin.protocols.payments.Protos$Payment)>"],"<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$EncryptedData: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<com.squareup.okhttp.ConnectionSpec$Builder: void <init>(boolean)>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: java.lang.Object combine(java.util.List)>":["<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: java.util.List combine(java.util.List)>"],"<org.bitcoinj.wallet.Protos$DeterministicKey$Builder: void ensurePathIsMutable()>":["<java.util.ArrayList: void <init>(java.util.Collection)>"],"<org.spongycastle.crypto.engines.AESFastEngine: void packBlock(byte[],int)>":["<org.spongycastle.util.Pack: void intToLittleEndian(int,byte[],int)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet getDefaultInstanceForType()>":["<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>":["<androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>"],"<org.spongycastle.asn1.BERTaggedObjectParser: org.spongycastle.asn1.ASN1Primitive getLoadedObject()>":["<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence: com.google.protobuf.Message$Builder newBuilderForType()>":["<org.bitcoinj.wallet.Protos$TransactionConfidence: org.bitcoinj.wallet.Protos$TransactionConfidence$Builder newBuilderForType()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchStop()>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>"],"<org.bitcoinj.wallet.Protos$Script$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script build()>"],"<ch.qos.logback.core.joran.JoranConfiguratorBase: void <init>()>":["<ch.qos.logback.core.joran.GenericConfigurator: void <init>()>"],"<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveThisOrNextChildKey(org.bitcoinj.crypto.DeterministicKey,int)>":["<org.bitcoinj.crypto.ChildNumber: void <init>(int)>","<org.bitcoinj.crypto.HDKeyDerivation: org.bitcoinj.crypto.DeterministicKey deriveChildKey(org.bitcoinj.crypto.DeterministicKey,org.bitcoinj.crypto.ChildNumber)>","<org.bitcoinj.crypto.HDKeyDerivation: void <clinit>()>","<org.bitcoinj.crypto.ChildNumber: boolean isHardened()>","<org.bitcoinj.crypto.HDDerivationException: void <init>(java.lang.String)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>","<org.bitcoinj.crypto.ChildNumber: int num()>","<org.bitcoinj.crypto.ChildNumber: void <init>(int,boolean)>"],"<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>":["<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>"],"<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <clinit>()>":["<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <clinit>()>","<org.bitcoinj.crypto.HDKeyDerivation$PublicDeriveMode: void <init>(java.lang.String,int)>"],"<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>":["<androidx.fragment.app.Fragment: android.content.Context requireContext()>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>"],"<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: void <clinit>()>","<com.google.protobuf.DescriptorProtos$EnumOptions: com.google.protobuf.DescriptorProtos$EnumOptions$Builder toBuilder()>","<com.google.protobuf.GeneratedMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions buildPartial()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void initFields()>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<com.google.protobuf.GeneratedMessage: void makeExtensionsImmutable()>","<java.io.IOException: java.lang.String getMessage()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<com.google.protobuf.GeneratedMessage: void <init>()>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.DescriptorProtos$EnumOptions$Builder: com.google.protobuf.DescriptorProtos$EnumOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumOptions)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.GeneratedMessage$Builder,org.bitcoinj.wallet.Protos$1)>":["<org.bitcoinj.wallet.Protos$Wallet: void <init>(com.google.protobuf.GeneratedMessage$Builder)>"],"<okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>":["<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<java.lang.Object: java.lang.Object clone()>","<java.util.Collections: void <clinit>()>"],"<ch.qos.logback.core.status.StatusUtil: java.util.List filterStatusListByTimeThreshold(java.util.List,long)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>":["<com.google.common.util.concurrent.CycleDetectingLockFactory: void <clinit>()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory: void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock)>"],"<de.schildbach.wallet.offline.AcceptBluetoothService$2: void <init>(de.schildbach.wallet.offline.AcceptBluetoothService,android.bluetooth.BluetoothAdapter)>":["<de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread: void <init>(android.bluetooth.BluetoothAdapter)>"],"<com.google.protobuf.Descriptors$FieldDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean,com.google.protobuf.Descriptors$1)>":["<com.google.protobuf.Descriptors$FieldDescriptor: void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean)>"],"<org.bitcoinj.crypto.LazyECPoint: byte[] getCanonicalEncoding()>":["<org.bitcoinj.crypto.LazyECPoint: byte[] getEncoded(boolean)>"],"<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base64Url()>":["<com.google.common.io.BaseEncoding: void <clinit>()>"],"<org.bitcoinj.core.PeerGroup: java.util.List getPendingPeers()>":["<java.util.ArrayList: void <init>(java.util.Collection)>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<com.google.protobuf.GeneratedMessage$ExtendableBuilder: com.google.protobuf.GeneratedMessage$ExtendableBuilder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>":["<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void ensureExtensionsIsMutable()>","<com.google.protobuf.FieldSet: void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor)>"],"<com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable)>":["<com.google.common.collect.Iterables: java.util.Collection castOrCopyToCollection(java.lang.Iterable)>","<java.util.ArrayList: java.lang.Object[] toArray()>"],"<com.squareup.okhttp.ConnectionSpec$Builder: void <init>(com.squareup.okhttp.ConnectionSpec)>":["<com.squareup.okhttp.ConnectionSpec: boolean access$400(com.squareup.okhttp.ConnectionSpec)>","<java.lang.Object: void <init>()>","<com.squareup.okhttp.ConnectionSpec: boolean access$700(com.squareup.okhttp.ConnectionSpec)>","<com.squareup.okhttp.ConnectionSpec: void <clinit>()>","<com.squareup.okhttp.ConnectionSpec: java.lang.String[] access$600(com.squareup.okhttp.ConnectionSpec)>","<com.squareup.okhttp.ConnectionSpec: java.lang.String[] access$500(com.squareup.okhttp.ConnectionSpec)>"],"<com.google.common.base.CharMatcher$JavaIsoControl: void <clinit>()>":["<com.google.common.base.CharMatcher: void <clinit>()>","<com.google.common.base.CharMatcher$JavaIsoControl: void <clinit>()>","<com.google.common.base.CharMatcher$JavaIsoControl: void <init>()>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MethodOptions)>":["<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.UnknownFieldSet getUnknownFields()>","<com.google.protobuf.DescriptorProtos$MethodOptions: boolean hasDeprecated()>","<com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: void ensureUninterpretedOptionIsMutable()>","<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions$Builder setDeprecated(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: boolean getDeprecated()>","<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<com.google.protobuf.DescriptorProtos$MethodOptions: java.util.List access$19300(com.google.protobuf.DescriptorProtos$MethodOptions)>","<com.google.protobuf.RepeatedFieldBuilder: void dispose()>","<com.google.protobuf.RepeatedFieldBuilder: boolean isEmpty()>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>","<com.google.protobuf.DescriptorProtos$MethodOptions: com.google.protobuf.DescriptorProtos$MethodOptions getDefaultInstance()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>","<com.google.protobuf.RepeatedFieldBuilder: com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable)>"],"<org.spongycastle.crypto.digests.LongDigest: void finish()>":["<org.spongycastle.crypto.digests.LongDigest: void adjustByteCounts()>","<org.spongycastle.crypto.digests.LongDigest: void update(byte)>","<org.spongycastle.crypto.digests.LongDigest: void processBlock()>","<org.spongycastle.crypto.digests.LongDigest: void processLength(long,long)>"],"<ch.qos.logback.core.pattern.DynamicConverter: void addStatus(ch.qos.logback.core.status.Status)>":["<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>"],"<ch.qos.logback.classic.pattern.ThrowableProxyConverter: boolean isIgnoredStackTraceLine(java.lang.String)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.String: boolean contains(java.lang.CharSequence)>"],"<org.bitcoinj.wallet.Protos$Wallet: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet$EncryptionType: void <clinit>()>","<org.bitcoinj.wallet.Protos$ScryptParameters: org.bitcoinj.wallet.Protos$ScryptParameters getDefaultInstance()>","<org.bitcoinj.wallet.Protos$ScryptParameters: void <clinit>()>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2600()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.spongycastle.asn1.BEROctetStringParser: void <init>(org.spongycastle.asn1.ASN1StreamParser)>":["<java.lang.Object: void <init>()>"],"<androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)>":["<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>","<android.transition.TransitionSet: void <init>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()>":["<com.google.protobuf.DescriptorProtos: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17800()>","<com.google.protobuf.DescriptorProtos: void <clinit>()>","<com.google.protobuf.GeneratedMessage$FieldAccessorTable: com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class)>"],"<java.lang.Class: java.lang.Class forName(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.base.Splitter$1: com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter$1$1: void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence)>"],"<com.google.protobuf.DescriptorProtos$SourceCodeInfo: void initFields()>":["<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List emptyList()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>":["<org.bitcoinj.wallet.Protos$PeerAddress$1: void <init>()>","<org.bitcoinj.wallet.Protos$PeerAddress: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: void <init>(boolean)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$PeerAddress: void initFields()>"],"<org.bitcoinj.wallet.Protos$TransactionInput$Builder: org.bitcoinj.wallet.Protos$TransactionInput$Builder setTransactionOutPointHash(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.CodedInputStream: com.google.protobuf.ByteString readBytes()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>","<com.google.protobuf.DescriptorProtos$FieldOptions$CType: void <clinit>()>","<com.google.protobuf.GeneratedMessage$ExtendableMessage: void makeExtensionsImmutable()>","<java.util.Collections: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.google.protobuf.CodedInputStream: int readTag()>","<com.google.protobuf.CodedInputStream: boolean readBool()>","<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$UninterpretedOption: void <clinit>()>","<com.google.protobuf.CodedInputStream: int readEnum()>","<com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>","<java.io.IOException: java.lang.String getMessage()>","<com.google.protobuf.DescriptorProtos$FieldOptions: void initFields()>","<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder()>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>","<com.google.protobuf.DescriptorProtos$FieldOptions$CType: com.google.protobuf.DescriptorProtos$FieldOptions$CType valueOf(int)>","<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>"],"<com.google.common.collect.Ordering: java.util.List sortedCopy(java.lang.Iterable)>":["<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>","<java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>","<com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>"],"<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>":["<okhttp3.ConnectionSpec: void <clinit>()>","<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>"],"<org.bitcoinj.core.PeerGroup: org.bitcoinj.core.Peer createPeer(org.bitcoinj.core.PeerAddress,org.bitcoinj.core.VersionMessage)>":["<org.bitcoinj.core.PeerSocketHandler: void <clinit>()>","<org.bitcoinj.core.Peer: void <clinit>()>","<org.bitcoinj.core.Peer: void <init>(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.VersionMessage,org.bitcoinj.core.PeerAddress,org.bitcoinj.core.AbstractBlockChain,int)>","<org.bitcoinj.net.AbstractTimeoutHandler: void <clinit>()>"],"<org.spongycastle.asn1.DERSequence: int getBodyLength()>":["<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>"],"<java.lang.Exception: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>":["<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>"],"<org.bitcoin.protocols.payments.Protos$Payment: boolean isInitialized()>":["<org.bitcoin.protocols.payments.Protos$Payment: int getRefundToCount()>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Output getRefundTo(int)>"],"<com.google.common.base.Platform$JdkPatternCompiler: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.AllRandomKeysRotating: void <init>()>":["<java.lang.RuntimeException: void <init>()>"],"<com.google.protobuf.Descriptors$EnumValueDescriptor: void access$2400(com.google.protobuf.Descriptors$EnumValueDescriptor,com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto)>":["<com.google.protobuf.Descriptors$EnumValueDescriptor: void setProto(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto)>"],"<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder tlsVersions(java.lang.String[])>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: java.lang.Object clone()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: org.bitcoinj.wallet.Protos$Key$Builder setSecretBytes(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.base.Splitter$2$1: void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence)>":["<com.google.common.base.Splitter$SplittingIterator: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK: org.bitcoin.protocols.payments.Protos$PaymentACK parseFrom(java.io.InputStream)>":["<org.bitcoin.protocols.payments.Protos$PaymentACK: void <clinit>()>","<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(java.io.InputStream)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<com.google.common.base.Splitter$SplittingIterator: java.lang.String computeNext()>":["<com.google.common.base.AbstractIterator: java.lang.Object endOfData()>","<java.lang.String: char charAt(int)>","<com.google.common.base.Splitter$1$1: int separatorStart(int)>","<com.google.common.base.CharMatcher$Whitespace: boolean matches(char)>","<java.lang.String: java.lang.CharSequence subSequence(int,int)>","<java.lang.String: java.lang.String toString()>","<com.google.common.base.Splitter$2$1: int separatorStart(int)>","<com.google.common.base.Splitter$1$1: int separatorEnd(int)>","<java.lang.String: int length()>","<com.google.common.base.CharMatcher$None: boolean matches(char)>","<com.google.common.base.Splitter$2$1: int separatorEnd(int)>"],"<org.bitcoinj.core.VarInt: int getSizeInBytes()>":["<org.bitcoinj.core.VarInt: int sizeOf(long)>"],"<org.spongycastle.crypto.digests.GeneralDigest: void update(byte[],int,int)>":["<org.spongycastle.crypto.digests.RIPEMD160Digest: void processWord(byte[],int)>","<org.spongycastle.crypto.digests.GeneralDigest: void update(byte)>"],"<org.bitcoinj.core.PeerGroup$4: void <init>(org.bitcoinj.core.PeerGroup)>":["<java.lang.Object: void <init>()>"],"<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder create()>":["<org.bitcoin.protocols.payments.Protos$Output$Builder: void <init>()>"],"<ch.qos.logback.classic.Logger: void <clinit>()>":["<ch.qos.logback.classic.Logger: void <clinit>()>","<java.lang.Class: java.lang.String getName()>"],"<com.google.protobuf.CodedInputStream: int readSInt32()>":["<com.google.protobuf.CodedInputStream: int decodeZigZag32(int)>","<com.google.protobuf.CodedInputStream: int readRawVarint32()>"],"<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)>":["<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>","<org.spongycastle.asn1.ASN1ObjectIdentifier: void <clinit>()>"],"<java.lang.String: java.lang.String valueOf(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.common.util.concurrent.AbstractExecutionThreadService: void <clinit>()>":["<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<com.google.common.util.concurrent.AbstractExecutionThreadService: void <clinit>()>","<java.util.logging.Logger: void <clinit>()>"],"<com.google.common.util.concurrent.AggregateFutureState$AtomicHelper: void <init>(com.google.common.util.concurrent.AggregateFutureState$1)>":["<com.google.common.util.concurrent.AggregateFutureState$AtomicHelper: void <init>()>"],"<org.bitcoinj.wallet.Protos$PeerAddress: void initFields()>":["<com.google.protobuf.ByteString: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>":["<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>","<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>","<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>"],"<androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>":["<androidx.lifecycle.LiveData: void <clinit>()>","<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>","<androidx.lifecycle.LiveData$LifecycleBoundObserver: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>","<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>","<androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)>","<androidx.lifecycle.LifecycleService: androidx.lifecycle.Lifecycle getLifecycle()>","<androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>","<androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)>"],"<okio.Util: void checkOffsetAndCount(long,long,long)>":["<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.String: void <clinit>()>","<java.lang.Long: java.lang.Long valueOf(long)>","<java.lang.Long: void <clinit>()>","<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>"],"<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>":["<com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite)>"],"<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails getDefaultInstanceForType()>"],"<org.bitcoinj.wallet.Protos$Key$Builder: void <init>()>":["<org.bitcoinj.wallet.Protos$DeterministicKey: org.bitcoinj.wallet.Protos$DeterministicKey getDefaultInstance()>","<org.bitcoinj.wallet.Protos$Key$Builder: void maybeForceBuilderInitialization()>","<org.bitcoinj.wallet.Protos$EncryptedData: void <clinit>()>","<com.google.protobuf.ByteString: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void <init>()>","<org.bitcoinj.wallet.Protos$DeterministicKey: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$EncryptedData: org.bitcoinj.wallet.Protos$EncryptedData getDefaultInstance()>","<org.bitcoinj.wallet.Protos$Key$Type: void <clinit>()>"],"<org.bitcoinj.wallet.DeterministicKeyChain: org.bitcoinj.wallet.DeterministicKeyChain toEncrypted(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter)>":["<org.bitcoinj.wallet.DeterministicKeyChain: void <clinit>()>","<org.bitcoinj.wallet.DeterministicKeyChain: void <init>(org.bitcoinj.crypto.KeyCrypter,org.spongycastle.crypto.params.KeyParameter,org.bitcoinj.wallet.DeterministicKeyChain)>"],"<org.spongycastle.asn1.DERSequence: void <init>()>":["<org.spongycastle.asn1.ASN1Sequence: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction: boolean isInitialized()>":["<org.bitcoinj.wallet.Protos$Transaction: boolean hasHash()>","<org.bitcoinj.wallet.Protos$Transaction: int getTransactionOutputCount()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$ExchangeRate getExchangeRate()>","<org.bitcoinj.wallet.Protos$Transaction: int getTransactionInputCount()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasConfidence()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasExchangeRate()>","<org.bitcoinj.wallet.Protos$ExchangeRate: boolean isInitialized()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionInput getTransactionInput(int)>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionOutput getTransactionOutput(int)>","<org.bitcoinj.wallet.Protos$TransactionConfidence: boolean isInitialized()>","<org.bitcoinj.wallet.Protos$Transaction: boolean hasVersion()>","<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$TransactionConfidence getConfidence()>"],"<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[],int,int)>":["<com.google.protobuf.CodedOutputStream: void <init>(byte[],int,int)>"],"<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.X500NameStyle,java.lang.String)>":["<org.spongycastle.asn1.x500.X500Name: void <init>(org.spongycastle.asn1.x500.RDN[])>","<org.spongycastle.asn1.x500.style.BCStyle: org.spongycastle.asn1.x500.RDN[] fromString(java.lang.String)>"],"<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap)>":["<java.util.AbstractSet: void <init>()>"],"<org.bitcoinj.core.ECKey$ECDSASignature: java.io.ByteArrayOutputStream derByteStream()>":["<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>","<java.io.ByteArrayOutputStream: void <init>(int)>","<org.spongycastle.asn1.DERSequenceGenerator: void close()>","<org.spongycastle.asn1.DERSequenceGenerator: void <init>(java.io.OutputStream)>","<org.spongycastle.asn1.DERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>"],"<org.bitcoin.protocols.payments.Protos$Payment: com.google.protobuf.ByteString getMemoBytes()>":["<com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)>","<com.google.protobuf.ByteString: void <clinit>()>"],"<androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>":["<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<android.os.Bundle: void putInt(java.lang.String,int)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.core.TransactionConfidence: void setConfidenceType(org.bitcoinj.core.TransactionConfidence$ConfidenceType)>":["<org.bitcoinj.core.TransactionConfidence$ConfidenceType: void <clinit>()>"],"<org.bitcoinj.crypto.DeterministicKey: long getCreationTimeSeconds()>":["<org.bitcoinj.core.ECKey: long getCreationTimeSeconds()>","<org.bitcoinj.crypto.DeterministicKey: long getCreationTimeSeconds()>"],"<org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>":["<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<org.bitcoinj.wallet.Wallet$MultipleOpReturnRequested: void <init>()>":["<org.bitcoinj.wallet.Wallet$CompletionException: void <init>()>"],"<org.bitcoinj.wallet.Protos$Script$Builder: org.bitcoinj.wallet.Protos$Script$Builder setProgram(com.google.protobuf.ByteString)>":["<java.lang.NullPointerException: void <init>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<com.google.common.util.concurrent.AbstractFuture$Waiter: void unpark()>":["<java.util.concurrent.locks.LockSupport: void unpark(java.lang.Thread)>"],"<com.google.protobuf.UnknownFieldSet$Field: void <init>()>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$ScryptParameters$Builder: org.bitcoinj.wallet.Protos$ScryptParameters$Builder setR(int)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker)>":["<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <clinit>()>","<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>","<com.google.common.collect.MapMakerInternalMap: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance()>","<com.google.common.collect.MapMakerInternalMap$Strength: void <clinit>()>","<java.lang.AssertionError: void <init>()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance()>","<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper)>","<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <clinit>()>","<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <clinit>()>"],"<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>":["<android.os.Build$VERSION: void <clinit>()>"],"<ch.qos.logback.core.OutputStreamAppender: void writeBytes(byte[])>":["<java.io.OutputStream: void flush()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void flush()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.io.OutputStream: void write(byte[])>"],"<de.schildbach.wallet.WalletApplication: void autosaveWalletNow()>":["<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>","<org.bitcoinj.wallet.WalletFiles: void saveNow()>","<de.schildbach.wallet.util.CrashReporter: void <clinit>()>","<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>","<ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>","<de.schildbach.wallet.WalletApplication: void <clinit>()>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>","<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>","<de.schildbach.wallet.util.CrashReporter: void saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)>","<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>","<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>"],"<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: com.google.protobuf.Message build()>":["<org.bitcoinj.wallet.Protos$TransactionOutput$Builder: org.bitcoinj.wallet.Protos$TransactionOutput build()>"],"<org.bitcoinj.crypto.ChildNumber: boolean isHardened()>":["<org.bitcoinj.crypto.ChildNumber: boolean hasHardenedBit(int)>","<org.bitcoinj.crypto.ChildNumber: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(boolean)>":["<com.google.protobuf.GeneratedMessage$ExtendableMessage: void <init>()>","<com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet getDefaultInstance()>","<com.google.protobuf.UnknownFieldSet: void <clinit>()>"],"<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock getChainHead()>":["<org.bitcoinj.store.SPVBlockStore: org.bitcoinj.core.StoredBlock get(org.bitcoinj.core.Sha256Hash)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.concurrent.locks.ReentrantLock: void lock()>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void unlock()>","<java.util.concurrent.locks.ReentrantLock: void unlock()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<org.bitcoinj.store.BlockStoreException: void <init>(java.lang.String)>","<org.bitcoinj.core.Sha256Hash: void <clinit>()>","<org.bitcoinj.core.Sha256Hash: org.bitcoinj.core.Sha256Hash wrap(byte[])>","<com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock: void lock()>"],"<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(java.io.InputStream,org.bitcoinj.wallet.WalletExtension[])>":["<org.bitcoinj.wallet.WalletProtobufSerializer: org.bitcoinj.wallet.Wallet readWallet(java.io.InputStream,boolean,org.bitcoinj.wallet.WalletExtension[])>"],"<org.bitcoinj.wallet.Protos$TransactionConfidence$Builder: com.google.protobuf.RepeatedFieldBuilder getBroadcastByFieldBuilder()>":["<com.google.protobuf.GeneratedMessage$Builder: boolean isClean()>","<com.google.protobuf.RepeatedFieldBuilder: void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean)>","<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren()>"],"<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>":["<java.util.Vector: java.lang.Object elementAt(int)>"],"<ch.qos.logback.core.pattern.parser.OptionTokenizer: void tokenize(char,java.util.List)>":["<java.lang.StringBuffer: java.lang.String toString()>","<java.lang.StringBuffer: java.lang.StringBuffer append(char)>","<java.lang.StringBuffer: void setLength(int)>","<ch.qos.logback.core.pattern.parser.OptionTokenizer: void emitOptionToken(java.util.List,java.util.List)>","<java.lang.String: java.lang.String trim()>","<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String)>","<java.lang.String: java.lang.String valueOf(char)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<ch.qos.logback.core.pattern.parser.OptionTokenizer: void escape(java.lang.String,java.lang.StringBuffer)>","<java.lang.StringBuffer: void <init>()>","<java.lang.String: char charAt(int)>","<java.lang.String: void <clinit>()>","<java.util.ArrayList: void <init>()>"],"<org.bitcoinj.wallet.Protos$Transaction: org.bitcoinj.wallet.Protos$Transaction getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$Transaction: void <clinit>()>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(com.google.protobuf.Message)>":["<com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Payment)>"],"<com.google.common.collect.Iterators$9: java.lang.Object next()>":["<java.util.NoSuchElementException: void <init>()>"],"<org.spongycastle.util.Strings: byte[] toUTF8ByteArray(java.lang.String)>":["<java.lang.String: char[] toCharArray()>","<org.spongycastle.util.Strings: byte[] toUTF8ByteArray(char[])>"],"<com.google.common.base.Ticker: com.google.common.base.Ticker systemTicker()>":["<com.google.common.base.Ticker: void <clinit>()>"],"<org.bitcoinj.crypto.LazyECPoint: void <init>(org.spongycastle.math.ec.ECCurve,byte[])>":["<java.lang.Object: void <init>()>"],"<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>":["<com.google.common.util.concurrent.AbstractFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>"],"<com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor: void clear(com.google.protobuf.GeneratedMessage$Builder)>":["<com.google.protobuf.GeneratedMessage: java.lang.Object access$1100(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>","<com.google.protobuf.GeneratedMessage: void <clinit>()>"],"<androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)>":["<androidx.fragment.app.Fragment: boolean isAdded()>","<androidx.fragment.app.Fragment: boolean isHidden()>","<androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()>"],"<de.schildbach.wallet.ui.WalletActivity: boolean onPrepareOptionsMenu(android.view.Menu)>":["<android.os.Environment: java.lang.String getExternalStorageState()>","<java.lang.String: boolean equals(java.lang.Object)>","<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>","<android.os.Environment: void <clinit>()>","<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>"],"<org.bitcoinj.wallet.Protos$Wallet: org.bitcoinj.wallet.Protos$Wallet parseFrom(com.google.protobuf.CodedInputStream)>":["<com.google.protobuf.AbstractParser: java.lang.Object parseFrom(com.google.protobuf.CodedInputStream)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoinj.wallet.Protos$Wallet: void <clinit>()>"],"<org.bitcoinj.crypto.ChildNumber: void <init>(int)>":["<java.lang.Object: void <init>()>"],"<org.bitcoinj.wallet.Protos$TransactionInput: com.google.protobuf.Message getDefaultInstanceForType()>":["<org.bitcoinj.wallet.Protos$TransactionInput: org.bitcoinj.wallet.Protos$TransactionInput getDefaultInstanceForType()>"],"<org.bitcoinj.script.Script: byte[] getPubKey()>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.LinkedList: int size()>","<org.bitcoinj.core.ScriptException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.util.ArrayList: int size()>","<java.util.LinkedList: java.lang.Object get(int)>","<java.util.ArrayList: java.lang.Object get(int)>"],"<org.spongycastle.asn1.ASN1InputStream: int readTagNumber(java.io.InputStream,int)>":["<org.spongycastle.asn1.DefiniteLengthInputStream: int read()>","<org.spongycastle.asn1.IndefiniteLengthInputStream: int read()>","<java.io.FilterInputStream: int read()>","<java.io.EOFException: void <init>(java.lang.String)>","<java.io.IOException: void <init>(java.lang.String)>"],"<ch.qos.logback.core.status.StatusUtil: boolean noXMLParsingErrorsOccurred(long)>":["<ch.qos.logback.core.status.StatusUtil: boolean hasXMLParsingErrors(long)>"],"<com.google.protobuf.DescriptorProtos$FileOptions$Builder: com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaGenerateEqualsAndHash(boolean)>":["<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>"],"<okio.Okio: okio.Source source(java.io.InputStream,okio.Timeout)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<okio.Okio$2: void <init>(okio.Timeout,java.io.InputStream)>"],"<com.squareup.moshi.JsonUtf8Reader: void <clinit>()>":["<okio.ByteString: void <clinit>()>","<okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>","<com.squareup.moshi.JsonUtf8Reader: void <clinit>()>"],"<com.google.common.util.concurrent.AbstractFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)>":["<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean cancel(boolean)>","<com.google.common.util.concurrent.AbstractFuture: boolean wasInterrupted()>","<com.google.common.util.concurrent.AbstractFuture: boolean cancel(boolean)>","<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>"],"<org.bitcoinj.uri.OptionalFieldValidationException: void <init>(java.lang.String,java.lang.Throwable)>":["<org.bitcoinj.uri.BitcoinURIParseException: void <init>(java.lang.String,java.lang.Throwable)>"],"<okio.AsyncTimeout$2: void <init>(okio.AsyncTimeout,okio.Source)>":["<java.lang.Object: void <init>()>"],"<ch.qos.logback.core.pattern.parser.OptionTokenizer: void <init>(ch.qos.logback.core.pattern.parser.TokenStream)>":["<ch.qos.logback.core.pattern.util.AsIsEscapeUtil: void <init>()>","<ch.qos.logback.core.pattern.parser.OptionTokenizer: void <init>(ch.qos.logback.core.pattern.parser.TokenStream,ch.qos.logback.core.pattern.util.IEscapeUtil)>"],"<com.google.protobuf.DescriptorProtos: com.google.protobuf.Descriptors$Descriptor access$11400()>":["<com.google.protobuf.DescriptorProtos: void <clinit>()>"],"<org.bitcoin.protocols.payments.Protos$PaymentACK$Builder: org.bitcoin.protocols.payments.Protos$PaymentACK$Builder mergePayment(org.bitcoin.protocols.payments.Protos$Payment)>":["<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment buildPartial()>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment getDefaultInstance()>","<org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder(org.bitcoin.protocols.payments.Protos$Payment)>","<org.bitcoin.protocols.payments.Protos$Payment: void <clinit>()>","<com.google.protobuf.GeneratedMessage$Builder: void onChanged()>","<com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder mergeFrom(org.bitcoin.protocols.payments.Protos$Payment)>"],"<com.google.common.net.InetAddresses: short parseHextet(java.lang.String)>":["<java.lang.Integer: int parseInt(java.lang.String,int)>","<java.lang.Integer: void <clinit>()>","<java.lang.NumberFormatException: void <init>()>"],"<com.squareup.moshi.JsonAdapter: void <init>()>":["<java.lang.Object: void <init>()>"],"<okhttp3.HttpUrl$Builder: void pop()>":["<java.util.ArrayList: boolean isEmpty()>","<java.util.ArrayList: java.lang.Object remove(int)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>"],"<androidx.collection.SparseArrayCompat: int keyAt(int)>":["<androidx.collection.SparseArrayCompat: void gc()>"],"<com.google.protobuf.Utf8: boolean isValidUtf8(byte[])>":["<com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>"],"<com.google.protobuf.DescriptorProtos$MethodOptions$Builder: com.google.protobuf.DescriptorProtos$MethodOptions buildPartial()>":["<com.google.protobuf.GeneratedMessage$Builder: void onBuilt()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<com.google.protobuf.DescriptorProtos$MethodOptions: boolean access$19202(com.google.protobuf.DescriptorProtos$MethodOptions,boolean)>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1)>","<java.util.Collections: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: int access$19402(com.google.protobuf.DescriptorProtos$MethodOptions,int)>","<com.google.protobuf.DescriptorProtos$MethodOptions: java.util.List access$19302(com.google.protobuf.DescriptorProtos$MethodOptions,java.util.List)>","<com.google.protobuf.GeneratedMessage: void <clinit>()>","<com.google.protobuf.DescriptorProtos$MethodOptions: void <clinit>()>","<com.google.protobuf.RepeatedFieldBuilder: java.util.List build()>"],"<androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>":["<androidx.lifecycle.Lifecycle$State: void <clinit>()>","<java.lang.Object: java.lang.Object clone()>"],"<org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()>":["<java.util.HashSet: boolean add(java.lang.Object)>","<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>","<java.lang.Class: java.lang.ClassLoader getClassLoader()>","<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>","<org.slf4j.LoggerFactory: void <clinit>()>","<org.slf4j.helpers.Util: void <clini