{"<com.jakewharton.rxbinding2.InitialValueObservable: void subscribeActual(io.reactivex.Observer)>":["<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: void subscribeListener(io.reactivex.Observer)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onNext(java.lang.Object)>","<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: java.lang.Object getInitialValue()>","<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)>"],"<io.reactivex.android.schedulers.AndroidSchedulers$1: java.lang.Object call()>":["<io.reactivex.android.schedulers.AndroidSchedulers$1: io.reactivex.Scheduler call()>"],"<com.getkeepsafe.relinker.elf.Elf32Header: void <init>(boolean,com.getkeepsafe.relinker.elf.ElfParser)>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.ElfParser: int readHalf(java.nio.ByteBuffer,long)>","<com.getkeepsafe.relinker.elf.Elf$Header: void <init>()>"],"<io.reactivex.internal.schedulers.ComputationScheduler: void start()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void <init>(int,java.util.concurrent.ThreadFactory)>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<io.reactivex.internal.schedulers.ComputationScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void shutdown()>"],"<com.getkeepsafe.relinker.SystemLibraryLoader: void loadLibrary(java.lang.String)>":["<java.lang.System: void loadLibrary(java.lang.String)>","<java.lang.System: void <clinit>()>"],"<com.getkeepsafe.relinker.elf.ElfParser: long readLong(java.nio.ByteBuffer,long)>":["<com.getkeepsafe.relinker.elf.ElfParser: void read(java.nio.ByteBuffer,long,int)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void printStackTrace(java.lang.Throwable,java.io.PrintStream)>":["<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void <clinit>()>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$ReuseDesugaringStrategy: void printStackTrace(java.lang.Throwable,java.io.PrintStream)>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$NullDesugaringStrategy: void printStackTrace(java.lang.Throwable,java.io.PrintStream)>"],"<io.realm.exceptions.RealmFileException$Kind: void <clinit>()>":["<io.realm.exceptions.RealmFileException$Kind: void <init>(java.lang.String,int)>","<io.realm.exceptions.RealmFileException$Kind: void <clinit>()>"],"<java.lang.Object: boolean equals(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.DaggerAppComponent: com.esoxjem.movieguide.DaggerAppComponent$Builder builder()>":["<com.esoxjem.movieguide.DaggerAppComponent$Builder: void <init>(com.esoxjem.movieguide.DaggerAppComponent$1)>"],"<io.reactivex.internal.functions.Functions$TruePredicate: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void dispose()>":["<io.reactivex.disposables.CompositeDisposable: void dispose()>"],"<io.reactivex.schedulers.Schedulers$ComputationTask: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.elf.ElfParser: void <init>(java.io.File)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>","<java.io.FileInputStream: void <init>(java.io.File)>","<java.io.File: boolean exists()>"],"<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <init>(com.esoxjem.movieguide.AppModule)>":["<java.lang.Object: void <init>()>","<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingAdapter: void <init>(java.util.List,com.esoxjem.movieguide.listing.MoviesListingView)>":["<android.support.v7.widget.RecyclerView$Adapter: void <init>()>"],"<java.lang.Exception: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity$$Lambda$0: void <init>(com.esoxjem.movieguide.listing.MoviesListingFragment)>":["<java.lang.Object: void <init>()>"],"<dagger.internal.DoubleCheck: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<java.lang.Object: void <init>()>","<dagger.internal.DoubleCheck: void <clinit>()>"],"<io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String mapLibraryName(java.lang.String)>","<com.getkeepsafe.relinker.TextUtils: boolean isEmpty(java.lang.CharSequence)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.io.File: void <clinit>()>","<com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibDir(android.content.Context)>","<java.io.File: void <init>(java.io.File,java.lang.String)>"],"<dummyMainClass: void dummyMainMethod(java.lang.String[])>":["<dummyMainClass: com.esoxjem.movieguide.listing.MoviesListingActivity dummyMainMethod_com_esoxjem_movieguide_listing_MoviesListingActivity(android.content.Intent)>","<com.esoxjem.movieguide.BaseApplication: void <init>()>","<dummyMainClass: com.esoxjem.movieguide.details.MovieDetailsActivity dummyMainMethod_com_esoxjem_movieguide_details_MovieDetailsActivity(android.content.Intent)>","<com.esoxjem.movieguide.BaseApplication: void onCreate()>"],"<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.android.plugins.RxAndroidPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>"],"<io.reactivex.internal.util.OpenHashSet: void <init>(int,float)>":["<java.lang.Object: void <init>()>","<io.reactivex.internal.util.Pow2: int roundToPowerOfTwo(int)>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String)>":["<java.lang.String: boolean equals(java.lang.Object)>","<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String mapLibraryName(java.lang.String)>","<com.getkeepsafe.relinker.ReLinkerInstance$2: void <init>(com.getkeepsafe.relinker.ReLinkerInstance,java.lang.String)>","<com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibDir(android.content.Context)>","<java.io.File: java.lang.String getAbsolutePath()>","<com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String)>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void onSaveInstanceState(android.os.Bundle)>":["<android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)>"],"<io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>":["<io.reactivex.internal.functions.Functions: void <clinit>()>","<io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer emptyConsumer()>","<io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>"],"<io.reactivex.android.schedulers.AndroidSchedulers$MainHolder: void <clinit>()>":["<io.reactivex.android.schedulers.HandlerScheduler: void <init>(android.os.Handler)>","<android.os.Handler: void <init>(android.os.Looper)>","<io.reactivex.android.schedulers.AndroidSchedulers$MainHolder: void <clinit>()>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<com.esoxjem.movieguide.details.MovieDetailsFragment: void <init>()>":["<android.support.v4.app.Fragment: void <init>()>"],"<io.reactivex.internal.schedulers.NewThreadScheduler: void <clinit>()>":["<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>","<io.reactivex.Scheduler: void <clinit>()>","<java.lang.Math: int min(int,int)>","<java.lang.Integer: void <clinit>()>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int)>","<java.lang.Math: int max(int,int)>","<io.reactivex.internal.schedulers.NewThreadScheduler: void <clinit>()>"],"<java.lang.Long: java.lang.Long getLong(java.lang.String,long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<dummyMainClass: com.esoxjem.movieguide.listing.MoviesListingActivity dummyMainMethod_com_esoxjem_movieguide_listing_MoviesListingActivity(android.content.Intent)>":["<com.esoxjem.movieguide.listing.MoviesListingActivity$1: boolean onMenuItemActionCollapse(android.view.MenuItem)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void onSaveInstanceState(android.os.Bundle)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void onViewCreated(android.view.View,android.os.Bundle)>","<com.esoxjem.movieguide.listing.MoviesListingActivity: void onDestroy()>","<com.esoxjem.movieguide.listing.MoviesListingActivity: void <init>()>","<com.esoxjem.movieguide.listing.MoviesListingActivity: void onCreate(android.os.Bundle)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void onDestroyView()>","<com.esoxjem.movieguide.listing.MoviesListingActivity$1: void <init>(com.esoxjem.movieguide.listing.MoviesListingActivity)>","<com.esoxjem.movieguide.listing.MoviesListingActivity: boolean onCreateOptionsMenu(android.view.Menu)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void onCreate(android.os.Bundle)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void onDetach()>","<com.esoxjem.movieguide.listing.MoviesListingActivity$1: boolean onMenuItemActionExpand(android.view.MenuItem)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void onDestroy()>","<com.esoxjem.movieguide.listing.MoviesListingFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void <init>()>"],"<io.reactivex.disposables.CompositeDisposable: boolean add(io.reactivex.disposables.Disposable)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.util.OpenHashSet: boolean add(java.lang.Object)>","<io.reactivex.internal.util.OpenHashSet: void <init>()>","<io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer emptyConsumer()>":["<io.reactivex.internal.functions.Functions: void <clinit>()>"],"<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <clinit>()>"],"<io.reactivex.internal.functions.Functions$EmptyRunnable: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.TextUtils: boolean isEmpty(java.lang.CharSequence)>":["<java.lang.String: int length()>"],"<com.esoxjem.movieguide.DaggerAppComponent$Builder: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.android.schedulers.AndroidSchedulers$1: io.reactivex.Scheduler call()>":["<io.reactivex.android.schedulers.AndroidSchedulers$MainHolder: void <clinit>()>"],"<io.reactivex.Observable: void subscribe(io.reactivex.Observer)>":["<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed: void subscribeActual(io.reactivex.Observer)>","<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<com.jakewharton.rxbinding2.InitialValueObservable: void subscribeActual(io.reactivex.Observer)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observer onSubscribe(io.reactivex.Observable,io.reactivex.Observer)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.reactivex.internal.schedulers.ScheduledRunnable: void <init>(java.lang.Runnable,io.reactivex.internal.disposables.DisposableContainer)>":["<java.util.concurrent.atomic.AtomicReferenceArray: void lazySet(int,java.lang.Object)>","<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>"],"<io.reactivex.disposables.CompositeDisposable: void dispose(io.reactivex.internal.util.OpenHashSet)>":["<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<java.util.ArrayList: void <init>()>","<io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()>","<io.reactivex.exceptions.CompositeException: void <init>(java.lang.Iterable)>","<io.reactivex.internal.util.OpenHashSet: java.lang.Object[] keys()>","<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<io.reactivex.disposables.ReferenceDisposable: void dispose()>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>","<io.reactivex.disposables.RunnableDisposable: void onDisposed(java.lang.Object)>"],"<io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.ThreadFactory)>":["<java.lang.Object: void <init>()>","<io.reactivex.Scheduler: void <clinit>()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>","<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>","<io.reactivex.disposables.CompositeDisposable: void <init>()>"],"<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <clinit>()>"],"<io.reactivex.Scheduler$Worker: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initSingleScheduler(java.util.concurrent.Callable)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>"],"<com.esoxjem.movieguide.details.MovieDetailsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>":["<android.support.v4.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)>","<android.support.v7.app.AppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"],"<io.realm.exceptions.RealmException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>"],"<io.reactivex.android.MainThreadDisposable$1: void run()>":["<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable$Listener: void onDispose()>"],"<io.reactivex.internal.schedulers.ComputationScheduler: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int,boolean)>","<io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker: void <init>(java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String)>","<io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void <init>(int,java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.NewThreadWorker: void dispose()>","<java.lang.Runtime: java.lang.Runtime getRuntime()>","<io.reactivex.internal.schedulers.ComputationScheduler: int cap(int,int)>","<io.reactivex.internal.schedulers.ComputationScheduler: void <clinit>()>","<java.lang.Math: int max(int,int)>","<io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void shutdown()>","<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>","<java.lang.Math: int min(int,int)>","<java.lang.Integer: void <clinit>()>"],"<io.reactivex.android.schedulers.AndroidSchedulers$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void shutdown()>":["<io.reactivex.internal.schedulers.NewThreadWorker: void dispose()>"],"<com.getkeepsafe.relinker.ApkLibraryInstaller: void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)>":["<java.util.zip.ZipFile: void <init>(java.io.File,int)>","<java.io.File: boolean setReadable(boolean,boolean)>","<java.io.File: boolean setWritable(boolean)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.io.FileOutputStream: java.io.FileDescriptor getFD()>","<java.lang.StringBuilder: void <init>()>","<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>","<java.io.FileOutputStream: void <init>(java.io.File)>","<java.io.File: boolean createNewFile()>","<com.getkeepsafe.relinker.ApkLibraryInstaller: void closeSilently(java.io.Closeable)>","<com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<com.getkeepsafe.relinker.ApkLibraryInstaller: long copy(java.io.InputStream,java.io.OutputStream)>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String,java.lang.Object[])>","<java.io.File: long length()>","<java.io.File: boolean setExecutable(boolean,boolean)>","<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>","<java.util.zip.ZipFile: void close()>","<java.io.File: boolean exists()>","<com.getkeepsafe.relinker.MissingLibraryException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.favorites.FavoritesModule: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.esoxjem.movieguide.DaggerAppComponent: void <init>(com.esoxjem.movieguide.DaggerAppComponent$Builder)>":["<java.lang.Object: void <init>()>","<java.lang.AssertionError: void <init>()>","<com.esoxjem.movieguide.DaggerAppComponent: void initialize(com.esoxjem.movieguide.DaggerAppComponent$Builder)>","<com.esoxjem.movieguide.DaggerAppComponent: void <clinit>()>"],"<io.reactivex.Scheduler: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.TrampolineScheduler: void <init>()>":["<io.reactivex.Scheduler: void <init>()>"],"<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void dispose()>":["<io.reactivex.disposables.CompositeDisposable: void dispose()>","<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>"],"<io.reactivex.internal.schedulers.SingleScheduler: java.util.concurrent.ScheduledExecutorService createExecutor(java.util.concurrent.ThreadFactory)>":["<io.reactivex.internal.schedulers.SchedulerPoolFactory: void <clinit>()>","<io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.concurrent.ScheduledExecutorService create(java.util.concurrent.ThreadFactory)>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void <init>(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)>":["<java.lang.Object: void <init>()>","<java.util.concurrent.atomic.AtomicReference: void <init>()>"],"<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <init>(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>":["<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <clinit>()>","<java.lang.Object: void <init>()>","<java.lang.AssertionError: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity: void onDestroy()>":["<com.esoxjem.movieguide.util.RxUtils: void unsubscribe(io.reactivex.disposables.Disposable)>","<android.support.v7.app.AppCompatActivity: void onDestroy()>"],"<java.lang.RuntimeException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.disposables.CompositeDisposable: void dispose()>":["<io.reactivex.disposables.CompositeDisposable: void dispose(io.reactivex.internal.util.OpenHashSet)>"],"<io.reactivex.observers.SerializedObserver: void emitLoop()>":["<io.reactivex.internal.util.AppendOnlyLinkedArrayList: boolean accept(io.reactivex.Observer)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$NullDesugaringStrategy: void <init>()>":["<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$AbstractDesugaringStrategy: void <init>()>"],"<io.reactivex.Flowable: void <clinit>()>":["<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>","<java.lang.Integer: void <clinit>()>","<java.lang.Math: int max(int,int)>","<io.reactivex.Flowable: void <clinit>()>"],"<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>":["<io.reactivex.disposables.CompositeDisposable: boolean isDisposed()>","<io.reactivex.internal.disposables.EmptyDisposable: void <clinit>()>"],"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <clinit>()>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void onDestroy()>":["<android.support.v4.app.Fragment: void onDestroy()>","<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>"],"<io.reactivex.schedulers.Schedulers$ComputationTask: io.reactivex.Scheduler call()>":["<io.reactivex.schedulers.Schedulers$ComputationHolder: void <clinit>()>"],"<io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker: void <init>(java.util.concurrent.ThreadFactory)>":["<io.reactivex.internal.schedulers.NewThreadWorker: void <init>(java.util.concurrent.ThreadFactory)>"],"<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int,boolean)>":["<java.util.concurrent.atomic.AtomicLong: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity$$Lambda$0: void accept(java.lang.Object)>":["<com.esoxjem.movieguide.listing.MoviesListingActivity: void lambda$onCreateOptionsMenu$0$MoviesListingActivity(com.esoxjem.movieguide.listing.MoviesListingFragment,java.lang.CharSequence)>"],"<io.realm.internal.RealmCore: void <clinit>()>":["<java.lang.StringBuilder: java.lang.String toString()>","<io.realm.internal.RealmCore: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.io.File: void <clinit>()>"],"<io.reactivex.observers.SerializedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>":["<io.reactivex.internal.disposables.DisposableHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<com.esoxjem.movieguide.BaseApplication: com.esoxjem.movieguide.AppComponent createAppComponent()>":["<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.DaggerAppComponent$Builder networkModule(com.esoxjem.movieguide.network.NetworkModule)>","<com.esoxjem.movieguide.network.NetworkModule: void <init>()>","<com.esoxjem.movieguide.favorites.FavoritesModule: void <init>()>","<com.esoxjem.movieguide.DaggerAppComponent: com.esoxjem.movieguide.DaggerAppComponent$Builder builder()>","<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.AppComponent build()>","<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.DaggerAppComponent$Builder appModule(com.esoxjem.movieguide.AppModule)>","<com.esoxjem.movieguide.AppModule: void <init>(android.app.Application)>","<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.DaggerAppComponent$Builder favoritesModule(com.esoxjem.movieguide.favorites.FavoritesModule)>","<com.esoxjem.movieguide.DaggerAppComponent: void <clinit>()>"],"<io.realm.rx.RealmObservableFactory$2: void <init>(io.realm.rx.RealmObservableFactory)>":["<java.lang.ThreadLocal: void <init>()>"],"<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.realm.Realm: void <clinit>()>":["<java.lang.Object: void <init>()>","<io.realm.BaseRealm: void <clinit>()>","<io.realm.Realm: void <clinit>()>"],"<butterknife.ButterKnife: void <clinit>()>":["<java.util.LinkedHashMap: void <init>()>","<butterknife.ButterKnife: void <clinit>()>"],"<io.realm.internal.modules.CompositeMediator: void <init>(io.realm.internal.RealmProxyMediator[])>":["<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>","<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.String: void <clinit>()>","<java.util.HashMap: void <init>()>","<io.realm.internal.RealmProxyMediator: void <init>()>","<java.util.HashMap: java.lang.Object get(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler computation()>":["<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onComputationScheduler(io.reactivex.Scheduler)>","<io.reactivex.schedulers.Schedulers: void <clinit>()>"],"<com.getkeepsafe.relinker.ReLinkerInstance$2: void <init>(com.getkeepsafe.relinker.ReLinkerInstance,java.lang.String)>":["<java.lang.Object: void <init>()>"],"<io.realm.internal.OsSharedRealm: void <clinit>()>":["<io.realm.internal.OsSharedRealm: long nativeGetFinalizerPtr()>","<java.util.concurrent.CopyOnWriteArrayList: void <init>()>","<io.realm.internal.OsSharedRealm: void <clinit>()>"],"<io.realm.RealmConfiguration$Builder: void <init>(android.content.Context)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<java.util.HashSet: void <init>()>","<io.realm.internal.RealmCore: void loadLibrary(android.content.Context)>","<io.realm.internal.RealmCore: void <clinit>()>","<io.realm.RealmConfiguration$Builder: void initializeBuilder(android.content.Context)>"],"<io.realm.exceptions.RealmFileException$Kind: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<io.reactivex.internal.schedulers.SingleScheduler: void <clinit>()>":["<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int,boolean)>","<io.reactivex.Scheduler: void <clinit>()>","<java.lang.Math: int min(int,int)>","<java.lang.Integer: void <clinit>()>","<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>","<java.lang.Math: int max(int,int)>","<io.reactivex.internal.schedulers.SingleScheduler: void <clinit>()>"],"<io.reactivex.internal.schedulers.SchedulerPoolFactory: void start()>":["<io.reactivex.internal.schedulers.SchedulerPoolFactory: void <clinit>()>","<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String)>","<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask: void <init>()>"],"<java.lang.Boolean: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void <clinit>()>":["<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void <clinit>()>","<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: boolean useMimicStrategy()>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$ReuseDesugaringStrategy: void <init>()>","<java.lang.System: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: java.lang.Integer readApiLevelFromBuildVersion()>","<java.lang.Class: java.lang.String getName()>","<io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$NullDesugaringStrategy: void <init>()>"],"<io.reactivex.internal.schedulers.TrampolineScheduler: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.TrampolineScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.TrampolineScheduler: void <init>()>"],"<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: dagger.internal.Factory create(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>":["<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <clinit>()>","<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <init>(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>"],"<com.getkeepsafe.relinker.elf.Elf$DynamicStructure: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.util.NotificationLite$ErrorNotification: void <init>(java.lang.Throwable)>":["<java.lang.Object: void <init>()>"],"<io.reactivex.exceptions.CompositeException: void printStackTrace(io.reactivex.exceptions.CompositeException$PrintStreamOrWriter)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.StringBuilder: java.lang.String toString()>","<io.reactivex.exceptions.CompositeException$WrappedPrintStream: void println(java.lang.Object)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<io.reactivex.exceptions.CompositeException: void appendStackTrace(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)>","<java.lang.StringBuilder: void <init>(int)>","<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>"],"<io.reactivex.android.MainThreadDisposable: void dispose()>":["<io.reactivex.android.MainThreadDisposable$1: void <init>(io.reactivex.android.MainThreadDisposable)>","<io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler mainThread()>","<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable$Listener: void onDispose()>","<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>","<io.reactivex.android.schedulers.AndroidSchedulers: void <clinit>()>","<android.os.Looper: android.os.Looper myLooper()>","<android.os.Looper: android.os.Looper getMainLooper()>","<io.reactivex.Scheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>"],"<io.reactivex.exceptions.OnErrorNotImplementedException: void <init>(java.lang.Throwable)>":["<java.lang.NullPointerException: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<io.reactivex.exceptions.CompositeException: java.lang.String getMessage()>","<java.lang.Throwable: java.lang.String getMessage()>"],"<io.reactivex.internal.schedulers.ScheduledRunnable: void setFuture(java.util.concurrent.Future)>":["<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>","<io.reactivex.internal.schedulers.ScheduledRunnable: void <clinit>()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.util.concurrent.atomic.AtomicReferenceArray: boolean compareAndSet(int,java.lang.Object,java.lang.Object)>"],"<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.BiFunction,java.lang.Object,java.lang.Object)>":["<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>"],"<io.reactivex.schedulers.Schedulers$NewThreadTask: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void <init>(android.os.Handler,java.lang.Runnable)>":["<java.lang.Object: void <init>()>"],"<io.reactivex.BackpressureStrategy: void <clinit>()>":["<io.reactivex.BackpressureStrategy: void <clinit>()>","<io.reactivex.BackpressureStrategy: void <init>(java.lang.String,int)>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>":["<io.reactivex.internal.disposables.DisposableHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable)>","<io.reactivex.observers.SerializedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<com.getkeepsafe.relinker.elf.ElfParser: short readByte(java.nio.ByteBuffer,long)>":["<com.getkeepsafe.relinker.elf.ElfParser: void read(java.nio.ByteBuffer,long,int)>"],"<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>":["<io.reactivex.disposables.CompositeDisposable: boolean add(io.reactivex.disposables.Disposable)>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.internal.schedulers.ScheduledRunnable: void <clinit>()>","<io.reactivex.internal.schedulers.ScheduledRunnable: void <init>(java.lang.Runnable,io.reactivex.internal.disposables.DisposableContainer)>","<io.reactivex.internal.disposables.EmptyDisposable: void <clinit>()>","<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void dispose()>","<io.reactivex.internal.schedulers.ScheduledRunnable: void setFuture(java.util.concurrent.Future)>","<io.reactivex.plugins.RxJavaPlugins: java.lang.Runnable onSchedule(java.lang.Runnable)>"],"<java.lang.AssertionError: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Error: void <init>()>"],"<io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable empty()>":["<io.reactivex.internal.functions.Functions: void <clinit>()>","<io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromRunnable(java.lang.Runnable)>"],"<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>":["<io.reactivex.plugins.RxJavaPlugins: void uncaught(java.lang.Throwable)>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void <clinit>()>","<io.reactivex.exceptions.UndeliverableException: void <init>(java.lang.Throwable)>","<io.reactivex.plugins.RxJavaPlugins: boolean isBug(java.lang.Throwable)>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void printStackTrace(java.lang.Throwable)>"],"<io.reactivex.internal.disposables.ListCompositeDisposable: void dispose()>":["<io.reactivex.internal.disposables.ListCompositeDisposable: void dispose(java.util.List)>"],"<io.reactivex.internal.disposables.ListCompositeDisposable: void dispose(java.util.List)>":["<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<java.util.AbstractSequentialList: java.util.Iterator iterator()>","<java.util.ArrayList: void <init>()>","<io.reactivex.exceptions.CompositeException: void <init>(java.lang.Iterable)>","<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.ArrayList: int size()>","<java.util.ArrayList: java.lang.Object get(int)>"],"<io.reactivex.internal.observers.LambdaObserver: void onComplete()>":["<java.util.concurrent.atomic.AtomicReference: void lazySet(java.lang.Object)>","<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()>","<io.reactivex.internal.functions.Functions$EmptyAction: void run()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.exceptions.ProtocolViolationException: void <init>(java.lang.String)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <init>(com.esoxjem.movieguide.AppModule)>":["<java.lang.Object: void <init>()>","<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>":["<io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>"],"<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <clinit>()>":["<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <clinit>()>","<java.lang.Class: boolean desiredAssertionStatus()>"],"<java.lang.Object: void finalize()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void dispose()>":["<io.reactivex.internal.schedulers.NewThreadWorker: void dispose()>","<io.reactivex.observers.SerializedObserver: void dispose()>","<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void dispose()>","<io.reactivex.android.MainThreadDisposable: void dispose()>","<io.reactivex.disposables.ReferenceDisposable: void dispose()>","<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void dispose()>","<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void dispose()>"],"<java.lang.String: java.lang.String substring(int,int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.AppModule: void <init>(android.app.Application)>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void <init>(java.util.concurrent.ScheduledExecutorService)>":["<io.reactivex.Scheduler$Worker: void <init>()>","<io.reactivex.disposables.CompositeDisposable: void <init>()>"],"<io.reactivex.internal.functions.Functions$MaxRequestSubscription: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)>":["<com.getkeepsafe.relinker.elf.Program32Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long)>"],"<com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibDir(android.content.Context)>":["<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>":["<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.schedulers.Schedulers$SingleTask: java.lang.Object call()>","<io.reactivex.schedulers.Schedulers$ComputationTask: java.lang.Object call()>","<io.reactivex.schedulers.Schedulers$NewThreadTask: java.lang.Object call()>","<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>","<io.reactivex.schedulers.Schedulers$IOTask: java.lang.Object call()>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<com.esoxjem.movieguide.details.MovieDetailsFragment: com.esoxjem.movieguide.details.MovieDetailsFragment getInstance(com.esoxjem.movieguide.Movie)>":["<android.os.Bundle: void <init>()>","<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>","<android.support.v4.app.Fragment: void setArguments(android.os.Bundle)>","<android.os.Bundle: void <clinit>()>","<com.esoxjem.movieguide.details.MovieDetailsFragment: void <init>()>"],"<io.reactivex.internal.util.AppendOnlyLinkedArrayList: boolean accept(io.reactivex.Observer)>":["<io.reactivex.internal.util.NotificationLite: boolean acceptFull(java.lang.Object,io.reactivex.Observer)>","<io.reactivex.internal.util.NotificationLite: void <clinit>()>"],"<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler initMainThreadScheduler(java.util.concurrent.Callable)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>","<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>"],"<io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()>":["<io.reactivex.internal.schedulers.ScheduledRunnable: void <clinit>()>","<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.util.concurrent.atomic.AtomicReferenceArray: boolean compareAndSet(int,java.lang.Object,java.lang.Object)>"],"<io.realm.RealmConfiguration$Builder: void initializeBuilder(android.content.Context)>":["<java.util.HashSet: boolean add(java.lang.Object)>","<io.realm.RealmConfiguration: void <clinit>()>","<io.realm.internal.OsRealmConfig$Durability: void <clinit>()>","<android.content.ContextWrapper: java.io.File getFilesDir()>","<io.realm.RealmConfiguration: java.lang.Object access$000()>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>":["<java.lang.Thread: void <init>(java.lang.Runnable)>","<com.getkeepsafe.relinker.ReLinkerInstance$1: void <init>(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Thread: void start()>","<com.getkeepsafe.relinker.TextUtils: boolean isEmpty(java.lang.CharSequence)>","<com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String,java.lang.Object[])>","<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String)>","<java.lang.Thread: void run()>"],"<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <init>(javax.inject.Provider)>":["<java.lang.Object: void <init>()>","<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity: void onCreate(android.os.Bundle)>":["<android.support.v7.app.AppCompatActivity: void setContentView(int)>","<com.esoxjem.movieguide.listing.MoviesListingActivity: void setToolbar()>","<android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>","<android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)>","<com.esoxjem.movieguide.details.MovieDetailsFragment: void <init>()>","<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>"],"<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)>":["<com.getkeepsafe.relinker.elf.Section64Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int)>"],"<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.DaggerAppComponent$Builder favoritesModule(com.esoxjem.movieguide.favorites.FavoritesModule)>":["<dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler mainThread()>":["<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler onMainThreadScheduler(io.reactivex.Scheduler)>","<io.reactivex.android.schedulers.AndroidSchedulers: void <clinit>()>"],"<io.reactivex.internal.functions.Functions$ErrorConsumer: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.exceptions.CompositeException: void <init>(java.lang.Iterable)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.util.AbstractCollection: boolean addAll(java.util.Collection)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<java.util.Collections: void <clinit>()>","<java.util.LinkedHashSet: void <init>()>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.util.ArrayList: boolean addAll(java.util.Collection)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<java.util.HashSet: boolean isEmpty()>","<java.lang.RuntimeException: void <init>()>"],"<com.jakewharton.rxbinding2.support.v7.widget.RxSearchView: com.jakewharton.rxbinding2.InitialValueObservable queryTextChanges(android.support.v7.widget.SearchView)>":["<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: void <init>(android.support.v7.widget.SearchView)>","<com.jakewharton.rxbinding2.internal.Preconditions: void checkNotNull(java.lang.Object,java.lang.String)>"],"<io.reactivex.observers.SerializedObserver: void <init>(io.reactivex.Observer)>":["<io.reactivex.observers.SerializedObserver: void <init>(io.reactivex.Observer,boolean)>"],"<io.reactivex.exceptions.Exceptions: java.lang.RuntimeException propagate(java.lang.Throwable)>":["<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>"],"<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: void <init>(android.support.v7.widget.SearchView)>":["<com.jakewharton.rxbinding2.InitialValueObservable: void <init>()>"],"<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.DaggerAppComponent$Builder networkModule(com.esoxjem.movieguide.network.NetworkModule)>":["<dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<com.esoxjem.movieguide.details.MovieDetailsActivity: void <init>()>":["<android.support.v7.app.AppCompatActivity: void <init>()>"],"<io.reactivex.internal.schedulers.SingleScheduler: void <init>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.SingleScheduler: void <init>(java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.SingleScheduler: void <clinit>()>"],"<java.lang.Long: java.lang.Long valueOf(long)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.android.schedulers.AndroidSchedulers$1: java.lang.Object call()>","<io.reactivex.exceptions.Exceptions: java.lang.RuntimeException propagate(java.lang.Throwable)>"],"<java.lang.Long: void <clinit>()>":["<java.lang.Long: void <clinit>()>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$NullDesugaringStrategy: void printStackTrace(java.lang.Throwable)>":["<io.reactivex.exceptions.CompositeException: void printStackTrace()>","<java.lang.Throwable: void printStackTrace()>"],"<io.reactivex.internal.operators.observable.AbstractObservableWithUpstream: void <init>(io.reactivex.ObservableSource)>":["<io.reactivex.Observable: void <init>()>"],"<io.reactivex.internal.schedulers.IoScheduler: void <init>(java.util.concurrent.ThreadFactory)>":["<io.reactivex.internal.schedulers.IoScheduler: void start()>","<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.Scheduler: void <init>()>","<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>","<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onComputationScheduler(io.reactivex.Scheduler)>":["<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>"],"<io.realm.internal.RealmCore: void loadLibrary(android.content.Context)>":["<io.realm.internal.RealmCore: void <clinit>()>","<com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,java.lang.String)>"],"<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <init>(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>":["<java.lang.Object: void <init>()>","<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int)>":["<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int,boolean)>"],"<io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask: void <init>()>":["<java.lang.Object: void <init>()>"],"<dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>":["<java.lang.NullPointerException: void <init>()>"],"<io.realm.internal.modules.FilterableMediator: void <init>(io.realm.internal.RealmProxyMediator,java.util.Collection)>":["<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.HashSet: void <init>()>","<io.realm.internal.RealmProxyMediator: void <init>()>","<java.util.Collections: void <clinit>()>","<java.util.HashSet: java.util.Iterator iterator()>","<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>"],"<io.realm.Realm: java.lang.Object getDefaultModule()>":["<java.lang.StringBuilder: java.lang.String toString()>","<io.realm.exceptions.RealmException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String)>":["<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int,boolean)>"],"<io.realm.BaseRealm: void <clinit>()>":["<io.realm.BaseRealm: void <clinit>()>","<io.realm.internal.async.RealmThreadPoolExecutor: io.realm.internal.async.RealmThreadPoolExecutor newDefaultExecutor()>","<io.realm.internal.async.RealmThreadPoolExecutor: void <clinit>()>","<io.realm.BaseRealm$ThreadLocalRealmObjectContext: void <init>()>"],"<io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.Scheduler$Worker createWorker()>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void <init>(io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker)>"],"<com.getkeepsafe.relinker.elf.ElfParser: int readHalf(java.nio.ByteBuffer,long)>":["<com.getkeepsafe.relinker.elf.ElfParser: void read(java.nio.ByteBuffer,long,int)>"],"<io.reactivex.exceptions.UndeliverableException: void <init>(java.lang.Throwable)>":["<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$NullDesugaringStrategy: void printStackTrace(java.lang.Throwable,java.io.PrintStream)>":["<io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)>"],"<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable$Listener: void <init>(com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable,android.support.v7.widget.SearchView,io.reactivex.Observer)>":["<io.reactivex.android.MainThreadDisposable: void <init>()>"],"<io.reactivex.internal.disposables.DisposableHelper: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.disposables.ListCompositeDisposable: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.realm.internal.OsRealmConfig$Durability: void <init>(java.lang.String,int,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.internal.schedulers.ScheduledRunnable scheduleActual(java.lang.Runnable,long,java.util.concurrent.TimeUnit,io.reactivex.internal.disposables.DisposableContainer)>":["<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.internal.schedulers.ScheduledRunnable: void <clinit>()>","<io.reactivex.internal.schedulers.ScheduledRunnable: void <init>(java.lang.Runnable,io.reactivex.internal.disposables.DisposableContainer)>","<io.reactivex.internal.schedulers.ScheduledRunnable: void setFuture(java.util.concurrent.Future)>","<io.reactivex.plugins.RxJavaPlugins: java.lang.Runnable onSchedule(java.lang.Runnable)>"],"<io.reactivex.schedulers.Schedulers$SingleTask: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.NullPointerException: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.concurrent.ScheduledExecutorService create(java.util.concurrent.ThreadFactory)>":["<io.reactivex.internal.schedulers.SchedulerPoolFactory: void <clinit>()>","<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)>","<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<io.reactivex.Observable: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.ScheduledRunnable: void <clinit>()>":["<java.lang.Object: void <init>()>","<io.reactivex.internal.schedulers.ScheduledRunnable: void <clinit>()>"],"<io.reactivex.internal.schedulers.NewThreadScheduler: io.reactivex.Scheduler$Worker createWorker()>":["<io.reactivex.internal.schedulers.NewThreadWorker: void <init>(java.util.concurrent.ThreadFactory)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$ReuseDesugaringStrategy: void printStackTrace(java.lang.Throwable,java.io.PrintStream)>":["<io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)>"],"<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void <init>(android.os.Handler,java.lang.Runnable)>","<java.lang.Math: long max(long,long)>","<io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>","<io.reactivex.plugins.RxJavaPlugins: java.lang.Runnable onSchedule(java.lang.Runnable)>","<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>"],"<io.reactivex.internal.disposables.EmptyDisposable: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<io.reactivex.internal.util.OpenHashSet: void rehash()>":["<java.lang.Object: int hashCode()>","<io.reactivex.internal.util.OpenHashSet: int mix(int)>"],"<io.reactivex.internal.util.NotificationLite: java.lang.Object complete()>":["<io.reactivex.internal.util.NotificationLite: void <clinit>()>"],"<io.realm.internal.ObjectServerFacade: io.realm.internal.ObjectServerFacade getSyncFacadeIfPossible()>":["<io.realm.internal.ObjectServerFacade: void <clinit>()>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void onDetach()>":["<android.support.v4.app.Fragment: void onDetach()>"],"<io.realm.Realm: void setDefaultConfiguration(io.realm.RealmConfiguration)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<io.realm.BaseRealm: void <clinit>()>","<io.realm.Realm: void <clinit>()>"],"<io.reactivex.schedulers.Schedulers$NewThreadTask: java.lang.Object call()>":["<io.reactivex.schedulers.Schedulers$NewThreadTask: io.reactivex.Scheduler call()>"],"<io.reactivex.internal.disposables.DisposableHelper: boolean dispose(java.util.concurrent.atomic.AtomicReference)>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.BackpressureStrategy: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<butterknife.ButterKnife: butterknife.Unbinder bind(java.lang.Object,android.view.View)>":["<butterknife.ButterKnife: butterknife.Unbinder createBinding(java.lang.Object,android.view.View)>","<butterknife.ButterKnife: void <clinit>()>"],"<io.reactivex.internal.util.NotificationLite: void <clinit>()>":["<io.reactivex.internal.util.NotificationLite: void <init>(java.lang.String,int)>","<io.reactivex.internal.util.NotificationLite: void <clinit>()>"],"<io.reactivex.internal.disposables.ListCompositeDisposable: boolean add(io.reactivex.disposables.Disposable)>":["<java.util.LinkedList: void <init>()>","<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.disposables.ListCompositeDisposable: void dispose()>","<io.reactivex.disposables.CompositeDisposable: void dispose()>","<java.util.LinkedList: boolean add(java.lang.Object)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.reactivex.schedulers.Schedulers$SingleTask: io.reactivex.Scheduler call()>":["<io.reactivex.schedulers.Schedulers$SingleHolder: void <clinit>()>"],"<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>":["<io.reactivex.internal.disposables.EmptyDisposable: void <clinit>()>"],"<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String unmapLibraryName(java.lang.String)>":["<java.lang.String: int length()>","<java.lang.String: java.lang.String substring(int,int)>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void onDestroyView()>":["<android.support.v4.app.Fragment: void onDestroyView()>","<butterknife.Unbinder$1: void unbind()>"],"<io.reactivex.disposables.CompositeDisposable: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.esoxjem.movieguide.util.RxUtils: void unsubscribe(io.reactivex.disposables.Disposable)>":["<io.reactivex.internal.observers.LambdaObserver: void dispose()>","<io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()>"],"<io.reactivex.internal.schedulers.SchedulerPoolFactory: void <clinit>()>":["<java.lang.Boolean: void <clinit>()>","<io.reactivex.internal.schedulers.SchedulerPoolFactory: void <clinit>()>","<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>","<java.lang.Boolean: boolean getBoolean(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.lang.System: void <clinit>()>","<java.util.concurrent.atomic.AtomicReference: void <init>()>","<java.lang.System: java.util.Properties getProperties()>","<io.reactivex.internal.schedulers.SchedulerPoolFactory: void start()>","<java.util.concurrent.ConcurrentHashMap: void <init>()>"],"<java.lang.NullPointerException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.RuntimeException: void <init>()>"],"<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler onMainThreadScheduler(io.reactivex.Scheduler)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.android.plugins.RxAndroidPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>"],"<com.getkeepsafe.relinker.elf.ElfParser: java.util.List parseNeededDependencies()>":["<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.ElfParser: long offsetFromVma(com.getkeepsafe.relinker.elf.Elf$Header,long,long)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.util.Collections: void <clinit>()>","<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)>","<java.lang.Long: java.lang.Long valueOf(long)>","<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)>","<java.lang.Long: void <clinit>()>","<com.getkeepsafe.relinker.elf.ElfParser: com.getkeepsafe.relinker.elf.Elf$Header parseHeader()>","<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)>","<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)>","<java.util.Collections: java.util.List unmodifiableList(java.util.List)>","<java.util.ArrayList: void <init>()>","<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)>","<com.getkeepsafe.relinker.elf.ElfParser: java.lang.String readString(java.nio.ByteBuffer,long)>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void access$000(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String)>":["<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String)>"],"<com.getkeepsafe.relinker.SystemLibraryLoader: void loadPath(java.lang.String)>":["<java.lang.System: void <clinit>()>","<java.lang.System: void load(java.lang.String)>"],"<com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>":["<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>","<com.getkeepsafe.relinker.ReLinkerInstance: void <init>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void run()>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void emit(long,java.lang.Object,io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter)>","<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>"],"<io.realm.internal.IOException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit)>":["<io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>","<io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler computation()>","<io.reactivex.schedulers.Schedulers: void <clinit>()>"],"<com.getkeepsafe.relinker.elf.Dynamic32Structure: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int)>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<com.getkeepsafe.relinker.elf.Elf$DynamicStructure: void <init>()>","<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>"],"<io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void <init>(int,java.util.concurrent.ThreadFactory)>":["<java.lang.Object: void <init>()>","<io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker: void <init>(java.util.concurrent.ThreadFactory)>"],"<io.reactivex.schedulers.Schedulers$SingleTask: java.lang.Object call()>":["<io.reactivex.schedulers.Schedulers$SingleTask: io.reactivex.Scheduler call()>"],"<java.lang.ExceptionInInitializerError: void <init>(java.lang.String)>":["<java.lang.LinkageError: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.schedulers.Schedulers$IOTask: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.Class: java.lang.String getName()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.getkeepsafe.relinker.elf.Dynamic64Structure: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int)>":["<java.nio.ByteOrder: void <clinit>()>","<com.getkeepsafe.relinker.elf.Elf$DynamicStructure: void <init>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.ElfParser: long readLong(java.nio.ByteBuffer,long)>"],"<io.reactivex.schedulers.Schedulers$NewThreadHolder: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.NewThreadScheduler: void <init>()>","<io.reactivex.internal.schedulers.NewThreadScheduler: void <clinit>()>","<io.reactivex.schedulers.Schedulers$NewThreadHolder: void <clinit>()>"],"<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)>":["<com.getkeepsafe.relinker.elf.Dynamic64Structure: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int)>"],"<java.lang.Class: boolean desiredAssertionStatus()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.plugins.RxJavaPlugins: void uncaught(java.lang.Throwable)>":["<java.lang.Thread: java.lang.Thread currentThread()>","<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>"],"<io.realm.exceptions.RealmFileException: void <init>(io.realm.exceptions.RealmFileException$Kind,java.lang.String,java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>"],"<io.reactivex.internal.schedulers.ComputationScheduler: void <init>(java.util.concurrent.ThreadFactory)>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.Scheduler: void <init>()>","<io.reactivex.internal.schedulers.ComputationScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.ComputationScheduler: void start()>","<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void printStackTrace(java.lang.Throwable)>":["<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void <clinit>()>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$ReuseDesugaringStrategy: void printStackTrace(java.lang.Throwable)>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$NullDesugaringStrategy: void printStackTrace(java.lang.Throwable)>"],"<io.reactivex.internal.functions.Functions$Identity: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.String: boolean equals(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.util.OpenHashSet: boolean add(java.lang.Object)>":["<java.lang.Object: boolean equals(java.lang.Object)>","<java.lang.Object: int hashCode()>","<io.reactivex.internal.util.OpenHashSet: void rehash()>","<io.reactivex.internal.util.OpenHashSet: int mix(int)>"],"<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <clinit>()>"],"<io.reactivex.schedulers.Schedulers: void <clinit>()>":["<io.reactivex.schedulers.Schedulers$NewThreadTask: void <init>()>","<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.TrampolineScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.internal.schedulers.TrampolineScheduler instance()>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initComputationScheduler(java.util.concurrent.Callable)>","<io.reactivex.schedulers.Schedulers: void <clinit>()>","<io.reactivex.schedulers.Schedulers$IOTask: void <init>()>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initIoScheduler(java.util.concurrent.Callable)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initSingleScheduler(java.util.concurrent.Callable)>","<io.reactivex.schedulers.Schedulers$ComputationTask: void <init>()>","<io.reactivex.schedulers.Schedulers$SingleTask: void <init>()>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initNewThreadScheduler(java.util.concurrent.Callable)>"],"<dagger.internal.DoubleCheck: void <init>(javax.inject.Provider)>":["<java.lang.Object: void <init>()>","<dagger.internal.DoubleCheck: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<io.realm.internal.OsSharedRealm: void initialize(java.io.File)>":["<io.realm.internal.IOException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<io.realm.internal.OsSharedRealm: void nativeInit(java.lang.String)>","<io.realm.internal.OsSharedRealm: void <clinit>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.io.File: java.lang.String getAbsolutePath()>","<java.io.File: boolean mkdirs()>","<java.io.File: boolean isDirectory()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity$1: void <init>(com.esoxjem.movieguide.listing.MoviesListingActivity)>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.ApkLibraryInstaller: long copy(java.io.InputStream,java.io.OutputStream)>":["<java.io.OutputStream: void flush()>","<java.io.FileOutputStream: void write(byte[],int,int)>"],"<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <clinit>()>"],"<io.realm.rx.RealmObservableFactory$3: void <init>(io.realm.rx.RealmObservableFactory)>":["<java.lang.ThreadLocal: void <init>()>"],"<com.getkeepsafe.relinker.MissingLibraryException: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.BaseApplication: void <init>()>":["<android.app.Application: void <init>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void emit(long,java.lang.Object,io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter)>":["<io.reactivex.observers.SerializedObserver: void onNext(java.lang.Object)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void dispose()>"],"<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>":["<com.getkeepsafe.relinker.elf.ElfParser: void read(java.nio.ByteBuffer,long,int)>"],"<io.reactivex.schedulers.Schedulers$SingleHolder: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.schedulers.Schedulers$SingleHolder: void <clinit>()>","<io.reactivex.internal.schedulers.SingleScheduler: void <init>()>","<io.reactivex.internal.schedulers.SingleScheduler: void <clinit>()>"],"<io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void accept(java.lang.Object)>":["<io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void accept(java.lang.Throwable)>"],"<io.reactivex.android.plugins.RxAndroidPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>":["<io.reactivex.exceptions.Exceptions: java.lang.RuntimeException propagate(java.lang.Throwable)>"],"<io.realm.RealmConfiguration: io.realm.internal.RealmProxyMediator getModuleMediator(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: void <clinit>()>","<io.realm.exceptions.RealmException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<io.reactivex.internal.disposables.DisposableHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.internal.disposables.DisposableHelper: void reportDisposableSet()>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.observers.SerializedObserver: void dispose()>","<io.reactivex.android.MainThreadDisposable: void dispose()>","<io.reactivex.disposables.ReferenceDisposable: void dispose()>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void dispose()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>":["<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>","<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.reactivex.android.schedulers.AndroidSchedulers: void <clinit>()>":["<io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler initMainThreadScheduler(java.util.concurrent.Callable)>","<io.reactivex.android.schedulers.AndroidSchedulers: void <clinit>()>","<io.reactivex.android.schedulers.AndroidSchedulers$1: void <init>()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observable onAssembly(io.reactivex.Observable)>":["<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>"],"<java.lang.Throwable: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.network.NetworkModule: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>":["<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>"],"<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <init>(com.esoxjem.movieguide.favorites.FavoritesModule,javax.inject.Provider)>":["<java.lang.Object: void <init>()>","<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<io.realm.rx.RealmObservableFactory: void <init>()>":["<java.lang.Object: void <init>()>","<io.realm.rx.RealmObservableFactory$1: void <init>(io.realm.rx.RealmObservableFactory)>","<io.realm.rx.RealmObservableFactory$3: void <init>(io.realm.rx.RealmObservableFactory)>","<io.realm.rx.RealmObservableFactory$2: void <init>(io.realm.rx.RealmObservableFactory)>"],"<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.AppComponent build()>":["<com.esoxjem.movieguide.network.NetworkModule: void <init>()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.esoxjem.movieguide.favorites.FavoritesModule: void <init>()>","<java.lang.StringBuilder: java.lang.String toString()>","<com.esoxjem.movieguide.DaggerAppComponent: void <init>(com.esoxjem.movieguide.DaggerAppComponent$Builder,com.esoxjem.movieguide.DaggerAppComponent$1)>","<java.lang.Class: java.lang.String getCanonicalName()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<com.esoxjem.movieguide.DaggerAppComponent: void <clinit>()>"],"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.disposables.RunnableDisposable: void <init>(java.lang.Runnable)>":["<io.reactivex.disposables.ReferenceDisposable: void <init>(java.lang.Object)>"],"<io.reactivex.internal.functions.Functions: void <clinit>()>":["<io.reactivex.internal.functions.Functions$Identity: void <init>()>","<io.reactivex.internal.functions.Functions$NaturalObjectComparator: void <init>()>","<io.reactivex.internal.functions.Functions$EmptyConsumer: void <init>()>","<io.reactivex.internal.functions.Functions$TruePredicate: void <init>()>","<io.reactivex.internal.functions.Functions$EmptyLongConsumer: void <init>()>","<io.reactivex.internal.functions.Functions$FalsePredicate: void <init>()>","<io.reactivex.internal.functions.Functions$MaxRequestSubscription: void <init>()>","<io.reactivex.internal.functions.Functions: void <clinit>()>","<io.reactivex.internal.functions.Functions$EmptyRunnable: void <init>()>","<io.reactivex.internal.functions.Functions$NullCallable: void <init>()>","<io.reactivex.internal.functions.Functions$ErrorConsumer: void <init>()>","<io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void <init>()>","<io.reactivex.internal.functions.Functions$EmptyAction: void <init>()>"],"<io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void shutdown()>":["<io.reactivex.disposables.CompositeDisposable: void dispose()>"],"<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <init>(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>":["<java.lang.Object: void <init>()>","<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <clinit>()>","<java.lang.AssertionError: void <init>()>"],"<com.getkeepsafe.relinker.ReLinkerInstance$1: void run()>":["<com.getkeepsafe.relinker.ReLinkerInstance: void access$000(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String)>"],"<java.lang.String: void <clinit>()>":["<java.lang.String: void <clinit>()>"],"<io.reactivex.observers.SerializedObserver: void onError(java.lang.Throwable)>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onError(java.lang.Throwable)>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void setFirst(java.lang.Object)>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void add(java.lang.Object)>","<io.reactivex.internal.util.NotificationLite: void <clinit>()>","<io.reactivex.internal.util.NotificationLite: java.lang.Object error(java.lang.Throwable)>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void <init>(int)>"],"<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>":["<io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate: void <init>()>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.realm.internal.OsRealmConfig$Durability: void <clinit>()>":["<io.realm.internal.OsRealmConfig$Durability: void <init>(java.lang.String,int,int)>","<io.realm.internal.OsRealmConfig$Durability: void <clinit>()>"],"<io.reactivex.internal.functions.Functions$EmptyAction: void <init>()>":["<java.lang.Object: void <init>()>"],"<butterknife.ButterKnife: butterknife.Unbinder createBinding(java.lang.Object,android.view.View)>":["<butterknife.Unbinder: void <clinit>()>","<java.lang.Object: java.lang.Class getClass()>","<android.util.Log: int d(java.lang.String,java.lang.String)>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<butterknife.ButterKnife: java.lang.reflect.Constructor findBindingConstructorForClass(java.lang.Class)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<butterknife.ButterKnife: void <clinit>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void setResource(io.reactivex.disposables.Disposable)>":["<io.reactivex.internal.disposables.DisposableHelper: boolean replace(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<com.esoxjem.movieguide.network.RequestInterceptor_Factory: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void <init>(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.lang.Object: void <init>()>","<java.util.HashSet: void <init>()>"],"<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: java.lang.Object getInitialValue()>":["<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: java.lang.CharSequence getInitialValue()>"],"<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void <init>(int)>":["<java.lang.Object: void <init>()>"],"<io.reactivex.exceptions.CompositeException$PrintStreamOrWriter: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.internal.schedulers.TrampolineScheduler instance()>":["<io.reactivex.internal.schedulers.TrampolineScheduler: void <clinit>()>","<io.reactivex.Scheduler: void <clinit>()>"],"<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: dagger.internal.Factory create(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>":["<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <init>(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>","<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <clinit>()>"],"<java.lang.Integer: int numberOfLeadingZeros(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Integer: void <clinit>()>":["<java.lang.Integer: void <clinit>()>"],"<io.realm.internal.async.RealmThreadPoolExecutor: io.realm.internal.async.RealmThreadPoolExecutor newDefaultExecutor()>":["<io.realm.internal.async.RealmThreadPoolExecutor: void <clinit>()>","<io.realm.internal.async.RealmThreadPoolExecutor: void <init>(int,int)>"],"<io.reactivex.internal.functions.Functions$NullCallable: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.Throwable: java.lang.String getMessage()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.exceptions.CompositeException: void <init>(java.lang.Throwable[])>":["<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.util.Arrays: java.util.List asList(java.lang.Object[])>","<io.reactivex.exceptions.CompositeException: void <init>(java.lang.Iterable)>","<java.util.Collections: void <clinit>()>","<java.util.Collections: java.util.List singletonList(java.lang.Object)>"],"<io.reactivex.schedulers.Schedulers$IOTask: io.reactivex.Scheduler call()>":["<io.reactivex.schedulers.Schedulers$IoHolder: void <clinit>()>"],"<dummyMainClass: com.esoxjem.movieguide.details.MovieDetailsActivity dummyMainMethod_com_esoxjem_movieguide_details_MovieDetailsActivity(android.content.Intent)>":["<com.esoxjem.movieguide.details.MovieDetailsActivity: void <init>()>","<com.esoxjem.movieguide.details.MovieDetailsActivity: void onCreate(android.os.Bundle)>","<com.esoxjem.movieguide.details.MovieDetailsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"],"<io.reactivex.exceptions.CompositeException: void appendStackTrace(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)>":["<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<io.reactivex.exceptions.CompositeException: void appendStackTrace(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)>"],"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.util.Pow2: int roundToPowerOfTwo(int)>":["<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int numberOfLeadingZeros(int)>"],"<com.esoxjem.movieguide.AppModule_ProvideContextFactory: dagger.internal.Factory create(com.esoxjem.movieguide.AppModule)>":["<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <clinit>()>","<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <init>(com.esoxjem.movieguide.AppModule)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: boolean useMimicStrategy()>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: boolean getBoolean(java.lang.String)>"],"<java.lang.Class: java.lang.String getCanonicalName()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.schedulers.ComputationScheduler: void <init>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.ComputationScheduler: void <init>(java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.ComputationScheduler: void <clinit>()>"],"<io.realm.RealmConfiguration: void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,byte[],long,io.realm.RealmMigration,boolean,io.realm.internal.OsRealmConfig$Durability,io.realm.internal.RealmProxyMediator,io.realm.rx.RxObservableFactory,io.realm.Realm$Transaction,boolean,io.realm.CompactOnLaunchCallback,boolean)>":["<java.lang.Object: void <init>()>"],"<java.lang.String: int length()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Error: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void accept(java.lang.Throwable)>":["<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.exceptions.OnErrorNotImplementedException: void <init>(java.lang.Throwable)>"],"<io.reactivex.plugins.RxJavaPlugins: java.lang.Runnable onSchedule(java.lang.Runnable)>":["<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)>"],"<com.getkeepsafe.relinker.elf.ElfParser: com.getkeepsafe.relinker.elf.Elf$Header parseHeader()>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.getkeepsafe.relinker.elf.Elf64Header: void <init>(boolean,com.getkeepsafe.relinker.elf.ElfParser)>","<java.nio.ByteOrder: void <clinit>()>","<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.Elf32Header: void <init>(boolean,com.getkeepsafe.relinker.elf.ElfParser)>","<com.getkeepsafe.relinker.elf.ElfParser: short readByte(java.nio.ByteBuffer,long)>"],"<com.getkeepsafe.relinker.elf.Program64Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long)>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.ElfParser: long readLong(java.nio.ByteBuffer,long)>","<com.getkeepsafe.relinker.elf.Elf$ProgramHeader: void <init>()>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String,java.lang.Object[])>":["<java.lang.String: void <clinit>()>","<java.util.Locale: void <clinit>()>","<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>","<com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String)>"],"<io.realm.internal.async.RealmThreadPoolExecutor: void <clinit>()>":["<io.realm.internal.async.RealmThreadPoolExecutor: int calculateCorePoolSize()>","<io.realm.internal.async.RealmThreadPoolExecutor: void <clinit>()>"],"<com.esoxjem.movieguide.DaggerAppComponent: void initialize(com.esoxjem.movieguide.DaggerAppComponent$Builder)>":["<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: dagger.internal.Factory create(javax.inject.Provider)>","<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: void <clinit>()>","<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <clinit>()>","<com.esoxjem.movieguide.network.RequestInterceptor_Factory: void <clinit>()>","<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <clinit>()>","<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: dagger.internal.Factory create(com.esoxjem.movieguide.favorites.FavoritesModule,javax.inject.Provider)>","<com.esoxjem.movieguide.network.NetworkModule_TmdbWebServiceFactory: dagger.internal.Factory create(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>","<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: dagger.internal.Factory create(com.esoxjem.movieguide.AppModule)>","<dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)>","<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.network.NetworkModule access$100(com.esoxjem.movieguide.DaggerAppComponent$Builder)>","<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.AppModule access$200(com.esoxjem.movieguide.DaggerAppComponent$Builder)>","<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: dagger.internal.Factory create(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>","<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.favorites.FavoritesModule access$300(com.esoxjem.movieguide.DaggerAppComponent$Builder)>","<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <clinit>()>","<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <clinit>()>","<com.esoxjem.movieguide.network.NetworkModule_ProvideOkHttpClientFactory: void <clinit>()>","<dagger.internal.DoubleCheck: void <clinit>()>","<com.esoxjem.movieguide.AppModule_ProvideContextFactory: void <clinit>()>","<com.esoxjem.movieguide.network.RequestInterceptor_Factory: dagger.internal.Factory create()>","<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: dagger.internal.Factory create(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>","<com.esoxjem.movieguide.AppModule_ProvideContextFactory: dagger.internal.Factory create(com.esoxjem.movieguide.AppModule)>"],"<io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.internal.schedulers.NewThreadScheduler: void <init>(java.util.concurrent.ThreadFactory)>":["<io.reactivex.Scheduler: void <init>()>"],"<io.realm.internal.async.RealmThreadPoolExecutor: int countFilesInDir(java.lang.String,java.lang.String)>":["<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<io.realm.internal.async.RealmThreadPoolExecutor$1: void <init>(java.util.regex.Pattern)>","<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$ReuseDesugaringStrategy: void <init>()>":["<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$AbstractDesugaringStrategy: void <init>()>"],"<com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,java.lang.String)>":["<com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>"],"<io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.Throwable)>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed: void subscribeActual(io.reactivex.Observer)>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void <init>(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)>","<io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.Scheduler$Worker createWorker()>","<io.reactivex.Observable: void subscribe(io.reactivex.Observer)>","<io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.Scheduler$Worker createWorker()>","<io.reactivex.internal.schedulers.NewThreadScheduler: io.reactivex.Scheduler$Worker createWorker()>","<io.reactivex.observers.SerializedObserver: void <init>(io.reactivex.Observer)>","<io.reactivex.internal.schedulers.IoScheduler: io.reactivex.Scheduler$Worker createWorker()>"],"<com.getkeepsafe.relinker.ApkLibraryInstaller: void <init>()>":["<java.lang.Object: void <init>()>"],"<dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)>":["<dagger.internal.DoubleCheck: void <clinit>()>","<dagger.internal.DoubleCheck: void <init>(javax.inject.Provider)>","<dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)>":["<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<java.util.concurrent.atomic.AtomicReference: void lazySet(java.lang.Object)>","<io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void accept(java.lang.Object)>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.exceptions.CompositeException: void <init>(java.lang.Throwable[])>","<io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.schedulers.Schedulers$ComputationHolder: void <clinit>()>":["<io.reactivex.schedulers.Schedulers$ComputationHolder: void <clinit>()>","<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.ComputationScheduler: void <init>()>","<io.reactivex.internal.schedulers.ComputationScheduler: void <clinit>()>"],"<io.reactivex.observers.SerializedObserver: void <init>(io.reactivex.Observer,boolean)>":["<java.lang.Object: void <init>()>"],"<io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed: void <init>(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observable onAssembly(io.reactivex.Observable)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.reactivex.schedulers.Schedulers$IoHolder: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.IoScheduler: void <init>()>","<io.reactivex.schedulers.Schedulers$IoHolder: void <clinit>()>","<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>"],"<io.reactivex.internal.observers.LambdaObserver: void dispose()>":["<io.reactivex.internal.disposables.DisposableHelper: boolean dispose(java.util.concurrent.atomic.AtomicReference)>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <clinit>()>"],"<io.reactivex.internal.functions.Functions$EmptyConsumer: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)>":["<com.getkeepsafe.relinker.elf.Section32Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int)>"],"<com.esoxjem.movieguide.BaseApplication: void onCreate()>":["<android.app.Application: void onCreate()>","<com.esoxjem.movieguide.BaseApplication: com.esoxjem.movieguide.AppComponent createAppComponent()>","<android.os.StrictMode: void enableDefaults()>","<com.esoxjem.movieguide.BaseApplication: void initRealm()>"],"<com.getkeepsafe.relinker.elf.ElfParser: void read(java.nio.ByteBuffer,long,int)>":["<java.io.EOFException: void <init>()>"],"<io.realm.Realm: void checkFilesDirAvailable(android.content.Context)>":["<android.os.SystemClock: void sleep(long)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.Math: int min(int,int)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<android.content.ContextWrapper: java.io.File getFilesDir()>"],"<io.realm.internal.async.RealmThreadPoolExecutor$1: void <init>(java.util.regex.Pattern)>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.elf.Program32Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long)>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.Elf$ProgramHeader: void <init>()>"],"<io.realm.RealmConfiguration: java.lang.Object access$000()>":["<io.realm.RealmConfiguration: void <clinit>()>"],"<java.lang.Throwable: void printStackTrace()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void initLayoutReferences()>":["<com.esoxjem.movieguide.listing.MoviesListingAdapter: void <init>(java.util.List,com.esoxjem.movieguide.listing.MoviesListingView)>","<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>","<android.support.v4.app.Fragment: android.content.res.Resources getResources()>","<android.support.v7.widget.GridLayoutManager: void <init>(android.content.Context,int)>"],"<io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.observers.LambdaObserver: void <init>(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>","<io.reactivex.Observable: void subscribe(io.reactivex.Observer)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed: void <init>(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>":["<io.reactivex.internal.operators.observable.AbstractObservableWithUpstream: void <init>(io.reactivex.ObservableSource)>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity: void setToolbar()>":["<android.support.v7.app.AppCompatActivity: void setSupportActionBar(android.support.v7.widget.Toolbar)>","<android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)>","<android.support.v7.app.AppCompatActivity: android.support.v7.app.ActionBar getSupportActionBar()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observer onSubscribe(io.reactivex.Observable,io.reactivex.Observer)>":["<io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.BiFunction,java.lang.Object,java.lang.Object)>"],"<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void <init>(io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker)>":["<io.reactivex.internal.disposables.ListCompositeDisposable: void <init>()>","<io.reactivex.Scheduler$Worker: void <init>()>","<io.reactivex.internal.disposables.ListCompositeDisposable: boolean add(io.reactivex.disposables.Disposable)>","<io.reactivex.disposables.CompositeDisposable: void <init>()>"],"<java.lang.Class: java.lang.Class forName(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Boolean: boolean getBoolean(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.android.MainThreadDisposable$1: void <init>(io.reactivex.android.MainThreadDisposable)>":["<java.lang.Object: void <init>()>"],"<java.lang.String: boolean startsWith(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.observers.SerializedObserver: void dispose()>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void dispose()>"],"<com.esoxjem.movieguide.network.RequestInterceptor_Factory: void <clinit>()>":["<com.esoxjem.movieguide.network.RequestInterceptor_Factory: void <clinit>()>","<com.esoxjem.movieguide.network.RequestInterceptor_Factory: void <init>(java.lang.String,int)>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String)>":["<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>"],"<java.lang.Throwable: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>"],"<io.realm.internal.RealmProxyMediator: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initIoScheduler(java.util.concurrent.Callable)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void <init>()>":["<java.util.ArrayList: void <init>(int)>","<android.support.v4.app.Fragment: void <init>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void <init>(java.lang.Object,long,io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver)>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>()>","<java.util.concurrent.atomic.AtomicReference: void <init>()>"],"<com.jakewharton.rxbinding2.internal.Preconditions: void checkNotNull(java.lang.Object,java.lang.String)>":["<java.lang.NullPointerException: void <init>(java.lang.String)>"],"<io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)>":["<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<io.reactivex.observers.SerializedObserver: void dispose()>","<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.functions.Functions$EmptyConsumer: void accept(java.lang.Object)>","<io.reactivex.internal.disposables.DisposableHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)>","<io.reactivex.android.MainThreadDisposable: void dispose()>","<io.reactivex.disposables.ReferenceDisposable: void dispose()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<com.getkeepsafe.relinker.ApkLibraryInstaller: void closeSilently(java.io.Closeable)>":["<java.io.FileOutputStream: void close()>"],"<com.jakewharton.rxbinding2.internal.Preconditions: boolean checkMainThread(io.reactivex.Observer)>":["<java.lang.Thread: java.lang.String getName()>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable empty()>","<java.lang.IllegalStateException: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.String toString()>","<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)>","<java.lang.Thread: java.lang.Thread currentThread()>","<android.os.Looper: android.os.Looper myLooper()>","<android.os.Looper: android.os.Looper getMainLooper()>"],"<io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>":["<io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.internal.schedulers.ScheduledRunnable scheduleActual(java.lang.Runnable,long,java.util.concurrent.TimeUnit,io.reactivex.internal.disposables.DisposableContainer)>","<io.reactivex.internal.disposables.EmptyDisposable: void <clinit>()>"],"<io.reactivex.internal.schedulers.IoScheduler: void start()>":["<io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void shutdown()>","<io.reactivex.Scheduler: void <clinit>()>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.ThreadFactory)>"],"<io.realm.rx.RealmObservableFactory: void <clinit>()>":["<io.realm.rx.RealmObservableFactory: void <clinit>()>","<io.reactivex.BackpressureStrategy: void <clinit>()>"],"<io.reactivex.internal.schedulers.IoScheduler: void <init>()>":["<io.reactivex.internal.schedulers.IoScheduler: void <init>(java.util.concurrent.ThreadFactory)>","<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>"],"<io.realm.internal.async.RealmThreadPoolExecutor: void <init>(int,int)>":["<java.util.concurrent.TimeUnit: void <clinit>()>","<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>","<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>","<java.util.concurrent.locks.ReentrantLock: void <init>()>","<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment$1: void <init>(com.esoxjem.movieguide.listing.MoviesListingFragment)>":["<android.support.v7.widget.RecyclerView$OnScrollListener: void <init>()>"],"<io.realm.internal.async.RealmThreadPoolExecutor: int calculateCorePoolSize()>":["<java.lang.Runtime: java.lang.Runtime getRuntime()>","<io.realm.internal.async.RealmThreadPoolExecutor: void <clinit>()>","<io.realm.internal.async.RealmThreadPoolExecutor: int countFilesInDir(java.lang.String,java.lang.String)>"],"<io.realm.internal.ObjectServerFacade: void <clinit>()>":["<io.realm.exceptions.RealmException: void <init>(java.lang.String,java.lang.Throwable)>","<io.realm.internal.ObjectServerFacade: void <clinit>()>","<io.realm.internal.ObjectServerFacade: void <init>()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void run()>","<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.android.MainThreadDisposable$1: void run()>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>"],"<io.reactivex.schedulers.Schedulers$IOTask: java.lang.Object call()>":["<io.reactivex.schedulers.Schedulers$IOTask: io.reactivex.Scheduler call()>"],"<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String[] supportedAbis()>":["<android.os.Build: void <clinit>()>","<com.getkeepsafe.relinker.TextUtils: boolean isEmpty(java.lang.CharSequence)>","<java.lang.String: void <clinit>()>","<android.os.Build$VERSION: void <clinit>()>"],"<io.realm.RealmConfiguration: boolean isRxJavaAvailable()>":["<java.lang.Boolean: void <clinit>()>","<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>","<io.realm.RealmConfiguration: void <clinit>()>","<io.reactivex.Flowable: void <clinit>()>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<io.reactivex.exceptions.CompositeException$WrappedPrintStream: void <init>(java.io.PrintStream)>":["<io.reactivex.exceptions.CompositeException$PrintStreamOrWriter: void <init>()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initComputationScheduler(java.util.concurrent.Callable)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>"],"<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String)>","<io.reactivex.internal.schedulers.NewThreadWorker: void dispose()>","<java.lang.Math: int max(int,int)>","<io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void shutdown()>","<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.lang.Math: int min(int,int)>","<java.lang.Integer: void <clinit>()>","<io.reactivex.internal.schedulers.RxThreadFactory: void <init>(java.lang.String,int)>","<io.reactivex.internal.schedulers.IoScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.IoScheduler$ThreadWorker: void <init>(java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.ThreadFactory)>"],"<com.getkeepsafe.relinker.elf.Elf$SectionHeader: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)>":["<com.getkeepsafe.relinker.elf.Program64Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long)>"],"<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable: void subscribeListener(io.reactivex.Observer)>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable$Listener: void <init>(com.jakewharton.rxbinding2.support.v7.widget.SearchViewQueryTextChangesObservable,android.support.v7.widget.SearchView,io.reactivex.Observer)>","<com.jakewharton.rxbinding2.internal.Preconditions: boolean checkMainThread(io.reactivex.Observer)>"],"<io.reactivex.internal.schedulers.IoScheduler$ThreadWorker: void <init>(java.util.concurrent.ThreadFactory)>":["<io.reactivex.internal.schedulers.NewThreadWorker: void <init>(java.util.concurrent.ThreadFactory)>"],"<butterknife.ButterKnife: java.lang.reflect.Constructor findBindingConstructorForClass(java.lang.Class)>":["<android.util.Log: int d(java.lang.String,java.lang.String)>","<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>","<butterknife.ButterKnife: java.lang.reflect.Constructor findBindingConstructorForClass(java.lang.Class)>","<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<butterknife.ButterKnife: void <clinit>()>","<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"],"<io.reactivex.internal.schedulers.NewThreadScheduler: void <init>()>":["<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.internal.schedulers.NewThreadScheduler: void <clinit>()>","<io.reactivex.internal.schedulers.NewThreadScheduler: void <init>(java.util.concurrent.ThreadFactory)>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void onViewCreated(android.view.View,android.os.Bundle)>":["<android.support.v7.widget.RecyclerView$Adapter: void notifyDataSetChanged()>","<android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>"],"<io.reactivex.internal.util.OpenHashSet: void <init>()>":["<io.reactivex.internal.util.OpenHashSet: void <init>(int,float)>"],"<io.reactivex.schedulers.Schedulers$ComputationTask: java.lang.Object call()>":["<io.reactivex.schedulers.Schedulers$ComputationTask: io.reactivex.Scheduler call()>"],"<com.getkeepsafe.relinker.SystemLibraryLoader: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.disposables.ReferenceDisposable: void <init>(java.lang.Object)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>","<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>"],"<butterknife.Unbinder: void <clinit>()>":["<butterknife.Unbinder: void <clinit>()>","<butterknife.Unbinder$1: void <init>()>"],"<io.realm.RealmConfiguration: java.lang.String getCanonicalPath(java.io.File)>":["<java.io.File: java.lang.String getCanonicalPath()>","<java.lang.StringBuilder: java.lang.String toString()>","<io.realm.exceptions.RealmFileException: void <init>(io.realm.exceptions.RealmFileException$Kind,java.lang.String,java.lang.Throwable)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.io.File: java.lang.String getAbsolutePath()>","<io.realm.exceptions.RealmFileException$Kind: void <clinit>()>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$ReuseDesugaringStrategy: void printStackTrace(java.lang.Throwable)>":["<io.reactivex.exceptions.CompositeException: void printStackTrace()>","<java.lang.Throwable: void printStackTrace()>"],"<io.reactivex.internal.util.NotificationLite: void <init>(java.lang.String,int)>":["<java.lang.Enum: void <init>(java.lang.String,int)>"],"<io.reactivex.observers.SerializedObserver: void onNext(java.lang.Object)>":["<io.reactivex.internal.util.NotificationLite: java.lang.Object next(java.lang.Object)>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<io.reactivex.observers.SerializedObserver: void emitLoop()>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void dispose()>","<io.reactivex.observers.SerializedObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onNext(java.lang.Object)>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void add(java.lang.Object)>","<io.reactivex.internal.util.NotificationLite: void <clinit>()>","<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void <init>(int)>"],"<io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.exceptions.CompositeException: void printStackTrace()>":["<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void <clinit>()>","<java.lang.System: void <clinit>()>","<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: void printStackTrace(java.lang.Throwable,java.io.PrintStream)>"],"<java.lang.RuntimeException: void <init>()>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.android.MainThreadDisposable: void <init>()>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>()>","<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.elf.Section32Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int)>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.Elf$SectionHeader: void <init>()>"],"<io.reactivex.internal.util.NotificationLite: boolean acceptFull(java.lang.Object,io.reactivex.Observer)>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onComplete()>","<io.reactivex.internal.observers.LambdaObserver: void onComplete()>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onNext(java.lang.Object)>","<io.reactivex.internal.util.NotificationLite: void <clinit>()>","<io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)>"],"<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: dagger.internal.Factory create(com.esoxjem.movieguide.favorites.FavoritesModule,javax.inject.Provider)>":["<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <init>(com.esoxjem.movieguide.favorites.FavoritesModule,javax.inject.Provider)>","<com.esoxjem.movieguide.favorites.FavoritesModule_ProvideFavouritesInteractorFactory: void <clinit>()>"],"<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)>":["<com.getkeepsafe.relinker.elf.Dynamic32Structure: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int)>"],"<java.lang.Thread: void run()>":["<com.getkeepsafe.relinker.ReLinkerInstance$1: void run()>"],"<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String mapLibraryName(java.lang.String)>":["<java.lang.String: boolean startsWith(java.lang.String)>","<java.lang.System: void <clinit>()>","<java.lang.System: java.lang.String mapLibraryName(java.lang.String)>","<java.lang.String: boolean endsWith(java.lang.String)>"],"<com.esoxjem.movieguide.DaggerAppComponent: void <init>(com.esoxjem.movieguide.DaggerAppComponent$Builder,com.esoxjem.movieguide.DaggerAppComponent$1)>":["<com.esoxjem.movieguide.DaggerAppComponent: void <init>(com.esoxjem.movieguide.DaggerAppComponent$Builder)>"],"<io.reactivex.internal.schedulers.SingleScheduler: void <init>(java.util.concurrent.ThreadFactory)>":["<java.util.concurrent.atomic.AtomicReference: void lazySet(java.lang.Object)>","<io.reactivex.Scheduler: void <clinit>()>","<io.reactivex.Scheduler: void <init>()>","<io.reactivex.internal.schedulers.SingleScheduler: java.util.concurrent.ScheduledExecutorService createExecutor(java.util.concurrent.ThreadFactory)>","<io.reactivex.internal.schedulers.SingleScheduler: void <clinit>()>","<java.util.concurrent.atomic.AtomicReference: void <init>()>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void <init>()>":["<com.getkeepsafe.relinker.ApkLibraryInstaller: void <init>()>","<com.getkeepsafe.relinker.ReLinkerInstance: void <init>(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller)>","<com.getkeepsafe.relinker.SystemLibraryLoader: void <init>()>"],"<io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)>":["<io.reactivex.exceptions.CompositeException$WrappedPrintStream: void <init>(java.io.PrintStream)>","<io.reactivex.exceptions.CompositeException: void printStackTrace(io.reactivex.exceptions.CompositeException$PrintStreamOrWriter)>"],"<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: dagger.internal.Factory create(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>":["<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <init>(com.esoxjem.movieguide.network.NetworkModule,javax.inject.Provider)>","<com.esoxjem.movieguide.network.NetworkModule_RetrofitFactory: void <clinit>()>"],"<io.realm.BaseRealm$ThreadLocalRealmObjectContext: void <init>()>":["<java.lang.ThreadLocal: void <init>()>"],"<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initNewThreadScheduler(java.util.concurrent.Callable)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>","<io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)>"],"<io.reactivex.android.schedulers.HandlerScheduler: void <init>(android.os.Handler)>":["<io.reactivex.Scheduler: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity$1: boolean onMenuItemActionCollapse(android.view.MenuItem)>":["<android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>"],"<io.reactivex.Scheduler: void <clinit>()>":["<io.reactivex.Scheduler: void <clinit>()>","<java.util.concurrent.TimeUnit: void <clinit>()>","<java.lang.Long: void <clinit>()>","<java.lang.Long: java.lang.Long getLong(java.lang.String,long)>"],"<io.realm.rx.RealmObservableFactory$1: void <init>(io.realm.rx.RealmObservableFactory)>":["<java.lang.ThreadLocal: void <init>()>"],"<java.lang.Object: int hashCode()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.observers.SerializedObserver: void onComplete()>":["<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onComplete()>","<io.reactivex.internal.observers.LambdaObserver: void onComplete()>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void add(java.lang.Object)>","<io.reactivex.internal.util.NotificationLite: void <clinit>()>","<io.reactivex.internal.util.NotificationLite: java.lang.Object complete()>","<io.reactivex.internal.util.AppendOnlyLinkedArrayList: void <init>(int)>"],"<io.reactivex.internal.schedulers.IoScheduler: io.reactivex.Scheduler$Worker createWorker()>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void <init>(io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool)>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity: boolean onCreateOptionsMenu(android.view.Menu)>":["<com.esoxjem.movieguide.listing.MoviesListingActivity$$Lambda$0: void <init>(com.esoxjem.movieguide.listing.MoviesListingFragment)>","<java.util.concurrent.TimeUnit: void <clinit>()>","<io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit)>","<io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>","<android.support.v7.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()>","<android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>","<com.jakewharton.rxbinding2.support.v7.widget.RxSearchView: com.jakewharton.rxbinding2.InitialValueObservable queryTextChanges(android.support.v7.widget.SearchView)>","<com.esoxjem.movieguide.listing.MoviesListingActivity$1: void <init>(com.esoxjem.movieguide.listing.MoviesListingActivity)>"],"<io.reactivex.internal.util.ExceptionHelper$Termination: void <init>()>":["<java.lang.Throwable: void <init>(java.lang.String)>"],"<io.reactivex.internal.disposables.DisposableHelper: boolean replace(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.disposables.EmptyDisposable: void dispose()>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onComplete()>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void dispose()>","<io.reactivex.internal.schedulers.NewThreadWorker: void dispose()>","<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void dispose()>","<io.reactivex.observers.SerializedObserver: void onComplete()>","<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void dispose()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.realm.Realm: void init(android.content.Context)>":["<java.lang.IllegalArgumentException: void <init>(java.lang.String)>","<io.realm.BaseRealm: void <clinit>()>","<io.realm.internal.RealmCore: void <clinit>()>","<io.realm.internal.ObjectServerFacade: void <clinit>()>","<io.realm.RealmConfiguration$Builder: io.realm.RealmConfiguration build()>","<io.realm.internal.OsSharedRealm: void initialize(java.io.File)>","<io.realm.Realm: void <clinit>()>","<io.realm.Realm: void checkFilesDirAvailable(android.content.Context)>","<android.content.ContextWrapper: java.io.File getFilesDir()>","<io.realm.internal.ObjectServerFacade: io.realm.internal.ObjectServerFacade getSyncFacadeIfPossible()>","<io.realm.internal.RealmCore: void loadLibrary(android.content.Context)>","<android.content.ContextWrapper: android.content.Context getApplicationContext()>","<io.realm.RealmConfiguration$Builder: void <init>(android.content.Context)>","<io.realm.Realm: void setDefaultConfiguration(io.realm.RealmConfiguration)>","<io.realm.internal.OsSharedRealm: void <clinit>()>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.io.File,java.lang.String)>","<io.realm.internal.ObjectServerFacade: void init(android.content.Context)>"],"<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>":["<io.reactivex.internal.util.ExceptionHelper: void <clinit>()>","<io.reactivex.internal.util.ExceptionHelper$Termination: void <init>()>"],"<java.lang.Object: java.lang.Class getClass()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<io.reactivex.internal.disposables.DisposableHelper: void reportDisposableSet()>":["<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.exceptions.ProtocolViolationException: void <init>(java.lang.String)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension$AbstractDesugaringStrategy: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.getkeepsafe.relinker.ReLinkerInstance$1: void <init>(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)>":["<java.lang.Object: void <init>()>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>":["<com.esoxjem.movieguide.listing.MoviesListingFragment$1: void <init>(com.esoxjem.movieguide.listing.MoviesListingFragment)>","<com.esoxjem.movieguide.listing.MoviesListingFragment: void initLayoutReferences()>","<butterknife.ButterKnife: void <clinit>()>","<butterknife.ButterKnife: butterknife.Unbinder bind(java.lang.Object,android.view.View)>"],"<com.getkeepsafe.relinker.elf.Elf$ProgramHeader: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.schedulers.Schedulers$NewThreadTask: io.reactivex.Scheduler call()>":["<io.reactivex.schedulers.Schedulers$NewThreadHolder: void <clinit>()>"],"<io.reactivex.internal.functions.Functions$NaturalObjectComparator: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.realm.RealmConfiguration$Builder: io.realm.RealmConfiguration build()>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<io.realm.RealmConfiguration: boolean isRxJavaAvailable()>","<io.realm.RealmConfiguration: java.lang.String getCanonicalPath(java.io.File)>","<io.realm.rx.RealmObservableFactory: void <clinit>()>","<io.realm.RealmConfiguration: void <clinit>()>","<io.realm.RealmConfiguration: void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,byte[],long,io.realm.RealmMigration,boolean,io.realm.internal.OsRealmConfig$Durability,io.realm.internal.RealmProxyMediator,io.realm.rx.RxObservableFactory,io.realm.Realm$Transaction,boolean,io.realm.CompactOnLaunchCallback,boolean)>","<java.io.File: void <clinit>()>","<io.realm.rx.RealmObservableFactory: void <init>()>","<io.realm.RealmConfiguration: io.realm.internal.RealmProxyMediator createSchemaMediator(java.util.Set,java.util.Set)>","<java.io.File: void <init>(java.io.File,java.lang.String)>"],"<com.esoxjem.movieguide.DaggerAppComponent$Builder: com.esoxjem.movieguide.DaggerAppComponent$Builder appModule(com.esoxjem.movieguide.AppModule)>":["<dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void dispose()>":["<io.reactivex.internal.disposables.DisposableHelper: boolean dispose(java.util.concurrent.atomic.AtomicReference)>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.internal.util.NotificationLite: java.lang.Object error(java.lang.Throwable)>":["<io.reactivex.internal.util.NotificationLite$ErrorNotification: void <init>(java.lang.Throwable)>"],"<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void dispose()>":["<io.reactivex.internal.disposables.ListCompositeDisposable: void dispose()>"],"<io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.Scheduler$Worker createWorker()>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void <init>(java.util.concurrent.ScheduledExecutorService)>"],"<io.realm.internal.ObjectServerFacade: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.String: boolean endsWith(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.DaggerAppComponent: void <clinit>()>":["<java.lang.Class: boolean desiredAssertionStatus()>","<com.esoxjem.movieguide.DaggerAppComponent: void <clinit>()>"],"<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: dagger.internal.Factory create(javax.inject.Provider)>":["<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <clinit>()>","<com.esoxjem.movieguide.favorites.FavoritesStore_Factory: void <init>(javax.inject.Provider)>"],"<java.lang.Thread: java.lang.String getName()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<butterknife.Unbinder$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<java.lang.Object: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Object: void finalize()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onError(java.lang.Throwable)>":["<io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)>","<io.reactivex.internal.schedulers.NewThreadWorker: void dispose()>","<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void dispose()>","<io.reactivex.observers.SerializedObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void dispose()>","<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void dispose()>"],"<io.reactivex.internal.schedulers.NewThreadWorker: void <init>(java.util.concurrent.ThreadFactory)>":["<io.reactivex.internal.schedulers.SchedulerPoolFactory: void <clinit>()>","<io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.concurrent.ScheduledExecutorService create(java.util.concurrent.ThreadFactory)>","<io.reactivex.Scheduler$Worker: void <init>()>"],"<io.reactivex.internal.observers.LambdaObserver: void <init>(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>":["<java.util.concurrent.atomic.AtomicReference: void <init>()>"],"<com.getkeepsafe.relinker.elf.ElfParser: long offsetFromVma(com.getkeepsafe.relinker.elf.Elf$Header,long,long)>":["<java.lang.IllegalStateException: void <init>(java.lang.String)>","<com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)>","<com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)>"],"<io.realm.RealmConfiguration: io.realm.internal.RealmProxyMediator createSchemaMediator(java.util.Set,java.util.Set)>":["<io.realm.internal.modules.FilterableMediator: void <init>(io.realm.internal.RealmProxyMediator,java.util.Collection)>","<io.realm.internal.modules.CompositeMediator: void <init>(io.realm.internal.RealmProxyMediator[])>","<io.realm.RealmConfiguration: io.realm.internal.RealmProxyMediator getModuleMediator(java.lang.String)>","<io.realm.RealmConfiguration: void <clinit>()>","<java.util.HashSet: int size()>","<java.util.HashSet: java.util.Iterator iterator()>"],"<com.getkeepsafe.relinker.elf.Section64Header: void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int)>":["<com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)>","<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.Elf$SectionHeader: void <init>()>"],"<io.reactivex.Scheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>":["<java.util.concurrent.TimeUnit: void <clinit>()>","<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>"],"<io.reactivex.internal.functions.Functions$EmptyLongConsumer: void <init>()>":["<java.lang.Object: void <init>()>"],"<io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromRunnable(java.lang.Runnable)>":["<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>","<io.reactivex.disposables.RunnableDisposable: void <init>(java.lang.Runnable)>"],"<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: dagger.internal.Factory create(com.esoxjem.movieguide.AppModule)>":["<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <clinit>()>","<com.esoxjem.movieguide.AppModule_ProvideRealmFactory: void <init>(com.esoxjem.movieguide.AppModule)>"],"<io.reactivex.internal.functions.Functions$FalsePredicate: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.jakewharton.rxbinding2.InitialValueObservable: void <init>()>":["<io.reactivex.Observable: void <init>()>"],"<java.lang.LinkageError: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Error: void <init>()>"],"<com.esoxjem.movieguide.details.MovieDetailsActivity: void onCreate(android.os.Bundle)>":["<android.support.v7.app.AppCompatActivity: void setContentView(int)>","<android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>","<com.esoxjem.movieguide.details.MovieDetailsActivity: android.content.Intent getIntent()>","<com.esoxjem.movieguide.details.MovieDetailsFragment: com.esoxjem.movieguide.details.MovieDetailsFragment getInstance(com.esoxjem.movieguide.Movie)>","<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>"],"<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String)>":["<com.getkeepsafe.relinker.ReLinkerInstance: void cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String)>","<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String unmapLibraryName(java.lang.String)>","<java.util.HashSet: boolean contains(java.lang.Object)>","<com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String)>","<java.io.File: java.lang.String getAbsolutePath()>","<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String[] supportedAbis()>","<com.getkeepsafe.relinker.elf.ElfParser: void <init>(java.io.File)>","<com.getkeepsafe.relinker.ApkLibraryInstaller: void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)>","<java.util.HashSet: boolean add(java.lang.Object)>","<java.util.ArrayList: java.util.Iterator iterator()>","<com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String mapLibraryName(java.lang.String)>","<com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String,java.lang.Object[])>","<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>","<com.getkeepsafe.relinker.SystemLibraryLoader: void loadLibrary(java.lang.String)>","<com.getkeepsafe.relinker.elf.ElfParser: java.util.List parseNeededDependencies()>","<com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String)>","<java.io.File: boolean exists()>","<com.getkeepsafe.relinker.SystemLibraryLoader: void loadPath(java.lang.String)>"],"<com.esoxjem.movieguide.network.RequestInterceptor_Factory: dagger.internal.Factory create()>":["<com.esoxjem.movieguide.network.RequestInterceptor_Factory: void <clinit>()>"],"<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)>":["<io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)>","<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<com.esoxjem.movieguide.listing.MoviesListingActivity$$Lambda$0: void accept(java.lang.Object)>","<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)>","<io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()>"],"<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>":["<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>","<io.reactivex.internal.disposables.DisposableHelper: void <init>(java.lang.String,int)>"],"<com.getkeepsafe.relinker.elf.Elf64Header: void <init>(boolean,com.getkeepsafe.relinker.elf.ElfParser)>":["<java.nio.ByteOrder: void <clinit>()>","<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>","<com.getkeepsafe.relinker.elf.ElfParser: int readHalf(java.nio.ByteBuffer,long)>","<com.getkeepsafe.relinker.elf.ElfParser: long readLong(java.nio.ByteBuffer,long)>","<com.getkeepsafe.relinker.elf.Elf$Header: void <init>()>"],"<io.realm.RealmConfiguration: void <clinit>()>":["<io.realm.Realm: java.lang.Object getDefaultModule()>","<io.realm.RealmConfiguration: void <clinit>()>","<io.realm.RealmConfiguration: io.realm.internal.RealmProxyMediator getModuleMediator(java.lang.String)>","<io.realm.BaseRealm: void <clinit>()>","<java.lang.ExceptionInInitializerError: void <init>(java.lang.String)>","<io.realm.Realm: void <clinit>()>"],"<com.esoxjem.movieguide.listing.MoviesListingActivity: void <init>()>":["<android.support.v7.app.AppCompatActivity: void <init>()>"],"<io.reactivex.internal.disposables.DisposableHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.disposables.DisposableHelper: void reportDisposableSet()>","<io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>","<io.reactivex.observers.SerializedObserver: void dispose()>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<io.reactivex.android.MainThreadDisposable: void dispose()>","<io.reactivex.disposables.ReferenceDisposable: void dispose()>","<io.reactivex.internal.functions.ObjectHelper: void <clinit>()>","<io.reactivex.internal.disposables.DisposableHelper: void <clinit>()>"],"<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onNext(java.lang.Object)>":["<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>","<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void <init>(java.lang.Object,long,io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver)>","<io.reactivex.internal.disposables.EmptyDisposable: void dispose()>","<io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void setResource(io.reactivex.disposables.Disposable)>","<io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>","<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>","<io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()>","<io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>","<io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>"],"<com.esoxjem.movieguide.listing.MoviesListingFragment: void onCreate(android.os.Bundle)>":["<android.support.v4.app.Fragment: void setRetainInstance(boolean)>","<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>","<android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>","<android.support.v4.app.Fragment: void setHasOptionsMenu(boolean)>"],"<java.lang.Thread: void start()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.google.devtools.build.android.desugar.runtime.ThrowableExtension: java.lang.Integer readApiLevelFromBuildVersion()>":["<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>","<java.lang.System: void <clinit>()>","<io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)>","<java.lang.Class: java.lang.Class forName(java.lang.String)>"],"<io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void <init>(io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool)>":["<java.util.concurrent.atomic.AtomicBoolean: void <init>()>","<io.reactivex.Scheduler$Worker: void <init>()>","<io.reactivex.disposables.CompositeDisposable: void <init>()>"],"<io.reactivex.internal.disposables.EmptyDisposable: void <clinit>()>":["<io.reactivex.internal.disposables.EmptyDisposable: void <init>(java.lang.String,int)>","<io.reactivex.internal.disposables.EmptyDisposable: void <clinit>()>"],"<com.esoxjem.movieguide.DaggerAppComponent$Builder: void <init>(com.esoxjem.movieguide.DaggerAppComponent$1)>":["<com.esoxjem.movieguide.DaggerAppComponent$Builder: void <init>()>"],"<com.getkeepsafe.relinker.elf.ElfParser: java.lang.String readString(java.nio.ByteBuffer,long)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.StringBuilder: java.lang.StringBuilder append(char)>","<java.lang.StringBuilder: void <init>()>","<com.getkeepsafe.relinker.elf.ElfParser: short readByte(java.nio.ByteBuffer,long)>"],"<com.getkeepsafe.relinker.elf.Elf$Header: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.esoxjem.movieguide.BaseApplication: void initRealm()>":["<io.realm.Realm: void init(android.content.Context)>","<io.realm.BaseRealm: void <clinit>()>","<io.realm.Realm: void <clinit>()>"],"<io.reactivex.disposables.RunnableDisposable: void onDisposed(java.lang.Object)>":["<io.reactivex.disposables.RunnableDisposable: void onDisposed(java.lang.Runnable)>"]}