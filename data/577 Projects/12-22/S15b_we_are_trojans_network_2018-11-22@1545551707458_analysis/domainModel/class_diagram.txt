@startuml
skinparam classAttributeIconSize 0

class helpusecasemodelpatternhtm {
~ helpusecasemodelpatternhtm()
}

class helpactorhtm {
~ helpactorhtm()
}

class helpusecasediagramhtm {
~ helpusecasediagramhtm()
}

class SystemBoundary {
~ SystemBoundary()
}

class helpdomainmodelpatternhtm {
~ helpdomainmodelpatternhtm()
}

class Event {
- createAt:EAJava_timeStamp
- details:EAJava_String
- location:EAJava_String
- name:EAJava_String
- notificationTime:EAJava_timeStamp
- picture:EAJava_String
- pointForJoining:EAJava_int
- startTime:EAJava_timeStamp
- updateAt:EAJava_timeStamp
~ Event()
~ comment()
}

class EventController {
~ create():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ show():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
~ errorwhensavingprofile()
}

class Item {
- createAt:EAJava_timeStamp
- itemDetail:EAJava_String
- itemName:EAJava_String
- pictureURL:EAJava_String
- purchasePoint:EAJava_integer
- status:EAJava_int
- updateAt:EAJava_timeStamp
~ Item()
}

class ItemCategory {
- categoryCode:EAJava_String
- categoryName:EAJava_String
~ ItemCategory()
}

class ItemCategoryController {
~ create():EAJava_int
~ destroy():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ show():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
~ calculatepointsoftheowner()
}

class ItemController {
~ create():EAJava_int
~ destory():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ operation():EAJava_int
~ show():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
~ Potentialsecurityerror()
}

class Notification {
- message:EAJava_String
- sendBy:EAJava_String
- time:EAJava_timeStamp
~ Notification()
~ Likeinformation()
}

class NotificationType {
- id:EAJava_integer
- type:EAJava_String
~ createType():EAJava_int
}

class NotificationController {
~ index():EAJava_int
}

class Post {
- author:EAJava_String
- createAt:EAJava_timeStamp
- details:EAJava_String
- updateAt:EAJava_timeStamp
~ Post()
~ likepostbutton()
~ point()
~ Postcommentpage()
}

class PostController {
~ create():EAJava_int
~ destroy():EAJava_int
~ dislikePost():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ likePost():EAJava_int
~ report():EAJava_int
~ reportPost():EAJava_int
~ requestDelete():EAJava_int
~ store():EAJava_int
~ undislikePost():EAJava_int
~ unlikePost():EAJava_int
~ update():EAJava_int
~ commentispostedsuccessfullymessage()
~ errorinthepostedcomment()
}

class Redemption {
~ makePurchase():EAJava_int
~ redeemsuccessmessage()
~ Redeemgiftoption()
~ CheckSQLinjections()
}

class SearchController {
~ create():EAJava_int
~ destory():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ search():EAJava_int
~ show():EAJava_int
~ showViolation():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
~ urlofleaderboard()
}

class SearchUtil {
- undefined:EAID_DB0CEA73_C685_4a84_A60A_8AAE415217D5
~ searchForum():EAJava_int
~ searchUsers():EAJava_int
~ searchViolation():EAJava_int
~ Invalidsearchinput()
}

class SessionController {
~ create():EAJava_int
~ destory():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ show():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
}

class StoreController {
~ confirm():EAJava_int
~ create():EAJava_int
~ destory():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ purchase():EAJava_int
~ show():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
~ directtoonlinestorepage()
~ decreasetheitmenuminstore()
~ loadstoredetails()
~ viewprofilebutton()
}

class Thread {
- author:EAJava_String
- category:EAJava_String
- creatAt:EAJava_timeStamp
- detail:EAJava_String
- topic:EAJava_String
- updateAt:EAJava_timeStamp
~ Thread()
~ threadislikedmessage()
~ grayedoutthreadlikebutton()
~ decreasethepoints()
~ Threadispostedsuccessfully()
~ Nothreadsavailable()
}

class ThreadCategory {
- categoryCode:EAJava_String
- categoryName:EAJava_String
~ ThreadCategory()
~ updatelikenumberofthread()
~ Invalidinputthreadinformation()
}

class ThreadController {
~ assignCat():EAJava_int
~ create():EAJava_int
~ destory():EAJava_int
~ dislikeThread():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ indexThreadByCategory():EAJava_int
~ likeThread():EAJava_int
~ reportThread():EAJava_int
~ store():EAJava_int
~ undislikeThread():EAJava_int
~ unlikeThread():EAJava_int
~ unpublish():EAJava_int
~ update():EAJava_int
~ Noleaderserrormessage()
}

class User {
- degree:EAJava_String
- email:EAJava_String
- firstName:EAJava_String
- joinDate:EAJava_String
- lastName:EAJava_String
- lifeTime:EAJava_int
- password:EAJava_String
- pictureURL:EAJava_String
- school:EAJava_String
- semester:EAJava_int
- summaryProfile:EAJava_String
- usable:EAJava_int
~ User()
~ checkiftheuserhasenoughpoints()
~ loaduserprofile()
}

class UserController {
~ checkImage():EAJava_int
~ confirm():EAJava_int
~ create():EAJava_int
~ destory():EAJava_int
~ edit():EAJava_int
~ index():EAJava_int
~ resetPassword():EAJava_int
~ show():EAJava_int
~ store():EAJava_int
~ update():EAJava_int
~ updateCategories():EAJava_int
~ updateCoverPicture():EAJava_int
~ updatePassword():EAJava_int
~ updatePicture():EAJava_int
~ updateProfilePicture():EAJava_int
}

class Participantrankingandpointspage {
~ Participantrankingandpointspage()
~ loadparticipants()
}

class Forumpage {
~ Forumpage(EAJava_String degreeEAJava_String emailEAJava_String firstNameEAJava_String joinDateEAJava_String lastNameEAJava_int lifeTimeEAJava_String passwordEAJava_String pictureURLEAJava_String schoolEAJava_int semesterEAJava_String summaryProfile):EAJava_int
~ Onlinestorepage()
~ loadsearchformpage()
~ profileeditpage()
~ redirecttoeditpage()
}

class loadcommentinputfield {
~ loadcommentinputfield(EAJava_String authorEAJava_String categoryEAJava_timeStamp creatAtEAJava_String detailEAJava_String topic):EAJava_timeStamp
~ Pointisnotenoughmessage()
}

class profileisupdatedfeedback {
~ profileisupdatedfeedback(EAJava_String degreeEAJava_String emailEAJava_String firstNameEAJava_String joinDateEAJava_String lastNameEAJava_int lifeTimeEAJava_String passwordEAJava_String pictureURLEAJava_String schoolEAJava_int semesterEAJava_String summaryProfile):EAJava_int
~ profiledetailpage()
~ errorwhensavingprofile()
~ saveeditedprofile()
}

@enduml