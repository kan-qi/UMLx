cutsVec <- cutsAsVec(result$cuts)
g <- g + geom_text(data = data.frame(cutsVec), aes(label=cutsVec, col=cutsVec), alpha=0, x=1, y=1) +
theme(legend.key=element_blank(), legend.title = element_blank()) +
guides(colour=guide_legend(override.aes=list(size=0)), reverse = TRUE)
print(g)
}
# Plot predicted vs. actual effort values
predictedValues <- sapply(1:length(SWTIIresults), function(i) {
predicted <- apply(SWTIIresults[[i]]$data, 1, function(x) {
predict.blm(SWTIIresults[[i]]$model, newdata = as.data.frame(t(x)))
})
})
colnames(predictedValues) <- paste(1:length(SWTIIresults), "Bins")
predictedValues <- subset(predictedValues, rownames(predictedValues) != "Aggregate")
predictedValues <- merge(as.data.frame(predictedValues), effort, by='row.names', all=TRUE)
rownames(predictedValues) <- predictedValues$Row.names
predictedValues$Row.names <- NULL
r2Vals <- apply(subset(predictedValues, select = -Effort), 2, function (x) {
dat <- data.frame(Predicted = x, Effort = predictedValues$Effort)
model <- lm(Effort ~ ., data = dat)
summary(model)$r.squared
})
r2Vals <- round(r2Vals, digits = 5)
r2Vals <- paste("r2:", r2Vals, sep = "")
predictedValues <- gather(predictedValues, numBins, Predicted, -Effort)
r2data_txt <- data.frame(label = as.character(r2Vals), numBins = paste(1:length(SWTIIresults), "Bins"))
ggplot(predictedValues, aes(x = Predicted, y = Effort)) +
geom_point(shape = 1) + stat_smooth(method = "lm",  se = FALSE, fullrange = TRUE) +
facet_grid(. ~ numBins) + xlab("Predicted Effort") +
ylab("Actual Effort") + ggtitle("Model Accuracy") +
theme(panel.spacing = unit(1, "lines")) +
geom_text(data = r2data_txt, size = 3, mapping = aes(x = -Inf, y = -Inf, label = label),
hjust = -0.1, vjust = -1)
# Plots cross validation results
MSEdata <- data.frame(NumBins = 1:length(SWTIIresults), MSE = sapply(SWTIIresults, function(x) { x$MSE }))
MMREdata <- data.frame(NumBins = 1:length(SWTIIresults), MMRE = sapply(SWTIIresults, function(x) { x$MMRE }))
PREDdata <- data.frame(NumBins = 1:length(SWTIIresults), PRED = sapply(SWTIIresults, function(x) { x$PRED }))
ggplot(data = MSEdata, aes(x = NumBins, y = log(MSE))) + geom_point(shape = 1) + geom_line() + ggtitle("MSE Results")
ggplot(data = MMREdata, aes(x = NumBins, y = MMRE)) + geom_point(shape = 1) + geom_line() + ggtitle("MMRE Results")
ggplot(data = PREDdata, aes(x = NumBins, y = PRED)) + geom_point(shape = 1) + geom_line() + ylab("PRED(0.25)") + ggtitle("PRED(0.25) Results")
# Plot marginal posteriors for each parameter
for (i in 1:length(SWTIIresults)) {
marginalData <- SWTIIresults[[i]]$model[, !names(SWTIIresults[[i]]$model) %in% c("(Intercept)", "sigma")]
if (is.vector(marginalData)) {
marginalData <- data.frame(l1 = marginalData)
}
for (col in names(marginalData)) {
mean <- mean(marginalData[, col])
sd <- sd(marginalData[, col])
peakDensity <- dnorm(mean, mean, sd)
g <- ggplot(marginalData, aes(x=marginalData[, col])) +
geom_histogram(aes(y = ..density..), binwidth = 1, colour="black", fill="white") +
stat_function(fun = dnorm, args = list(mean = mean(mean), sd = sd)) +
xlab(col) + ggtitle("Posterior Weight", paste(col, i, "bins")) +
annotate("text", x = mean, y = peakDensity * ((sd/3 *.1) + 1), label = paste("mean:", round(mean,2),",", "sd:", round(sd,2)))
print(g)
}
}
source('~/Google Drive/ResearchSpace/Research Projects/UMLx/data/TransactionWeighting/transaction_regression_calibration.R')
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
source('~/Google Drive/ResearchSpace/Research Projects/UMLx/data/TransactionWeighting/transaction_regression_calibration.R')
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
source('~/Google Drive/ResearchSpace/Research Projects/UMLx/data/TransactionWeighting/transaction_regression_calibration.R')
source('~/Google Drive/ResearchSpace/Research Projects/UMLx/data/TransactionWeighting/transaction_regression_calibration.R')
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
source('~/Google Drive/ResearchSpace/Research Projects/UMLx/data/TransactionWeighting/transaction_regression_calibration.R')
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
transaction <- read.csv("./Transaction Data/F13a_Cityof_LosAngeles_Personnel_Department_Mobile_Applications.csv")
print(transaction)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
transaction <- read.csv("./Transaction Data/F13a_Cityof_LosAngeles_Personnel_Department_Mobile_Applications.csv")
print(transaction)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
transaction <- read.csv("./Transaction Data/F13a_Cityof_LosAngeles_Personnel_Department_Mobile_Applications.csv")
print(transaction)
# Plot cross validation results
MSEdata <- data.frame(NumBins = 1:length(SWTIIresults), MSE = sapply(SWTIIresults, function(x) { x$MSE }))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
# Plot cross validation results
MSEdata <- data.frame(NumBins = 1:length(SWTIIresults), MSE = sapply(SWTIIresults, function(x) { x$MSE }))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
# Plot cross validation results
MSEdata <- data.frame(NumBins = 1:length(SWTIIresults), MSE = SWTIIresults$MSE)
MMREdata <- data.frame(NumBins = 1:length(SWTIIresults), MMRE = SWTIIresults$MMRE)
PREDdata <- data.frame(NumBins = 1:length(SWTIIresults), PRED = SWTIIresults$PRED)
ggplot(data = MSEdata, aes(x = NumBins, y = log(MSE))) + geom_point(shape = 1) + geom_line() + ggtitle("MSE Results")
ggplot(data = MMREdata, aes(x = NumBins, y = MMRE)) + geom_point(shape = 1) + geom_line() + ggtitle("MMRE Results")
ggplot(data = PREDdata, aes(x = NumBins, y = PRED)) + geom_point(shape = 1) + geom_line() + ylab("PRED(0.25)") + ggtitle("PRED(0.25) Results")
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
# Plot cross validation results
print(c(MSE = SWTIIresults$MSE, MMRE = SWTIIresults$MMRE, PRED = SWTIIresults$PRED))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD"))
# Plot cross validation results
print(c(MSE = SWTIIresults$MSE, MMRE = SWTIIresults$MMRE, PRED = SWTIIresults$PRED))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD"))
# Plot cross validation results
print(c(MSE = SWTIIresults$MSE, MMRE = SWTIIresults[['MMRE']], PRED = SWTIIresults$PRED))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults[['MMRE']], SWTIIresults$PRED))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
print(summery(SWTIIresults$model))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
print(summary(SWTIIresults$model))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("effortValues.csv")
rownames(effort) <- effort$Project
effort$Project <- NULL
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD", "DETs"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
print(summary(SWTIIresults$model))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("projectData.csv")
effort <- effort[which(effort$Effort != "NA")]
rownames(effort) <- effort$Project
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL", "TD"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
print(summary(SWTIIresults$model))
# plot predicted vs actual
predictedValues <- data.frame(Predicted = as.matrix(predict.lm(SWTIIresults$model, as.matrix(SWTIIresults$data)))[,1], Effort=SWTIIresults$data$Effort)
print(as.matrix(predictedValues))
ggplot(predictedValues, aes(x = Predicted, y = Effort)) +
geom_point(shape = 1) + stat_smooth(method = "lm",  se = FALSE, fullrange = TRUE) + xlab("Predicted Effort") +
ylab("Actual Effort") + ggtitle("Model Accuracy") +
theme(panel.spacing = unit(1, "lines"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("projectData.csv")
effort <- effort[which(effort$Effort != "NA")]
rownames(effort) <- effort$Project
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TL"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
print(summary(SWTIIresults$model))
# plot predicted vs actual
predictedValues <- data.frame(Predicted = as.matrix(predict.lm(SWTIIresults$model, as.matrix(SWTIIresults$data)))[,1], Effort=SWTIIresults$data$Effort)
print(as.matrix(predictedValues))
ggplot(predictedValues, aes(x = Predicted, y = Effort)) +
geom_point(shape = 1) + stat_smooth(method = "lm",  se = FALSE, fullrange = TRUE) + xlab("Predicted Effort") +
ylab("Actual Effort") + ggtitle("Model Accuracy") +
theme(panel.spacing = unit(1, "lines"))
knitr::opts_chunk$set(echo = TRUE)
source("transaction_regression_calibration.R")
library(tidyverse)
#combined <- combineData("./Transaction Data")
effort <- read.csv("projectData.csv")
effort <- effort[which(effort$Effort != "NA")]
rownames(effort) <- effort$Project
print(effort)
SWTIIresults <- performSearch("./Transaction Data", effort, c("TD"))
# Plot cross validation results
print(c(SWTIIresults$MSE, SWTIIresults$MMRE, SWTIIresults$PRED))
print(summary(SWTIIresults$model))
# plot predicted vs actual
predictedValues <- data.frame(Predicted = as.matrix(predict.lm(SWTIIresults$model, as.matrix(SWTIIresults$data)))[,1], Effort=SWTIIresults$data$Effort)
print(as.matrix(predictedValues))
ggplot(predictedValues, aes(x = Predicted, y = Effort)) +
geom_point(shape = 1) + stat_smooth(method = "lm",  se = FALSE, fullrange = TRUE) + xlab("Predicted Effort") +
ylab("Actual Effort") + ggtitle("Model Accuracy") +
theme(panel.spacing = unit(1, "lines"))
