<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\test\java\com\github\pockethub\android\util\ConvertUtilsTest.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>GitHubEvent</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>Repository</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>equalTo</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertThat</name></name>;</import>

<class><specifier>public</specifier> class <name>ConvertUtilsTest</name> <block>{

	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>REPO_NAME_FIRST_PART</name> <init>= <expr><literal type="string">"first"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>REPO_NAME_SECOND_PART</name> <init>= <expr><literal type="string">"second"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>REPO_NAME</name> <init>= <expr><name>REPO_NAME_FIRST_PART</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>REPO_NAME_SECOND_PART</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><specifier>private</specifier> <type><name>GitHubEvent</name></type> <name>event</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name><name>GitHubEvent</name><operator>.</operator><name>RepoIdentifier</name></name></type> <name>repo</name></decl>;</decl_stmt>

	<function><annotation>@<name>Before</name></annotation>
	<specifier>public</specifier> <type><name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <block>{

	    <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.ConvertUtilsTest.setup()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><name>repo</name> <operator>=</operator> <call><name><name>GitHubEvent</name><operator>.</operator><name>RepoIdentifier</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
                <operator>.</operator><call><name>repoWithUserName</name><argument_list>(<argument><expr><name>REPO_NAME</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name>event</name> <operator>=</operator> <call><name><name>GitHubEvent</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
                <operator>.</operator><call><name>repo</name><argument_list>(<argument><expr><name>repo</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.ConvertUtilsTest.setup()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><annotation>@<name>Test</name></annotation>
	<specifier>public</specifier> <type><name>void</name></type> <name>testOriginalRepoIsNotChanged</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
		<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.ConvertUtilsTest.testOriginalRepoIsNotChanged()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>ConvertUtils</name><operator>.</operator><name>eventRepoToRepo</name></name><argument_list>(<argument><expr><call><name><name>event</name><operator>.</operator><name>repo</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>event</name><operator>.</operator><name>repo</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>repoWithUserName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name>REPO_NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.ConvertUtilsTest.testOriginalRepoIsNotChanged()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><annotation>@<name>Test</name></annotation>
	<specifier>public</specifier> <type><name>void</name></type> <name>testNewRepoIsCreated</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
		<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.ConvertUtilsTest.testNewRepoIsCreated()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>Repository</name></type> <name>newRepo</name> <init>= <expr><call><name><name>ConvertUtils</name><operator>.</operator><name>eventRepoToRepo</name></name><argument_list>(<argument><expr><call><name><name>event</name><operator>.</operator><name>repo</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>newRepo</name><operator>.</operator><name>owner</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>login</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name>REPO_NAME_FIRST_PART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>newRepo</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name>REPO_NAME_SECOND_PART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.ConvertUtilsTest.testNewRepoIsCreated()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>
