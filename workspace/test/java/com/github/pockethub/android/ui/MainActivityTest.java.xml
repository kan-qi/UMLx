<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\test\java\com\github\pockethub\android\ui\MainActivityTest.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>equalTo</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>instanceOf</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>is</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertThat</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>anyObject</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>eq</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>mock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>times</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>verify</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>when</name></name>;</import>

<import>import <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>Account</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>AccountManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>MenuItem</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>AccountManagerShadow</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>gist</name><operator>.</operator><name>GistsPagerFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>issue</name><operator>.</operator><name>FilterListFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>issue</name><operator>.</operator><name>IssueDashboardPagerFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>user</name><operator>.</operator><name>HomePagerFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>User</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>runner</name><operator>.</operator><name>RunWith</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>ArgumentCaptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>Robolectric</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>RobolectricTestRunner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>RuntimeEnvironment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Config</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Implementation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Implements</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>shadows</name><operator>.</operator><name>ShadowAccountManager</name></name>;</import>

<class><annotation>@<name>RunWith</name><argument_list>(<argument><expr><name><name>RobolectricTestRunner</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<annotation>@<name>Config</name><argument_list>(<argument><expr><name>shadows</name> <operator>=</operator> <name><name>AccountManagerShadow</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>MainActivityTest</name> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><name>MainActivity</name></type> <name>mainActivity</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name><name>ArgumentCaptor</name><argument_list type="generic">&lt;<argument><name>Account</name></argument>&gt;</argument_list></name></type> <name>argumentCaptor</name></decl>;</decl_stmt>

    <function><annotation>@<name>Before</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.setup()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><name>mainActivity</name> <operator>=</operator> <call><name><name>Robolectric</name><operator>.</operator><name>buildActivity</name></name><argument_list>(<argument><expr><name><name>MainActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>create</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></type> <name>org</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>User</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>mainActivity</name><operator>.</operator><name>onOrgsLoaded</name></name><argument_list>(<argument><expr><name>org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>argumentCaptor</name> <operator>=</operator> <call><name><name>ArgumentCaptor</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>Account</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.setup()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>MenuItem</name></type> <name>getMockMenuItem</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>title</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.view.MenuItem com.github.pockethub.android.ui.MainActivityTest.getMockMenuItem(int,String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>MenuItem</name></type> <name>mockedMenuItem</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>MenuItem</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>mockedMenuItem</name><operator>.</operator><name>getItemId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>mockedMenuItem</name><operator>.</operator><name>getTitle</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.view.MenuItem com.github.pockethub.android.ui.MainActivityTest.getMockMenuItem(int,String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>mockedMenuItem</name></expr>;</return>}</block>
    }</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>testNavigationDrawerClickListenerPos1_ShouldReplaceHomePagerFragmentToContainer</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos1_ShouldReplaceHomePagerFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>mainActivity</name><operator>.</operator><name>onNavigationItemSelected</name></name><argument_list>(<argument><expr><call><name>getMockMenuItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>navigation_home</name></name></expr></argument>, <argument><expr><literal type="string">"HomeTitle"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>expectedString</name> <init>= <expr><call><name><name>RuntimeEnvironment</name><operator>.</operator><name>application</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>app_name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertFragmentInstanceAndSupportActionBarTitle</name><argument_list>(<argument><expr><name><name>HomePagerFragment</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>expectedString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos1_ShouldReplaceHomePagerFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>testNavigationDrawerClickListenerPos2_ShouldReplaceGistsPagerFragmentToContainer</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos2_ShouldReplaceGistsPagerFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>mainActivity</name><operator>.</operator><name>onNavigationItemSelected</name></name><argument_list>(<argument><expr><call><name>getMockMenuItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>navigation_gists</name></name></expr></argument>, <argument><expr><literal type="string">"GistTitle"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertFragmentInstanceAndSupportActionBarTitle</name><argument_list>(<argument><expr><name><name>GistsPagerFragment</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"GistTitle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos2_ShouldReplaceGistsPagerFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>testNavigationDrawerClickListenerPos3_ShouldReplaceIssueDashboardPagerFragmentToContainer</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos3_ShouldReplaceIssueDashboardPagerFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>mainActivity</name><operator>.</operator><name>onNavigationItemSelected</name></name><argument_list>(<argument><expr><call><name>getMockMenuItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>navigation_issue_dashboard</name></name></expr></argument>, <argument><expr><literal type="string">"IssueDashboard"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertFragmentInstanceAndSupportActionBarTitle</name><argument_list>(<argument><expr><name><name>IssueDashboardPagerFragment</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"IssueDashboard"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos3_ShouldReplaceIssueDashboardPagerFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>testNavigationDrawerClickListenerPos4_ShouldReplaceFilterListFragmentToContainer</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos4_ShouldReplaceFilterListFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>mainActivity</name><operator>.</operator><name>onNavigationItemSelected</name></name><argument_list>(<argument><expr><call><name>getMockMenuItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>navigation_bookmarks</name></name></expr></argument>, <argument><expr><literal type="string">"Bookmarks"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertFragmentInstanceAndSupportActionBarTitle</name><argument_list>(<argument><expr><name><name>FilterListFragment</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"Bookmarks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos4_ShouldReplaceFilterListFragmentToContainer()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>testNavigationDrawerClickListenerPos5_ShouldLogoutUser</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos5_ShouldLogoutUser()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>mainActivity</name><operator>.</operator><name>onNavigationItemSelected</name></name><argument_list>(<argument><expr><call><name>getMockMenuItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>navigation_log_out</name></name></expr></argument>, <argument><expr><literal type="string">"Logout"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <name><name>Build</name><operator>.</operator><name>VERSION_CODES</name><operator>.</operator><name>LOLLIPOP_MR1</name></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>verify</name><argument_list>(<argument><expr><name><name>AccountManagerShadow</name><operator>.</operator><name>mockManager</name></name></expr></argument>, <argument><expr><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>removeAccount</name><argument_list>(<argument><expr><call><name><name>argumentCaptor</name><operator>.</operator><name>capture</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>mainActivity</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><call><name>anyObject</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>anyObject</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><call><name>verify</name><argument_list>(<argument><expr><name><name>AccountManagerShadow</name><operator>.</operator><name>mockManager</name></name></expr></argument>, <argument><expr><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>removeAccount</name><argument_list>(<argument><expr><call><name><name>argumentCaptor</name><operator>.</operator><name>capture</name></name><argument_list>()</argument_list></call></expr></argument>,
                    <argument><expr><call><name>anyObject</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>anyObject</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>

        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Account</name></argument>&gt;</argument_list></name></type> <name>values</name> <init>= <expr><call><name><name>argumentCaptor</name><operator>.</operator><name>getAllValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>is</name><argument_list>(<argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name><name>AccountManagerShadow</name><operator>.</operator><name>accounts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>is</name><argument_list>(<argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name><name>AccountManagerShadow</name><operator>.</operator><name>accounts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.testNavigationDrawerClickListenerPos5_ShouldLogoutUser()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>assertFragmentInstanceAndSupportActionBarTitle</name><parameter_list>(<parameter><decl><type><name>Class</name></type> <name>expectedInstance</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expectedSupportActionBarTitle</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.assertFragmentInstanceAndSupportActionBarTitle(Class,String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><name><name>mainActivity</name><operator>.</operator><name>currentFragment</name></name></expr></argument>, <argument><expr><call><name>is</name><argument_list>(<argument><expr><call><name>instanceOf</name><argument_list>(<argument><expr><name>expectedInstance</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>mainActivity</name><operator>.</operator><name>getSupportActionBar</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTitle</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>is</name><argument_list>(<argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name>expectedSupportActionBarTitle</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.MainActivityTest.assertFragmentInstanceAndSupportActionBarTitle(Class,String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

}</block></class>
</unit>
