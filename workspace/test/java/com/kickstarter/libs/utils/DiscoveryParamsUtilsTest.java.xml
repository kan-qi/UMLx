<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\test\java\com\kickstarter\libs\utils\DiscoveryParamsUtilsTest.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>factories</name><operator>.</operator><name>CategoryFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>factories</name><operator>.</operator><name>LocationFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>RefTag</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>DiscoveryParams</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>

<class><specifier>public</specifier> class <name>DiscoveryParamsUtilsTest</name> <block>{

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testRefTag</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>category</name><argument_list>(<argument><expr><call><name><name>CategoryFactory</name><operator>.</operator><name>artCategory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>category</name></name><argument_list>()</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>category</name></name><argument_list>(<argument><expr><name><name>DiscoveryParams</name><operator>.</operator><name>Sort</name><operator>.</operator><name>POPULAR</name></name></expr></argument>)</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>category</name><argument_list>(<argument><expr><call><name><name>CategoryFactory</name><operator>.</operator><name>artCategory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>sort</name><argument_list>(<argument><expr><name><name>DiscoveryParams</name><operator>.</operator><name>Sort</name><operator>.</operator><name>POPULAR</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>city</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>location</name><argument_list>(<argument><expr><call><name><name>LocationFactory</name><operator>.</operator><name>germany</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>recommended</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>staffPicks</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>recommended</name></name><argument_list>(<argument><expr><name><name>DiscoveryParams</name><operator>.</operator><name>Sort</name><operator>.</operator><name>POPULAR</name></name></expr></argument>)</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>staffPicks</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>sort</name><argument_list>(<argument><expr><name><name>DiscoveryParams</name><operator>.</operator><name>Sort</name><operator>.</operator><name>POPULAR</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>social</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>social</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>search</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>term</name><argument_list>(<argument><expr><literal type="string">"art"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
      <argument><expr><call><name><name>RefTag</name><operator>.</operator><name>discovery</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>DiscoveryParamsUtils</name><operator>.</operator><name>refTag</name></name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
