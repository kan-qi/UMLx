<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\test\java\com\kickstarter\libs\utils\DateTimeUtilsTest.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>KSRobolectricTestCase</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSString</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>RelativeDateTimeOptions</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTimeZone</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Config</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>DateTimeUtilsTest</name> <super><extends>extends <name>KSRobolectricTestCase</name></extends></super> <block>{
  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testEstimatedDeliveryOn</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"December 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>estimatedDeliveryOn</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"dÃ©cembre 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>estimatedDeliveryOn</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2015å¹´12æ"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>estimatedDeliveryOn</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>JAPANESE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testFullDate</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Thursday, December 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>fullDate</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"jeudi 17 dÃ©cembre 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>fullDate</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testIsEpoch</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>isEpoch</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"1970-01-01T00:00:00Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>isEpoch</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"1969-12-31T19:00:00.000-05:00"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>isEpoch</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testLongDate</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"December 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>longDate</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"17 dÃ©cembre 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>longDate</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testMediumDate</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDate</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"17 dÃ©c. 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDate</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testMediumDateTime</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015 6:35:05 PM"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>DateTimeZone</name><operator>.</operator><name>UTC</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015 1:35:05 PM"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>DateTimeZone</name><operator>.</operator><name>forID</name></name><argument_list>(<argument><expr><literal type="string">"EST"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"17 dÃ©c. 2015 18:35:05"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>DateTimeZone</name><operator>.</operator><name>UTC</name></name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testRelative</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name> <init>= <expr><call><name>context</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>KSString</name></type> <name>ksString</name> <init>= <expr><call><name>ksString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DateTime</name></type> <name>dateTime</name> <init>= <expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>RelativeDateTimeOptions</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><call><name><name>RelativeDateTimeOptions</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"just now"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:10Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"right now"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:00Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2 minutes ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:37:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 2 minutes"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:33:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1 hour ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T19:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 1 hour"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T17:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"4 hours ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T22:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 4 hours"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T14:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"23 hours ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-18T17:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 23 hours"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-16T19:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"yesterday"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-18T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 1 day"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-16T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"10 days ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-27T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 10 days"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-07T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2016-01-27T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-10-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testRelative_withAbbreviated</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name> <init>= <expr><call><name>context</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>KSString</name></type> <name>ksString</name> <init>= <expr><call><name>ksString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DateTime</name></type> <name>dateTime</name> <init>= <expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>RelativeDateTimeOptions</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><call><name><name>RelativeDateTimeOptions</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>abbreviated</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"4 hrs ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T22:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 4 hrs"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T14:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testRelative_withAbsolute</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name> <init>= <expr><call><name>context</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>KSString</name></type> <name>ksString</name> <init>= <expr><call><name>ksString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DateTime</name></type> <name>dateTime</name> <init>= <expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>RelativeDateTimeOptions</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><call><name><name>RelativeDateTimeOptions</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>absolute</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"4 hours"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T22:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"4 hours"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T14:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testRelative_withThreshold</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name> <init>= <expr><call><name>context</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>KSString</name></type> <name>ksString</name> <init>= <expr><call><name>ksString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DateTime</name></type> <name>dateTime</name> <init>= <expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>threshold</name> <init>= <expr><literal type="number">864_000</literal></expr></init></decl>;</decl_stmt> <comment type="line">// Ten days</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>RelativeDateTimeOptions</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><call><name><name>RelativeDateTimeOptions</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>threshold</name><argument_list>(<argument><expr><name>threshold</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"9 days ago"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-26T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 9 days"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-08T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-28T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-06T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <annotation>@<name>Config</name><argument_list>(<argument><expr><name>qualifiers</name><operator>=</operator><literal type="string">"de"</literal></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testRelative_withLocale</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name> <init>= <expr><call><name>context</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>KSString</name></type> <name>ksString</name> <init>= <expr><call><name>ksString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DateTime</name></type> <name>dateTime</name> <init>= <expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>RelativeDateTimeOptions</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><call><name><name>RelativeDateTimeOptions</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"vor 2 Minuten"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:37:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in 2 Minuten"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ksString</name></expr></argument>, <argument><expr><name>dateTime</name></expr></argument>,
      <argument><expr><call><name><name>builder</name><operator>.</operator><name>relativeToDateTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:33:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testMediumDateShortTime</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015 6:35 PM"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDateShortTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>DateTimeZone</name><operator>.</operator><name>UTC</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Dec 17, 2015 1:35 PM"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDateShortTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>DateTimeZone</name><operator>.</operator><name>forID</name></name><argument_list>(<argument><expr><literal type="string">"EST"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"17 dÃ©c. 2015 18:35"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>mediumDateShortTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>DateTimeZone</name><operator>.</operator><name>UTC</name></name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testShortTime</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"6:35 PM"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>shortTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"18:35"</literal></expr></argument>, <argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>shortTime</name></name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2015-12-17T18:35:05Z"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRENCH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
