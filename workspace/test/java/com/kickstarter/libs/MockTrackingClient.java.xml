<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\test\java\com\kickstarter\libs\MockTrackingClient.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>Observable</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>subjects</name><operator>.</operator><name>PublishSubject</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>MockTrackingClient</name> <super><extends>extends <name>TrackingClientType</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>long</name></type> <name>DEFAULT_TIME</name> <init>= <expr><call><name><name>DateTime</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2018-11-02T18:42:05Z"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMillis</name><argument_list>()</argument_list></call> <operator>/</operator> <literal type="number">1000</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier> <type><name>User</name></type> <name>loggedInUser</name></decl>;</decl_stmt>


  <constructor><specifier>public</specifier> <name>MockTrackingClient</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>CurrentUserType</name></type> <name>currentUser</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>currentUser</name><operator>.</operator><name>observable</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>u</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><name><name>this</name><operator>.</operator><name>loggedInUser</name></name> <operator>=</operator> <name>u</name></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>Event</name> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>name</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl>;</decl_stmt>
    <constructor><name>Event</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name>name</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>properties</name></name> <operator>=</operator> <name>properties</name></expr>;</expr_stmt>
    }</block></constructor>
  }</block></class>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>PublishSubject</name><argument_list type="generic">&lt;<argument><name>Event</name></argument>&gt;</argument_list></name></type> <name>events</name> <init>= <expr><call><name><name>PublishSubject</name><operator>.</operator><name>create</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Observable</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>eventNames</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>events</name><operator>.</operator><name>map</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><name><name>e</name><operator>.</operator><name>name</name></name></expr></block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Observable</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>eventProperties</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>events</name><operator>.</operator><name>map</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><name><name>e</name><operator>.</operator><name>properties</name></name></expr></block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>track</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>eventName</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>additionalProperties</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>events</name><operator>.</operator><name>onNext</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Event</name><argument_list>(<argument><expr><name>eventName</name></expr></argument>, <argument><expr><call><name>combinedProperties</name><argument_list>(<argument><expr><name>additionalProperties</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>androidUUID</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"uuid"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>brand</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"Google"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>deviceFormat</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"phone"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>deviceOrientation</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"portrait"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>boolean</name></type> <name>isAndroidPayCapable</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>boolean</name></type> <name>isGooglePlayServicesAvailable</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>manufacturer</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"Google"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>model</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"Pixel 3"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>OSVersion</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"9"</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>Long</name></type> <name>time</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>DEFAULT_TIME</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>User</name></type> <name>loggedInUser</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>loggedInUser</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>String</name></type> <name>versionName</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"9.9.9"</literal></expr>;</return>
  }</block></function>
}</block></class>
</unit>
