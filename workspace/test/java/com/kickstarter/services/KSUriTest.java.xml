<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\test\java\com\kickstarter\services\KSUriTest.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>KSRobolectricTestCase</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>KSUriTest</name> <super><extends>extends <name>KSRobolectricTestCase</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>discoverCategoriesUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/discover/categories/art"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>discoverScopeUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.kickstarter.com/discover/ending-soon"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>discoverPlacesUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/discover/places/newest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>newGuestCheckoutUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/checkouts/1/guest/new"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>projectUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/projects/creator/project"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>projectPreviewUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/projects/creator/project?token=token"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>projectSurveyUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/projects/creator/project/surveys/survey-param"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>updatesUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/projects/creator/project/posts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>updateUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/projects/creator/project/posts/id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>userSurveyUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/users/user-param/surveys/survey-id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>webEndpoint</name> <init>= <expr><literal type="string">"https://www.ksr.com"</literal></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isDiscoverCategoriesPath</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isDiscoverCategoriesPath</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>discoverCategoriesUri</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isDiscoverCategoriesPath</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>discoverPlacesUri</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isDiscoverPlacesPath</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isDiscoverPlacesPath</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>discoverPlacesUri</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isDiscoverPlacesPath</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>discoverCategoriesUri</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isDiscoverScopePath</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isDiscoverScopePath</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>discoverScopeUri</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ending-soon"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isKickstarterUri</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>ksrUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/discover"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>uri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.hello-world.org/goodbye"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isKickstarterUri</name></name><argument_list>(<argument><expr><name>ksrUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isKickstarterUri</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isWebViewUri</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>ksrUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/project"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>uri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.hello-world.org/goodbye"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>ksrGraphUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/graph"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>graphUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.hello-world.org/graph"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>favIconUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/favicon.ico"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isWebViewUri</name></name><argument_list>(<argument><expr><name>ksrUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isWebViewUri</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isWebViewUri</name></name><argument_list>(<argument><expr><name>ksrGraphUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isWebViewUri</name></name><argument_list>(<argument><expr><name>graphUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isWebViewUri</name></name><argument_list>(<argument><expr><name>favIconUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isKSFavIcon</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>ksrUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/favicon.ico"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>uri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.hello-world.org/goodbye"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isKSFavIcon</name></name><argument_list>(<argument><expr><name>ksrUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isKSFavIcon</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isKSGraphQLUri</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>ksrGraphUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/graph"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>graphUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.hello-world.org/graph"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isKSGraphQLUri</name></name><argument_list>(<argument><expr><name>ksrGraphUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isKSGraphQLUri</name></name><argument_list>(<argument><expr><name>graphUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isModalUri</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>modalUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/project?modal=true"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isModalUri</name></name><argument_list>(<argument><expr><name>modalUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isModalUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isNewGuestCheckoutUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isNewGuestCheckoutUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>newGuestCheckoutUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isProjectSurveyUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectSurveyUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectSurveyUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectSurveyUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>userSurveyUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isProjectUpdateCommentsUri</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>updateCommentsUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"https://www.ksr.com/projects/creator/project/posts/id/comments"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUpdateCommentsUri</name></name><argument_list>(<argument><expr><name>updateCommentsUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUpdateCommentsUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updatesUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isProjectUpdateUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUpdateUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updateUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUpdateUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updatesUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isProjectUpdatesUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUpdatesUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updatesUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUpdatesUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updateUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isProjectUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectPreviewUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updateUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSUri_isProjectPreviewUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectPreviewUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectPreviewUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isProjectPreviewUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>testKSuri_isUserSurveyUri</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isUserSurveyUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>userSurveyUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>KSUri</name><operator>.</operator><name>isUserSurveyUri</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectSurveyUri</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>webEndpoint</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
