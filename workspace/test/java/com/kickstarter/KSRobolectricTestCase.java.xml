<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\test\java\com\kickstarter\KSRobolectricTestCase.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>Environment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSString</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>Koala</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>MockCurrentUser</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>MockTrackingClient</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockCurrentConfig</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>services</name><operator>.</operator><name>MockApiClient</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>services</name><operator>.</operator><name>MockApolloClient</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>services</name><operator>.</operator><name>MockStripe</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>services</name><operator>.</operator><name>MockWebClient</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTimeUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>runner</name><operator>.</operator><name>RunWith</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>RuntimeEnvironment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>robolectric</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Config</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>observers</name><operator>.</operator><name>TestSubscriber</name></name>;</import>

<class><annotation>@<name>RunWith</name><argument_list>(<argument><expr><name><name>KSRobolectricGradleTestRunner</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<annotation>@<name>Config</name><argument_list>(<argument><expr><name>constants</name> <operator>=</operator> <name><name>BuildConfig</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>shadows</name> <operator>=</operator> <name><name>ShadowAndroidXMultiDex</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>sdk</name> <operator>=</operator> <name><name>KSRobolectricGradleTestRunner</name><operator>.</operator><name>DEFAULT_SDK</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> <specifier>abstract</specifier> class <name>KSRobolectricTestCase</name> <super><extends>extends <name>TestCase</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><name>TestKSApplication</name></type> <name>application</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <type><name><name>TestSubscriber</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>koalaTest</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>Environment</name></type> <name>environment</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Before</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>MockTrackingClient</name></type> <name>testTrackingClient</name> <init>= <expr><operator>new</operator> <call><name>MockTrackingClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockCurrentUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>koalaTest</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>TestSubscriber</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>testTrackingClient</name><operator>.</operator><name>eventNames</name><operator>.</operator><name>subscribe</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>koalaTest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>setCurrentMillisFixed</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DateTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMillis</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>environment</name></name> <operator>=</operator> <call><name>application</name><argument_list>()</argument_list></call><operator>.</operator><call><name>component</name><argument_list>()</argument_list></call><operator>.</operator><call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>apiClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockApiClient</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>apolloClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockApolloClient</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currentConfig</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockCurrentConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>webClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockWebClient</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>stripe</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockStripe</name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>koala</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Koala</name><argument_list>(<argument><expr><name>testTrackingClient</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>protected</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>TestKSApplication</name></type> <name>application</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>application</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <return>return <expr><name><name>this</name><operator>.</operator><name>application</name></name></expr>;</return>
    }</block></then></if>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>application</name></name> <operator>=</operator> <operator>(</operator><name>TestKSApplication</name><operator>)</operator> <name><name>RuntimeEnvironment</name><operator>.</operator><name>application</name></name></expr>;</expr_stmt>
    <return>return <expr><name><name>this</name><operator>.</operator><name>application</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>After</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>setCurrentMillisSystem</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>protected</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Context</name></type> <name>context</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>application</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getApplicationContext</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>protected</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Environment</name></type> <name>environment</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>environment</name></name></expr>;</return>
  }</block></function>

  <function><specifier>protected</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>KSString</name></type> <name>ksString</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>KSString</name><argument_list>(<argument><expr><call><name>application</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPackageName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>application</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResources</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
