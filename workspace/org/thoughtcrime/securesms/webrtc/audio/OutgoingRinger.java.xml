<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\webrtc\audio\OutgoingRinger.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>webrtc</name><operator>.</operator><name>audio</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>media</name><operator>.</operator><name>AudioManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>media</name><operator>.</operator><name>MediaPlayer</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<class><specifier>public</specifier> class <name>OutgoingRinger</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>OutgoingRinger</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <enum><specifier>public</specifier> enum <name>Type</name> <block>{
    <decl><name>RINGING</name></decl>,
    <decl><name>BUSY</name></decl>
  }</block></enum>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>MediaPlayer</name></type> <name>mediaPlayer</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>OutgoingRinger</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name>        <operator>=</operator> <name>context</name></expr>;</expr_stmt>
  }</block></constructor>
  
  <function><specifier>public</specifier> <type><name>void</name></type> <name>start</name><parameter_list>(<parameter><decl><type><name>Type</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>soundId</name></decl>;</decl_stmt>

    <if>if      <condition>(<expr><name>type</name> <operator>==</operator> <name><name>Type</name><operator>.</operator><name>RINGING</name></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>soundId</name> <operator>=</operator> <name><name>R</name><operator>.</operator><name>raw</name><operator>.</operator><name>redphone_outring</name></name></expr>;</expr_stmt></block></then>
    <elseif>else <if>if <condition>(<expr><name>type</name> <operator>==</operator> <name><name>Type</name><operator>.</operator><name>BUSY</name></name></expr>)</condition><then>    <block type="pseudo"><expr_stmt><expr><name>soundId</name> <operator>=</operator> <name><name>R</name><operator>.</operator><name>raw</name><operator>.</operator><name>redphone_busy</name></name></expr>;</expr_stmt></block></then></if></elseif>
    <else>else <block type="pseudo"><throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Not a valid sound type"</literal></expr></argument>)</argument_list></call></expr>;</throw></block></else></if>

    <if>if<condition>( <expr><name>mediaPlayer</name> <operator>!=</operator> <literal type="null">null</literal></expr> )</condition><then> <block>{
      <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><name>mediaPlayer</name> <operator>=</operator> <operator>new</operator> <call><name>MediaPlayer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>setAudioStreamType</name></name><argument_list>(<argument><expr><name><name>AudioManager</name><operator>.</operator><name>STREAM_VOICE_CALL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>setLooping</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>packageName</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getPackageName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Uri</name></type>    <name>dataUri</name>     <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"android.resource://"</literal> <operator>+</operator> <name>packageName</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>soundId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <try>try <block>{
      <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>setDataSource</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>dataUri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>prepare</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> | <type><name>SecurityException</name></type> | <type><name>IllegalStateException</name></type> | <type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></catch></try>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>stop</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name>mediaPlayer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><return>return;</return></block></then></if>
    <expr_stmt><expr><call><name><name>mediaPlayer</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>mediaPlayer</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
