<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\contacts\ContactsCursorLoader.java"><comment type="block">/*
 * Copyright (C) 2013-2017 Open Whisper Systems
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>Manifest</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>Cursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>MatrixCursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>MergeCursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>provider</name><operator>.</operator><name>ContactsContract</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>content</name><operator>.</operator><name>CursorLoader</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>Address</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>DatabaseFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>GroupDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>RecipientDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>ThreadDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>model</name><operator>.</operator><name>ThreadRecord</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>permissions</name><operator>.</operator><name>Permissions</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>Recipient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>NumberUtil</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<comment type="block" format="javadoc">/**
 * CursorLoader that initializes a ContactsDatabase instance
 *
 * @author Jake McGinty
 */</comment>
<class><specifier>public</specifier> class <name>ContactsCursorLoader</name> <super><extends>extends <name>CursorLoader</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>ContactsCursorLoader</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <class><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>DisplayMode</name> <block>{
    <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>FLAG_PUSH</name>   <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>FLAG_SMS</name>    <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>FLAG_GROUPS</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>FLAG_ALL</name>    <init>= <expr><name>FLAG_PUSH</name> <operator>|</operator> <name>FLAG_SMS</name> <operator>|</operator> <name>FLAG_GROUPS</name></expr></init></decl>;</decl_stmt>
  }</block></class>

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>CONTACT_PROJECTION</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><name><name>ContactsDatabase</name><operator>.</operator><name>NAME_COLUMN</name></name></expr>,
                                                                  <expr><name><name>ContactsDatabase</name><operator>.</operator><name>NUMBER_COLUMN</name></name></expr>,
                                                                  <expr><name><name>ContactsDatabase</name><operator>.</operator><name>NUMBER_TYPE_COLUMN</name></name></expr>,
                                                                  <expr><name><name>ContactsDatabase</name><operator>.</operator><name>LABEL_COLUMN</name></name></expr>,
                                                                  <expr><name><name>ContactsDatabase</name><operator>.</operator><name>CONTACT_TYPE_COLUMN</name></name></expr>}</block></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>RECENT_CONVERSATION_MAX</name> <init>= <expr><literal type="number">25</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type>  <name>filter</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>     <name>mode</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type> <name>recents</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ContactsCursorLoader</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>recents</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>filter</name></name>       <operator>=</operator> <name>filter</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mode</name></name>         <operator>=</operator> <name>mode</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>recents</name></name>      <operator>=</operator> <name>recents</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>Cursor</name></type> <name>loadInBackground</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>cursorList</name> <init>= <expr><ternary><condition><expr><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><call><name>getUnfilteredResults</name><argument_list>()</argument_list></call></expr>
                                                        </then><else>: <expr><call><name>getFilteredResults</name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><call><name><name>cursorList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
      <return>return <expr><operator>new</operator> <call><name>MergeCursor</name><argument_list>(<argument><expr><call><name><name>cursorList</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Cursor</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>getUnfilteredResults</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>cursorList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>recents</name></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>Cursor</name></type> <name>recentConversations</name> <init>= <expr><call><name>getRecentConversationsCursor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if>if <condition>(<expr><call><name><name>recentConversations</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getRecentsHeaderCursor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>recentConversations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getContactsHeaderCursor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>
    }</block></then></if>
    <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name>getContactsCursors</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>cursorList</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>getFilteredResults</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>cursorList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><call><name>groupsEnabled</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>Cursor</name></type> <name>groups</name> <init>= <expr><call><name>getGroupsCursor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if>if <condition>(<expr><call><name><name>groups</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>contacts</name> <init>= <expr><call><name>getContactsCursors</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><operator>!</operator><call><name>isCursorListEmpty</name><argument_list>(<argument><expr><name>contacts</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
          <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getContactsHeaderCursor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>contacts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getGroupsHeaderCursor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>groups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
        <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name>getContactsCursors</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name>getContactsCursors</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>

    <if>if <condition>(<expr><call><name><name>NumberUtil</name><operator>.</operator><name>isValidSmsOrEmail</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getNewNumberCursor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <return>return <expr><name>cursorList</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getRecentsHeaderCursor</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>recentsHeader</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>recentsHeader</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name><block>{ <expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactsCursorLoader_recent_chats</name></name></expr></argument>)</argument_list></call></expr>,
                                       <expr><literal type="string">""</literal></expr>,
                                       <expr><name><name>ContactsContract</name><operator>.</operator><name>CommonDataKinds</name><operator>.</operator><name>Phone</name><operator>.</operator><name>TYPE_MOBILE</name></name></expr>,
                                       <expr><literal type="string">""</literal></expr>,
                                       <expr><name><name>ContactsDatabase</name><operator>.</operator><name>DIVIDER_TYPE</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>recentsHeader</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getContactsHeaderCursor</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>contactsHeader</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>contactsHeader</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{ <expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactsCursorLoader_contacts</name></name></expr></argument>)</argument_list></call></expr>,
                                         <expr><literal type="string">""</literal></expr>,
                                         <expr><name><name>ContactsContract</name><operator>.</operator><name>CommonDataKinds</name><operator>.</operator><name>Phone</name><operator>.</operator><name>TYPE_MOBILE</name></name></expr>,
                                         <expr><literal type="string">""</literal></expr>,
                                         <expr><name><name>ContactsDatabase</name><operator>.</operator><name>DIVIDER_TYPE</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>contactsHeader</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getGroupsHeaderCursor</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>groupHeader</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>groupHeader</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name><block>{ <expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactsCursorLoader_groups</name></name></expr></argument>)</argument_list></call></expr>,
                                     <expr><literal type="string">""</literal></expr>,
                                     <expr><name><name>ContactsContract</name><operator>.</operator><name>CommonDataKinds</name><operator>.</operator><name>Phone</name><operator>.</operator><name>TYPE_MOBILE</name></name></expr>,
                                     <expr><literal type="string">""</literal></expr>,
                                     <expr><name><name>ContactsDatabase</name><operator>.</operator><name>DIVIDER_TYPE</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>groupHeader</name></expr>;</return>
  }</block></function>


  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getRecentConversationsCursor</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>ThreadDatabase</name></type> <name>threadDatabase</name> <init>= <expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getThreadDatabase</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>recentConversations</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>, <argument><expr><name>RECENT_CONVERSATION_MAX</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>Cursor</name></type> <name>rawConversations</name> <init>= <expr><call><name><name>threadDatabase</name><operator>.</operator><name>getRecentConversationList</name></name><argument_list>(<argument><expr><name>RECENT_CONVERSATION_MAX</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
      <decl_stmt><decl><type><name><name>ThreadDatabase</name><operator>.</operator><name>Reader</name></name></type> <name>reader</name> <init>= <expr><call><name><name>threadDatabase</name><operator>.</operator><name>readerFor</name></name><argument_list>(<argument><expr><name>rawConversations</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>ThreadRecord</name></type> <name>threadRecord</name></decl>;</decl_stmt>
      <while>while <condition>(<expr><operator>(</operator><name>threadRecord</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getNext</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{
        <expr_stmt><expr><call><name><name>recentConversations</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{ <expr><call><name><name>threadRecord</name><operator>.</operator><name>getRecipient</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toShortString</name><argument_list>()</argument_list></call></expr>,
                                                  <expr><call><name><name>threadRecord</name><operator>.</operator><name>getRecipient</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAddress</name><argument_list>()</argument_list></call><operator>.</operator><call><name>serialize</name><argument_list>()</argument_list></call></expr>,
                                                  <expr><name><name>ContactsContract</name><operator>.</operator><name>CommonDataKinds</name><operator>.</operator><name>Phone</name><operator>.</operator><name>TYPE_MOBILE</name></name></expr>,
                                                  <expr><literal type="string">""</literal></expr>,
                                                  <expr><name><name>ContactsDatabase</name><operator>.</operator><name>RECENT_TYPE</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></while>
    }</block></try>
    <return>return <expr><name>recentConversations</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>getContactsCursors</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>ContactsDatabase</name></type> <name>contactsDatabase</name> <init>= <expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getContactsDatabase</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type>     <name>cursorList</name>       <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><operator>!</operator><call><name><name>Permissions</name><operator>.</operator><name>hasAny</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Manifest</name><operator>.</operator><name>permission</name><operator>.</operator><name>READ_CONTACTS</name></name></expr></argument>, <argument><expr><name><name>Manifest</name><operator>.</operator><name>permission</name><operator>.</operator><name>WRITE_CONTACTS</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><name>cursorList</name></expr>;</return>
    }</block></then></if>

    <if>if <condition>(<expr><call><name>pushEnabled</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>contactsDatabase</name><operator>.</operator><name>queryTextSecureContacts</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><call><name>pushEnabled</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>smsEnabled</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>contactsDatabase</name><operator>.</operator><name>querySystemContacts</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <elseif>else <if>if <condition>(<expr><call><name>smsEnabled</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>filterNonPushContacts</name><argument_list>(<argument><expr><call><name><name>contactsDatabase</name><operator>.</operator><name>querySystemContacts</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if></elseif></if>
    <return>return <expr><name>cursorList</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getGroupsCursor</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>groupContacts</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name><name>GroupDatabase</name><operator>.</operator><name>Reader</name></name></type> <name>reader</name> <init>= <expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getGroupDatabase</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getGroupsFilteredByTitle</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
      <decl_stmt><decl><type><name><name>GroupDatabase</name><operator>.</operator><name>GroupRecord</name></name></type> <name>groupRecord</name></decl>;</decl_stmt>
      <while>while <condition>(<expr><operator>(</operator><name>groupRecord</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getNext</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{
        <expr_stmt><expr><call><name><name>groupContacts</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{ <expr><call><name><name>groupRecord</name><operator>.</operator><name>getTitle</name></name><argument_list>()</argument_list></call></expr>,
                                            <expr><call><name><name>groupRecord</name><operator>.</operator><name>getEncodedId</name></name><argument_list>()</argument_list></call></expr>,
                                            <expr><name><name>ContactsContract</name><operator>.</operator><name>CommonDataKinds</name><operator>.</operator><name>Phone</name><operator>.</operator><name>TYPE_CUSTOM</name></name></expr>,
                                            <expr><literal type="string">""</literal></expr>,
                                            <expr><name><name>ContactsDatabase</name><operator>.</operator><name>NORMAL_TYPE</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></while>
    }</block></try>
    <return>return <expr><name>groupContacts</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getNewNumberCursor</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>newNumberCursor</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>newNumberCursor</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{ <expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>contact_selection_list__unknown_contact</name></name></expr></argument>)</argument_list></call></expr>,
                                          <expr><name>filter</name></expr>,
                                          <expr><name><name>ContactsContract</name><operator>.</operator><name>CommonDataKinds</name><operator>.</operator><name>Phone</name><operator>.</operator><name>TYPE_CUSTOM</name></name></expr>,
                                          <expr><literal type="string">"\u21e2"</literal></expr>,
                                          <expr><name><name>ContactsDatabase</name><operator>.</operator><name>NEW_TYPE</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>newNumberCursor</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Cursor</name></type> <name>filterNonPushContacts</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Cursor</name></type> <name>cursor</name></decl></parameter>)</parameter_list> <block>{
    <try>try <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>startMillis</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>MatrixCursor</name></type> <name>matrix</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><name>CONTACT_PROJECTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <while>while <condition>(<expr><call><name><name>cursor</name><operator>.</operator><name>moveToNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type>    <name>number</name>    <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>ContactsDatabase</name><operator>.</operator><name>NUMBER_COLUMN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Recipient</name></type> <name>recipient</name> <init>= <expr><call><name><name>Recipient</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Address</name><operator>.</operator><name>fromExternal</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>number</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if>if <condition>(<expr><call><name><name>recipient</name><operator>.</operator><name>resolve</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistered</name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>RecipientDatabase</name><operator>.</operator><name>RegisteredState</name><operator>.</operator><name>REGISTERED</name></name></expr>)</condition><then> <block>{
          <expr_stmt><expr><call><name><name>matrix</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name><block>{<expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>ContactsDatabase</name><operator>.</operator><name>NAME_COLUMN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                                     <expr><name>number</name></expr>,
                                     <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>ContactsDatabase</name><operator>.</operator><name>NUMBER_TYPE_COLUMN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                                     <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>ContactsDatabase</name><operator>.</operator><name>LABEL_COLUMN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                                     <expr><name><name>ContactsDatabase</name><operator>.</operator><name>NORMAL_TYPE</name></name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
      }</block></while>
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"filterNonPushContacts() -&gt; "</literal> <operator>+</operator> <operator>(</operator><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>startMillis</name><operator>)</operator> <operator>+</operator> <literal type="string">"ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>matrix</name></expr>;</return>
    }</block> <finally>finally <block>{
      <expr_stmt><expr><call><name><name>cursor</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></finally></try>
  }</block></function>

  <function><specifier>private</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>isCursorListEmpty</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>list</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>Cursor</name></type> <name>cursor</name> <range>: <expr><name>list</name></expr></range></decl></init>)</control> <block>{
      <expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name><name>cursor</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <return>return <expr><name>sum</name> <operator>==</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>pushEnabled</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>(</operator><name>mode</name> <operator>&amp;</operator> <name><name>DisplayMode</name><operator>.</operator><name>FLAG_PUSH</name></name><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>smsEnabled</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>(</operator><name>mode</name> <operator>&amp;</operator> <name><name>DisplayMode</name><operator>.</operator><name>FLAG_SMS</name></name><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>groupsEnabled</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>(</operator><name>mode</name> <operator>&amp;</operator> <name><name>DisplayMode</name><operator>.</operator><name>FLAG_GROUPS</name></name><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>
}</block></class>
</unit>
