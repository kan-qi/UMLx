<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\contacts\ContactIdentityManager.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>ContactIdentityManager</name> <block>{

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>ContactIdentityManager</name></type> <name>getInstance</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <name><name>Build</name><operator>.</operator><name>VERSION_CODES</name><operator>.</operator><name>ICE_CREAM_SANDWICH</name></name></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>ContactIdentityManagerICS</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return></block></then>
    <else>else
      <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>ContactIdentityManagerGingerbread</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return></block></else></if>
  }</block></function>

  <decl_stmt><decl><specifier>protected</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ContactIdentityManager</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getApplicationContext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Uri</name></type>        <name>getSelfIdentityUri</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type>    <name>isSelfIdentityAutoDetected</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>getSelfIdentityRawContactIds</name><parameter_list>()</parameter_list>;</function_decl>

}</block></class>
</unit>
