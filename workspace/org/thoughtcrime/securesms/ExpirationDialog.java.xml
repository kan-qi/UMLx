<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\ExpirationDialog.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>app</name><operator>.</operator><name>AlertDialog</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>LayoutInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>ExpirationUtil</name></name>;</import>

<import>import <name><name>cn</name><operator>.</operator><name>carbswang</name><operator>.</operator><name>android</name><operator>.</operator><name>numberpickerview</name><operator>.</operator><name>library</name><operator>.</operator><name>NumberPickerView</name></name>;</import>

<class><specifier>public</specifier> class <name>ExpirationDialog</name> <super><extends>extends <name>AlertDialog</name></extends></super> <block>{

  <constructor><specifier>protected</specifier> <name>ExpirationDialog</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>protected</specifier> <name>ExpirationDialog</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>theme</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>theme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>protected</specifier> <name>ExpirationDialog</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>cancelable</name></decl></parameter>, <parameter><decl><type><name>OnCancelListener</name></type> <name>cancelListener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>cancelable</name></expr></argument>, <argument><expr><name>cancelListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>show</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl></parameter>,
                          <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>currentExpiration</name></decl></parameter>,
                          <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>OnClickListener</name></type> <name>listener</name></decl></parameter>)</parameter_list>
  <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>View</name></type> <name>view</name> <init>= <expr><call><name>createNumberPickerView</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>currentExpiration</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>AlertDialog</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name><name>AlertDialog</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ExpirationDialog_disappearing_messages</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>setView</name></name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>setPositiveButton</name></name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ok</name></name></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>dialog</name></decl></parameter>, <parameter><decl><name>which</name></decl></parameter>)</parameter_list> -&gt; <block>{
      <decl_stmt><decl><type><name>int</name></type> <name>selected</name> <init>= <expr><operator>(</operator><operator>(</operator><name>NumberPickerView</name><operator>)</operator><call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>expiration_number_picker</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>listener</name><operator>.</operator><name>onClick</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getResources</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIntArray</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>array</name><operator>.</operator><name>expiration_times</name></name></expr></argument>)</argument_list></call><index>[<expr><name>selected</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>setNegativeButton</name></name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>cancel</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <specifier>static</specifier> <type><name>View</name></type> <name>createNumberPickerView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>currentExpiration</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>LayoutInflater</name></type>   <name>inflater</name>                <init>= <expr><call><name><name>LayoutInflater</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>View</name></type>             <name>view</name>                    <init>= <expr><call><name><name>inflater</name><operator>.</operator><name>inflate</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>expiration_dialog</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>NumberPickerView</name></type> <name>numberPickerView</name>        <init>= <expr><call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>expiration_number_picker</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>TextView</name></type>         <name>textView</name>                <init>= <expr><call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>expiration_details</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>int</name><index>[]</index></name></type>            <name>expirationTimes</name>         <init>= <expr><call><name><name>context</name><operator>.</operator><name>getResources</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIntArray</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>array</name><operator>.</operator><name>expiration_times</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type>         <name>expirationDisplayValues</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[<expr><name><name>expirationTimes</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>selectedIndex</name> <init>= <expr><name><name>expirationTimes</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>expirationTimes</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
      <expr_stmt><expr><name><name>expirationDisplayValues</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>ExpirationUtil</name><operator>.</operator><name>getExpirationDisplayValue</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>expirationTimes</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if>if <condition>(<expr><operator>(</operator><name>currentExpiration</name> <operator>&gt;=</operator> <name><name>expirationTimes</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator> <operator>&amp;&amp;</operator>
          <operator>(</operator><name>i</name> <operator>==</operator> <name><name>expirationTimes</name><operator>.</operator><name>length</name></name> <operator>-</operator><literal type="number">1</literal> <operator>||</operator> <name>currentExpiration</name> <operator>&lt;</operator> <name><name>expirationTimes</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr>)</condition><then> <block>{
        <expr_stmt><expr><name>selectedIndex</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
      }</block></then></if>
    }</block></for>

    <expr_stmt><expr><call><name><name>numberPickerView</name><operator>.</operator><name>setDisplayedValues</name></name><argument_list>(<argument><expr><name>expirationDisplayValues</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numberPickerView</name><operator>.</operator><name>setMinValue</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numberPickerView</name><operator>.</operator><name>setMaxValue</name></name><argument_list>(<argument><expr><name><name>expirationTimes</name><operator>.</operator><name>length</name></name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>NumberPickerView</name><operator>.</operator><name>OnValueChangeListener</name></name></type> <name>listener</name> <init>= <expr><lambda><parameter_list>(<parameter><decl><name>picker</name></decl></parameter>, <parameter><decl><name>oldVal</name></decl></parameter>, <parameter><decl><name>newVal</name></decl></parameter>)</parameter_list> -&gt; <block>{
      <if>if <condition>(<expr><name>newVal</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>textView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ExpirationDialog_your_messages_will_not_expire</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
        <expr_stmt><expr><call><name><name>textView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ExpirationDialog_your_messages_will_disappear_s_after_they_have_been_seen</name></name></expr></argument>, <argument><expr><call><name><name>picker</name><operator>.</operator><name>getDisplayedValues</name></name><argument_list>()</argument_list></call><index>[<expr><name>newVal</name></expr>]</index></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>
    }</block></lambda></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>numberPickerView</name><operator>.</operator><name>setOnValueChangedListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numberPickerView</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><name>selectedIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>listener</name><operator>.</operator><name>onValueChange</name></name><argument_list>(<argument><expr><name>numberPickerView</name></expr></argument>, <argument><expr><name>selectedIndex</name></expr></argument>, <argument><expr><name>selectedIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>view</name></expr>;</return>
  }</block></function>

  <interface><specifier>public</specifier> interface <name>OnClickListener</name> <block>{
    <function_decl><specifier>public</specifier> <type><name>void</name></type> <name>onClick</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>expirationTime</name></decl></parameter>)</parameter_list>;</function_decl>
  }</block></interface>

}</block></class>
</unit>
