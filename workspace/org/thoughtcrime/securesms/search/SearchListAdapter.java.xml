<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\search\SearchListAdapter.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>search</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>RecyclerView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>LayoutInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewGroup</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>ConversationListItem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>model</name><operator>.</operator><name>ThreadRecord</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>GlideRequests</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>Recipient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>search</name><operator>.</operator><name>model</name><operator>.</operator><name>MessageResult</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>search</name><operator>.</operator><name>model</name><operator>.</operator><name>SearchResult</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>StickyHeaderDecoration</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>

<class>class <name>SearchListAdapter</name> <super><extends>extends    <name><name>RecyclerView</name><operator>.</operator><name><name>Adapter</name><argument_list type="generic">&lt;<argument><name><name>SearchListAdapter</name><operator>.</operator><name>SearchResultViewHolder</name></name></argument>&gt;</argument_list></name></name></extends>
                        <implements>implements <name><name>StickyHeaderDecoration</name><operator>.</operator><name><name>StickyHeaderAdapter</name><argument_list type="generic">&lt;<argument><name><name>SearchListAdapter</name><operator>.</operator><name>HeaderViewHolder</name></name></argument>&gt;</argument_list></name></name></implements></super>
<block>{
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>TYPE_CONVERSATIONS</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>TYPE_CONTACTS</name>      <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>TYPE_MESSAGES</name>      <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>GlideRequests</name></type> <name>glideRequests</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>EventListener</name></type> <name>eventListener</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Locale</name></type>        <name>locale</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>NonNull</name></annotation>
  <specifier>private</specifier> <type><name>SearchResult</name></type> <name>searchResult</name> <init>= <expr><name><name>SearchResult</name><operator>.</operator><name>EMPTY</name></name></expr></init></decl>;</decl_stmt>

  <constructor><name>SearchListAdapter</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>,
                    <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>EventListener</name></type> <name>eventListener</name></decl></parameter>,
                    <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Locale</name></type>        <name>locale</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>glideRequests</name></name> <operator>=</operator> <name>glideRequests</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>eventListener</name></name> <operator>=</operator> <name>eventListener</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>locale</name></name>        <operator>=</operator> <name>locale</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>NonNull</name></annotation>
  <annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>SearchResultViewHolder</name></type> <name>onCreateViewHolder</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>ViewGroup</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>viewType</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>SearchResultViewHolder</name><argument_list>(<argument><expr><call><name><name>LayoutInflater</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                                                    <operator>.</operator><call><name>inflate</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>conversation_list_item_view</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onBindViewHolder</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>SearchResultViewHolder</name></type> <name>holder</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>ThreadRecord</name></type> <name>conversationResult</name> <init>= <expr><call><name>getConversationResult</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>conversationResult</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>holder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>conversationResult</name></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>eventListener</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>, <argument><expr><call><name><name>searchResult</name><operator>.</operator><name>getQuery</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    }</block></then></if>

    <decl_stmt><decl><type><name>Recipient</name></type> <name>contactResult</name> <init>= <expr><call><name>getContactResult</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>contactResult</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>holder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>contactResult</name></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>eventListener</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>, <argument><expr><call><name><name>searchResult</name><operator>.</operator><name>getQuery</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    }</block></then></if>

    <decl_stmt><decl><type><name>MessageResult</name></type> <name>messageResult</name> <init>= <expr><call><name>getMessageResult</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>messageResult</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>holder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>messageResult</name></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>eventListener</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>, <argument><expr><call><name><name>searchResult</name><operator>.</operator><name>getQuery</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onViewRecycled</name><parameter_list>(<parameter><decl><type><name>SearchResultViewHolder</name></type> <name>holder</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>holder</name><operator>.</operator><name>recycle</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>int</name></type> <name>getItemCount</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>searchResult</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>long</name></type> <name>getHeaderId</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name>getConversationResult</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <return>return <expr><name>TYPE_CONVERSATIONS</name></expr>;</return>
    }</block></then> <elseif>else <if>if <condition>(<expr><call><name>getContactResult</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <return>return <expr><name>TYPE_CONTACTS</name></expr>;</return>
    }</block></then></if></elseif> <else>else <block>{
      <return>return <expr><name>TYPE_MESSAGES</name></expr>;</return>
    }</block></else></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>HeaderViewHolder</name></type> <name>onCreateHeaderViewHolder</name><parameter_list>(<parameter><decl><type><name>ViewGroup</name></type> <name>parent</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>HeaderViewHolder</name><argument_list>(<argument><expr><call><name><name>LayoutInflater</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                                              <operator>.</operator><call><name>inflate</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>contact_selection_list_divider</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onBindHeaderViewHolder</name><parameter_list>(<parameter><decl><type><name>HeaderViewHolder</name></type> <name>viewHolder</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>viewHolder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name>getHeaderId</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><type><name>void</name></type> <name>updateResults</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>SearchResult</name></type> <name>result</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>searchResult</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>notifyDataSetChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Nullable</name></annotation>
  <specifier>private</specifier> <type><name>ThreadRecord</name></type> <name>getConversationResult</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>position</name> <operator>&lt;</operator> <call><name><name>searchResult</name><operator>.</operator><name>getConversations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><call><name><name>searchResult</name><operator>.</operator><name>getConversations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Nullable</name></annotation>
  <specifier>private</specifier> <type><name>Recipient</name></type> <name>getContactResult</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>position</name> <operator>&gt;=</operator> <call><name>getFirstContactIndex</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>position</name> <operator>&lt;</operator> <call><name>getFirstMessageIndex</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><call><name><name>searchResult</name><operator>.</operator><name>getContacts</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>position</name> <operator>-</operator> <call><name>getFirstContactIndex</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Nullable</name></annotation>
  <specifier>private</specifier> <type><name>MessageResult</name></type> <name>getMessageResult</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>position</name> <operator>&gt;=</operator> <call><name>getFirstMessageIndex</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>position</name> <operator>&lt;</operator> <call><name><name>searchResult</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><call><name><name>searchResult</name><operator>.</operator><name>getMessages</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>position</name> <operator>-</operator> <call><name>getFirstMessageIndex</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>int</name></type> <name>getFirstContactIndex</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>searchResult</name><operator>.</operator><name>getConversations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>int</name></type> <name>getFirstMessageIndex</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>getFirstContactIndex</name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>searchResult</name><operator>.</operator><name>getContacts</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <interface><specifier>public</specifier> interface <name>EventListener</name> <block>{
    <function_decl><type><name>void</name></type> <name>onConversationClicked</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>ThreadRecord</name></type> <name>threadRecord</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>onContactClicked</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Recipient</name></type> <name>contact</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>onMessageClicked</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>MessageResult</name></type> <name>message</name></decl></parameter>)</parameter_list>;</function_decl>
  }</block></interface>

  <class><specifier>static</specifier> class <name>SearchResultViewHolder</name> <super><extends>extends <name><name>RecyclerView</name><operator>.</operator><name>ViewHolder</name></name></extends></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>ConversationListItem</name></type> <name>root</name></decl>;</decl_stmt>

    <constructor><name>SearchResultViewHolder</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>itemView</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>itemView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>root</name> <operator>=</operator> <operator>(</operator><name>ConversationListItem</name><operator>)</operator> <name>itemView</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><name>void</name></type> <name>bind</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>ThreadRecord</name></type>  <name>conversationResult</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>EventListener</name></type> <name>eventListener</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>Locale</name></type>        <name>locale</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type>        <name>query</name></decl></parameter>)</parameter_list>
    <block>{
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>conversationResult</name></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>view</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>eventListener</name><operator>.</operator><name>onConversationClicked</name></name><argument_list>(<argument><expr><name>conversationResult</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>bind</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>Recipient</name></type>     <name>contactResult</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>EventListener</name></type> <name>eventListener</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>Locale</name></type>        <name>locale</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type>        <name>query</name></decl></parameter>)</parameter_list>
    <block>{
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>contactResult</name></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>view</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>eventListener</name><operator>.</operator><name>onContactClicked</name></name><argument_list>(<argument><expr><name>contactResult</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>bind</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>MessageResult</name></type> <name>messageResult</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>EventListener</name></type> <name>eventListener</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>Locale</name></type>        <name>locale</name></decl></parameter>,
              <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type>        <name>query</name></decl></parameter>)</parameter_list>
    <block>{
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>messageResult</name></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>view</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>eventListener</name><operator>.</operator><name>onMessageClicked</name></name><argument_list>(<argument><expr><name>messageResult</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>recycle</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>unbind</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
  }</block></class>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>HeaderViewHolder</name> <super><extends>extends <name><name>RecyclerView</name><operator>.</operator><name>ViewHolder</name></name></extends></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><name>TextView</name></type> <name>titleView</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>HeaderViewHolder</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>itemView</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>itemView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>titleView</name> <operator>=</operator> <call><name><name>itemView</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>label</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><specifier>public</specifier> <type><name>void</name></type> <name>bind</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>headerType</name></decl></parameter>)</parameter_list> <block>{
      <switch>switch <condition>(<expr><name>headerType</name></expr>)</condition> <block>{
        <case>case <expr><name>TYPE_CONVERSATIONS</name></expr>:</case>
          <expr_stmt><expr><call><name><name>titleView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>SearchFragment_header_conversations</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>TYPE_CONTACTS</name></expr>:</case>
          <expr_stmt><expr><call><name><name>titleView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>SearchFragment_header_contacts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>TYPE_MESSAGES</name></expr>:</case>
          <expr_stmt><expr><call><name><name>titleView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>SearchFragment_header_messages</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
      }</block></switch>
    }</block></function>
  }</block></class>
}</block></class>
</unit>
