<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\database\model\DisplayRecord.java"><comment type="block">/*
 * Copyright (C) 2012 Moxie Marlinspike
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>model</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>SpannableString</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>MmsSmsColumns</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>SmsDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>Recipient</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The base class for all message record models.  Encapsulates basic data
 * shared between ThreadRecord and MessageRecord.
 *
 * @author Moxie Marlinspike
 *
 */</comment>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>DisplayRecord</name> <block>{

  <decl_stmt><decl><specifier>protected</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <type><specifier>final</specifier> <name>long</name></type> <name>type</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Recipient</name></type>  <name>recipient</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>       <name>dateSent</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>       <name>dateReceived</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>       <name>threadId</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type>     <name>body</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>        <name>deliveryStatus</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>        <name>deliveryReceiptCount</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>        <name>readReceiptCount</name></decl>;</decl_stmt>

  <constructor><name>DisplayRecord</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><name>Recipient</name></type> <name>recipient</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>dateSent</name></decl></parameter>,
                <parameter><decl><type><name>long</name></type> <name>dateReceived</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>threadId</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deliveryStatus</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deliveryReceiptCount</name></decl></parameter>,
                <parameter><decl><type><name>long</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>readReceiptCount</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name>              <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getApplicationContext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>threadId</name></name>             <operator>=</operator> <name>threadId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>recipient</name></name>            <operator>=</operator> <name>recipient</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dateSent</name></name>             <operator>=</operator> <name>dateSent</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dateReceived</name></name>         <operator>=</operator> <name>dateReceived</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>type</name></name>                 <operator>=</operator> <name>type</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>body</name></name>                 <operator>=</operator> <name>body</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>deliveryReceiptCount</name></name> <operator>=</operator> <name>deliveryReceiptCount</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>readReceiptCount</name></name>     <operator>=</operator> <name>readReceiptCount</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>deliveryStatus</name></name>       <operator>=</operator> <name>deliveryStatus</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>String</name></type> <name>getBody</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><ternary><condition><expr><name>body</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">""</literal></expr> </then><else>: <expr><name>body</name></expr></else></ternary></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isFailed</name><parameter_list>()</parameter_list> <block>{
    <return>return
        <expr><call><name><name>MmsSmsColumns</name><operator>.</operator><name>Types</name><operator>.</operator><name>isFailedMessageType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call>            <operator>||</operator>
        <call><name><name>MmsSmsColumns</name><operator>.</operator><name>Types</name><operator>.</operator><name>isPendingSecureSmsFallbackType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call> <operator>||</operator>
        <name>deliveryStatus</name> <operator>&gt;=</operator> <name><name>SmsDatabase</name><operator>.</operator><name>Status</name><operator>.</operator><name>STATUS_FAILED</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isPending</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>MmsSmsColumns</name><operator>.</operator><name>Types</name><operator>.</operator><name>isPendingMessageType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
           <operator>!</operator><call><name><name>MmsSmsColumns</name><operator>.</operator><name>Types</name><operator>.</operator><name>isIdentityVerified</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call>  <operator>&amp;&amp;</operator>
           <operator>!</operator><call><name><name>MmsSmsColumns</name><operator>.</operator><name>Types</name><operator>.</operator><name>isIdentityDefault</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isOutgoing</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>MmsSmsColumns</name><operator>.</operator><name>Types</name><operator>.</operator><name>isOutgoingMessageType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>SpannableString</name></type> <name>getDisplayBody</name><parameter_list>()</parameter_list>;</function_decl>

  <function><specifier>public</specifier> <type><name>Recipient</name></type> <name>getRecipient</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>recipient</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getDateSent</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>dateSent</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getDateReceived</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>dateReceived</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getThreadId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>threadId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isKeyExchange</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isKeyExchangeType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isEndSession</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isEndSessionType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupUpdate</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isGroupUpdate</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupQuit</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isGroupQuit</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupAction</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>isGroupUpdate</name><argument_list>()</argument_list></call> <operator>||</operator> <call><name>isGroupQuit</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isExpirationTimerUpdate</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isExpirationTimerUpdate</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isCallLog</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isCallLog</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isJoined</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isJoinedType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isIncomingCall</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isIncomingCall</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isOutgoingCall</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isOutgoingCall</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isMissedCall</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isMissedCall</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isVerificationStatusChange</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isIdentityDefault</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isIdentityVerified</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>int</name></type> <name>getDeliveryStatus</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>deliveryStatus</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>int</name></type> <name>getDeliveryReceiptCount</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>deliveryReceiptCount</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>int</name></type> <name>getReadReceiptCount</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>readReceiptCount</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isDelivered</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>(</operator><name>deliveryStatus</name> <operator>&gt;=</operator> <name><name>SmsDatabase</name><operator>.</operator><name>Status</name><operator>.</operator><name>STATUS_COMPLETE</name></name> <operator>&amp;&amp;</operator>
            <name>deliveryStatus</name> <operator>&lt;</operator> <name><name>SmsDatabase</name><operator>.</operator><name>Status</name><operator>.</operator><name>STATUS_PENDING</name></name><operator>)</operator> <operator>||</operator> <name>deliveryReceiptCount</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isRemoteRead</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>readReceiptCount</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isPendingInsecureSmsFallback</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>SmsDatabase</name><operator>.</operator><name>Types</name><operator>.</operator><name>isPendingInsecureSmsFallbackType</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
