<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\database\model\NotificationMmsMessageRecord.java"><comment type="block">/*
 * Copyright (C) 2012 Moxie Marlinspike
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>model</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>SpannableString</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>MmsDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>SmsDatabase</name><operator>.</operator><name>Status</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>documents</name><operator>.</operator><name>IdentityKeyMismatch</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>documents</name><operator>.</operator><name>NetworkFailure</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>SlideDeck</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>Recipient</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Represents the message record model for MMS messages that are
 * notifications (ie: they're pointers to undownloaded media).
 *
 * @author Moxie Marlinspike
 *
 */</comment>

<class><specifier>public</specifier> class <name>NotificationMmsMessageRecord</name> <super><extends>extends <name>MmsMessageRecord</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>contentLocation</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>   <name>messageSize</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>   <name>expiry</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>    <name>status</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>transactionId</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>NotificationMmsMessageRecord</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>Recipient</name></type> <name>conversationRecipient</name></decl></parameter>,
                                      <parameter><decl><type><name>Recipient</name></type> <name>individualRecipient</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>recipientDeviceId</name></decl></parameter>,
                                      <parameter><decl><type><name>long</name></type> <name>dateSent</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>dateReceived</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deliveryReceiptCount</name></decl></parameter>,
                                      <parameter><decl><type><name>long</name></type> <name>threadId</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>contentLocation</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>messageSize</name></decl></parameter>,
                                      <parameter><decl><type><name>long</name></type> <name>expiry</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>transactionId</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>mailbox</name></decl></parameter>,
                                      <parameter><decl><type><name>int</name></type> <name>subscriptionId</name></decl></parameter>, <parameter><decl><type><name>SlideDeck</name></type> <name>slideDeck</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>readReceiptCount</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>conversationRecipient</name></expr></argument>, <argument><expr><name>individualRecipient</name></expr></argument>, <argument><expr><name>recipientDeviceId</name></expr></argument>,
          <argument><expr><name>dateSent</name></expr></argument>, <argument><expr><name>dateReceived</name></expr></argument>, <argument><expr><name>threadId</name></expr></argument>, <argument><expr><name><name>Status</name><operator>.</operator><name>STATUS_NONE</name></name></expr></argument>, <argument><expr><name>deliveryReceiptCount</name></expr></argument>, <argument><expr><name>mailbox</name></expr></argument>,
          <argument><expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>IdentityKeyMismatch</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>NetworkFailure</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>subscriptionId</name></expr></argument>,
          <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>slideDeck</name></expr></argument>, <argument><expr><name>readReceiptCount</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>contentLocation</name></name> <operator>=</operator> <name>contentLocation</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageSize</name></name>     <operator>=</operator> <name>messageSize</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expiry</name></name>          <operator>=</operator> <name>expiry</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>status</name></name>          <operator>=</operator> <name>status</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>transactionId</name></name>   <operator>=</operator> <name>transactionId</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name><name>byte</name><index>[]</index></name></type> <name>getTransactionId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>transactionId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>int</name></type> <name>getStatus</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>status</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name><name>byte</name><index>[]</index></name></type> <name>getContentLocation</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>contentLocation</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getMessageSize</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>(</operator><name>messageSize</name> <operator>+</operator> <literal type="number">1023</literal><operator>)</operator> <operator>/</operator> <literal type="number">1024</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getExpiration</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>expiry</name> <operator>*</operator> <literal type="number">1000</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isOutgoing</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isSecure</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isPending</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isMmsNotification</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isMediaPending</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>SpannableString</name></type> <name>getDisplayBody</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name>status</name> <operator>==</operator> <name><name>MmsDatabase</name><operator>.</operator><name>Status</name><operator>.</operator><name>DOWNLOAD_INITIALIZED</name></name></expr>)</condition><then> <block>{
      <return>return <expr><call><name>emphasisAdded</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>NotificationMmsMessageRecord_multimedia_message</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then> <elseif>else <if>if <condition>(<expr><name>status</name> <operator>==</operator> <name><name>MmsDatabase</name><operator>.</operator><name>Status</name><operator>.</operator><name>DOWNLOAD_CONNECTING</name></name></expr>)</condition><then> <block>{
      <return>return <expr><call><name>emphasisAdded</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>NotificationMmsMessageRecord_downloading_mms_message</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if></elseif> <else>else <block>{
      <return>return <expr><call><name>emphasisAdded</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>NotificationMmsMessageRecord_error_downloading_mms_message</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></else></if>
  }</block></function>
}</block></class>
</unit>
