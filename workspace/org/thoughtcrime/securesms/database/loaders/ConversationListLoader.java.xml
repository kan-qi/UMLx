<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\database\loaders\ConversationListLoader.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>loaders</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>Cursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>MatrixCursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>MergeCursor</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>ContactAccessor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>Address</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>DatabaseFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>ThreadDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>AbstractCursorLoader</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>ConversationListLoader</name> <super><extends>extends <name>AbstractCursorLoader</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>filter</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type> <name>archived</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ConversationListLoader</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>archived</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>filter</name></name>   <operator>=</operator> <name>filter</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>archived</name></name> <operator>=</operator> <name>archived</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>Cursor</name></type> <name>getCursor</name><parameter_list>()</parameter_list> <block>{
    <if>if      <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>filter</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><call><name>getFilteredConversationList</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</return></block></then>
    <elseif>else <if>if <condition>(<expr><operator>!</operator><name>archived</name></expr>)</condition><then>                                     <block type="pseudo"><return>return <expr><call><name>getUnarchivedConversationList</name><argument_list>()</argument_list></call></expr>;</return></block></then></if></elseif>
    <else>else                                                    <block type="pseudo"><return>return <expr><call><name>getArchivedConversationList</name><argument_list>()</argument_list></call></expr>;</return></block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getUnarchivedConversationList</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>cursorList</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getThreadDatabase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConversationList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>archivedCount</name> <init>= <expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getThreadDatabase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call>
                                       <operator>.</operator><call><name>getArchivedConversationListCount</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>archivedCount</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>MatrixCursor</name></type> <name>switchToArchiveCursor</name> <init>= <expr><operator>new</operator> <call><name>MatrixCursor</name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{
          <expr><name><name>ThreadDatabase</name><operator>.</operator><name>ID</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>DATE</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>MESSAGE_COUNT</name></name></expr>,
          <expr><name><name>ThreadDatabase</name><operator>.</operator><name>ADDRESS</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>SNIPPET</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>READ</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>UNREAD_COUNT</name></name></expr>,
          <expr><name><name>ThreadDatabase</name><operator>.</operator><name>TYPE</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>SNIPPET_TYPE</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>SNIPPET_URI</name></name></expr>,
          <expr><name><name>ThreadDatabase</name><operator>.</operator><name>ARCHIVED</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>STATUS</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>DELIVERY_RECEIPT_COUNT</name></name></expr>,
          <expr><name><name>ThreadDatabase</name><operator>.</operator><name>EXPIRES_IN</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>LAST_SEEN</name></name></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>READ_RECEIPT_COUNT</name></name></expr>}</block></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


      <if>if <condition>(<expr><call><name><name>cursorList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getCount</name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>switchToArchiveCursor</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{<expr><operator>-</operator><literal type="number">1L</literal></expr>, <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>, <expr><name>archivedCount</name></expr>,
                                                   <expr><literal type="string">"-1"</literal></expr>, <expr><literal type="null">null</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>DistributionTypes</name><operator>.</operator><name>INBOX_ZERO</name></name></expr>,
                                                   <expr><literal type="number">0</literal></expr>, <expr><literal type="null">null</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <expr_stmt><expr><call><name><name>switchToArchiveCursor</name><operator>.</operator><name>addRow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{<expr><operator>-</operator><literal type="number">1L</literal></expr>, <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>, <expr><name>archivedCount</name></expr>,
                                                 <expr><literal type="string">"-1"</literal></expr>, <expr><literal type="null">null</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name><name>ThreadDatabase</name><operator>.</operator><name>DistributionTypes</name><operator>.</operator><name>ARCHIVE</name></name></expr>,
                                                 <expr><literal type="number">0</literal></expr>, <expr><literal type="null">null</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>cursorList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>switchToArchiveCursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <return>return <expr><operator>new</operator> <call><name>MergeCursor</name><argument_list>(<argument><expr><call><name><name>cursorList</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Cursor</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getArchivedConversationList</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getThreadDatabase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getArchivedConversationList</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>Cursor</name></type> <name>getFilteredConversationList</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>numbers</name> <init>= <expr><call><name><name>ContactAccessor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumbersForThreadSearchFilter</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Address</name></argument>&gt;</argument_list></name></type> <name>addresses</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name>String</name></type> <name>number</name> <range>: <expr><name>numbers</name></expr></range></decl></init>)</control> <block>{
      <expr_stmt><expr><call><name><name>addresses</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Address</name><operator>.</operator><name>fromExternal</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>number</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>

    <return>return <expr><call><name><name>DatabaseFactory</name><operator>.</operator><name>getThreadDatabase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getFilteredConversationList</name><argument_list>(<argument><expr><name>addresses</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
