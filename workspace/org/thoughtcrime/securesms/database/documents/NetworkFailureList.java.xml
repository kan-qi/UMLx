<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\database\documents\NetworkFailureList.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>documents</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonIgnore</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonProperty</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>NetworkFailureList</name> <super><implements>implements <name><name>Document</name><argument_list type="generic">&lt;<argument><name>NetworkFailure</name></argument>&gt;</argument_list></name></implements></super> <block>{

  <decl_stmt><decl><annotation>@<name>JsonProperty</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"l"</literal></expr></argument>)</argument_list></annotation>
  <specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>NetworkFailure</name></argument>&gt;</argument_list></name></type> <name>failures</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>NetworkFailureList</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>failures</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>NetworkFailureList</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>NetworkFailure</name></argument>&gt;</argument_list></name></type> <name>failures</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>failures</name></name> <operator>=</operator> <name>failures</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>int</name></type> <name>size</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name>failures</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="number">0</literal></expr>;</return></block></then>
    <else>else                  <block type="pseudo"><return>return <expr><call><name><name>failures</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</return></block></else></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>JsonIgnore</name></annotation>
  <specifier>public</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>NetworkFailure</name></argument>&gt;</argument_list></name></type> <name>getList</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>failures</name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
