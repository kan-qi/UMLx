<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\database\helpers\SQLCipherOpenHelper.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>helpers</name></name>;</package>


<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ContentValues</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>Cursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>SystemClock</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>Address</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>net</name><operator>.</operator><name>sqlcipher</name><operator>.</operator><name>database</name><operator>.</operator><name>SQLiteDatabase</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sqlcipher</name><operator>.</operator><name>database</name><operator>.</operator><name>SQLiteDatabaseHook</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sqlcipher</name><operator>.</operator><name>database</name><operator>.</operator><name>SQLiteOpenHelper</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>ApplicationContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>crypto</name><operator>.</operator><name>DatabaseSecret</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>crypto</name><operator>.</operator><name>MasterSecret</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>AttachmentDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>DraftDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>GroupDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>GroupReceiptDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>IdentityDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>MmsDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>OneTimePreKeyDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>PushDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>RecipientDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>SearchDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>SessionDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>SignedPreKeyDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>SmsDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>ThreadDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RefreshPreKeysJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>notifications</name><operator>.</operator><name>NotificationChannels</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>service</name><operator>.</operator><name>KeyCachingService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>TextSecurePreferences</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>

<class><specifier>public</specifier> class <name>SQLCipherOpenHelper</name> <super><extends>extends <name>SQLiteOpenHelper</name></extends></super> <block>{

  <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
  <specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>SQLCipherOpenHelper</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>RECIPIENT_CALL_RINGTONE_VERSION</name>  <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>MIGRATE_PREKEYS_VERSION</name>          <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>MIGRATE_SESSIONS_VERSION</name>         <init>= <expr><literal type="number">4</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>NO_MORE_IMAGE_THUMBNAILS_VERSION</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>ATTACHMENT_DIMENSIONS</name>            <init>= <expr><literal type="number">6</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>QUOTED_REPLIES</name>                   <init>= <expr><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>SHARED_CONTACTS</name>                  <init>= <expr><literal type="number">8</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>FULL_TEXT_SEARCH</name>                 <init>= <expr><literal type="number">9</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>BAD_IMPORT_CLEANUP</name>               <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>QUOTE_MISSING</name>                    <init>= <expr><literal type="number">11</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>NOTIFICATION_CHANNELS</name>            <init>= <expr><literal type="number">12</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>SECRET_SENDER</name>                    <init>= <expr><literal type="number">13</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>ATTACHMENT_CAPTIONS</name>              <init>= <expr><literal type="number">14</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>ATTACHMENT_CAPTIONS_FIX</name>          <init>= <expr><literal type="number">15</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>PREVIEWS</name>                         <init>= <expr><literal type="number">16</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>CONVERSATION_SEARCH</name>              <init>= <expr><literal type="number">17</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>SELF_ATTACHMENT_CLEANUP</name>          <init>= <expr><literal type="number">18</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type>    <name>DATABASE_VERSION</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>DATABASE_NAME</name>    <init>= <expr><literal type="string">"signal.db"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type>        <name>context</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>DatabaseSecret</name></type> <name>databaseSecret</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>SQLCipherOpenHelper</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>DatabaseSecret</name></type> <name>databaseSecret</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>DATABASE_NAME</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>DATABASE_VERSION</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SQLiteDatabaseHook</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>preKey</name><parameter_list>(<parameter><decl><type><name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>rawExecSQL</name></name><argument_list>(<argument><expr><literal type="string">"PRAGMA cipher_default_kdf_iter = 1;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>rawExecSQL</name></name><argument_list>(<argument><expr><literal type="string">"PRAGMA cipher_default_page_size = 4096;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>postKey</name><parameter_list>(<parameter><decl><type><name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>rawExecSQL</name></name><argument_list>(<argument><expr><literal type="string">"PRAGMA kdf_iter = '1';"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>rawExecSQL</name></name><argument_list>(<argument><expr><literal type="string">"PRAGMA cipher_page_size = 4096;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name>        <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getApplicationContext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>databaseSecret</name></name> <operator>=</operator> <name>databaseSecret</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>SmsDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>MmsDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>AttachmentDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>ThreadDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>IdentityDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>DraftDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>PushDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>GroupDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>RecipientDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>GroupReceiptDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>OneTimePreKeyDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>SignedPreKeyDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name><name>SessionDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>sql</name> <range>: <expr><name><name>SearchDatabase</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></range></decl></init>)</control> <block>{
      <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>

    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>SmsDatabase</name><operator>.</operator><name>CREATE_INDEXS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>MmsDatabase</name><operator>.</operator><name>CREATE_INDEXS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>AttachmentDatabase</name><operator>.</operator><name>CREATE_INDEXS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>ThreadDatabase</name><operator>.</operator><name>CREATE_INDEXS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>DraftDatabase</name><operator>.</operator><name>CREATE_INDEXS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>GroupDatabase</name><operator>.</operator><name>CREATE_INDEXS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>executeStatements</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>GroupReceiptDatabase</name><operator>.</operator><name>CREATE_INDEXES</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><call><name><name>context</name><operator>.</operator><name>getDatabasePath</name></name><argument_list>(<argument><expr><name><name>ClassicOpenHelper</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>ClassicOpenHelper</name></type>                      <name>legacyHelper</name> <init>= <expr><operator>new</operator> <call><name>ClassicOpenHelper</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>sqlite</name><operator>.</operator><name>SQLiteDatabase</name></name></type> <name>legacyDb</name>     <init>= <expr><call><name><name>legacyHelper</name><operator>.</operator><name>getWritableDatabase</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>SQLCipherMigrationHelper</name><operator>.</operator><name>migratePlaintext</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>legacyDb</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>MasterSecret</name></type> <name>masterSecret</name> <init>= <expr><call><name><name>KeyCachingService</name><operator>.</operator><name>getMasterSecret</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <if>if <condition>(<expr><name>masterSecret</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>SQLCipherMigrationHelper</name><operator>.</operator><name>migrateCiphertext</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>masterSecret</name></expr></argument>, <argument><expr><name>legacyDb</name></expr></argument>, <argument><expr><name>db</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
      <else>else                      <block type="pseudo"><expr_stmt><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>setNeedsSqlCipherMigration</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>

      <if>if <condition>(<expr><operator>!</operator><call><name><name>PreKeyMigrationHelper</name><operator>.</operator><name>migratePreKeys</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>ApplicationContext</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getJobManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name>RefreshPreKeysJob</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <expr_stmt><expr><call><name><name>SessionStoreMigrationHelper</name><operator>.</operator><name>migrateSessions</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>PreKeyMigrationHelper</name><operator>.</operator><name>cleanUpPreKeys</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onUpgrade</name><parameter_list>(<parameter><decl><type><name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>oldVersion</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>newVersion</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Upgrading database: "</literal> <operator>+</operator> <name>oldVersion</name> <operator>+</operator> <literal type="string">", "</literal> <operator>+</operator> <name>newVersion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>beginTransaction</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <try>try <block>{

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>RECIPIENT_CALL_RINGTONE_VERSION</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE recipient_preferences ADD COLUMN call_ringtone TEXT DEFAULT NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE recipient_preferences ADD COLUMN call_vibrate INTEGER DEFAULT "</literal> <operator>+</operator> <call><name><name>RecipientDatabase</name><operator>.</operator><name>VibrateState</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>MIGRATE_PREKEYS_VERSION</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TABLE signed_prekeys (_id INTEGER PRIMARY KEY, key_id INTEGER UNIQUE, public_key TEXT NOT NULL, private_key TEXT NOT NULL, signature TEXT NOT NULL, timestamp INTEGER DEFAULT 0)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TABLE one_time_prekeys (_id INTEGER PRIMARY KEY, key_id INTEGER UNIQUE, public_key TEXT NOT NULL, private_key TEXT NOT NULL)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr><operator>!</operator><call><name><name>PreKeyMigrationHelper</name><operator>.</operator><name>migratePreKeys</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
          <expr_stmt><expr><call><name><name>ApplicationContext</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getJobManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name>RefreshPreKeysJob</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>MIGRATE_SESSIONS_VERSION</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TABLE sessions (_id INTEGER PRIMARY KEY, address TEXT NOT NULL, device INTEGER NOT NULL, record BLOB NOT NULL, UNIQUE(address, device) ON CONFLICT REPLACE)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SessionStoreMigrationHelper</name><operator>.</operator><name>migrateSessions</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>NO_MORE_IMAGE_THUMBNAILS_VERSION</name></expr>)</condition><then> <block>{
        <decl_stmt><decl><type><name>ContentValues</name></type> <name>update</name> <init>= <expr><operator>new</operator> <call><name>ContentValues</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>update</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"thumbnail"</literal></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>update</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"aspect_ratio"</literal></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>update</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"thumbnail_random"</literal></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <try>try <init>(<decl><type><name>Cursor</name></type> <name>cursor</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><literal type="string">"part"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"_id"</literal></expr>, <expr><literal type="string">"ct"</literal></expr>, <expr><literal type="string">"thumbnail"</literal></expr>}</block></expr></argument>, <argument><expr><literal type="string">"thumbnail IS NOT NULL"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
          <while>while <condition>(<expr><name>cursor</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cursor</name><operator>.</operator><name>moveToNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
            <decl_stmt><decl><type><name>long</name></type>   <name>id</name>          <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"_id"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>contentType</name> <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"ct"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if>if <condition>(<expr><name>contentType</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>contentType</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"video"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
              <decl_stmt><decl><type><name>String</name></type> <name>thumbnailPath</name> <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"thumbnail"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <decl_stmt><decl><type><name>File</name></type>   <name>thumbnailFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>thumbnailPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <expr_stmt><expr><call><name><name>thumbnailFile</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

              <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><literal type="string">"part"</literal></expr></argument>, <argument><expr><name>update</name></expr></argument>, <argument><expr><literal type="string">"_id = ?"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
          }</block></while>
        }</block></try>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>ATTACHMENT_DIMENSIONS</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE part ADD COLUMN width INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE part ADD COLUMN height INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>QUOTED_REPLIES</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN quote_id INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN quote_author TEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN quote_body TEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN quote_attachment INTEGER DEFAULT -1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE part ADD COLUMN quote INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>SHARED_CONTACTS</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN shared_contacts TEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>FULL_TEXT_SEARCH</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE VIRTUAL TABLE sms_fts USING fts5(body, content=sms, content_rowid=_id)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER sms_ai AFTER INSERT ON sms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(rowid, body) VALUES (new._id, new.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER sms_ad AFTER DELETE ON sms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(sms_fts, rowid, body) VALUES('delete', old._id, old.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER sms_au AFTER UPDATE ON sms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(sms_fts, rowid, body) VALUES('delete', old._id, old.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(rowid, body) VALUES(new._id, new.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE VIRTUAL TABLE mms_fts USING fts5(body, content=mms, content_rowid=_id)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER mms_ai AFTER INSERT ON mms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(rowid, body) VALUES (new._id, new.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER mms_ad AFTER DELETE ON mms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(mms_fts, rowid, body) VALUES('delete', old._id, old.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER mms_au AFTER UPDATE ON mms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(mms_fts, rowid, body) VALUES('delete', old._id, old.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(rowid, body) VALUES(new._id, new.body);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Beginning to build search index."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>start</name> <init>= <expr><call><name><name>SystemClock</name><operator>.</operator><name>elapsedRealtime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"INSERT INTO sms_fts (rowid, body) SELECT _id, body FROM sms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>smsFinished</name> <init>= <expr><call><name><name>SystemClock</name><operator>.</operator><name>elapsedRealtime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Indexing SMS completed in "</literal> <operator>+</operator> <operator>(</operator><name>smsFinished</name> <operator>-</operator> <name>start</name><operator>)</operator> <operator>+</operator> <literal type="string">" ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"INSERT INTO mms_fts (rowid, body) SELECT _id, body FROM mms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>mmsFinished</name> <init>= <expr><call><name><name>SystemClock</name><operator>.</operator><name>elapsedRealtime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Indexing MMS completed in "</literal> <operator>+</operator> <operator>(</operator><name>mmsFinished</name> <operator>-</operator> <name>smsFinished</name><operator>)</operator> <operator>+</operator> <literal type="string">" ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Indexing finished. Total time: "</literal> <operator>+</operator> <operator>(</operator><name>mmsFinished</name> <operator>-</operator> <name>start</name><operator>)</operator> <operator>+</operator> <literal type="string">" ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>BAD_IMPORT_CLEANUP</name></expr>)</condition><then> <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>trimmedCondition</name> <init>= <expr><literal type="string">" NOT IN (SELECT _id FROM mms)"</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><literal type="string">"group_receipts"</literal></expr></argument>, <argument><expr><literal type="string">"mms_id"</literal> <operator>+</operator> <name>trimmedCondition</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>columns</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"_id"</literal></expr>, <expr><literal type="string">"unique_id"</literal></expr>, <expr><literal type="string">"_data"</literal></expr>, <expr><literal type="string">"thumbnail"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <try>try <init>(<decl><type><name>Cursor</name></type> <name>cursor</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><literal type="string">"part"</literal></expr></argument>, <argument><expr><name>columns</name></expr></argument>, <argument><expr><literal type="string">"mid"</literal> <operator>+</operator> <name>trimmedCondition</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
          <while>while <condition>(<expr><name>cursor</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cursor</name><operator>.</operator><name>moveToNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
            <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><literal type="string">"part"</literal></expr></argument>, <argument><expr><literal type="string">"_id = ? AND unique_id = ?"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>data</name>      <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>thumbnail</name> <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
              <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>delete</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>thumbnail</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
              <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>thumbnail</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>delete</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
          }</block></while>
        }</block></try>
      }</block></then></if>

      <comment type="line">// Note: This column only being checked due to upgrade issues as described in #8184</comment>
      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>QUOTE_MISSING</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>columnExists</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><literal type="string">"mms"</literal></expr></argument>, <argument><expr><literal type="string">"quote_missing"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN quote_missing INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <comment type="line">// Note: The column only being checked due to upgrade issues as described in #8184</comment>
      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>NOTIFICATION_CHANNELS</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>columnExists</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><literal type="string">"recipient_preferences"</literal></expr></argument>, <argument><expr><literal type="string">"notification_channel"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE recipient_preferences ADD COLUMN notification_channel TEXT DEFAULT NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>NotificationChannels</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <try>try <init>(<decl><type><name>Cursor</name></type> <name>cursor</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>rawQuery</name></name><argument_list>(<argument><expr><literal type="string">"SELECT recipient_ids, system_display_name, signal_profile_name, notification, vibrate FROM recipient_preferences WHERE notification NOT NULL OR vibrate != 0"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
          <while>while <condition>(<expr><name>cursor</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cursor</name><operator>.</operator><name>moveToNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
            <decl_stmt><decl><type><name>String</name></type>  <name>addressString</name>   <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"recipient_ids"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Address</name></type> <name>address</name>         <init>= <expr><call><name><name>Address</name><operator>.</operator><name>fromExternal</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>addressString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type>  <name>systemName</name>      <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"system_display_name"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type>  <name>profileName</name>     <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"signal_profile_name"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type>  <name>messageSound</name>    <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"notification"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Uri</name></type>     <name>messageSoundUri</name> <init>= <expr><ternary><condition><expr><name>messageSound</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>messageSound</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type>     <name>vibrateState</name>    <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"vibrate"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type>  <name>displayName</name>     <init>= <expr><call><name><name>NotificationChannels</name><operator>.</operator><name>getChannelDisplayNameFor</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>systemName</name></expr></argument>, <argument><expr><name>profileName</name></expr></argument>, <argument><expr><name>address</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>boolean</name></type> <name>vibrateEnabled</name>  <init>= <expr><ternary><condition><expr><name>vibrateState</name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>isNotificationVibrateEnabled</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>vibrateState</name> <operator>==</operator> <literal type="number">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if>if <condition>(<expr><call><name><name>address</name><operator>.</operator><name>isGroup</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
              <try>try<init>(<decl><type><name>Cursor</name></type> <name>groupCursor</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>rawQuery</name></name><argument_list>(<argument><expr><literal type="string">"SELECT title FROM groups WHERE group_id = ?"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>address</name><operator>.</operator><name>toGroupString</name></name><argument_list>()</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
                <if>if <condition>(<expr><name>groupCursor</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>groupCursor</name><operator>.</operator><name>moveToFirst</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
                  <decl_stmt><decl><type><name>String</name></type> <name>title</name> <init>= <expr><call><name><name>groupCursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>groupCursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"title"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                  <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>title</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
                    <expr_stmt><expr><name>displayName</name> <operator>=</operator> <name>title</name></expr>;</expr_stmt>
                  }</block></then></if>
                }</block></then></if>
              }</block></try>
            }</block></then></if>

            <decl_stmt><decl><type><name>String</name></type> <name>channelId</name> <init>= <expr><call><name><name>NotificationChannels</name><operator>.</operator><name>createChannelFor</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><name>displayName</name></expr></argument>, <argument><expr><name>messageSoundUri</name></expr></argument>, <argument><expr><name>vibrateEnabled</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>ContentValues</name></type> <name>values</name> <init>= <expr><operator>new</operator> <call><name>ContentValues</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>values</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"notification_channel"</literal></expr></argument>, <argument><expr><name>channelId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><literal type="string">"recipient_preferences"</literal></expr></argument>, <argument><expr><name>values</name></expr></argument>, <argument><expr><literal type="string">"recipient_ids = ?"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><name>addressString</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          }</block></while>
        }</block></try>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>SECRET_SENDER</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE recipient_preferences ADD COLUMN unidentified_access_mode INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE push ADD COLUMN server_timestamp INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE push ADD COLUMN server_guid TEXT DEFAULT NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE group_receipts ADD COLUMN unidentified INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN unidentified INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE sms ADD COLUMN unidentified INTEGER DEFAULT 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>ATTACHMENT_CAPTIONS</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE part ADD COLUMN caption TEXT DEFAULT NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <comment type="line">// 4.30.8 included a migration, but not a correct CREATE_TABLE statement, so we need to add</comment>
      <comment type="line">// this column if it isn't present.</comment>
      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>ATTACHMENT_CAPTIONS_FIX</name></expr>)</condition><then> <block>{
        <if>if <condition>(<expr><operator>!</operator><call><name>columnExists</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><literal type="string">"part"</literal></expr></argument>, <argument><expr><literal type="string">"caption"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
          <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE part ADD COLUMN caption TEXT DEFAULT NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>PREVIEWS</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"ALTER TABLE mms ADD COLUMN previews TEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>CONVERSATION_SEARCH</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TABLE sms_fts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TABLE mms_fts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TRIGGER sms_ai"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TRIGGER sms_au"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TRIGGER sms_ad"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TRIGGER mms_ai"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TRIGGER mms_au"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"DROP TRIGGER mms_ad"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE VIRTUAL TABLE sms_fts USING fts5(body, thread_id UNINDEXED, content=sms, content_rowid=_id)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER sms_ai AFTER INSERT ON sms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(rowid, body, thread_id) VALUES (new._id, new.body, new.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER sms_ad AFTER DELETE ON sms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(sms_fts, rowid, body, thread_id) VALUES('delete', old._id, old.body, old.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER sms_au AFTER UPDATE ON sms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(sms_fts, rowid, body, thread_id) VALUES('delete', old._id, old.body, old.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO sms_fts(rowid, body, thread_id) VALUES(new._id, new.body, new.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE VIRTUAL TABLE mms_fts USING fts5(body, thread_id UNINDEXED, content=mms, content_rowid=_id)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER mms_ai AFTER INSERT ON mms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(rowid, body, thread_id) VALUES (new._id, new.body, new.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER mms_ad AFTER DELETE ON mms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(mms_fts, rowid, body, thread_id) VALUES('delete', old._id, old.body, old.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"CREATE TRIGGER mms_au AFTER UPDATE ON mms BEGIN\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(mms_fts, rowid, body, thread_id) VALUES('delete', old._id, old.body, old.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"  INSERT INTO mms_fts(rowid, body, thread_id) VALUES(new._id, new.body, new.thread_id);\n"</literal> <operator>+</operator>
                   <literal type="string">"END;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Beginning to build search index."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>start</name> <init>= <expr><call><name><name>SystemClock</name><operator>.</operator><name>elapsedRealtime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"INSERT INTO sms_fts (rowid, body, thread_id) SELECT _id, body, thread_id FROM sms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>smsFinished</name> <init>= <expr><call><name><name>SystemClock</name><operator>.</operator><name>elapsedRealtime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Indexing SMS completed in "</literal> <operator>+</operator> <operator>(</operator><name>smsFinished</name> <operator>-</operator> <name>start</name><operator>)</operator> <operator>+</operator> <literal type="string">" ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><literal type="string">"INSERT INTO mms_fts (rowid, body, thread_id) SELECT _id, body, thread_id FROM mms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>mmsFinished</name> <init>= <expr><call><name><name>SystemClock</name><operator>.</operator><name>elapsedRealtime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Indexing MMS completed in "</literal> <operator>+</operator> <operator>(</operator><name>mmsFinished</name> <operator>-</operator> <name>smsFinished</name><operator>)</operator> <operator>+</operator> <literal type="string">" ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Indexing finished. Total time: "</literal> <operator>+</operator> <operator>(</operator><name>mmsFinished</name> <operator>-</operator> <name>start</name><operator>)</operator> <operator>+</operator> <literal type="string">" ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>SELF_ATTACHMENT_CLEANUP</name></expr>)</condition><then> <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>localNumber</name> <init>= <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getLocalNumber</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>localNumber</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
          <try>try <init>(<decl><type><name>Cursor</name></type> <name>threadCursor</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>rawQuery</name></name><argument_list>(<argument><expr><literal type="string">"SELECT _id FROM thread WHERE recipient_ids = ?"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><name>localNumber</name></expr> }</block></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
            <if>if <condition>(<expr><name>threadCursor</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>threadCursor</name><operator>.</operator><name>moveToFirst</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
              <decl_stmt><decl><type><name>long</name></type>          <name>threadId</name>     <init>= <expr><call><name><name>threadCursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <decl_stmt><decl><type><name>ContentValues</name></type> <name>updateValues</name> <init>= <expr><operator>new</operator> <call><name>ContentValues</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

              <expr_stmt><expr><call><name><name>updateValues</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"pending_push"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

              <decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><literal type="string">"part"</literal></expr></argument>, <argument><expr><name>updateValues</name></expr></argument>, <argument><expr><literal type="string">"mid IN (SELECT _id FROM mms WHERE thread_id = ?)"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>threadId</name></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Updated "</literal> <operator>+</operator> <name>count</name> <operator>+</operator> <literal type="string">" self-sent attachments."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
          }</block></try>
        }</block></then></if>
      }</block></then></if>

      <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>setTransactionSuccessful</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block> <finally>finally <block>{
      <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>endTransaction</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></finally></try>

    <if>if <condition>(<expr><name>oldVersion</name> <operator>&lt;</operator> <name>MIGRATE_PREKEYS_VERSION</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>PreKeyMigrationHelper</name><operator>.</operator><name>cleanUpPreKeys</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>SQLiteDatabase</name></type> <name>getReadableDatabase</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>getReadableDatabase</name><argument_list>(<argument><expr><call><name><name>databaseSecret</name><operator>.</operator><name>asString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>SQLiteDatabase</name></type> <name>getWritableDatabase</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>getWritableDatabase</name><argument_list>(<argument><expr><call><name><name>databaseSecret</name><operator>.</operator><name>asString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>markCurrent</name><parameter_list>(<parameter><decl><type><name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><name>DATABASE_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>executeStatements</name><parameter_list>(<parameter><decl><type><name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>statements</name></decl></parameter>)</parameter_list> <block>{
    <for>for <control>(<init><decl><type><name>String</name></type> <name>statement</name> <range>: <expr><name>statements</name></expr></range></decl></init>)</control>
      <block type="pseudo"><expr_stmt><expr><call><name><name>db</name><operator>.</operator><name>execSQL</name></name><argument_list>(<argument><expr><name>statement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
  }</block></function>

  <function><specifier>private</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>columnExists</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>SQLiteDatabase</name></type> <name>db</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>table</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>column</name></decl></parameter>)</parameter_list> <block>{
    <try>try <init>(<decl><type><name>Cursor</name></type> <name>cursor</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>rawQuery</name></name><argument_list>(<argument><expr><literal type="string">"PRAGMA table_info("</literal> <operator>+</operator> <name>table</name> <operator>+</operator> <literal type="string">")"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{
      <decl_stmt><decl><type><name>int</name></type> <name>nameColumnIndex</name> <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <while>while <condition>(<expr><call><name><name>cursor</name><operator>.</operator><name>moveToNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name>nameColumnIndex</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>column</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
          <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        }</block></then></if>
      }</block></while>
    }</block></try>

    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>
}</block></class>
</unit>
