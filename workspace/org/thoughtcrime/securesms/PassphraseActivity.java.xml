<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\PassphraseActivity.java"><comment type="block" format="javadoc">/**
 * Copyright (C) 2011 Whisper Systems
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ComponentName</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ServiceConnection</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>IBinder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>crypto</name><operator>.</operator><name>MasterSecret</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>service</name><operator>.</operator><name>KeyCachingService</name></name>;</import>


<comment type="block" format="javadoc">/**
 * Base Activity for changing/prompting local encryption passphrase.
 *
 * @author Moxie Marlinspike
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>PassphraseActivity</name> <super><extends>extends <name>BaseActionBarActivity</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>PassphraseActivity</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>KeyCachingService</name></type> <name>keyCachingService</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>MasterSecret</name></type> <name>masterSecret</name></decl>;</decl_stmt>

  <function><specifier>protected</specifier> <type><name>void</name></type> <name>setMasterSecret</name><parameter_list>(<parameter><decl><type><name>MasterSecret</name></type> <name>masterSecret</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>masterSecret</name></name> <operator>=</operator> <name>masterSecret</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Intent</name></type> <name>bindIntent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>KeyCachingService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>startService</name><argument_list>(<argument><expr><name>bindIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>bindService</name><argument_list>(<argument><expr><name>bindIntent</name></expr></argument>, <argument><expr><name>serviceConnection</name></expr></argument>, <argument><expr><name><name>Context</name><operator>.</operator><name>BIND_AUTO_CREATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>void</name></type> <name>cleanup</name><parameter_list>()</parameter_list>;</function_decl>

  <decl_stmt><decl><specifier>private</specifier> <type><name>ServiceConnection</name></type> <name>serviceConnection</name> <init>= <expr><operator>new</operator> <class><super><name>ServiceConnection</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>onServiceConnected</name><parameter_list>(<parameter><decl><type><name>ComponentName</name></type> <name>className</name></decl></parameter>, <parameter><decl><type><name>IBinder</name></type> <name>service</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name>keyCachingService</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>KeyCachingService</name><operator>.</operator><name>KeySetBinder</name></name><operator>)</operator><name>service</name><operator>)</operator><operator>.</operator><call><name>getService</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>keyCachingService</name><operator>.</operator><name>setMasterSecret</name></name><argument_list>(<argument><expr><name>masterSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>PassphraseActivity</name><operator>.</operator><name>this</name><operator>.</operator><name>unbindService</name></name><argument_list>(<argument><expr><name><name>PassphraseActivity</name><operator>.</operator><name>this</name><operator>.</operator><name>serviceConnection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>masterSecret</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Intent</name></type> <name>nextIntent</name> <init>= <expr><call><name>getIntent</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParcelableExtra</name><argument_list>(<argument><expr><literal type="string">"next_intent"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>nextIntent</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <try>try <block>{
                <expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>nextIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block> <catch>catch <parameter_list>(<parameter><decl><type><name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>SecurityException</name></name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
                <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Access permission not passed from PassphraseActivity, retry sharing."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></then></if>
        <expr_stmt><expr><call><name>finish</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      }</block></function>
      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>onServiceDisconnected</name><parameter_list>(<parameter><decl><type><name>ComponentName</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name>keyCachingService</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      }</block></function>
  }</block></class></expr></init></decl>;</decl_stmt>
}</block></class>
</unit>
