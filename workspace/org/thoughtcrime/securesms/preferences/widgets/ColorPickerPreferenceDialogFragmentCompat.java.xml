<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\preferences\widgets\ColorPickerPreferenceDialogFragmentCompat.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>preferences</name><operator>.</operator><name>widgets</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>Dialog</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>DialogInterface</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>preference</name><operator>.</operator><name>PreferenceDialogFragmentCompat</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>takisoft</name><operator>.</operator><name>colorpicker</name><operator>.</operator><name>ColorPickerDialog</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>takisoft</name><operator>.</operator><name>colorpicker</name><operator>.</operator><name>OnColorSelectedListener</name></name>;</import>

<class><specifier>public</specifier> class <name>ColorPickerPreferenceDialogFragmentCompat</name> <super><extends>extends <name>PreferenceDialogFragmentCompat</name></extends> <implements>implements <name>OnColorSelectedListener</name></implements></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><name>int</name></type> <name>pickedColor</name></decl>;</decl_stmt>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>ColorPickerPreferenceDialogFragmentCompat</name></type> <name>newInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>ColorPickerPreferenceDialogFragmentCompat</name></type> <name>fragment</name> <init>= <expr><operator>new</operator> <call><name>ColorPickerPreferenceDialogFragmentCompat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Bundle</name></type> <name>b</name> <init>= <expr><operator>new</operator> <call><name>Bundle</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>b</name><operator>.</operator><name>putString</name></name><argument_list>(<argument><expr><name><name>PreferenceDialogFragmentCompat</name><operator>.</operator><name>ARG_KEY</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fragment</name><operator>.</operator><name>setArguments</name></name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>fragment</name></expr>;</return>
  }</block></function>


  <function><annotation>@<name>NonNull</name></annotation>
  <annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>Dialog</name></type> <name>onCreateDialog</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>ColorPickerPreference</name></type> <name>pref</name> <init>= <expr><call><name>getColorPickerPreference</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>ColorPickerDialog</name><operator>.</operator><name>Params</name></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>ColorPickerDialog</name><operator>.</operator><name>Params</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setSelectedColor</name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>getColor</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setColors</name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>getColors</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setColorContentDescriptions</name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>getColorDescriptions</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setSize</name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>getSize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setSortColors</name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>isSortColors</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setColumns</name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>getColumns</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ColorPickerDialog</name></type> <name>dialog</name> <init>= <expr><operator>new</operator> <call><name>ColorPickerDialog</name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><call><name><name>pref</name><operator>.</operator><name>getDialogTitle</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>dialog</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onDialogClosed</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>positiveResult</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>ColorPickerPreference</name></type> <name>preference</name> <init>= <expr><call><name>getColorPickerPreference</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>positiveResult</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>preference</name><operator>.</operator><name>setColor</name></name><argument_list>(<argument><expr><name>pickedColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onColorSelected</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>color</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>pickedColor</name></name> <operator>=</operator> <name>color</name></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onClick</name></name><argument_list>(<argument><expr><call><name>getDialog</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>DialogInterface</name><operator>.</operator><name>BUTTON_POSITIVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><type><name>ColorPickerPreference</name></type> <name>getColorPickerPreference</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>(</operator><name>ColorPickerPreference</name><operator>)</operator> <call><name>getPreference</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>
}</block></class></unit>
