<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\recipients\Recipient.java"><comment type="block">/*
 * Copyright (C) 2011 Whisper Systems
 * Copyright (C) 2013 - 2017 Open Whisper Systems
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>drawable</name><operator>.</operator><name>Drawable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>annimon</name><operator>.</operator><name>stream</name><operator>.</operator><name>function</name><operator>.</operator><name>Consumer</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>color</name><operator>.</operator><name>MaterialColor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>ContactColors</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>ContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>FallbackContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>GeneratedContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>GroupRecordContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>ProfileContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>ResourceContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>SystemContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contacts</name><operator>.</operator><name>avatars</name><operator>.</operator><name>TransparentContactPhoto</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>Address</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>GroupDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>RecipientDatabase</name><operator>.</operator><name>RecipientSettings</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>RecipientDatabase</name><operator>.</operator><name>RegisteredState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>RecipientDatabase</name><operator>.</operator><name>UnidentifiedAccessMode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>RecipientDatabase</name><operator>.</operator><name>VibrateState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>notifications</name><operator>.</operator><name>NotificationChannels</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>RecipientProvider</name><operator>.</operator><name>RecipientDetails</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>FutureTaskListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>ListenableFutureTask</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>TextSecurePreferences</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>Util</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>util</name><operator>.</operator><name>guava</name><operator>.</operator><name>Optional</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>WeakHashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutionException</name></name>;</import>

<class><specifier>public</specifier> class <name>Recipient</name> <super><implements>implements <name>RecipientModifiedListener</name></implements></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type>            <name>TAG</name>      <init>= <expr><call><name><name>Recipient</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>RecipientProvider</name></type> <name>provider</name> <init>= <expr><operator>new</operator> <call><name>RecipientProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RecipientModifiedListener</name></argument>&gt;</argument_list></name></type> <name>listeners</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>newSetFromMap</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>WeakHashMap</name><argument_list type="generic">&lt;<argument><name>RecipientModifiedListener</name></argument>, <argument><name>Boolean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Address</name></type> <name>address</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Recipient</name></argument>&gt;</argument_list></name></type> <name>participants</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type>  <name>name</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type>  <name>customLabel</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>boolean</name></type> <name>resolving</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>boolean</name></type> <name>isLocalNumber</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Uri</name></type>                  <name>systemContactPhoto</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Long</name></type>                 <name>groupAvatarId</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>Uri</name></type>                  <name>contactUri</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Uri</name></type>                  <name>messageRingtone</name>       <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Uri</name></type>                  <name>callRingtone</name>          <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>long</name></type>                 <name>mutedUntil</name>            <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>boolean</name></type>              <name>blocked</name>               <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>VibrateState</name></type>         <name>messageVibrate</name>        <init>= <expr><name><name>VibrateState</name><operator>.</operator><name>DEFAULT</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>VibrateState</name></type>         <name>callVibrate</name>           <init>= <expr><name><name>VibrateState</name><operator>.</operator><name>DEFAULT</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>int</name></type>                  <name>expireMessages</name>        <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type>    <name>defaultSubscriptionId</name> <init>= <expr><call><name><name>Optional</name><operator>.</operator><name>absent</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>NonNull</name></annotation>  <type><name>RegisteredState</name></type>      <name>registered</name>            <init>= <expr><name><name>RegisteredState</name><operator>.</operator><name>UNKNOWN</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>MaterialColor</name></type>  <name>color</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>boolean</name></type>        <name>seenInviteReminder</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name><name>byte</name><index>[]</index></name></type>         <name>profileKey</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type>         <name>profileName</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type>         <name>profileAvatar</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>boolean</name></type>        <name>profileSharing</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>           <type><name>String</name></type>         <name>notificationChannel</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>NonNull</name></annotation>  <type><name>UnidentifiedAccessMode</name></type> <name>unidentifiedAccessMode</name> <init>= <expr><name><name>UnidentifiedAccessMode</name><operator>.</operator><name>DISABLED</name></name></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"ConstantConditions"</literal></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Recipient</name></type> <name>from</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Address</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>asynchronous</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>address</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><throw>throw <expr><operator>new</operator> <call><name>AssertionError</name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</throw></block></then></if>
    <return>return <expr><call><name><name>provider</name><operator>.</operator><name>getRecipient</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><call><name><name>Optional</name><operator>.</operator><name>absent</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Optional</name><operator>.</operator><name>absent</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>asynchronous</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"ConstantConditions"</literal></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Recipient</name></type> <name>from</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Address</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>RecipientSettings</name></argument>&gt;</argument_list></name></type> <name>settings</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name><name>GroupDatabase</name><operator>.</operator><name>GroupRecord</name></name></argument>&gt;</argument_list></name></type> <name>groupRecord</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>asynchronous</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>address</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><throw>throw <expr><operator>new</operator> <call><name>AssertionError</name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</throw></block></then></if>
    <return>return <expr><call><name><name>provider</name><operator>.</operator><name>getRecipient</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><name>settings</name></expr></argument>, <argument><expr><name>groupRecord</name></expr></argument>, <argument><expr><name>asynchronous</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>applyCached</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Address</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name><name>Consumer</name><argument_list type="generic">&lt;<argument><name>Recipient</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Recipient</name></argument>&gt;</argument_list></name></type> <name>recipient</name> <init>= <expr><call><name><name>provider</name><operator>.</operator><name>getCached</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><call><name><name>recipient</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><call><name><name>recipient</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <constructor><name>Recipient</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>Address</name></type> <name>address</name></decl></parameter>,
            <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Recipient</name></type> <name>stale</name></decl></parameter>,
            <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>RecipientDetails</name></argument>&gt;</argument_list></name></type> <name>details</name></decl></parameter>,
            <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name><name>ListenableFutureTask</name><argument_list type="generic">&lt;<argument><name>RecipientDetails</name></argument>&gt;</argument_list></name></type> <name>future</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>address</name></name>   <operator>=</operator> <name>address</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>color</name></name>     <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>resolving</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>

    <if>if <condition>(<expr><name>stale</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name>                   <operator>=</operator> <name><name>stale</name><operator>.</operator><name>name</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>contactUri</name></name>             <operator>=</operator> <name><name>stale</name><operator>.</operator><name>contactUri</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>systemContactPhoto</name></name>     <operator>=</operator> <name><name>stale</name><operator>.</operator><name>systemContactPhoto</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupAvatarId</name></name>          <operator>=</operator> <name><name>stale</name><operator>.</operator><name>groupAvatarId</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isLocalNumber</name></name>          <operator>=</operator> <name><name>stale</name><operator>.</operator><name>isLocalNumber</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>color</name></name>                  <operator>=</operator> <name><name>stale</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>customLabel</name></name>            <operator>=</operator> <name><name>stale</name><operator>.</operator><name>customLabel</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageRingtone</name></name>        <operator>=</operator> <name><name>stale</name><operator>.</operator><name>messageRingtone</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callRingtone</name></name>           <operator>=</operator> <name><name>stale</name><operator>.</operator><name>callRingtone</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mutedUntil</name></name>             <operator>=</operator> <name><name>stale</name><operator>.</operator><name>mutedUntil</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>blocked</name></name>                <operator>=</operator> <name><name>stale</name><operator>.</operator><name>blocked</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageVibrate</name></name>         <operator>=</operator> <name><name>stale</name><operator>.</operator><name>messageVibrate</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callVibrate</name></name>            <operator>=</operator> <name><name>stale</name><operator>.</operator><name>callVibrate</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expireMessages</name></name>         <operator>=</operator> <name><name>stale</name><operator>.</operator><name>expireMessages</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>seenInviteReminder</name></name>     <operator>=</operator> <name><name>stale</name><operator>.</operator><name>seenInviteReminder</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultSubscriptionId</name></name>  <operator>=</operator> <name><name>stale</name><operator>.</operator><name>defaultSubscriptionId</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>registered</name></name>             <operator>=</operator> <name><name>stale</name><operator>.</operator><name>registered</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notificationChannel</name></name>    <operator>=</operator> <name><name>stale</name><operator>.</operator><name>notificationChannel</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileKey</name></name>             <operator>=</operator> <name><name>stale</name><operator>.</operator><name>profileKey</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileName</name></name>            <operator>=</operator> <name><name>stale</name><operator>.</operator><name>profileName</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileAvatar</name></name>          <operator>=</operator> <name><name>stale</name><operator>.</operator><name>profileAvatar</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileSharing</name></name>         <operator>=</operator> <name><name>stale</name><operator>.</operator><name>profileSharing</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unidentifiedAccessMode</name></name> <operator>=</operator> <name><name>stale</name><operator>.</operator><name>unidentifiedAccessMode</name></name></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name><name>stale</name><operator>.</operator><name>participants</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><call><name><name>details</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name>                   <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>name</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>systemContactPhoto</name></name>     <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>systemContactPhoto</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupAvatarId</name></name>          <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>groupAvatarId</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isLocalNumber</name></name>          <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isLocalNumber</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>color</name></name>                  <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>color</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageRingtone</name></name>        <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>messageRingtone</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callRingtone</name></name>           <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>callRingtone</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mutedUntil</name></name>             <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>mutedUntil</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>blocked</name></name>                <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>blocked</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageVibrate</name></name>         <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>messageVibrateState</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callVibrate</name></name>            <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>callVibrateState</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expireMessages</name></name>         <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>expireMessages</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>seenInviteReminder</name></name>     <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>seenInviteReminder</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultSubscriptionId</name></name>  <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>defaultSubscriptionId</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>registered</name></name>             <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>registered</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notificationChannel</name></name>    <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>notificationChannel</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileKey</name></name>             <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>profileKey</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileName</name></name>            <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>profileName</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileAvatar</name></name>          <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>profileAvatar</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileSharing</name></name>         <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>profileSharing</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unidentifiedAccessMode</name></name> <operator>=</operator> <call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>unidentifiedAccessMode</name></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>details</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><name>participants</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><call><name><name>future</name><operator>.</operator><name>addListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>FutureTaskListener</name><argument_list type="generic">&lt;<argument><name>RecipientDetails</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>onSuccess</name><parameter_list>(<parameter><decl><type><name>RecipientDetails</name></type> <name>result</name></decl></parameter>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
          <synchronized>synchronized <init>(<expr><name><name>Recipient</name><operator>.</operator><name>this</name></name></expr>)</init> <block>{
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>name</name></name>                   <operator>=</operator> <name><name>result</name><operator>.</operator><name>name</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>contactUri</name></name>             <operator>=</operator> <name><name>result</name><operator>.</operator><name>contactUri</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>systemContactPhoto</name></name>     <operator>=</operator> <name><name>result</name><operator>.</operator><name>systemContactPhoto</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>groupAvatarId</name></name>          <operator>=</operator> <name><name>result</name><operator>.</operator><name>groupAvatarId</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>isLocalNumber</name></name>          <operator>=</operator> <name><name>result</name><operator>.</operator><name>isLocalNumber</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>color</name></name>                  <operator>=</operator> <name><name>result</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>customLabel</name></name>            <operator>=</operator> <name><name>result</name><operator>.</operator><name>customLabel</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>messageRingtone</name></name>        <operator>=</operator> <name><name>result</name><operator>.</operator><name>messageRingtone</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>callRingtone</name></name>           <operator>=</operator> <name><name>result</name><operator>.</operator><name>callRingtone</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>mutedUntil</name></name>             <operator>=</operator> <name><name>result</name><operator>.</operator><name>mutedUntil</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>blocked</name></name>                <operator>=</operator> <name><name>result</name><operator>.</operator><name>blocked</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>messageVibrate</name></name>         <operator>=</operator> <name><name>result</name><operator>.</operator><name>messageVibrateState</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>callVibrate</name></name>            <operator>=</operator> <name><name>result</name><operator>.</operator><name>callVibrateState</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>expireMessages</name></name>         <operator>=</operator> <name><name>result</name><operator>.</operator><name>expireMessages</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>seenInviteReminder</name></name>     <operator>=</operator> <name><name>result</name><operator>.</operator><name>seenInviteReminder</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>defaultSubscriptionId</name></name>  <operator>=</operator> <name><name>result</name><operator>.</operator><name>defaultSubscriptionId</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>registered</name></name>             <operator>=</operator> <name><name>result</name><operator>.</operator><name>registered</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>notificationChannel</name></name>    <operator>=</operator> <name><name>result</name><operator>.</operator><name>notificationChannel</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>profileKey</name></name>             <operator>=</operator> <name><name>result</name><operator>.</operator><name>profileKey</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>profileName</name></name>            <operator>=</operator> <name><name>result</name><operator>.</operator><name>profileName</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>profileAvatar</name></name>          <operator>=</operator> <name><name>result</name><operator>.</operator><name>profileAvatar</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>profileSharing</name></name>         <operator>=</operator> <name><name>result</name><operator>.</operator><name>profileSharing</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>profileName</name></name>            <operator>=</operator> <name><name>result</name><operator>.</operator><name>profileName</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>unidentifiedAccessMode</name></name> <operator>=</operator> <name><name>result</name><operator>.</operator><name>unidentifiedAccessMode</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name><name>result</name><operator>.</operator><name>participants</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>resolving</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>

            <if>if <condition>(<expr><operator>!</operator><call><name><name>listeners</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
              <for>for <control>(<init><decl><type><name>Recipient</name></type> <name>recipient</name> <range>: <expr><name>participants</name></expr></range></decl></init>)</control> <block type="pseudo"><expr_stmt><expr><call><name><name>recipient</name><operator>.</operator><name>addListener</name></name><argument_list>(<argument><expr><name><name>Recipient</name><operator>.</operator><name>this</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
            }</block></then></if>

            <expr_stmt><expr><call><name><name>Recipient</name><operator>.</operator><name>this</name><operator>.</operator><name>notifyAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          }</block></synchronized>

          <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
      }</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>onFailure</name><parameter_list>(<parameter><decl><type><name>ExecutionException</name></type> <name>error</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><name>Recipient</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Address</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>RecipientDetails</name></type> <name>details</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>address</name></name>                <operator>=</operator> <name>address</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>contactUri</name></name>             <operator>=</operator> <name><name>details</name><operator>.</operator><name>contactUri</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name>                   <operator>=</operator> <name><name>details</name><operator>.</operator><name>name</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>systemContactPhoto</name></name>     <operator>=</operator> <name><name>details</name><operator>.</operator><name>systemContactPhoto</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupAvatarId</name></name>          <operator>=</operator> <name><name>details</name><operator>.</operator><name>groupAvatarId</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isLocalNumber</name></name>          <operator>=</operator> <name><name>details</name><operator>.</operator><name>isLocalNumber</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>color</name></name>                  <operator>=</operator> <name><name>details</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>customLabel</name></name>            <operator>=</operator> <name><name>details</name><operator>.</operator><name>customLabel</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageRingtone</name></name>        <operator>=</operator> <name><name>details</name><operator>.</operator><name>messageRingtone</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callRingtone</name></name>           <operator>=</operator> <name><name>details</name><operator>.</operator><name>callRingtone</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mutedUntil</name></name>             <operator>=</operator> <name><name>details</name><operator>.</operator><name>mutedUntil</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>blocked</name></name>                <operator>=</operator> <name><name>details</name><operator>.</operator><name>blocked</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageVibrate</name></name>         <operator>=</operator> <name><name>details</name><operator>.</operator><name>messageVibrateState</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callVibrate</name></name>            <operator>=</operator> <name><name>details</name><operator>.</operator><name>callVibrateState</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expireMessages</name></name>         <operator>=</operator> <name><name>details</name><operator>.</operator><name>expireMessages</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>seenInviteReminder</name></name>     <operator>=</operator> <name><name>details</name><operator>.</operator><name>seenInviteReminder</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultSubscriptionId</name></name>  <operator>=</operator> <name><name>details</name><operator>.</operator><name>defaultSubscriptionId</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>registered</name></name>             <operator>=</operator> <name><name>details</name><operator>.</operator><name>registered</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notificationChannel</name></name>    <operator>=</operator> <name><name>details</name><operator>.</operator><name>notificationChannel</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileKey</name></name>             <operator>=</operator> <name><name>details</name><operator>.</operator><name>profileKey</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileName</name></name>            <operator>=</operator> <name><name>details</name><operator>.</operator><name>profileName</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileAvatar</name></name>          <operator>=</operator> <name><name>details</name><operator>.</operator><name>profileAvatar</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileSharing</name></name>         <operator>=</operator> <name><name>details</name><operator>.</operator><name>profileSharing</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unidentifiedAccessMode</name></name> <operator>=</operator> <name><name>details</name><operator>.</operator><name>unidentifiedAccessMode</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name><name>details</name><operator>.</operator><name>participants</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>resolving</name></name>    <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isLocalNumber</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>isLocalNumber</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Uri</name></type> <name>getContactUri</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>contactUri</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setContactUri</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Uri</name></type> <name>contactUri</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>contactUri</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>contactUri</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>contactUri</name></name> <operator>=</operator> <name>contactUri</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>name</name></name> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name>isMmsGroupRecipient</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>names</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <for>for <control>(<init><decl><type><name>Recipient</name></type> <name>recipient</name> <range>: <expr><name>participants</name></expr></range></decl></init>)</control> <block>{
        <expr_stmt><expr><call><name><name>names</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>recipient</name><operator>.</operator><name>toShortString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></for>

      <return>return <expr><call><name><name>Util</name><operator>.</operator><name>join</name></name><argument_list>(<argument><expr><name>names</name></expr></argument>, <argument><expr><literal type="string">", "</literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>

    <return>return <expr><name><name>this</name><operator>.</operator><name>name</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setName</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name>name</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>MaterialColor</name></type> <name>getColor</name><parameter_list>()</parameter_list> <block>{
    <if>if      <condition>(<expr><call><name>isGroupRecipient</name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><name><name>MaterialColor</name><operator>.</operator><name>GROUP</name></name></expr>;</return></block></then>
    <elseif>else <if>if <condition>(<expr><name>color</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then>      <block type="pseudo"><return>return <expr><name>color</name></expr>;</return></block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><name>name</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then>       <block type="pseudo"><return>return <expr><call><name><name>ContactColors</name><operator>.</operator><name>generateFor</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return></block></then></if></elseif>
    <else>else                         <block type="pseudo"><return>return <expr><name><name>ContactColors</name><operator>.</operator><name>UNKNOWN_COLOR</name></name></expr>;</return></block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setColor</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>MaterialColor</name></type> <name>color</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name>color</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Address</name></type> <name>getAddress</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>address</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>getCustomLabel</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>customLabel</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setCustomLabel</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>customLabel</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>customLabel</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>customLabel</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>customLabel</name></name> <operator>=</operator> <name>customLabel</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>getDefaultSubscriptionId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>defaultSubscriptionId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setDefaultSubscriptionId</name><parameter_list>(<parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>defaultSubscriptionId</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultSubscriptionId</name></name> <operator>=</operator> <name>defaultSubscriptionId</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>getProfileName</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>profileName</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setProfileName</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>profileName</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileName</name></name> <operator>=</operator> <name>profileName</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>getProfileAvatar</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>profileAvatar</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setProfileAvatar</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>profileAvatar</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileAvatar</name></name> <operator>=</operator> <name>profileAvatar</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>isProfileSharing</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>profileSharing</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setProfileSharing</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileSharing</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupRecipient</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>address</name><operator>.</operator><name>isGroup</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isMmsGroupRecipient</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>address</name><operator>.</operator><name>isMmsGroup</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isPushGroupRecipient</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>address</name><operator>.</operator><name>isGroup</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>address</name><operator>.</operator><name>isMmsGroup</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <specifier>synchronized</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Recipient</name></argument>&gt;</argument_list></name></type> <name>getParticipants</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>participants</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setParticipants</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Recipient</name></argument>&gt;</argument_list></name></type> <name>participants</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participants</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>participants</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>void</name></type> <name>addListener</name><parameter_list>(<parameter><decl><type><name>RecipientModifiedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name><name>listeners</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <for>for <control>(<init><decl><type><name>Recipient</name></type> <name>recipient</name> <range>: <expr><name>participants</name></expr></range></decl></init>)</control> <block type="pseudo"><expr_stmt><expr><call><name><name>recipient</name><operator>.</operator><name>addListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
    }</block></then></if>
    <expr_stmt><expr><call><name><name>listeners</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>void</name></type> <name>removeListener</name><parameter_list>(<parameter><decl><type><name>RecipientModifiedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>listeners</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><call><name><name>listeners</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <for>for <control>(<init><decl><type><name>Recipient</name></type> <name>recipient</name> <range>: <expr><name>participants</name></expr></range></decl></init>)</control> <block type="pseudo"><expr_stmt><expr><call><name><name>recipient</name><operator>.</operator><name>removeListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
    }</block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>String</name></type> <name>toShortString</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>(</operator><ternary><condition><expr><call><name>getName</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>address</name><operator>.</operator><name>serialize</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name>getName</name><argument_list>()</argument_list></call></expr></else></ternary><operator>)</operator></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Drawable</name></type> <name>getFallbackContactPhotoDrawable</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>inverted</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name>getFallbackContactPhoto</name><argument_list>()</argument_list></call><operator>.</operator><call><name>asDrawable</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>getColor</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toAvatarColor</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>inverted</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>FallbackContactPhoto</name></type> <name>getFallbackContactPhoto</name><parameter_list>()</parameter_list> <block>{
    <if>if      <condition>(<expr><name>isLocalNumber</name></expr>)</condition><then>            <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>ResourceContactPhoto</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_note_to_self</name></name></expr></argument>)</argument_list></call></expr>;</return></block></then></if>
    <if>if      <condition>(<expr><call><name>isResolving</name><argument_list>()</argument_list></call></expr>)</condition><then>            <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>TransparentContactPhoto</name><argument_list>()</argument_list></call></expr>;</return></block></then>
    <elseif>else <if>if <condition>(<expr><call><name>isGroupRecipient</name><argument_list>()</argument_list></call></expr>)</condition><then>       <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>ResourceContactPhoto</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_group_white_24dp</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_group_large</name></name></expr></argument>)</argument_list></call></expr>;</return></block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>GeneratedContactPhoto</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_profile_default</name></name></expr></argument>)</argument_list></call></expr>;</return></block></then></if></elseif>
    <else>else                               <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>ResourceContactPhoto</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_profile_default</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_person_large</name></name></expr></argument>)</argument_list></call></expr>;</return></block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>ContactPhoto</name></type> <name>getContactPhoto</name><parameter_list>()</parameter_list> <block>{
    <if>if      <condition>(<expr><name>isLocalNumber</name></expr>)</condition><then>                               <block type="pseudo"><return>return <expr><literal type="null">null</literal></expr>;</return></block></then>
    <elseif>else <if>if <condition>(<expr><call><name>isGroupRecipient</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>groupAvatarId</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>GroupRecordContactPhoto</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>groupAvatarId</name></expr></argument>)</argument_list></call></expr>;</return></block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><name>systemContactPhoto</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then>                  <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>SystemContactPhoto</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>systemContactPhoto</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return></block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><name>profileAvatar</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then>                       <block type="pseudo"><return>return <expr><operator>new</operator> <call><name>ProfileContactPhoto</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>profileAvatar</name></expr></argument>)</argument_list></call></expr>;</return></block></then></if></elseif>
    <else>else                                                  <block type="pseudo"><return>return <expr><literal type="null">null</literal></expr>;</return></block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setSystemContactPhoto</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Uri</name></type> <name>systemContactPhoto</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>systemContactPhoto</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>systemContactPhoto</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>systemContactPhoto</name></name> <operator>=</operator> <name>systemContactPhoto</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setGroupAvatarId</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Long</name></type> <name>groupAvatarId</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>groupAvatarId</name></name></expr></argument>, <argument><expr><name>groupAvatarId</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupAvatarId</name></name> <operator>=</operator> <name>groupAvatarId</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Uri</name></type> <name>getMessageRingtone</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name>messageRingtone</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>messageRingtone</name><operator>.</operator><name>getScheme</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>messageRingtone</name><operator>.</operator><name>getScheme</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><literal type="string">"file"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></then></if>

    <return>return <expr><name>messageRingtone</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setMessageRingtone</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Uri</name></type> <name>ringtone</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageRingtone</name></name> <operator>=</operator> <name>ringtone</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Uri</name></type> <name>getCallRingtone</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name>callRingtone</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>callRingtone</name><operator>.</operator><name>getScheme</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>callRingtone</name><operator>.</operator><name>getScheme</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><literal type="string">"file"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></then></if>

    <return>return <expr><name>callRingtone</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setCallRingtone</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Uri</name></type> <name>ringtone</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callRingtone</name></name> <operator>=</operator> <name>ringtone</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>isMuted</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <name>mutedUntil</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setMuted</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>mutedUntil</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mutedUntil</name></name> <operator>=</operator> <name>mutedUntil</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>isBlocked</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>blocked</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setBlocked</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>blocked</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>blocked</name></name> <operator>=</operator> <name>blocked</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>VibrateState</name></type> <name>getMessageVibrate</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>messageVibrate</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setMessageVibrate</name><parameter_list>(<parameter><decl><type><name>VibrateState</name></type> <name>vibrate</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageVibrate</name></name> <operator>=</operator> <name>vibrate</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier>  <type><name>VibrateState</name></type> <name>getCallVibrate</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>callVibrate</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setCallVibrate</name><parameter_list>(<parameter><decl><type><name>VibrateState</name></type> <name>vibrate</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>callVibrate</name></name> <operator>=</operator> <name>vibrate</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>int</name></type> <name>getExpireMessages</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>expireMessages</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setExpireMessages</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>expireMessages</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expireMessages</name></name> <operator>=</operator> <name>expireMessages</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>hasSeenInviteReminder</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>seenInviteReminder</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setHasSeenInviteReminder</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>seenInviteReminder</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>RegisteredState</name></type> <name>getRegistered</name><parameter_list>()</parameter_list> <block>{
    <if>if      <condition>(<expr><call><name>isPushGroupRecipient</name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><name><name>RegisteredState</name><operator>.</operator><name>REGISTERED</name></name></expr>;</return></block></then>
    <elseif>else <if>if <condition>(<expr><call><name>isMmsGroupRecipient</name><argument_list>()</argument_list></call></expr>)</condition><then>  <block type="pseudo"><return>return <expr><name><name>RegisteredState</name><operator>.</operator><name>NOT_REGISTERED</name></name></expr>;</return></block></then></if></elseif></if>

    <return>return <expr><name>registered</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setRegistered</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>RegisteredState</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>registered</name></name> <operator>!=</operator> <name>value</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>registered</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>getNotificationChannel</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><ternary><condition><expr><operator>!</operator><call><name><name>NotificationChannels</name><operator>.</operator><name>supported</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><name>notificationChannel</name></expr></else></ternary></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setNotificationChannel</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>boolean</name></type> <name>notify</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>notificationChannel</name></name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notificationChannel</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>notify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      }</block></then></if>
    }</block></synchronized>

    <if>if <condition>(<expr><name>notify</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <annotation>@<name>Nullable</name></annotation> <type><name><name>byte</name><index>[]</index></name></type> <name>getProfileKey</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>profileKey</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setProfileKey</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name><name>byte</name><index>[]</index></name></type> <name>profileKey</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>profileKey</name></name> <operator>=</operator> <name>profileKey</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>UnidentifiedAccessMode</name></type> <name>getUnidentifiedAccessMode</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>unidentifiedAccessMode</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setUnidentifiedAccessMode</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>UnidentifiedAccessMode</name></type> <name>unidentifiedAccessMode</name></decl></parameter>)</parameter_list> <block>{
    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unidentifiedAccessMode</name></name> <operator>=</operator> <name>unidentifiedAccessMode</name></expr>;</expr_stmt>
    }</block></synchronized>

    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>isSystemContact</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>contactUri</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>Recipient</name></type> <name>resolve</name><parameter_list>()</parameter_list> <block>{
    <while>while <condition>(<expr><name>resolving</name></expr>)</condition> <block type="pseudo"><expr_stmt><expr><call><name><name>Util</name><operator>.</operator><name>wait</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></while>
    <return>return <expr><name>this</name></expr>;</return>
  }</block></function>


  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">true</literal></expr>;</return></block></then></if>
    <if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <operator>!</operator><operator>(</operator><name>o</name> <operator>instanceof</operator> <name>Recipient</name><operator>)</operator></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

    <decl_stmt><decl><type><name>Recipient</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>Recipient</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>this</name><operator>.</operator><name>address</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>that</name><operator>.</operator><name>address</name></name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>address</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>notifyListeners</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RecipientModifiedListener</name></argument>&gt;</argument_list></name></type> <name>localListeners</name></decl>;</decl_stmt>

    <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{
      <expr_stmt><expr><name>localListeners</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>listeners</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></synchronized>

    <for>for <control>(<init><decl><type><name>RecipientModifiedListener</name></type> <name>listener</name> <range>: <expr><name>localListeners</name></expr></range></decl></init>)</control>
      <block type="pseudo"><expr_stmt><expr><call><name><name>listener</name><operator>.</operator><name>onModified</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onModified</name><parameter_list>(<parameter><decl><type><name>Recipient</name></type> <name>recipient</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>notifyListeners</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>isResolving</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>resolving</name></expr>;</return>
  }</block></function>


}</block></class>
</unit>
