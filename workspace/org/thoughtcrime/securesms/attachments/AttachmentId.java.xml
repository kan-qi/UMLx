<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\attachments\AttachmentId.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonProperty</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>Util</name></name>;</import>

<class><specifier>public</specifier> class <name>AttachmentId</name> <block>{

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type> <name>rowId</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type> <name>uniqueId</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>AttachmentId</name><parameter_list>(<parameter><decl><type><annotation>@<name>JsonProperty</name><argument_list>(<argument><expr><literal type="string">"rowId"</literal></expr></argument>)</argument_list></annotation> <name>long</name></type> <name>rowId</name></decl></parameter>, <parameter><decl><type><annotation>@<name>JsonProperty</name><argument_list>(<argument><expr><literal type="string">"uniqueId"</literal></expr></argument>)</argument_list></annotation> <name>long</name></type> <name>uniqueId</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>rowId</name></name>    <operator>=</operator> <name>rowId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>uniqueId</name></name> <operator>=</operator> <name>uniqueId</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getRowId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>rowId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getUniqueId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>uniqueId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name><name>String</name><index>[]</index></name></type> <name>toStrings</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>rowId</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>uniqueId</name></expr></argument>)</argument_list></call></expr>}</block></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="string">"(row id: "</literal> <operator>+</operator> <name>rowId</name> <operator>+</operator> <literal type="string">", unique ID: "</literal> <operator>+</operator> <name>uniqueId</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isValid</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>rowId</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>uniqueId</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">true</literal></expr>;</return></block></then></if>
    <if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

    <decl_stmt><decl><type><name>AttachmentId</name></type> <name>attachmentId</name> <init>= <expr><operator>(</operator><name>AttachmentId</name><operator>)</operator><name>o</name></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>rowId</name> <operator>!=</operator> <name><name>attachmentId</name><operator>.</operator><name>rowId</name></name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>
    <return>return <expr><name>uniqueId</name> <operator>==</operator> <name><name>attachmentId</name><operator>.</operator><name>uniqueId</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>Util</name><operator>.</operator><name>hashCode</name></name><argument_list>(<argument><expr><name>rowId</name></expr></argument>, <argument><expr><name>uniqueId</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
