<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\mms\IncomingMediaMessage.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>Attachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>PointerAttachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contactshare</name><operator>.</operator><name>Contact</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>Address</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>linkpreview</name><operator>.</operator><name>LinkPreview</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>GroupUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>util</name><operator>.</operator><name>guava</name><operator>.</operator><name>Optional</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>messages</name><operator>.</operator><name>SignalServiceAttachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>messages</name><operator>.</operator><name>SignalServiceGroup</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>IncomingMediaMessage</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Address</name></type>       <name>from</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Address</name></type>       <name>groupId</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type>        <name>body</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type>       <name>push</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>          <name>sentTimeMillis</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>           <name>subscriptionId</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>          <name>expiresIn</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type>       <name>expirationUpdate</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>QuoteModel</name></type>    <name>quote</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type>       <name>unidentified</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type>  <name>attachments</name>    <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Contact</name></argument>&gt;</argument_list></name></type>     <name>sharedContacts</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>LinkPreview</name></argument>&gt;</argument_list></name></type> <name>linkPreviews</name>   <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>IncomingMediaMessage</name><parameter_list>(<parameter><decl><type><name>Address</name></type> <name>from</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Address</name></argument>&gt;</argument_list></name></type> <name>groupId</name></decl></parameter>,
                              <parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>,
                              <parameter><decl><type><name>long</name></type> <name>sentTimeMillis</name></decl></parameter>,
                              <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type> <name>attachments</name></decl></parameter>,
                              <parameter><decl><type><name>int</name></type> <name>subscriptionId</name></decl></parameter>,
                              <parameter><decl><type><name>long</name></type> <name>expiresIn</name></decl></parameter>,
                              <parameter><decl><type><name>boolean</name></type> <name>expirationUpdate</name></decl></parameter>,
                              <parameter><decl><type><name>boolean</name></type> <name>unidentified</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>from</name></name>             <operator>=</operator> <name>from</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupId</name></name>          <operator>=</operator> <call><name><name>groupId</name><operator>.</operator><name>orNull</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>sentTimeMillis</name></name>   <operator>=</operator> <name>sentTimeMillis</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>body</name></name>             <operator>=</operator> <name>body</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>push</name></name>             <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>subscriptionId</name></name>   <operator>=</operator> <name>subscriptionId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expiresIn</name></name>        <operator>=</operator> <name>expiresIn</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expirationUpdate</name></name> <operator>=</operator> <name>expirationUpdate</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>quote</name></name>            <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unidentified</name></name>     <operator>=</operator> <name>unidentified</name></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>attachments</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>attachments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>IncomingMediaMessage</name><parameter_list>(<parameter><decl><type><name>Address</name></type> <name>from</name></decl></parameter>,
                              <parameter><decl><type><name>long</name></type> <name>sentTimeMillis</name></decl></parameter>,
                              <parameter><decl><type><name>int</name></type> <name>subscriptionId</name></decl></parameter>,
                              <parameter><decl><type><name>long</name></type> <name>expiresIn</name></decl></parameter>,
                              <parameter><decl><type><name>boolean</name></type> <name>expirationUpdate</name></decl></parameter>,
                              <parameter><decl><type><name>boolean</name></type> <name>unidentified</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>body</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>SignalServiceGroup</name></argument>&gt;</argument_list></name></type> <name>group</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>SignalServiceAttachment</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>attachments</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>QuoteModel</name></argument>&gt;</argument_list></name></type> <name>quote</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Contact</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>sharedContacts</name></decl></parameter>,
                              <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>LinkPreview</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>linkPreviews</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>push</name></name>             <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>from</name></name>             <operator>=</operator> <name>from</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>sentTimeMillis</name></name>   <operator>=</operator> <name>sentTimeMillis</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>body</name></name>             <operator>=</operator> <call><name><name>body</name><operator>.</operator><name>orNull</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>subscriptionId</name></name>   <operator>=</operator> <name>subscriptionId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expiresIn</name></name>        <operator>=</operator> <name>expiresIn</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>expirationUpdate</name></name> <operator>=</operator> <name>expirationUpdate</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>quote</name></name>            <operator>=</operator> <call><name><name>quote</name><operator>.</operator><name>orNull</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unidentified</name></name>     <operator>=</operator> <name>unidentified</name></expr>;</expr_stmt>

    <if>if <condition>(<expr><call><name><name>group</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupId</name></name> <operator>=</operator> <call><name><name>Address</name><operator>.</operator><name>fromSerialized</name></name><argument_list>(<argument><expr><call><name><name>GroupUtil</name><operator>.</operator><name>getEncodedId</name></name><argument_list>(<argument><expr><call><name><name>group</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getGroupId</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
    <else>else                   <block type="pseudo"><expr_stmt><expr><name><name>this</name><operator>.</operator><name>groupId</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>attachments</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>PointerAttachment</name><operator>.</operator><name>forPointers</name></name><argument_list>(<argument><expr><name>attachments</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>sharedContacts</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>sharedContacts</name><operator>.</operator><name>or</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>linkPreviews</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>linkPreviews</name><operator>.</operator><name>or</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>int</name></type> <name>getSubscriptionId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>subscriptionId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>getBody</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>body</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type> <name>getAttachments</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>attachments</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>Address</name></type> <name>getFrom</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>from</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>Address</name></type> <name>getGroupId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>groupId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isPushMessage</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>push</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isExpirationUpdate</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>expirationUpdate</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getSentTimeMillis</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>sentTimeMillis</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getExpiresIn</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>expiresIn</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupMessage</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>groupId</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>QuoteModel</name></type> <name>getQuote</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>quote</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Contact</name></argument>&gt;</argument_list></name></type> <name>getSharedContacts</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>sharedContacts</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>LinkPreview</name></argument>&gt;</argument_list></name></type> <name>getLinkPreviews</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>linkPreviews</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isUnidentified</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>unidentified</name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
