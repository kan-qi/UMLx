<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\mms\OutgoingGroupMediaMessage.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>Attachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contactshare</name><operator>.</operator><name>Contact</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>ThreadDatabase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>linkpreview</name><operator>.</operator><name>LinkPreview</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>Recipient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>Base64</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>internal</name><operator>.</operator><name>push</name><operator>.</operator><name>SignalServiceProtos</name><operator>.</operator><name>GroupContext</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>OutgoingGroupMediaMessage</name> <super><extends>extends <name>OutgoingSecureMediaMessage</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>GroupContext</name></type> <name>group</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>OutgoingGroupMediaMessage</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Recipient</name></type> <name>recipient</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>encodedGroupContext</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type> <name>avatar</name></decl></parameter>,
                                   <parameter><decl><type><name>long</name></type> <name>sentTimeMillis</name></decl></parameter>,
                                   <parameter><decl><type><name>long</name></type> <name>expiresIn</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>QuoteModel</name></type> <name>quote</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Contact</name></argument>&gt;</argument_list></name></type> <name>contacts</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>LinkPreview</name></argument>&gt;</argument_list></name></type> <name>previews</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>
  <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>recipient</name></expr></argument>, <argument><expr><name>encodedGroupContext</name></expr></argument>, <argument><expr><name>avatar</name></expr></argument>, <argument><expr><name>sentTimeMillis</name></expr></argument>,
          <argument><expr><name><name>ThreadDatabase</name><operator>.</operator><name>DistributionTypes</name><operator>.</operator><name>CONVERSATION</name></name></expr></argument>, <argument><expr><name>expiresIn</name></expr></argument>, <argument><expr><name>quote</name></expr></argument>, <argument><expr><name>contacts</name></expr></argument>, <argument><expr><name>previews</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>group</name></name> <operator>=</operator> <call><name><name>GroupContext</name><operator>.</operator><name>parseFrom</name></name><argument_list>(<argument><expr><call><name><name>Base64</name><operator>.</operator><name>decode</name></name><argument_list>(<argument><expr><name>encodedGroupContext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>OutgoingGroupMediaMessage</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Recipient</name></type> <name>recipient</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>GroupContext</name></type> <name>group</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <specifier>final</specifier> <name>Attachment</name></type> <name>avatar</name></decl></parameter>,
                                   <parameter><decl><type><name>long</name></type> <name>sentTimeMillis</name></decl></parameter>,
                                   <parameter><decl><type><name>long</name></type> <name>expireIn</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>QuoteModel</name></type> <name>quote</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Contact</name></argument>&gt;</argument_list></name></type> <name>contacts</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>LinkPreview</name></argument>&gt;</argument_list></name></type> <name>previews</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>recipient</name></expr></argument>, <argument><expr><call><name><name>Base64</name><operator>.</operator><name>encodeBytes</name></name><argument_list>(<argument><expr><call><name><name>group</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><operator>new</operator> <class><super><name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{<block>{<if>if <condition>(<expr><name>avatar</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>avatar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>}</block>}</block></class></expr></argument>,
          <argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></argument>,
          <argument><expr><name><name>ThreadDatabase</name><operator>.</operator><name>DistributionTypes</name><operator>.</operator><name>CONVERSATION</name></name></expr></argument>, <argument><expr><name>expireIn</name></expr></argument>, <argument><expr><name>quote</name></expr></argument>, <argument><expr><name>contacts</name></expr></argument>, <argument><expr><name>previews</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>group</name></name> <operator>=</operator> <name>group</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isGroup</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupUpdate</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>group</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumber</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>GroupContext</name><operator>.</operator><name>Type</name><operator>.</operator><name>UPDATE_VALUE</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isGroupQuit</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>group</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumber</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>GroupContext</name><operator>.</operator><name>Type</name><operator>.</operator><name>QUIT_VALUE</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>GroupContext</name></type> <name>getGroupContext</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>group</name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
