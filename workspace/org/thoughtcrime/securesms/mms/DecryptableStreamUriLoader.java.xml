<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\mms\DecryptableStreamUriLoader.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>Key</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>Options</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>model</name><operator>.</operator><name>ModelLoader</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>model</name><operator>.</operator><name>ModelLoaderFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>model</name><operator>.</operator><name>MultiModelLoaderFactory</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>DecryptableStreamUriLoader</name><operator>.</operator><name>DecryptableUri</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>MessageDigest</name></name>;</import>

<class><specifier>public</specifier> class <name>DecryptableStreamUriLoader</name> <super><implements>implements <name><name>ModelLoader</name><argument_list type="generic">&lt;<argument><name>DecryptableUri</name></argument>, <argument><name>InputStream</name></argument>&gt;</argument_list></name></implements></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>

  <constructor><specifier>private</specifier> <name>DecryptableStreamUriLoader</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Nullable</name></annotation>
  <annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name><name>LoadData</name><argument_list type="generic">&lt;<argument><name>InputStream</name></argument>&gt;</argument_list></name></type> <name>buildLoadData</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>DecryptableUri</name></type> <name>decryptableUri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Options</name></type> <name>options</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>LoadData</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>decryptableUri</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>DecryptableStreamLocalUriFetcher</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>decryptableUri</name><operator>.</operator><name>uri</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>handles</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>DecryptableUri</name></type> <name>decryptableUri</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <class><specifier>static</specifier> class <name>Factory</name> <super><implements>implements <name><name>ModelLoaderFactory</name><argument_list type="generic">&lt;<argument><name>DecryptableUri</name></argument>, <argument><name>InputStream</name></argument>&gt;</argument_list></name></implements></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>

    <constructor><name>Factory</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getApplicationContext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>ModelLoader</name><argument_list type="generic">&lt;<argument><name>DecryptableUri</name></argument>, <argument><name>InputStream</name></argument>&gt;</argument_list></name></type> <name>build</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>MultiModelLoaderFactory</name></type> <name>multiFactory</name></decl></parameter>)</parameter_list> <block>{
      <return>return <expr><operator>new</operator> <call><name>DecryptableStreamUriLoader</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>teardown</name><parameter_list>()</parameter_list> <block>{
      <comment type="line">// Do nothing.</comment>
    }</block></function>
  }</block></class>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>DecryptableUri</name> <super><implements>implements <name>Key</name></implements></super> <block>{
    <decl_stmt><decl><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Uri</name></type>          <name>uri</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>DecryptableUri</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Uri</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>uri</name></name> <operator>=</operator> <name>uri</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>updateDiskCacheKey</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>MessageDigest</name></type> <name>messageDigest</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>messageDigest</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><call><name><name>uri</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{
      <if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">true</literal></expr>;</return></block></then></if>
      <if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

      <decl_stmt><decl><type><name>DecryptableUri</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>DecryptableUri</name><operator>)</operator><name>o</name></expr></init></decl>;</decl_stmt>

      <return>return <expr><call><name><name>uri</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>that</name><operator>.</operator><name>uri</name></name></expr></argument>)</argument_list></call></expr>;</return>

    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><call><name><name>uri</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>
  }</block></class>
}</block></class>

</unit>
