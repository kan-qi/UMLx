<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\service\SmsListener.java"><comment type="block" format="javadoc">/**
 * Copyright (C) 2011 Whisper Systems
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>service</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>BroadcastReceiver</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>provider</name><operator>.</operator><name>Telephony</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>telephony</name><operator>.</operator><name>SmsMessage</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>ApplicationContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>SmsReceiveJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>TextSecurePreferences</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>Util</name></name>;</import>

<class><specifier>public</specifier> class <name>SmsListener</name> <super><extends>extends <name>BroadcastReceiver</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>SMS_RECEIVED_ACTION</name>  <init>= <expr><name><name>Telephony</name><operator>.</operator><name>Sms</name><operator>.</operator><name>Intents</name><operator>.</operator><name>SMS_RECEIVED_ACTION</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>SMS_DELIVERED_ACTION</name> <init>= <expr><name><name>Telephony</name><operator>.</operator><name>Sms</name><operator>.</operator><name>Intents</name><operator>.</operator><name>SMS_DELIVER_ACTION</name></name></expr></init></decl>;</decl_stmt>

  <function><specifier>private</specifier> <type><name>boolean</name></type> <name>isExemption</name><parameter_list>(<parameter><decl><type><name>SmsMessage</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>messageBody</name></decl></parameter>)</parameter_list> <block>{

    <comment type="line">// ignore CLASS0 ("flash") messages</comment>
    <if>if <condition>(<expr><call><name><name>message</name><operator>.</operator><name>getMessageClass</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>SmsMessage</name><operator>.</operator><name>MessageClass</name><operator>.</operator><name>CLASS_0</name></name></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><literal type="boolean">true</literal></expr>;</return></block></then></if>

    <comment type="line">// ignore OTP messages from Sparebank1 (Norwegian bank)</comment>
    <if>if <condition>(<expr><call><name><name>messageBody</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"Sparebank1://otp?"</literal></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    }</block></then></if>

    <return>return
      <expr><call><name><name>message</name><operator>.</operator><name>getOriginatingAddress</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">7</literal> <operator>&amp;&amp;</operator>
      <operator>(</operator><call><name><name>messageBody</name><operator>.</operator><name>toUpperCase</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><literal type="string">"//ANDROID:"</literal></expr></argument>)</argument_list></call> <operator>||</operator> <comment type="line">// Sprint Visual Voicemail</comment>
       <call><name><name>messageBody</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"//BREW:"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return> <comment type="line">//BREW stands for âBinary Runtime Environment for Wireless"</comment>
  }</block></function>

  <function><specifier>private</specifier> <type><name>SmsMessage</name></type> <name>getSmsMessageFromIntent</name><parameter_list>(<parameter><decl><type><name>Intent</name></type> <name>intent</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>Bundle</name></type> <name>bundle</name>             <init>= <expr><call><name><name>intent</name><operator>.</operator><name>getExtras</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>pdus</name>             <init>= <expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator><call><name><name>bundle</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"pdus"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>pdus</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name><name>pdus</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><literal type="null">null</literal></expr>;</return></block></then></if>

    <return>return <expr><call><name><name>SmsMessage</name><operator>.</operator><name>createFromPdu</name></name><argument_list>(<argument><expr><operator>(</operator><name><name>byte</name><index>[]</index></name><operator>)</operator><name><name>pdus</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>String</name></type> <name>getSmsMessageBodyFromIntent</name><parameter_list>(<parameter><decl><type><name>Intent</name></type> <name>intent</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>Bundle</name></type> <name>bundle</name>             <init>= <expr><call><name><name>intent</name><operator>.</operator><name>getExtras</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>pdus</name>             <init>= <expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator><call><name><name>bundle</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"pdus"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>StringBuilder</name></type> <name>bodyBuilder</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>pdus</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><literal type="null">null</literal></expr>;</return></block></then></if>

    <for>for <control>(<init><decl><type><name>Object</name></type> <name>pdu</name> <range>: <expr><name>pdus</name></expr></range></decl></init>)</control>
      <block type="pseudo"><expr_stmt><expr><call><name><name>bodyBuilder</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>SmsMessage</name><operator>.</operator><name>createFromPdu</name></name><argument_list>(<argument><expr><operator>(</operator><name><name>byte</name><index>[]</index></name><operator>)</operator><name>pdu</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getDisplayMessageBody</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>

    <return>return <expr><call><name><name>bodyBuilder</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>boolean</name></type> <name>isRelevant</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Intent</name></type> <name>intent</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>SmsMessage</name></type> <name>message</name> <init>= <expr><call><name>getSmsMessageFromIntent</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>messageBody</name> <init>= <expr><call><name>getSmsMessageBodyFromIntent</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>message</name> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>messageBody</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

    <if>if <condition>(<expr><call><name>isExemption</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><name>messageBody</name></expr></argument>)</argument_list></call></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

    <if>if <condition>(<expr><operator>!</operator><call><name><name>ApplicationMigrationService</name><operator>.</operator><name>isDatabaseImported</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>

    <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <name><name>Build</name><operator>.</operator><name>VERSION_CODES</name><operator>.</operator><name>KITKAT</name></name> <operator>&amp;&amp;</operator>
        <call><name><name>SMS_RECEIVED_ACTION</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>intent</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
        <call><name><name>Util</name><operator>.</operator><name>isDefaultSmsProvider</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>)</condition><then>
    <block>{
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    }</block></then></if>

    <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&lt;</operator> <name><name>Build</name><operator>.</operator><name>VERSION_CODES</name><operator>.</operator><name>KITKAT</name></name> <operator>&amp;&amp;</operator>
        <call><name><name>TextSecurePreferences</name><operator>.</operator><name>isInterceptAllSmsEnabled</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>)</condition><then>
    <block>{
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    }</block></then></if>

    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onReceive</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Intent</name></type> <name>intent</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><literal type="string">"SMSListener"</literal></expr></argument>, <argument><expr><literal type="string">"Got SMS broadcast..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><operator>(</operator><call><name><name>intent</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>SMS_DELIVERED_ACTION</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator>
        <operator>(</operator><call><name><name>intent</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>SMS_RECEIVED_ACTION</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator> <call><name>isRelevant</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>)</condition><then>
    <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><literal type="string">"SmsListener"</literal></expr></argument>, <argument><expr><literal type="string">"Constructing SmsReceiveJob..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>pdus</name>           <init>= <expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <call><name><name>intent</name><operator>.</operator><name>getExtras</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"pdus"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type>      <name>subscriptionId</name> <init>= <expr><call><name><name>intent</name><operator>.</operator><name>getExtras</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInt</name><argument_list>(<argument><expr><literal type="string">"subscription"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>ApplicationContext</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getJobManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name>SmsReceiveJob</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>pdus</name></expr></argument>, <argument><expr><name>subscriptionId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name>abortBroadcast</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>
}</block></class>
</unit>
