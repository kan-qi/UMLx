<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\location\SignalPlace.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name><operator>.</operator><name>location</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonIgnore</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonProperty</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>location</name><operator>.</operator><name>places</name><operator>.</operator><name>Place</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>maps</name><operator>.</operator><name>model</name><operator>.</operator><name>LatLng</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>JsonUtils</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<class><specifier>public</specifier> class <name>SignalPlace</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>URL</name> <init>= <expr><literal type="string">"https://maps.google.com/maps"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>SignalPlace</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><name>CharSequence</name></type> <name>name</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><name>CharSequence</name></type> <name>address</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><name>double</name></type> <name>latitude</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><name>double</name></type> <name>longitude</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>SignalPlace</name><parameter_list>(<parameter><decl><type><name>Place</name></type> <name>place</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name>      <operator>=</operator> <call><name><name>place</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>address</name></name>   <operator>=</operator> <call><name><name>place</name><operator>.</operator><name>getAddress</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>latitude</name></name>  <operator>=</operator> <call><name><name>place</name><operator>.</operator><name>getLatLng</name></name><argument_list>()</argument_list></call><operator>.</operator><name>latitude</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>longitude</name></name> <operator>=</operator> <call><name><name>place</name><operator>.</operator><name>getLatLng</name></name><argument_list>()</argument_list></call><operator>.</operator><name>longitude</name></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>SignalPlace</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <function><annotation>@<name>JsonIgnore</name></annotation>
  <specifier>public</specifier> <type><name>LatLng</name></type> <name>getLatLong</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>LatLng</name><argument_list>(<argument><expr><name>latitude</name></expr></argument>, <argument><expr><name>longitude</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>JsonIgnore</name></annotation>
  <specifier>public</specifier> <type><name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>String</name></type> <name>description</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>description</name> <operator>+=</operator> <operator>(</operator><name>name</name> <operator>+</operator> <literal type="string">"\n"</literal><operator>)</operator></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>description</name> <operator>+=</operator> <operator>(</operator><name>address</name> <operator>+</operator> <literal type="string">"\n"</literal><operator>)</operator></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><name>description</name> <operator>+=</operator> <call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>URL</name></expr></argument>)</argument_list></call>
                      <operator>.</operator><call><name>buildUpon</name><argument_list>()</argument_list></call>
                      <operator>.</operator><call><name>appendQueryParameter</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%s,%s"</literal></expr></argument>, <argument><expr><name>latitude</name></expr></argument>, <argument><expr><name>longitude</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>description</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>serialize</name><parameter_list>()</parameter_list> <block>{
    <try>try <block>{
      <return>return <expr><call><name><name>JsonUtils</name><operator>.</operator><name>toJson</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></catch></try>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>SignalPlace</name></type> <name>deserialize</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>String</name></type> <name>serialized</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
    <return>return <expr><call><name><name>JsonUtils</name><operator>.</operator><name>fromJson</name></name><argument_list>(<argument><expr><name>serialized</name></expr></argument>, <argument><expr><name><name>SignalPlace</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
