<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\RecentPhotoViewRail.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name></name>;</package>


<import>import <name><name>android</name><operator>.</operator><name>annotation</name><operator>.</operator><name>TargetApi</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>database</name><operator>.</operator><name>Cursor</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>provider</name><operator>.</operator><name>MediaStore</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>app</name><operator>.</operator><name>LoaderManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>content</name><operator>.</operator><name>Loader</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>DefaultItemAnimator</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>LinearLayoutManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>RecyclerView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>AttributeSet</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>LayoutInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewGroup</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>FrameLayout</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>Key</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>engine</name><operator>.</operator><name>DiskCacheStrategy</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>signature</name><operator>.</operator><name>MediaStoreSignature</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>CursorRecyclerViewAdapter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>database</name><operator>.</operator><name>loaders</name><operator>.</operator><name>RecentPhotosLoader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>GlideApp</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>ViewUtil</name></name>;</import>

<class><specifier>public</specifier> class <name>RecentPhotoViewRail</name> <super><extends>extends <name>FrameLayout</name></extends> <implements>implements <name><name>LoaderManager</name><operator>.</operator><name><name>LoaderCallbacks</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></name></implements></super> <block>{

  <decl_stmt><decl><annotation>@<name>NonNull</name></annotation>  <specifier>private</specifier> <type><specifier>final</specifier> <name>RecyclerView</name></type>          <name>recyclerView</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier>       <type><name>OnItemClickedListener</name></type> <name>listener</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>RecentPhotoViewRail</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>RecentPhotoViewRail</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>RecentPhotoViewRail</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>defStyleAttr</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>, <argument><expr><name>defStyleAttr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>inflate</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>recent_photo_view</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>recyclerView</name></name> <operator>=</operator> <call><name><name>ViewUtil</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>photo_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>recyclerView</name><operator>.</operator><name>setLayoutManager</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LinearLayoutManager</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>LinearLayoutManager</name><operator>.</operator><name>HORIZONTAL</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>recyclerView</name><operator>.</operator><name>setItemAnimator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DefaultItemAnimator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setListener</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>OnItemClickedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>listener</name></name> <operator>=</operator> <name>listener</name></expr>;</expr_stmt>

    <if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>recyclerView</name><operator>.</operator><name>getAdapter</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><operator>(</operator><operator>(</operator><name>RecentPhotoAdapter</name><operator>)</operator><call><name><name>this</name><operator>.</operator><name>recyclerView</name><operator>.</operator><name>getAdapter</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setListener</name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name><name>Loader</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>onCreateLoader</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>Bundle</name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>RecentPhotosLoader</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onLoadFinished</name><parameter_list>(<parameter><decl><type><name><name>Loader</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>loader</name></decl></parameter>, <parameter><decl><type><name>Cursor</name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>recyclerView</name><operator>.</operator><name>setAdapter</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RecentPhotoAdapter</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name><name>RecentPhotosLoader</name><operator>.</operator><name>BASE_URL</name></name></expr></argument>, <argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onLoaderReset</name><parameter_list>(<parameter><decl><type><name><name>Loader</name><argument_list type="generic">&lt;<argument><name>Cursor</name></argument>&gt;</argument_list></name></type> <name>loader</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><operator>(</operator><operator>(</operator><name>CursorRecyclerViewAdapter</name><operator>)</operator><call><name><name>this</name><operator>.</operator><name>recyclerView</name><operator>.</operator><name>getAdapter</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>changeCursor</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>RecentPhotoAdapter</name> <super><extends>extends <name><name>CursorRecyclerViewAdapter</name><argument_list type="generic">&lt;<argument><name><name>RecentPhotoAdapter</name><operator>.</operator><name>RecentPhotoViewHolder</name></name></argument>&gt;</argument_list></name></extends></super> <block>{

    <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
    <specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>RecentPhotoAdapter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>NonNull</name></annotation>  <specifier>private</specifier> <type><specifier>final</specifier> <name>Uri</name></type> <name>baseUri</name></decl>;</decl_stmt>
    <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier> <type><name>OnItemClickedListener</name></type> <name>clickedListener</name></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>RecentPhotoAdapter</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Cursor</name></type> <name>cursor</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Uri</name></type> <name>baseUri</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>OnItemClickedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>baseUri</name></name>         <operator>=</operator> <name>baseUri</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>clickedListener</name></name> <operator>=</operator> <name>listener</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>RecentPhotoViewHolder</name></type> <name>onCreateItemViewHolder</name><parameter_list>(<parameter><decl><type><name>ViewGroup</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>viewType</name></decl></parameter>)</parameter_list> <block>{
      <decl_stmt><decl><type><name>View</name></type> <name>itemView</name> <init>= <expr><call><name><name>LayoutInflater</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                                    <operator>.</operator><call><name>inflate</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>recent_photo_view_item</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <return>return <expr><operator>new</operator> <call><name>RecentPhotoViewHolder</name><argument_list>(<argument><expr><name>itemView</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onBindItemViewHolder</name><parameter_list>(<parameter><decl><type><name>RecentPhotoViewHolder</name></type> <name>viewHolder</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Cursor</name></type> <name>cursor</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>viewHolder</name><operator>.</operator><name>imageView</name><operator>.</operator><name>setImageDrawable</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>long</name></type>   <name>id</name>           <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>_ID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type>   <name>dateTaken</name>    <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>DATE_TAKEN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type>   <name>dateModified</name> <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>DATE_MODIFIED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>mimeType</name>     <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>MIME_TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>bucketId</name>     <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>BUCKET_ID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type>    <name>orientation</name>  <init>= <expr><call><name><name>cursor</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>ORIENTATION</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type>    <name>width</name>        <init>= <expr><ternary><condition><expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <literal type="number">16</literal></expr> ?</condition><then> <expr><call><name><name>cursor</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><call><name>getWidthColumn</name><argument_list>(<argument><expr><name>orientation</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type>    <name>height</name>       <init>= <expr><ternary><condition><expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <literal type="number">16</literal></expr> ?</condition><then> <expr><call><name><name>cursor</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><call><name><name>cursor</name><operator>.</operator><name>getColumnIndexOrThrow</name></name><argument_list>(<argument><expr><call><name>getHeightColumn</name><argument_list>(<argument><expr><name>orientation</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

      <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>uri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>withAppendedPath</name></name><argument_list>(<argument><expr><name>baseUri</name></expr></argument>, <argument><expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <decl_stmt><decl><type><name>Key</name></type> <name>signature</name> <init>= <expr><operator>new</operator> <call><name>MediaStoreSignature</name><argument_list>(<argument><expr><name>mimeType</name></expr></argument>, <argument><expr><name>dateModified</name></expr></argument>, <argument><expr><name>orientation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>GlideApp</name><operator>.</operator><name>with</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getApplicationContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>load</name><argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>signature</name><argument_list>(<argument><expr><name>signature</name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>diskCacheStrategy</name><argument_list>(<argument><expr><name><name>DiskCacheStrategy</name><operator>.</operator><name>NONE</name></name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name><name>viewHolder</name><operator>.</operator><name>imageView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>viewHolder</name><operator>.</operator><name>imageView</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>v</name></decl></parameter></parameter_list> -&gt; <block>{
        <if>if <condition>(<expr><name>clickedListener</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>clickedListener</name><operator>.</operator><name>onItemClicked</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name>mimeType</name></expr></argument>, <argument><expr><name>bucketId</name></expr></argument>, <argument><expr><name>dateTaken</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
      }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    }</block></function>

    <function><annotation>@<name>TargetApi</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></annotation>
    <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"SuspiciousNameCombination"</literal></expr></argument>)</argument_list></annotation>
    <specifier>private</specifier> <type><name>String</name></type> <name>getWidthColumn</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>orientation</name></decl></parameter>)</parameter_list> <block>{
      <if>if <condition>(<expr><name>orientation</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>orientation</name> <operator>==</operator> <literal type="number">180</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>WIDTH</name></name></expr>;</return></block></then>
      <else>else                                        <block type="pseudo"><return>return <expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>HEIGHT</name></name></expr>;</return></block></else></if>
    }</block></function>

    <function><annotation>@<name>TargetApi</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></annotation>
    <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"SuspiciousNameCombination"</literal></expr></argument>)</argument_list></annotation>
    <specifier>private</specifier> <type><name>String</name></type> <name>getHeightColumn</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>orientation</name></decl></parameter>)</parameter_list> <block>{
      <if>if <condition>(<expr><name>orientation</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>orientation</name> <operator>==</operator> <literal type="number">180</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>HEIGHT</name></name></expr>;</return></block></then>
      <else>else                                        <block type="pseudo"><return>return <expr><name><name>MediaStore</name><operator>.</operator><name>Images</name><operator>.</operator><name>ImageColumns</name><operator>.</operator><name>WIDTH</name></name></expr>;</return></block></else></if>
    }</block></function>

    <function><specifier>public</specifier> <type><name>void</name></type> <name>setListener</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>OnItemClickedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>clickedListener</name></name> <operator>=</operator> <name>listener</name></expr>;</expr_stmt>
    }</block></function>

    <class><specifier>static</specifier> class <name>RecentPhotoViewHolder</name> <super><extends>extends <name><name>RecyclerView</name><operator>.</operator><name>ViewHolder</name></name></extends></super> <block>{

      <decl_stmt><decl><type><name>ImageView</name></type> <name>imageView</name></decl>;</decl_stmt>

      <constructor><name>RecentPhotoViewHolder</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>itemView</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>itemView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>imageView</name></name> <operator>=</operator> <call><name><name>ViewUtil</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><name>itemView</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>thumbnail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></constructor>
    }</block></class>
  }</block></class>

  <interface><specifier>public</specifier> interface <name>OnItemClickedListener</name> <block>{
    <function_decl><type><name>void</name></type> <name>onItemClicked</name><parameter_list>(<parameter><decl><type><name>Uri</name></type> <name>uri</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>mimeType</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>bucketId</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>dateTaken</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>
  }</block></interface>
}</block></class>
</unit>
