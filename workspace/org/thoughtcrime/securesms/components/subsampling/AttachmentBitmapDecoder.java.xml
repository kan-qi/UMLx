<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\subsampling\AttachmentBitmapDecoder.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name><operator>.</operator><name>subsampling</name></name>;</package>


<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>Bitmap</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>BitmapFactory</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>davemorrissey</name><operator>.</operator><name>labs</name><operator>.</operator><name>subscaleview</name><operator>.</operator><name>decoder</name><operator>.</operator><name>ImageDecoder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>davemorrissey</name><operator>.</operator><name>labs</name><operator>.</operator><name>subscaleview</name><operator>.</operator><name>decoder</name><operator>.</operator><name>SkiaImageDecoder</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>PartAuthority</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>

<class><specifier>public</specifier> class <name>AttachmentBitmapDecoder</name> <super><implements>implements <name>ImageDecoder</name></implements></super><block>{

  <constructor><specifier>public</specifier> <name>AttachmentBitmapDecoder</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>Bitmap</name></type> <name>decode</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Uri</name></type> <name>uri</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
    <if>if <condition>(<expr><operator>!</operator><call><name><name>PartAuthority</name><operator>.</operator><name>isLocalUri</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><operator>new</operator> <call><name>SkiaImageDecoder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>decode</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>

    <decl_stmt><decl><type><name>InputStream</name></type> <name>inputStream</name> <init>= <expr><call><name><name>PartAuthority</name><operator>.</operator><name>getAttachmentStream</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <try>try <block>{
      <decl_stmt><decl><type><name><name>BitmapFactory</name><operator>.</operator><name>Options</name></name></type> <name>options</name> <init>= <expr><operator>new</operator> <call><name><name>BitmapFactory</name><operator>.</operator><name>Options</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name><name>options</name><operator>.</operator><name>inPreferredConfig</name></name> <operator>=</operator> <name><name>Bitmap</name><operator>.</operator><name>Config</name><operator>.</operator><name>ARGB_8888</name></name></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>Bitmap</name></type> <name>bitmap</name> <init>= <expr><call><name><name>BitmapFactory</name><operator>.</operator><name>decodeStream</name></name><argument_list>(<argument><expr><name>inputStream</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <if>if <condition>(<expr><name>bitmap</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Skia image region decoder returned null bitmap - image format may not be supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      }</block></then></if>

      <return>return <expr><name>bitmap</name></expr>;</return>
    }</block> <finally>finally <block>{
      <if>if <condition>(<expr><name>inputStream</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>inputStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
    }</block></finally></try>
  }</block></function>


}</block></class>
</unit>
