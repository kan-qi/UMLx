<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\emoji\CompositeEmojiPageModel.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name><operator>.</operator><name>emoji</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>AttrRes</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>annimon</name><operator>.</operator><name>stream</name><operator>.</operator><name>Stream</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>CompositeEmojiPageModel</name> <super><implements>implements <name>EmojiPageModel</name></implements></super> <block>{
  <decl_stmt><decl><annotation>@<name>AttrRes</name></annotation>  <specifier>private</specifier> <type><specifier>final</specifier> <name>int</name></type>         <name>iconAttr</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>NonNull</name></annotation>  <specifier>private</specifier> <type><specifier>final</specifier> <name><name>EmojiPageModel</name><index>[]</index></name></type> <name>models</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>CompositeEmojiPageModel</name><parameter_list>(<parameter><decl><type><annotation>@<name>AttrRes</name></annotation> <name>int</name></type> <name>iconAttr</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>EmojiPageModel</name><modifier>...</modifier></type> <name>models</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconAttr</name></name> <operator>=</operator> <name>iconAttr</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>models</name></name>   <operator>=</operator> <name>models</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>int</name></type> <name>getIconAttr</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>iconAttr</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getEmoji</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>emojis</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>EmojiPageModel</name></type> <name>model</name> <range>: <expr><name>models</name></expr></range></decl></init>)</control> <block>{
      <expr_stmt><expr><call><name><name>emojis</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>.</operator><name>getEmoji</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <return>return <expr><name>emojis</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Emoji</name></argument>&gt;</argument_list></name></type> <name>getDisplayEmoji</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Emoji</name></argument>&gt;</argument_list></name></type> <name>emojis</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>EmojiPageModel</name></type> <name>model</name> <range>: <expr><name>models</name></expr></range></decl></init>)</control> <block>{
      <expr_stmt><expr><call><name><name>emojis</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>.</operator><name>getDisplayEmoji</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <return>return <expr><name>emojis</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>hasSpriteMap</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>getSprite</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>isDynamic</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>
}</block></class>
</unit>
