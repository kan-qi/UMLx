<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\ConversationItemThumbnail.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>res</name><operator>.</operator><name>TypedArray</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>Canvas</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>Paint</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>RectF</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>ColorInt</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>UiThread</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>AttributeSet</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>FrameLayout</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageView</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>Attachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>GlideRequests</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>Slide</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>SlideClickListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>SlidesClickedListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>ThemeUtil</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>ConversationItemThumbnail</name> <super><extends>extends <name>FrameLayout</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><name>ThumbnailView</name></type>          <name>thumbnail</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>AlbumThumbnailView</name></type>     <name>album</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>ImageView</name></type>              <name>shade</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>ConversationItemFooter</name></type> <name>footer</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>CornerMask</name></type>             <name>cornerMask</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>Outliner</name></type>               <name>outliner</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ConversationItemThumbnail</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>init</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>ConversationItemThumbnail</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>init</name><argument_list>(<argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>ConversationItemThumbnail</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>defStyle</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>, <argument><expr><name>defStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>init</name><argument_list>(<argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>AttributeSet</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>inflate</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>conversation_item_thumbnail</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>thumbnail</name></name>  <operator>=</operator> <call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>conversation_thumbnail_image</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>album</name></name>      <operator>=</operator> <call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>conversation_thumbnail_album</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>shade</name></name>      <operator>=</operator> <call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>conversation_thumbnail_shade</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>footer</name></name>     <operator>=</operator> <call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>conversation_thumbnail_footer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>cornerMask</name></name> <operator>=</operator> <operator>new</operator> <call><name>CornerMask</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>outliner</name></name>   <operator>=</operator> <operator>new</operator> <call><name>Outliner</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>outliner</name><operator>.</operator><name>setColor</name></name><argument_list>(<argument><expr><call><name><name>ThemeUtil</name><operator>.</operator><name>getThemedColor</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>attr</name><operator>.</operator><name>conversation_item_image_outline_color</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><name>attrs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>TypedArray</name></type> <name>typedArray</name> <init>= <expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTheme</name><argument_list>()</argument_list></call><operator>.</operator><call><name>obtainStyledAttributes</name><argument_list>(<argument><expr><name>attrs</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>styleable</name><operator>.</operator><name>ConversationItemThumbnail</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setBounds</name></name><argument_list>(<argument><expr><call><name><name>typedArray</name><operator>.</operator><name>getDimensionPixelSize</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>styleable</name><operator>.</operator><name>ConversationItemThumbnail_conversationThumbnail_minWidth</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
                          <argument><expr><call><name><name>typedArray</name><operator>.</operator><name>getDimensionPixelSize</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>styleable</name><operator>.</operator><name>ConversationItemThumbnail_conversationThumbnail_maxWidth</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
                          <argument><expr><call><name><name>typedArray</name><operator>.</operator><name>getDimensionPixelSize</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>styleable</name><operator>.</operator><name>ConversationItemThumbnail_conversationThumbnail_minHeight</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
                          <argument><expr><call><name><name>typedArray</name><operator>.</operator><name>getDimensionPixelSize</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>styleable</name><operator>.</operator><name>ConversationItemThumbnail_conversationThumbnail_maxHeight</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>typedArray</name><operator>.</operator><name>recycle</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"SuspiciousNameCombination"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>dispatchDraw</name><parameter_list>(<parameter><decl><type><name>Canvas</name></type> <name>canvas</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name><name>cornerMask</name><operator>.</operator><name>isLegacy</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>cornerMask</name><operator>.</operator><name>mask</name></name><argument_list>(<argument><expr><name>canvas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>dispatchDraw</name></name><argument_list>(<argument><expr><name>canvas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><operator>!</operator><call><name><name>cornerMask</name><operator>.</operator><name>isLegacy</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>cornerMask</name><operator>.</operator><name>mask</name></name><argument_list>(<argument><expr><name>canvas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><call><name><name>album</name><operator>.</operator><name>getVisibility</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name>VISIBLE</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>outliner</name><operator>.</operator><name>draw</name></name><argument_list>(<argument><expr><name>canvas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>setFocusable</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>focusable</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setFocusable</name></name><argument_list>(<argument><expr><name>focusable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setFocusable</name></name><argument_list>(<argument><expr><name>focusable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>setClickable</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>clickable</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setClickable</name></name><argument_list>(<argument><expr><name>clickable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setClickable</name></name><argument_list>(<argument><expr><name>clickable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>setOnLongClickListener</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>OnLongClickListener</name></type> <name>l</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setOnLongClickListener</name></name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setOnLongClickListener</name></name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>showShade</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>show</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>shade</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>show</name></expr> ?</condition><then> <expr><name>VISIBLE</name></expr> </then><else>: <expr><name>GONE</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>forceLayout</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setCorners</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>topLeft</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>topRight</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bottomRight</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bottomLeft</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>cornerMask</name><operator>.</operator><name>setRadii</name></name><argument_list>(<argument><expr><name>topLeft</name></expr></argument>, <argument><expr><name>topRight</name></expr></argument>, <argument><expr><name>bottomRight</name></expr></argument>, <argument><expr><name>bottomLeft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>outliner</name><operator>.</operator><name>setRadii</name></name><argument_list>(<argument><expr><name>topLeft</name></expr></argument>, <argument><expr><name>topRight</name></expr></argument>, <argument><expr><name>bottomRight</name></expr></argument>, <argument><expr><name>bottomLeft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>ConversationItemFooter</name></type> <name>getFooter</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>footer</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>UiThread</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>setImageResource</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Slide</name></argument>&gt;</argument_list></name></type> <name>slides</name></decl></parameter>,
                               <parameter><decl><type><name>boolean</name></type> <name>showControls</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>isPreview</name></decl></parameter>)</parameter_list>
  <block>{
    <if>if <condition>(<expr><call><name><name>slides</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name>VISIBLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name>GONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>Attachment</name></type> <name>attachment</name> <init>= <expr><call><name><name>slides</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>asAttachment</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setImageResource</name></name><argument_list>(<argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><call><name><name>slides</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>showControls</name></expr></argument>, <argument><expr><name>isPreview</name></expr></argument>, <argument><expr><call><name><name>attachment</name><operator>.</operator><name>getWidth</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>attachment</name><operator>.</operator><name>getHeight</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>setTouchDelegate</name><argument_list>(<argument><expr><call><name><name>thumbnail</name><operator>.</operator><name>getTouchDelegate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name>GONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name>VISIBLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setSlides</name></name><argument_list>(<argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>slides</name></expr></argument>, <argument><expr><name>showControls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>setTouchDelegate</name><argument_list>(<argument><expr><call><name><name>album</name><operator>.</operator><name>getTouchDelegate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setConversationColor</name><parameter_list>(<parameter><decl><type><annotation>@<name>ColorInt</name></annotation> <name>int</name></type> <name>color</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name><name>album</name><operator>.</operator><name>getVisibility</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>VISIBLE</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setCellBackgroundColor</name></name><argument_list>(<argument><expr><name>color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setThumbnailClickListener</name><parameter_list>(<parameter><decl><type><name>SlideClickListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setThumbnailClickListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setThumbnailClickListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setDownloadClickListener</name><parameter_list>(<parameter><decl><type><name>SlidesClickedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>thumbnail</name><operator>.</operator><name>setDownloadClickListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>album</name><operator>.</operator><name>setDownloadClickListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
