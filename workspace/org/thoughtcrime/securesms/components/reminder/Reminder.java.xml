<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\reminder\Reminder.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name><operator>.</operator><name>reminder</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name><operator>.</operator><name>OnClickListener</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>Reminder</name> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><name>CharSequence</name></type> <name>title</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>CharSequence</name></type> <name>text</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>OnClickListener</name></type> <name>okListener</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>OnClickListener</name></type> <name>dismissListener</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>Reminder</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>CharSequence</name></type> <name>title</name></decl></parameter>,
                  <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>CharSequence</name></type> <name>text</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>title</name></name> <operator>=</operator> <name>title</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>text</name></name>  <operator>=</operator> <name>text</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>CharSequence</name></type> <name>getTitle</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>title</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>CharSequence</name></type> <name>getText</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>text</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>OnClickListener</name></type> <name>getOkListener</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>okListener</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>OnClickListener</name></type> <name>getDismissListener</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>dismissListener</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setOkListener</name><parameter_list>(<parameter><decl><type><name>OnClickListener</name></type> <name>okListener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>okListener</name></name> <operator>=</operator> <name>okListener</name></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setDismissListener</name><parameter_list>(<parameter><decl><type><name>OnClickListener</name></type> <name>dismissListener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dismissListener</name></name> <operator>=</operator> <name>dismissListener</name></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isDismissable</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Importance</name></type> <name>getImportance</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>Importance</name><operator>.</operator><name>NORMAL</name></name></expr>;</return>
  }</block></function>


  <enum><specifier>public</specifier> enum <name>Importance</name> <block>{
    <decl><name>NORMAL</name></decl>, <decl><name>ERROR</name></decl>
  }</block></enum>
}</block></class>
</unit>
