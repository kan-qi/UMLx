<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\components\SendButton.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>components</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>AttributeSet</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageButton</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>TransportOption</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>TransportOptions</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>TransportOptions</name><operator>.</operator><name>OnTransportChangedListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>TransportOptionsPopup</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>ViewUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>util</name><operator>.</operator><name>guava</name><operator>.</operator><name>Optional</name></name>;</import>

<class><specifier>public</specifier> class <name>SendButton</name> <super><extends>extends <name>ImageButton</name></extends>
    <implements>implements <name><name>TransportOptions</name><operator>.</operator><name>OnTransportChangedListener</name></name>,
               <name><name>TransportOptionsPopup</name><operator>.</operator><name>SelectedListener</name></name>,
               <name><name>View</name><operator>.</operator><name>OnLongClickListener</name></name></implements></super>
<block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>TransportOptions</name></type> <name>transportOptions</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>TransportOptionsPopup</name></argument>&gt;</argument_list></name></type> <name>transportOptionsPopup</name> <init>= <expr><call><name><name>Optional</name><operator>.</operator><name>absent</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <constructor><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <name>SendButton</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>transportOptions</name></name> <operator>=</operator> <call><name>initializeTransportOptions</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ViewUtil</name><operator>.</operator><name>mirrorIfRtl</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <name>SendButton</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>transportOptions</name></name> <operator>=</operator> <call><name>initializeTransportOptions</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ViewUtil</name><operator>.</operator><name>mirrorIfRtl</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <name>SendButton</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>defStyle</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>, <argument><expr><name>defStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>transportOptions</name></name> <operator>=</operator> <call><name>initializeTransportOptions</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ViewUtil</name><operator>.</operator><name>mirrorIfRtl</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>private</specifier> <type><name>TransportOptions</name></type> <name>initializeTransportOptions</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>media</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>TransportOptions</name></type> <name>transportOptions</name> <init>= <expr><operator>new</operator> <call><name>TransportOptions</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>media</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>addOnTransportChangedListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>setOnLongClickListener</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>transportOptions</name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>TransportOptionsPopup</name></type> <name>getTransportOptionsPopup</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><operator>!</operator><call><name><name>transportOptionsPopup</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>transportOptionsPopup</name> <operator>=</operator> <call><name><name>Optional</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TransportOptionsPopup</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
    <return>return <expr><call><name><name>transportOptionsPopup</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isManualSelection</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>transportOptions</name><operator>.</operator><name>isManualSelection</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>addOnTransportChangedListener</name><parameter_list>(<parameter><decl><type><name>OnTransportChangedListener</name></type> <name>listener</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>addOnTransportChangedListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>TransportOption</name></type> <name>getSelectedTransport</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>transportOptions</name><operator>.</operator><name>getSelectedTransport</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>resetAvailableTransports</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>isMediaMessage</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>reset</name></name><argument_list>(<argument><expr><name>isMediaMessage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>disableTransport</name><parameter_list>(<parameter><decl><type><name><name>TransportOption</name><operator>.</operator><name>Type</name></name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>disableTransport</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setDefaultTransport</name><parameter_list>(<parameter><decl><type><name><name>TransportOption</name><operator>.</operator><name>Type</name></name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>setDefaultTransport</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setTransport</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>TransportOption</name></type> <name>option</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>setSelectedTransport</name></name><argument_list>(<argument><expr><name>option</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setDefaultSubscriptionId</name><parameter_list>(<parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>subscriptionId</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>setDefaultSubscriptionId</name></name><argument_list>(<argument><expr><name>subscriptionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onSelected</name><parameter_list>(<parameter><decl><type><name>TransportOption</name></type> <name>option</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>transportOptions</name><operator>.</operator><name>setSelectedTransport</name></name><argument_list>(<argument><expr><name>option</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getTransportOptionsPopup</name><argument_list>()</argument_list></call><operator>.</operator><call><name>dismiss</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onChange</name><parameter_list>(<parameter><decl><type><name>TransportOption</name></type> <name>newTransport</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>isManualSelection</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>setImageResource</name><argument_list>(<argument><expr><call><name><name>newTransport</name><operator>.</operator><name>getDrawable</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setContentDescription</name><argument_list>(<argument><expr><call><name><name>newTransport</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>onLongClick</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name>isEnabled</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>transportOptions</name><operator>.</operator><name>getEnabledTransports</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name>getTransportOptionsPopup</name><argument_list>()</argument_list></call><operator>.</operator><call><name>display</name><argument_list>(<argument><expr><call><name><name>transportOptions</name><operator>.</operator><name>getEnabledTransports</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    }</block></then></if>

    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>
}</block></class>
</unit>
