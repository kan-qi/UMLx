<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\linkpreview\LinkPreview.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>linkpreview</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonIgnore</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>fasterxml</name><operator>.</operator><name>jackson</name><operator>.</operator><name>annotation</name><operator>.</operator><name>JsonProperty</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>Attachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>AttachmentId</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>DatabaseAttachment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>JsonUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>util</name><operator>.</operator><name>guava</name><operator>.</operator><name>Optional</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<class><specifier>public</specifier> class <name>LinkPreview</name> <block>{

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type>       <name>url</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><specifier>final</specifier> <name>String</name></type>       <name>title</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonProperty</name></annotation>
  <specifier>private</specifier> <type><specifier>final</specifier> <name>AttachmentId</name></type> <name>attachmentId</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>JsonIgnore</name></annotation>
  <specifier>private</specifier> <type><specifier>final</specifier> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type> <name>thumbnail</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>LinkPreview</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>url</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>title</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>DatabaseAttachment</name></type> <name>thumbnail</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>url</name></name>          <operator>=</operator> <name>url</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>title</name></name>        <operator>=</operator> <name>title</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>thumbnail</name></name>    <operator>=</operator> <call><name><name>Optional</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name>thumbnail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>attachmentId</name></name> <operator>=</operator> <call><name><name>thumbnail</name><operator>.</operator><name>getAttachmentId</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>LinkPreview</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>url</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>title</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type> <name>thumbnail</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>url</name></name>          <operator>=</operator> <name>url</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>title</name></name>        <operator>=</operator> <name>title</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>thumbnail</name></name>    <operator>=</operator> <name>thumbnail</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>attachmentId</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>LinkPreview</name><parameter_list>(<parameter><decl><type><annotation>@<name>JsonProperty</name><argument_list>(<argument><expr><literal type="string">"url"</literal></expr></argument>)</argument_list></annotation>          <annotation>@<name>NonNull</name></annotation>  <name>String</name></type> <name>url</name></decl></parameter>,
                     <parameter><decl><type><annotation>@<name>JsonProperty</name><argument_list>(<argument><expr><literal type="string">"title"</literal></expr></argument>)</argument_list></annotation>        <annotation>@<name>NonNull</name></annotation>  <name>String</name></type> <name>title</name></decl></parameter>,
                     <parameter><decl><type><annotation>@<name>JsonProperty</name><argument_list>(<argument><expr><literal type="string">"attachmentId"</literal></expr></argument>)</argument_list></annotation> <annotation>@<name>Nullable</name></annotation> <name>AttachmentId</name></type> <name>attachmentId</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>url</name></name>          <operator>=</operator> <name>url</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>title</name></name>        <operator>=</operator> <name>title</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>attachmentId</name></name> <operator>=</operator> <name>attachmentId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>thumbnail</name></name>    <operator>=</operator> <call><name><name>Optional</name><operator>.</operator><name>absent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>getUrl</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>url</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>getTitle</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>title</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Attachment</name></argument>&gt;</argument_list></name></type> <name>getThumbnail</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>thumbnail</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>AttachmentId</name></type> <name>getAttachmentId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>attachmentId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>serialize</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
    <return>return <expr><call><name><name>JsonUtils</name><operator>.</operator><name>toJson</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>LinkPreview</name></type> <name>deserialize</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>serialized</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
    <return>return <expr><call><name><name>JsonUtils</name><operator>.</operator><name>fromJson</name></name><argument_list>(<argument><expr><name>serialized</name></expr></argument>, <argument><expr><name><name>LinkPreview</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
