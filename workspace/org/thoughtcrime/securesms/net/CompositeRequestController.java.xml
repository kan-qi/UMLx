<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\net\CompositeRequestController.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>net</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>annimon</name><operator>.</operator><name>stream</name><operator>.</operator><name>Stream</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>CompositeRequestController</name> <super><implements>implements <name>RequestController</name></implements></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>RequestController</name></argument>&gt;</argument_list></name></type> <name>controllers</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier>       <type><name>boolean</name></type>                 <name>canceled</name>    <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>void</name></type> <name>addController</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>RequestController</name></type> <name>controller</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>canceled</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>controller</name><operator>.</operator><name>cancel</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>controllers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <specifier>synchronized</specifier> <type><name>void</name></type> <name>cancel</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><name>canceled</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Stream</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name>controllers</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>forEach</name><argument_list>(<argument><expr><name>RequestController</name><operator>::</operator><name>cancel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <specifier>synchronized</specifier> <type><name>boolean</name></type> <name>isCanceled</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>canceled</name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
