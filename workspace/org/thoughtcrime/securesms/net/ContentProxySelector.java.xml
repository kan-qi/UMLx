<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\net\ContentProxySelector.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>net</name></name>;</package>


<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>AsyncTask</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>linkpreview</name><operator>.</operator><name>LinkPreviewDomains</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>BuildConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>Util</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetSocketAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>Proxy</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>ProxySelector</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>SocketAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<class><specifier>public</specifier> class <name>ContentProxySelector</name> <super><extends>extends <name>ProxySelector</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>ContentProxySelector</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>WHITELISTED_DOMAINS</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <static>static <block>{
    <expr_stmt><expr><call><name><name>WHITELISTED_DOMAINS</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name><name>LinkPreviewDomains</name><operator>.</operator><name>LINKS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>WHITELISTED_DOMAINS</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name><name>LinkPreviewDomains</name><operator>.</operator><name>IMAGES</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>WHITELISTED_DOMAINS</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"giphy.com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></static>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Proxy</name></argument>&gt;</argument_list></name></type> <name>CONTENT</name> <init>= <expr><operator>new</operator> <class><super><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Proxy</name></argument>&gt;</argument_list></name></super><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list> <block>{<block>{
    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Proxy</name><argument_list>(<argument><expr><name><name>Proxy</name><operator>.</operator><name>Type</name><operator>.</operator><name>HTTP</name></name></expr></argument>, <argument><expr><call><name><name>InetSocketAddress</name><operator>.</operator><name>createUnresolved</name></name><argument_list>(<argument><expr><name><name>BuildConfig</name><operator>.</operator><name>CONTENT_PROXY_HOST</name></name></expr></argument>,
                                                                      <argument><expr><name><name>BuildConfig</name><operator>.</operator><name>CONTENT_PROXY_PORT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block>}</block></class></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Proxy</name></argument>&gt;</argument_list></name></type> <name>select</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{
    <for>for <control>(<init><decl><type><name>String</name></type> <name>domain</name> <range>: <expr><name>WHITELISTED_DOMAINS</name></expr></range></decl></init>)</control> <block>{
      <if>if <condition>(<expr><call><name><name>uri</name><operator>.</operator><name>getHost</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>endsWith</name><argument_list>(<argument><expr><name>domain</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <return>return <expr><name>CONTENT</name></expr>;</return>
      }</block></then></if>
    }</block></for>
    <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Tried to proxy a non-whitelisted domain."</literal></expr></argument>)</argument_list></call></expr>;</throw>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>connectFailed</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>uri</name></decl></parameter>, <parameter><decl><type><name>SocketAddress</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>IOException</name></type> <name>failure</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Connection failed."</literal></expr></argument>, <argument><expr><name>failure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
