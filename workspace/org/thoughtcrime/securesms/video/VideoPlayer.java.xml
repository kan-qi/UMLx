<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\video\VideoPlayer.java"><comment type="block">/*
 * Copyright (C) 2017 Whisper Systems
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>video</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>AttributeSet</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>Window</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>WindowManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>FrameLayout</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>MediaController</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Toast</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>VideoView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>DefaultLoadControl</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ExoPlaybackException</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ExoPlayer</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ExoPlayerFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>LoadControl</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>Player</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>SimpleExoPlayer</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>Timeline</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>extractor</name><operator>.</operator><name>DefaultExtractorsFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>extractor</name><operator>.</operator><name>ExtractorsFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>source</name><operator>.</operator><name>ExtractorMediaSource</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>source</name><operator>.</operator><name>MediaSource</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>source</name><operator>.</operator><name>TrackGroupArray</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>AdaptiveTrackSelection</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>DefaultTrackSelector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>TrackSelection</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>TrackSelectionArray</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>TrackSelector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ui</name><operator>.</operator><name>PlayerControlView</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ui</name><operator>.</operator><name>PlayerView</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ui</name><operator>.</operator><name>SimpleExoPlayerView</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>upstream</name><operator>.</operator><name>BandwidthMeter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>upstream</name><operator>.</operator><name>DefaultBandwidthMeter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>upstream</name><operator>.</operator><name>DefaultDataSourceFactory</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>attachments</name><operator>.</operator><name>AttachmentServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>PartAuthority</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>VideoSlide</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>ViewUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>video</name><operator>.</operator><name>exo</name><operator>.</operator><name>AttachmentDataSourceFactory</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<class><specifier>public</specifier> class <name>VideoPlayer</name> <super><extends>extends <name>FrameLayout</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>VideoPlayer</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier> <type><specifier>final</specifier> <name>VideoView</name></type>           <name>videoView</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier> <type><specifier>final</specifier> <name>PlayerView</name></type>          <name>exoView</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier>       <type><name>SimpleExoPlayer</name></type>     <name>exoPlayer</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier>       <type><name>PlayerControlView</name></type>   <name>exoControls</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier>       <type><name>AttachmentServer</name></type>    <name>attachmentServer</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Nullable</name></annotation> <specifier>private</specifier>       <type><name>Window</name></type>              <name>window</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>VideoPlayer</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>VideoPlayer</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>VideoPlayer</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AttributeSet</name></type> <name>attrs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>defStyleAttr</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>, <argument><expr><name>defStyleAttr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>inflate</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>video_player</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <literal type="number">16</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>exoView</name></name>   <operator>=</operator> <call><name><name>ViewUtil</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>video_view</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>videoView</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>exoControls</name></name> <operator>=</operator> <operator>new</operator> <call><name>PlayerControlView</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>exoControls</name><operator>.</operator><name>setShowTimeoutMs</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>videoView</name></name> <operator>=</operator> <call><name><name>ViewUtil</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>video_view</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>exoView</name></name>   <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>initializeVideoViewControls</name><argument_list>(<argument><expr><name>videoView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setVideoSource</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>VideoSlide</name></type> <name>videoSource</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>autoplay</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>
  <block>{
    <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <literal type="number">16</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>setExoViewSource</name><argument_list>(<argument><expr><name>videoSource</name></expr></argument>, <argument><expr><name>autoplay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
    <else>else                             <block type="pseudo"><expr_stmt><expr><call><name>setVideoViewSource</name><argument_list>(<argument><expr><name>videoSource</name></expr></argument>, <argument><expr><name>autoplay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>pause</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>attachmentServer</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>this</name><operator>.</operator><name>videoView</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>videoView</name><operator>.</operator><name>stopPlayback</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then> <elseif>else <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>exoPlayer</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>exoPlayer</name><operator>.</operator><name>setPlayWhenReady</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if></elseif></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>hideControls</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>exoView</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>exoView</name><operator>.</operator><name>hideController</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>View</name></type> <name>getControlView</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>exoControls</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <return>return <expr><name><name>this</name><operator>.</operator><name>exoControls</name></name></expr>;</return>
    }</block></then></if>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>cleanup</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>attachmentServer</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>attachmentServer</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>exoPlayer</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>exoPlayer</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>setWindow</name><parameter_list>(<parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Window</name></type> <name>window</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>window</name></name> <operator>=</operator> <name>window</name></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setExoViewSource</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>VideoSlide</name></type> <name>videoSource</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>autoplay</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>
  <block>{
    <decl_stmt><decl><type><name>BandwidthMeter</name></type>         <name>bandwidthMeter</name>             <init>= <expr><operator>new</operator> <call><name>DefaultBandwidthMeter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>TrackSelection</name><operator>.</operator><name>Factory</name></name></type> <name>videoTrackSelectionFactory</name> <init>= <expr><operator>new</operator> <call><name><name>AdaptiveTrackSelection</name><operator>.</operator><name>Factory</name></name><argument_list>(<argument><expr><name>bandwidthMeter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>TrackSelector</name></type>          <name>trackSelector</name>              <init>= <expr><operator>new</operator> <call><name>DefaultTrackSelector</name><argument_list>(<argument><expr><name>videoTrackSelectionFactory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>LoadControl</name></type>            <name>loadControl</name>                <init>= <expr><operator>new</operator> <call><name>DefaultLoadControl</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>exoPlayer</name> <operator>=</operator> <call><name><name>ExoPlayerFactory</name><operator>.</operator><name>newSimpleInstance</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>trackSelector</name></expr></argument>, <argument><expr><name>loadControl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>exoPlayer</name><operator>.</operator><name>addListener</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ExoPlayerListener</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">//noinspection ConstantConditions</comment>
    <expr_stmt><expr><call><name><name>exoView</name><operator>.</operator><name>setPlayer</name></name><argument_list>(<argument><expr><name>exoPlayer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">//noinspection ConstantConditions</comment>
    <expr_stmt><expr><call><name><name>exoControls</name><operator>.</operator><name>setPlayer</name></name><argument_list>(<argument><expr><name>exoPlayer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>DefaultDataSourceFactory</name></type>    <name>defaultDataSourceFactory</name>    <init>= <expr><operator>new</operator> <call><name>DefaultDataSourceFactory</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"GenericUserAgent"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>AttachmentDataSourceFactory</name></type> <name>attachmentDataSourceFactory</name> <init>= <expr><operator>new</operator> <call><name>AttachmentDataSourceFactory</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>defaultDataSourceFactory</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ExtractorsFactory</name></type>           <name>extractorsFactory</name>           <init>= <expr><operator>new</operator> <call><name>DefaultExtractorsFactory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>MediaSource</name></type> <name>mediaSource</name> <init>= <expr><operator>new</operator> <call><name>ExtractorMediaSource</name><argument_list>(<argument><expr><call><name><name>videoSource</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>attachmentDataSourceFactory</name></expr></argument>, <argument><expr><name>extractorsFactory</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>exoPlayer</name><operator>.</operator><name>prepare</name></name><argument_list>(<argument><expr><name>mediaSource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>exoPlayer</name><operator>.</operator><name>setPlayWhenReady</name></name><argument_list>(<argument><expr><name>autoplay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setVideoViewSource</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>VideoSlide</name></type> <name>videoSource</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>autoplay</name></decl></parameter>)</parameter_list>
    <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>
  <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>attachmentServer</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>attachmentServer</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><call><name><name>videoSource</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>PartAuthority</name><operator>.</operator><name>isLocalUri</name></name><argument_list>(<argument><expr><call><name><name>videoSource</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Starting video attachment server for part provider Uri..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>attachmentServer</name></name> <operator>=</operator> <operator>new</operator> <call><name>AttachmentServer</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>videoSource</name><operator>.</operator><name>asAttachment</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>attachmentServer</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

      <comment type="line">//noinspection ConstantConditions</comment>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>videoView</name><operator>.</operator><name>setVideoURI</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>attachmentServer</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <elseif>else <if>if <condition>(<expr><call><name><name>videoSource</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Playing video directly from non-local Uri..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">//noinspection ConstantConditions</comment>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>videoView</name><operator>.</operator><name>setVideoURI</name></name><argument_list>(<argument><expr><call><name><name>videoSource</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if></elseif> <else>else <block>{
      <expr_stmt><expr><call><name><name>Toast</name><operator>.</operator><name>makeText</name></name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>VideoPlayer_error_playing_video</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Toast</name><operator>.</operator><name>LENGTH_LONG</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>show</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    }</block></else></if>

    <if>if <condition>(<expr><name>autoplay</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>videoView</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>initializeVideoViewControls</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>VideoView</name></type> <name>videoView</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>MediaController</name></type> <name>mediaController</name> <init>= <expr><operator>new</operator> <call><name>MediaController</name><argument_list>(<argument><expr><call><name>getContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>mediaController</name><operator>.</operator><name>setAnchorView</name></name><argument_list>(<argument><expr><name>videoView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mediaController</name><operator>.</operator><name>setMediaPlayer</name></name><argument_list>(<argument><expr><name>videoView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>videoView</name><operator>.</operator><name>setMediaController</name></name><argument_list>(<argument><expr><name>mediaController</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>ExoPlayerListener</name> <super><extends>extends <name><name>Player</name><operator>.</operator><name>DefaultEventListener</name></name></extends></super> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Window</name></type> <name>window</name></decl>;</decl_stmt>

    <constructor><name>ExoPlayerListener</name><parameter_list>(<parameter><decl><type><name>Window</name></type> <name>window</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>window</name></name> <operator>=</operator> <name>window</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onPlayerStateChanged</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>playWhenReady</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>playbackState</name></decl></parameter>)</parameter_list> <block>{
      <switch>switch<condition>(<expr><name>playbackState</name></expr>)</condition> <block>{
        <case>case <expr><name><name>Player</name><operator>.</operator><name>STATE_IDLE</name></name></expr>:</case>
        <case>case <expr><name><name>Player</name><operator>.</operator><name>STATE_BUFFERING</name></name></expr>:</case>
        <case>case <expr><name><name>Player</name><operator>.</operator><name>STATE_ENDED</name></name></expr>:</case>
          <expr_stmt><expr><call><name><name>window</name><operator>.</operator><name>clearFlags</name></name><argument_list>(<argument><expr><name><name>WindowManager</name><operator>.</operator><name>LayoutParams</name><operator>.</operator><name>FLAG_KEEP_SCREEN_ON</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name><name>Player</name><operator>.</operator><name>STATE_READY</name></name></expr>:</case>
          <if>if <condition>(<expr><name>playWhenReady</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>window</name><operator>.</operator><name>addFlags</name></name><argument_list>(<argument><expr><name><name>WindowManager</name><operator>.</operator><name>LayoutParams</name><operator>.</operator><name>FLAG_KEEP_SCREEN_ON</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          }</block></then> <else>else <block>{
            <expr_stmt><expr><call><name><name>window</name><operator>.</operator><name>clearFlags</name></name><argument_list>(<argument><expr><name><name>WindowManager</name><operator>.</operator><name>LayoutParams</name><operator>.</operator><name>FLAG_KEEP_SCREEN_ON</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          }</block></else></if>
          <break>break;</break>
        <default>default:</default>
          <break>break;</break>
      }</block></switch>
    }</block></function>
  }</block></class>
}</block></class>
</unit>
