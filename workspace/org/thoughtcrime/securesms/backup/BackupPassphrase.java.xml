<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\backup\BackupPassphrase.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>backup</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>crypto</name><operator>.</operator><name>KeyStoreHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>TextSecurePreferences</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Allows the getting and setting of the backup passphrase, which is stored encrypted on API &gt;= 23.
 */</comment>
<class><specifier>public</specifier> class <name>BackupPassphrase</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>BackupPassphrase</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>get</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>String</name></type> <name>passphrase</name>          <init>= <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>encryptedPassphrase</name> <init>= <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getEncryptedBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&lt;</operator> <literal type="number">23</literal> <operator>||</operator> <operator>(</operator><name>passphrase</name> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>encryptedPassphrase</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr>)</condition><then> <block>{
      <return>return <expr><name>passphrase</name></expr>;</return>
    }</block></then></if>

    <if>if <condition>(<expr><name>encryptedPassphrase</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Migrating to encrypted passphrase."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>set</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>passphrase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>encryptedPassphrase</name> <operator>=</operator> <call><name><name>TextSecurePreferences</name><operator>.</operator><name>getEncryptedBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <decl_stmt><decl><type><name><name>KeyStoreHelper</name><operator>.</operator><name>SealedData</name></name></type> <name>data</name> <init>= <expr><call><name><name>KeyStoreHelper</name><operator>.</operator><name>SealedData</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><name>encryptedPassphrase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>KeyStoreHelper</name><operator>.</operator><name>unseal</name></name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>set</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>passphrase</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>passphrase</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&lt;</operator> <literal type="number">23</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>setBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>passphrase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>setEncryptedBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <decl_stmt><decl><type><name><name>KeyStoreHelper</name><operator>.</operator><name>SealedData</name></name></type> <name>encryptedPassphrase</name> <init>= <expr><call><name><name>KeyStoreHelper</name><operator>.</operator><name>seal</name></name><argument_list>(<argument><expr><call><name><name>passphrase</name><operator>.</operator><name>getBytes</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>setEncryptedBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>encryptedPassphrase</name><operator>.</operator><name>serialize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>setBackupPassphrase</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>
}</block></class>
</unit>
