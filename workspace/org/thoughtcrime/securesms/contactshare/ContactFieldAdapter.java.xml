<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\contactshare\ContactFieldAdapter.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contactshare</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>RecyclerView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>LayoutInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewGroup</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>CheckBox</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>annimon</name><operator>.</operator><name>stream</name><operator>.</operator><name>Stream</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contactshare</name><operator>.</operator><name>Contact</name><operator>.</operator><name>Phone</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>GlideRequests</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>contactshare</name><operator>.</operator><name>Contact</name><operator>.</operator><name>*</name></name>;</import>

<class>class <name>ContactFieldAdapter</name> <super><extends>extends <name><name>RecyclerView</name><operator>.</operator><name><name>Adapter</name><argument_list type="generic">&lt;<argument><name><name>ContactFieldAdapter</name><operator>.</operator><name>ContactFieldViewHolder</name></name></argument>&gt;</argument_list></name></name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Locale</name></type>        <name>locale</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type>       <name>selectable</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Field</name></argument>&gt;</argument_list></name></type>   <name>fields</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>GlideRequests</name></type> <name>glideRequests</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ContactFieldAdapter</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Locale</name></type> <name>locale</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>selectable</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>locale</name></name>        <operator>=</operator> <name>locale</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>glideRequests</name></name> <operator>=</operator> <name>glideRequests</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>selectable</name></name>    <operator>=</operator> <name>selectable</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>fields</name></name>        <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>ContactFieldViewHolder</name></type> <name>onCreateViewHolder</name><parameter_list>(<parameter><decl><type><name>ViewGroup</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>viewType</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>ContactFieldViewHolder</name><argument_list>(<argument><expr><call><name><name>LayoutInflater</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>inflate</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>item_selectable_contact_field</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onBindViewHolder</name><parameter_list>(<parameter><decl><type><name>ContactFieldViewHolder</name></type> <name>holder</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>holder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><call><name><name>fields</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>glideRequests</name></expr></argument>, <argument><expr><name>selectable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onViewRecycled</name><parameter_list>(<parameter><decl><type><name>ContactFieldViewHolder</name></type> <name>holder</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>holder</name><operator>.</operator><name>recycle</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>int</name></type> <name>getItemCount</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>fields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><type><name>void</name></type> <name>setFields</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name>Context</name></type>             <name>context</name></decl></parameter>,
                 <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>Avatar</name></type>              <name>avatar</name></decl></parameter>,
                 <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name><name>List</name><argument_list type="generic">&lt;<argument><name>Phone</name></argument>&gt;</argument_list></name></type>         <name>phoneNumbers</name></decl></parameter>,
                 <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name><name>List</name><argument_list type="generic">&lt;<argument><name>Email</name></argument>&gt;</argument_list></name></type>         <name>emails</name></decl></parameter>,
                 <parameter><decl><type><annotation>@<name>NonNull</name></annotation>  <name><name>List</name><argument_list type="generic">&lt;<argument><name>PostalAddress</name></argument>&gt;</argument_list></name></type> <name>postalAddresses</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><call><name><name>fields</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><name>avatar</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>fields</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name>avatar</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><call><name><name>fields</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>Stream</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name>phoneNumbers</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>map</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>phone</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>phone</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>toList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fields</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>Stream</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name>emails</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>map</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>email</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>email</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>toList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fields</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>Stream</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name>postalAddresses</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>map</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>address</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>address</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>toList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>notifyDataSetChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <class><specifier>static</specifier> class <name>ContactFieldViewHolder</name> <super><extends>extends <name><name>RecyclerView</name><operator>.</operator><name>ViewHolder</name></name></extends></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>TextView</name></type>  <name>value</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>TextView</name></type>  <name>label</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>ImageView</name></type> <name>icon</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>ImageView</name></type> <name>avatar</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>CheckBox</name></type>  <name>checkBox</name></decl>;</decl_stmt>

    <constructor><name>ContactFieldViewHolder</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>itemView</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>itemView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>value</name>    <operator>=</operator> <call><name><name>itemView</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>contact_field_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>label</name>    <operator>=</operator> <call><name><name>itemView</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>contact_field_label</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>icon</name>     <operator>=</operator> <call><name><name>itemView</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>contact_field_icon</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>avatar</name>   <operator>=</operator> <call><name><name>itemView</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>contact_field_avatar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>checkBox</name> <operator>=</operator> <call><name><name>itemView</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>contact_field_checkbox</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><name>void</name></type> <name>bind</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Field</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>GlideRequests</name></type> <name>glideRequests</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>selectable</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>value</name><operator>.</operator><name>setMaxLines</name></name><argument_list>(<argument><expr><name><name>field</name><operator>.</operator><name>maxLines</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>value</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>field</name><operator>.</operator><name>value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>label</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>field</name><operator>.</operator><name>label</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>icon</name><operator>.</operator><name>setImageResource</name></name><argument_list>(<argument><expr><name><name>field</name><operator>.</operator><name>iconResId</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if>if <condition>(<expr><name><name>field</name><operator>.</operator><name>iconUri</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>avatar</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>VISIBLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>glideRequests</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><name><name>field</name><operator>.</operator><name>iconUri</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>circleCrop</name><argument_list>()</argument_list></call><operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name>avatar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
        <expr_stmt><expr><call><name><name>avatar</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>

      <if>if <condition>(<expr><name>selectable</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>VISIBLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setOnCheckedChangeListener</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setChecked</name></name><argument_list>(<argument><expr><call><name><name>field</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setOnCheckedChangeListener</name></name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>buttonView</name></decl></parameter>, <parameter><decl><name>isChecked</name></decl></parameter>)</parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>field</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><name>isChecked</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
        <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setOnCheckedChangeListener</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>
    }</block></function>

    <function><type><name>void</name></type> <name>recycle</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>checkBox</name><operator>.</operator><name>setOnCheckedChangeListener</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
  }</block></class>

  <class><specifier>static</specifier> class <name>Field</name> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type>     <name>value</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type>     <name>label</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type>        <name>iconResId</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type>        <name>maxLines</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Selectable</name></type> <name>selectable</name></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Nullable</name></annotation>
    <type><specifier>final</specifier> <name>Uri</name></type>        <name>iconUri</name></decl>;</decl_stmt>

    <constructor><name>Field</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Phone</name></type> <name>phoneNumber</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Locale</name></type> <name>locale</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name>      <operator>=</operator> <call><name><name>ContactUtil</name><operator>.</operator><name>getPrettyPhoneNumber</name></name><argument_list>(<argument><expr><name>phoneNumber</name></expr></argument>, <argument><expr><name>locale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconResId</name></name>  <operator>=</operator> <name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_call_white_24dp</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconUri</name></name>    <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>maxLines</name></name>   <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>selectable</name></name> <operator>=</operator> <name>phoneNumber</name></expr>;</expr_stmt>

      <switch>switch <condition>(<expr><call><name><name>phoneNumber</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
        <case>case <expr><name>HOME</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_home</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>MOBILE</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_mobile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>WORK</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_work</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>CUSTOM</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <ternary><condition><expr><call><name><name>phoneNumber</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>phoneNumber</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr>;</expr_stmt>
          <break>break;</break>
        <default>default:</default>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
      }</block></switch>
    }</block></constructor>

    <constructor><name>Field</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Email</name></type> <name>email</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name>      <operator>=</operator> <call><name><name>email</name><operator>.</operator><name>getEmail</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconResId</name></name>  <operator>=</operator> <name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>baseline_email_white_24</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconUri</name></name>    <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>maxLines</name></name>   <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>selectable</name></name> <operator>=</operator> <name>email</name></expr>;</expr_stmt>

      <switch>switch <condition>(<expr><call><name><name>email</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
        <case>case <expr><name>HOME</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_home</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>MOBILE</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_mobile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>WORK</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_work</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>CUSTOM</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <ternary><condition><expr><call><name><name>email</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>email</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr>;</expr_stmt>
          <break>break;</break>
        <default>default:</default>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
      }</block></switch>
    }</block></constructor>

    <constructor><name>Field</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>PostalAddress</name></type> <name>postalAddress</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name>      <operator>=</operator> <call><name><name>postalAddress</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconResId</name></name>  <operator>=</operator> <name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>ic_location_on_white_24dp</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconUri</name></name>    <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>maxLines</name></name>   <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>selectable</name></name> <operator>=</operator> <name>postalAddress</name></expr>;</expr_stmt>

      <switch>switch <condition>(<expr><call><name><name>postalAddress</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
        <case>case <expr><name>HOME</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_home</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>WORK</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_work</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>CUSTOM</name></expr>:</case>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <ternary><condition><expr><call><name><name>postalAddress</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>postalAddress</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_missing</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
          <break>break;</break>
        <default>default:</default>
          <expr_stmt><expr><name>label</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ContactShareEditActivity_type_missing</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></switch>
    }</block></constructor>

    <constructor><name>Field</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Avatar</name></type> <name>avatar</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name>      <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconResId</name></name>  <operator>=</operator> <name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>baseline_account_circle_white_24</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>iconUri</name></name>    <operator>=</operator> <ternary><condition><expr><call><name><name>avatar</name><operator>.</operator><name>getAttachment</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>avatar</name><operator>.</operator><name>getAttachment</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDataUri</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>maxLines</name></name>   <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>selectable</name></name> <operator>=</operator> <name>avatar</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>label</name></name>      <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><name>void</name></type> <name>setSelected</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>selected</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>selectable</name><operator>.</operator><name>setSelected</name></name><argument_list>(<argument><expr><name>selected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>boolean</name></type> <name>isSelected</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><call><name><name>selectable</name><operator>.</operator><name>isSelected</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>
  }</block></class>
}</block></class>
</unit>
