<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\util\LongClickCopySpan.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>annotation</name><operator>.</operator><name>TargetApi</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ClipData</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>ColorInt</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextPaint</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>style</name><operator>.</operator><name>URLSpan</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Toast</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>

<class><specifier>public</specifier> class <name>LongClickCopySpan</name> <super><extends>extends <name>URLSpan</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>PREFIX_MAILTO</name> <init>= <expr><literal type="string">"mailto:"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>PREFIX_TEL</name> <init>= <expr><literal type="string">"tel:"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>boolean</name></type> <name>isHighlighted</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>ColorInt</name></annotation>
  <specifier>private</specifier> <type><name>int</name></type> <name>highlightColor</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>LongClickCopySpan</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><type><name>void</name></type> <name>onLongClick</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>widget</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>Context</name></type> <name>context</name> <init>= <expr><call><name><name>widget</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>preparedUrl</name> <init>= <expr><call><name>prepareUrl</name><argument_list>(<argument><expr><call><name>getURL</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>copyUrl</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>preparedUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Toast</name><operator>.</operator><name>makeText</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>,
            <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>ConversationItem_copied_text</name></name></expr></argument>, <argument><expr><name>preparedUrl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Toast</name><operator>.</operator><name>LENGTH_SHORT</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>show</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>updateDrawState</name><parameter_list>(<parameter><decl><type><name>TextPaint</name></type> <name>ds</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>updateDrawState</name></name><argument_list>(<argument><expr><name>ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ds</name><operator>.</operator><name>bgColor</name></name> <operator>=</operator> <name>highlightColor</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ds</name><operator>.</operator><name>setUnderlineText</name></name><argument_list>(<argument><expr><operator>!</operator><name>isHighlighted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><type><name>void</name></type> <name>setHighlighted</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>highlighted</name></decl></parameter>, <parameter><decl><type><annotation>@<name>ColorInt</name></annotation> <name>int</name></type> <name>highlightColor</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isHighlighted</name></name> <operator>=</operator> <name>highlighted</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>highlightColor</name></name> <operator>=</operator> <name>highlightColor</name></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>copyUrl</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>sdk</name> <init>= <expr><name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>sdk</name> <operator>&lt;</operator> <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name><operator>.</operator><name>VERSION_CODES</name><operator>.</operator><name>HONEYCOMB</name></name></expr>)</condition><then> <block>{
      <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation> <type><name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>ClipboardManager</name></name></type> <name>clipboard</name> <init>=
              <expr><operator>(</operator><name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>ClipboardManager</name></name><operator>)</operator> <call><name><name>context</name><operator>.</operator><name>getSystemService</name></name><argument_list>(<argument><expr><name><name>Context</name><operator>.</operator><name>CLIPBOARD_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>clipboard</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name>copyUriSdk11</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><annotation>@<name>TargetApi</name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name><operator>.</operator><name>VERSION_CODES</name><operator>.</operator><name>HONEYCOMB</name></name></expr></argument>)</argument_list></annotation>
  <specifier>private</specifier> <type><name>void</name></type> <name>copyUriSdk11</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ClipboardManager</name></name></type> <name>clipboard</name> <init>=
            <expr><operator>(</operator><name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ClipboardManager</name></name><operator>)</operator> <call><name><name>context</name><operator>.</operator><name>getSystemService</name></name><argument_list>(<argument><expr><name><name>Context</name><operator>.</operator><name>CLIPBOARD_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ClipData</name></type> <name>clip</name> <init>= <expr><call><name><name>ClipData</name><operator>.</operator><name>newPlainText</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>app_name</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>clipboard</name><operator>.</operator><name>setPrimaryClip</name></name><argument_list>(<argument><expr><name>clip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>String</name></type> <name>prepareUrl</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name><name>url</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>PREFIX_MAILTO</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><call><name><name>url</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>PREFIX_MAILTO</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then> <elseif>else <if>if <condition>(<expr><call><name><name>url</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>PREFIX_TEL</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <return>return <expr><call><name><name>url</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>PREFIX_TEL</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if></elseif></if>
    <return>return <expr><name>url</name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
