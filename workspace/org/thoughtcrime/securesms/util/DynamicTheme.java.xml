<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\util\DynamicTheme.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>Activity</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>

<class><specifier>public</specifier> class <name>DynamicTheme</name> <block>{

  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>DARK</name>  <init>= <expr><literal type="string">"dark"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>LIGHT</name> <init>= <expr><literal type="string">"light"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>int</name></type> <name>currentTheme</name></decl>;</decl_stmt>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>Activity</name></type> <name>activity</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name>currentTheme</name> <operator>=</operator> <call><name>getSelectedTheme</name><argument_list>(<argument><expr><name>activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>activity</name><operator>.</operator><name>setTheme</name></name><argument_list>(<argument><expr><name>currentTheme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>onResume</name><parameter_list>(<parameter><decl><type><name>Activity</name></type> <name>activity</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>currentTheme</name> <operator>!=</operator> <call><name>getSelectedTheme</name><argument_list>(<argument><expr><name>activity</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><call><name><name>activity</name><operator>.</operator><name>getIntent</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>activity</name><operator>.</operator><name>finish</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>OverridePendingTransition</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>activity</name><operator>.</operator><name>startActivity</name></name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>OverridePendingTransition</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><specifier>protected</specifier> <type><name>int</name></type> <name>getSelectedTheme</name><parameter_list>(<parameter><decl><type><name>Activity</name></type> <name>activity</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>String</name></type> <name>theme</name> <init>= <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getTheme</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><call><name><name>theme</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>DARK</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><name><name>R</name><operator>.</operator><name>style</name><operator>.</operator><name>TextSecure_DarkTheme</name></name></expr>;</return></block></then></if>

    <return>return <expr><name><name>R</name><operator>.</operator><name>style</name><operator>.</operator><name>TextSecure_LightTheme</name></name></expr>;</return>
  }</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>OverridePendingTransition</name> <block>{
    <function><specifier>static</specifier> <type><name>void</name></type> <name>invoke</name><parameter_list>(<parameter><decl><type><name>Activity</name></type> <name>activity</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>activity</name><operator>.</operator><name>overridePendingTransition</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
  }</block></class>
}</block></class>
</unit>
