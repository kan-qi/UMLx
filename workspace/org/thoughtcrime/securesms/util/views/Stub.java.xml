<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\util\views\Stub.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>views</name></name>;</package>


<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewStub</name></name>;</import>

<class><specifier>public</specifier> class <name><name>Stub</name><parameter_list>&lt;<parameter><name>T</name></parameter>&gt;</parameter_list></name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><name>ViewStub</name></type> <name>viewStub</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>T</name></type> <name>view</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>Stub</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>ViewStub</name></type> <name>viewStub</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>viewStub</name></name> <operator>=</operator> <name>viewStub</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>T</name></type> <name>get</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name>view</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>view</name> <operator>=</operator> <operator>(</operator><name>T</name><operator>)</operator><call><name><name>viewStub</name><operator>.</operator><name>inflate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>viewStub</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    }</block></then></if>

    <return>return <expr><name>view</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>resolved</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>view</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
  }</block></function>

}</block></class>
</unit>
