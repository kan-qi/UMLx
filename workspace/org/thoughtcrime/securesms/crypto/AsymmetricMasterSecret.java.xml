<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\crypto\AsymmetricMasterSecret.java"><comment type="block" format="javadoc">/** 
 * Copyright (C) 2011 Whisper Systems
 * Copyright (C) 2013 Open Whisper Systems
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>crypto</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>ecc</name><operator>.</operator><name>ECPrivateKey</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>ecc</name><operator>.</operator><name>ECPublicKey</name></name>;</import>

<comment type="block" format="javadoc">/**
 * When a user first initializes TextSecure, a few secrets
 * are generated.  These are:
 * 
 * 1) A 128bit symmetric encryption key.
 * 2) A 160bit symmetric MAC key.
 * 3) An ECC keypair.
 * 
 * The first two, along with the ECC keypair's private key, are
 * then encrypted on disk using PBE.
 * 
 * This class represents the ECC keypair.
 * 
 * @author Moxie Marlinspike
 *
 */</comment>

<class><specifier>public</specifier> class <name>AsymmetricMasterSecret</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>ECPublicKey</name></type> <name>djbPublicKey</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>ECPrivateKey</name></type> <name>djbPrivateKey</name></decl>;</decl_stmt>


  <constructor><specifier>public</specifier> <name>AsymmetricMasterSecret</name><parameter_list>(<parameter><decl><type><name>ECPublicKey</name></type> <name>djbPublicKey</name></decl></parameter>, <parameter><decl><type><name>ECPrivateKey</name></type> <name>djbPrivateKey</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>djbPublicKey</name></name>   <operator>=</operator> <name>djbPublicKey</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>djbPrivateKey</name></name>  <operator>=</operator> <name>djbPrivateKey</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>ECPublicKey</name></type> <name>getDjbPublicKey</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>djbPublicKey</name></expr>;</return>
  }</block></function>


  <function><specifier>public</specifier> <type><name>ECPrivateKey</name></type> <name>getPrivateKey</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>djbPrivateKey</name></expr>;</return>
  }</block></function>

}</block></class>
</unit>
