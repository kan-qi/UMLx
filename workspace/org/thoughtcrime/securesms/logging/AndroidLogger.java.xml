<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\logging\AndroidLogger.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name></name>;</package>

<class><specifier>public</specifier> class <name>AndroidLogger</name> <super><extends>extends <name><name>Log</name><operator>.</operator><name>Logger</name></name></extends></super> <block>{

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>v</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name><operator>.</operator><name>v</name></name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>d</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>i</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>w</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>e</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name><operator>.</operator><name>e</name></name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>wtf</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name><operator>.</operator><name>wtf</name></name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
