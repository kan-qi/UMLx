<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\notifications\NotificationItem.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>notifications</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>PendingIntent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>app</name><operator>.</operator><name>TaskStackBuilder</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>conversation</name><operator>.</operator><name>ConversationActivity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>mms</name><operator>.</operator><name>SlideDeck</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>recipients</name><operator>.</operator><name>Recipient</name></name>;</import>

<class><specifier>public</specifier> class <name>NotificationItem</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>                        <name>id</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>boolean</name></type>                     <name>mms</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation>  <name>Recipient</name></type>         <name>conversationRecipient</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation>  <name>Recipient</name></type>         <name>individualRecipient</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Recipient</name></type>         <name>threadRecipient</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>                        <name>threadId</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>CharSequence</name></type>      <name>text</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>long</name></type>                        <name>timestamp</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>SlideDeck</name></type>         <name>slideDeck</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>NotificationItem</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>mms</name></decl></parameter>,
                          <parameter><decl><type><annotation>@<name>NonNull</name></annotation>   <name>Recipient</name></type> <name>individualRecipient</name></decl></parameter>,
                          <parameter><decl><type><annotation>@<name>NonNull</name></annotation>   <name>Recipient</name></type> <name>conversationRecipient</name></decl></parameter>,
                          <parameter><decl><type><annotation>@<name>Nullable</name></annotation>  <name>Recipient</name></type> <name>threadRecipient</name></decl></parameter>,
                          <parameter><decl><type><name>long</name></type> <name>threadId</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>CharSequence</name></type> <name>text</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>timestamp</name></decl></parameter>,
                          <parameter><decl><type><annotation>@<name>Nullable</name></annotation> <name>SlideDeck</name></type> <name>slideDeck</name></decl></parameter>)</parameter_list>
  <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>id</name></name>                    <operator>=</operator> <name>id</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mms</name></name>                   <operator>=</operator> <name>mms</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>individualRecipient</name></name>   <operator>=</operator> <name>individualRecipient</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>conversationRecipient</name></name> <operator>=</operator> <name>conversationRecipient</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>threadRecipient</name></name>       <operator>=</operator> <name>threadRecipient</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>text</name></name>                  <operator>=</operator> <name>text</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>threadId</name></name>              <operator>=</operator> <name>threadId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>timestamp</name></name>             <operator>=</operator> <name>timestamp</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>slideDeck</name></name>             <operator>=</operator> <name>slideDeck</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation>  <type><name>Recipient</name></type> <name>getRecipient</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><ternary><condition><expr><name>threadRecipient</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>conversationRecipient</name></expr> </then><else>: <expr><name>threadRecipient</name></expr></else></ternary></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation>  <type><name>Recipient</name></type> <name>getIndividualRecipient</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>individualRecipient</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>CharSequence</name></type> <name>getText</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>text</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getTimestamp</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>timestamp</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getThreadId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>threadId</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>SlideDeck</name></type> <name>getSlideDeck</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>slideDeck</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>PendingIntent</name></type> <name>getPendingIntent</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>Intent</name></type>     <name>intent</name>           <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>ConversationActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Recipient</name></type>  <name>notifyRecipients</name> <init>= <expr><ternary><condition><expr><name>threadRecipient</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>threadRecipient</name></expr> </then><else>: <expr><name>conversationRecipient</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>notifyRecipients</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name><name>ConversationActivity</name><operator>.</operator><name>ADDRESS_EXTRA</name></name></expr></argument>, <argument><expr><call><name><name>notifyRecipients</name><operator>.</operator><name>getAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><literal type="string">"thread_id"</literal></expr></argument>, <argument><expr><name>threadId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>setData</name></name><argument_list>(<argument><expr><operator>(</operator><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"custom://"</literal><operator>+</operator><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name><name>TaskStackBuilder</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call>
                           <operator>.</operator><call><name>addNextIntentWithParentStack</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call>
                           <operator>.</operator><call><name>getPendingIntent</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>PendingIntent</name><operator>.</operator><name>FLAG_UPDATE_CURRENT</name></name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>long</name></type> <name>getId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>id</name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isMms</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>mms</name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
