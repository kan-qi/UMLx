<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\glide\ChunkedImageUrlLoader.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>glide</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>Options</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>model</name><operator>.</operator><name>ModelLoader</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>model</name><operator>.</operator><name>ModelLoaderFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>bumptech</name><operator>.</operator><name>glide</name><operator>.</operator><name>load</name><operator>.</operator><name>model</name><operator>.</operator><name>MultiModelLoaderFactory</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>giph</name><operator>.</operator><name>model</name><operator>.</operator><name>ChunkedImageUrl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>net</name><operator>.</operator><name>ContentProxySelector</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>

<import>import <name><name>okhttp3</name><operator>.</operator><name>OkHttpClient</name></name>;</import>

<class><specifier>public</specifier> class <name>ChunkedImageUrlLoader</name> <super><implements>implements <name><name>ModelLoader</name><argument_list type="generic">&lt;<argument><name>ChunkedImageUrl</name></argument>, <argument><name>InputStream</name></argument>&gt;</argument_list></name></implements></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>OkHttpClient</name></type> <name>client</name></decl>;</decl_stmt>

  <constructor><specifier>private</specifier> <name>ChunkedImageUrlLoader</name><parameter_list>(<parameter><decl><type><name>OkHttpClient</name></type> <name>client</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>client</name></name>  <operator>=</operator> <name>client</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Nullable</name></annotation>
  <annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name><name>LoadData</name><argument_list type="generic">&lt;<argument><name>InputStream</name></argument>&gt;</argument_list></name></type> <name>buildLoadData</name><parameter_list>(<parameter><decl><type><name>ChunkedImageUrl</name></type> <name>url</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>Options</name></type> <name>options</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>LoadData</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ChunkedImageUrlFetcher</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>handles</name><parameter_list>(<parameter><decl><type><name>ChunkedImageUrl</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>Factory</name> <super><implements>implements <name><name>ModelLoaderFactory</name><argument_list type="generic">&lt;<argument><name>ChunkedImageUrl</name></argument>, <argument><name>InputStream</name></argument>&gt;</argument_list></name></implements></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>OkHttpClient</name></type> <name>client</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>Factory</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>client</name></name>  <operator>=</operator> <operator>new</operator> <call><name><name>OkHttpClient</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call>
                                     <operator>.</operator><call><name>proxySelector</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ContentProxySelector</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                                     <operator>.</operator><call><name>cache</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call>
                                     <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name><name>ModelLoader</name><argument_list type="generic">&lt;<argument><name>ChunkedImageUrl</name></argument>, <argument><name>InputStream</name></argument>&gt;</argument_list></name></type> <name>build</name><parameter_list>(<parameter><decl><type><name>MultiModelLoaderFactory</name></type> <name>multiFactory</name></decl></parameter>)</parameter_list> <block>{
      <return>return <expr><operator>new</operator> <call><name>ChunkedImageUrlLoader</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>teardown</name><parameter_list>()</parameter_list> <block>{}</block></function>
  }</block></class>
}</block></class></unit>
