<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\conversation\ConversationPopupActivity.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>conversation</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name><operator>.</operator><name>VERSION</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Build</name><operator>.</operator><name>VERSION_CODES</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>app</name><operator>.</operator><name>ActivityOptionsCompat</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>Display</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>Gravity</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>Menu</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>MenuInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>MenuItem</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>WindowManager</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ListenableFuture</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutionException</name></name>;</import>

<class><specifier>public</specifier> class <name>ConversationPopupActivity</name> <super><extends>extends <name>ConversationActivity</name></extends></super> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>ConversationPopupActivity</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onPreCreate</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onPreCreate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>overridePendingTransition</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_from_top</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_to_top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>bundle</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>ready</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setFlags</name><argument_list>(<argument><expr><name><name>WindowManager</name><operator>.</operator><name>LayoutParams</name><operator>.</operator><name>FLAG_DIM_BEHIND</name></name></expr></argument>,
                         <argument><expr><name><name>WindowManager</name><operator>.</operator><name>LayoutParams</name><operator>.</operator><name>FLAG_DIM_BEHIND</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>WindowManager</name><operator>.</operator><name>LayoutParams</name></name></type> <name>params</name> <init>= <expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAttributes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>params</name><operator>.</operator><name>alpha</name></name>     <operator>=</operator> <literal type="number">1.0f</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>params</name><operator>.</operator><name>dimAmount</name></name> <operator>=</operator> <literal type="number">0.1f</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>params</name><operator>.</operator><name>gravity</name></name>   <operator>=</operator> <name><name>Gravity</name><operator>.</operator><name>TOP</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAttributes</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Display</name></type> <name>display</name> <init>= <expr><call><name>getWindowManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDefaultDisplay</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>     <name>width</name>   <init>= <expr><call><name><name>display</name><operator>.</operator><name>getWidth</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>     <name>height</name>  <init>= <expr><call><name><name>display</name><operator>.</operator><name>getHeight</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>height</name> <operator>&gt;</operator> <name>width</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setLayout</name><argument_list>(<argument><expr><call>(<name>int</name>) <argument_list>(<argument><expr><name>width</name> <operator>*</operator> <literal type="number">.85</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call>(<name>int</name>) <argument_list>(<argument><expr><name>height</name> <operator>*</operator> <literal type="number">.5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
    <else>else                <block type="pseudo"><expr_stmt><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setLayout</name><argument_list>(<argument><expr><call>(<name>int</name>) <argument_list>(<argument><expr><name>width</name> <operator>*</operator> <literal type="number">.7</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call>(<name>int</name>) <argument_list>(<argument><expr><name>height</name> <operator>*</operator> <literal type="number">.75</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>bundle</name></expr></argument>, <argument><expr><name>ready</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>titleView</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onResume</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onResume</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>composeText</name><operator>.</operator><name>requestFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>quickAttachmentToggle</name><operator>.</operator><name>disable</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onPause</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onPause</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if>if <condition>(<expr><call><name>isFinishing</name><argument_list>()</argument_list></call></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>overridePendingTransition</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_from_top</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_to_top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>onPrepareOptionsMenu</name><parameter_list>(<parameter><decl><type><name>Menu</name></type> <name>menu</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>MenuInflater</name></type> <name>inflater</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>getMenuInflater</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>menu</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>inflater</name><operator>.</operator><name>inflate</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>menu</name><operator>.</operator><name>conversation_popup</name></name></expr></argument>, <argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>boolean</name></type> <name>onOptionsItemSelected</name><parameter_list>(<parameter><decl><type><name>MenuItem</name></type> <name>item</name></decl></parameter>)</parameter_list> <block>{
    <switch>switch <condition>(<expr><call><name><name>item</name><operator>.</operator><name>getItemId</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
      <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>menu_expand</name></name></expr>:</case>
        <expr_stmt><expr><call><name>saveDraft</name><argument_list>()</argument_list></call><operator>.</operator><call><name>addListener</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>ListenableFuture</name><operator>.</operator><name><name>Listener</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></name></super><argument_list>()</argument_list> <block>{
          <function><annotation>@<name>Override</name></annotation>
          <specifier>public</specifier> <type><name>void</name></type> <name>onSuccess</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>result</name></decl></parameter>)</parameter_list> <block>{
            <decl_stmt><decl><type><name>ActivityOptionsCompat</name></type> <name>transition</name> <init>= <expr><call><name><name>ActivityOptionsCompat</name><operator>.</operator><name>makeScaleUpAnimation</name></name><argument_list>(<argument><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDecorView</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAttributes</name><argument_list>()</argument_list></call><operator>.</operator><name>width</name></expr></argument>, <argument><expr><call><name>getWindow</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAttributes</name><argument_list>()</argument_list></call><operator>.</operator><name>height</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name><name>ConversationPopupActivity</name><operator>.</operator><name>this</name></name></expr></argument>, <argument><expr><name><name>ConversationActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name><name>ConversationActivity</name><operator>.</operator><name>ADDRESS_EXTRA</name></name></expr></argument>, <argument><expr><call><name>getRecipient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAddress</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name><name>ConversationActivity</name><operator>.</operator><name>THREAD_ID_EXTRA</name></name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if>if <condition>(<expr><name><name>VERSION</name><operator>.</operator><name>SDK_INT</name></name> <operator>&gt;=</operator> <name><name>VERSION_CODES</name><operator>.</operator><name>JELLY_BEAN</name></name></expr>)</condition><then> <block>{
              <expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><call><name><name>transition</name><operator>.</operator><name>toBundle</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else>else <block>{
              <expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name>overridePendingTransition</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>fade_scale_in</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_to_right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <expr_stmt><expr><call><name>finish</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          }</block></function>

          <function><annotation>@<name>Override</name></annotation>
          <specifier>public</specifier> <type><name>void</name></type> <name>onFailure</name><parameter_list>(<parameter><decl><type><name>ExecutionException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
            <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          }</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    }</block></switch>

    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>initializeActionBar</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>initializeActionBar</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getSupportActionBar</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setDisplayHomeAsUpEnabled</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>sendComplete</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>threadId</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>sendComplete</name></name><argument_list>(<argument><expr><name>threadId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>finish</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>updateReminders</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>seenInvite</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name><name>reminderView</name><operator>.</operator><name>resolved</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>reminderView</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVisibility</name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>
}</block></class>
</unit>
