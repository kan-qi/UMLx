<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\Signal-Android\src\org\thoughtcrime\securesms\dependencies\SignalCommunicationModule.java"><package>package <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>dependencies</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>gcm</name><operator>.</operator><name>FcmService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>AttachmentUploadJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceConfigurationUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RefreshUnidentifiedDeliveryAbilityJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RotateProfileKeyJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>TypingSendJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>greenrobot</name><operator>.</operator><name>eventbus</name><operator>.</operator><name>EventBus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>BuildConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>CreateProfileActivity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>DeviceListFragment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>crypto</name><operator>.</operator><name>storage</name><operator>.</operator><name>SignalProtocolStoreImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>events</name><operator>.</operator><name>ReminderUpdateEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>AttachmentDownloadJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>AvatarDownloadJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>CleanPreKeysJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>CreateSignedPreKeyJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>FcmRefreshJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceBlockedUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceContactUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceGroupUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceProfileKeyUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceReadReceiptUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceReadUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>MultiDeviceVerifiedUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>PushGroupSendJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>PushGroupUpdateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>PushMediaSendJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>PushNotificationReceiveJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>PushTextSendJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RefreshAttributesJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RefreshPreKeysJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RequestGroupInfoJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RetrieveProfileAvatarJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RetrieveProfileJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RotateCertificateJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>RotateSignedPreKeyJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>SendDeliveryReceiptJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>jobs</name><operator>.</operator><name>SendReadReceiptJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>preferences</name><operator>.</operator><name>AppProtectionPreferenceFragment</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>push</name><operator>.</operator><name>SecurityEventListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>push</name><operator>.</operator><name>SignalServiceNetworkAccess</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>service</name><operator>.</operator><name>IncomingMessageObserver</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>service</name><operator>.</operator><name>WebRtcCallService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>thoughtcrime</name><operator>.</operator><name>securesms</name><operator>.</operator><name>util</name><operator>.</operator><name>TextSecurePreferences</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>libsignal</name><operator>.</operator><name>util</name><operator>.</operator><name>guava</name><operator>.</operator><name>Optional</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>SignalServiceAccountManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>SignalServiceMessageReceiver</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>SignalServiceMessageSender</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>util</name><operator>.</operator><name>CredentialsProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>util</name><operator>.</operator><name>RealtimeSleepTimer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>util</name><operator>.</operator><name>SleepTimer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>util</name><operator>.</operator><name>UptimeSleepTimer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>whispersystems</name><operator>.</operator><name>signalservice</name><operator>.</operator><name>api</name><operator>.</operator><name>websocket</name><operator>.</operator><name>ConnectivityListener</name></name>;</import>

<import>import <name><name>dagger</name><operator>.</operator><name>Module</name></name>;</import>
<import>import <name><name>dagger</name><operator>.</operator><name>Provides</name></name>;</import>

<class><annotation>@<name>Module</name><argument_list>(<argument><expr><name>complete</name> <operator>=</operator> <literal type="boolean">false</literal></expr></argument>, <argument><expr><name>injects</name> <operator>=</operator> <block>{<expr><name><name>CleanPreKeysJob</name><operator>.</operator><name>class</name></name></expr>,
                                     <argument><expr><name><name>CreateSignedPreKeyJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>PushGroupSendJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>PushTextSendJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>PushMediaSendJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>AttachmentDownloadJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RefreshPreKeysJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>IncomingMessageObserver</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>PushNotificationReceiveJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceContactUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceGroupUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceReadUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceBlockedUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>DeviceListFragment</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RefreshAttributesJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>FcmRefreshJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RequestGroupInfoJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>PushGroupUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>AvatarDownloadJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RotateSignedPreKeyJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>WebRtcCallService</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RetrieveProfileJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceVerifiedUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>CreateProfileActivity</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RetrieveProfileAvatarJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceProfileKeyUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>SendReadReceiptJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceReadReceiptUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>AppProtectionPreferenceFragment</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>FcmService</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RotateCertificateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>SendDeliveryReceiptJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RotateProfileKeyJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>MultiDeviceConfigurationUpdateJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>RefreshUnidentifiedDeliveryAbilityJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>TypingSendJob</name><operator>.</operator><name>class</name></name></expr></argument>,
                                     <argument><expr><name><name>AttachmentUploadJob</name><operator>.</operator><name>class</name></name></expr></argument>}</block></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>SignalCommunicationModule</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TAG</name> <init>= <expr><call><name><name>SignalCommunicationModule</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type>                      <name>context</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>SignalServiceNetworkAccess</name></type>   <name>networkAccess</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>SignalServiceAccountManager</name></type>  <name>accountManager</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>SignalServiceMessageSender</name></type>   <name>messageSender</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>SignalServiceMessageReceiver</name></type> <name>messageReceiver</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>SignalCommunicationModule</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>SignalServiceNetworkAccess</name></type> <name>networkAccess</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name>       <operator>=</operator> <name>context</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>networkAccess</name></name> <operator>=</operator> <name>networkAccess</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Provides</name></annotation>
  <specifier>synchronized</specifier> <type><name>SignalServiceAccountManager</name></type> <name>provideSignalAccountManager</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>accountManager</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>accountManager</name></name> <operator>=</operator> <operator>new</operator> <call><name>SignalServiceAccountManager</name><argument_list>(<argument><expr><call><name><name>networkAccess</name><operator>.</operator><name>getConfiguration</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                            <argument><expr><operator>new</operator> <call><name>DynamicCredentialsProvider</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                            <argument><expr><name><name>BuildConfig</name><operator>.</operator><name>USER_AGENT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <return>return <expr><name><name>this</name><operator>.</operator><name>accountManager</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Provides</name></annotation>
  <specifier>synchronized</specifier> <type><name>SignalServiceMessageSender</name></type> <name>provideSignalMessageSender</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>messageSender</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageSender</name></name> <operator>=</operator> <operator>new</operator> <call><name>SignalServiceMessageSender</name><argument_list>(<argument><expr><call><name><name>networkAccess</name><operator>.</operator><name>getConfiguration</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                          <argument><expr><operator>new</operator> <call><name>DynamicCredentialsProvider</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                          <argument><expr><operator>new</operator> <call><name>SignalProtocolStoreImpl</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                          <argument><expr><name><name>BuildConfig</name><operator>.</operator><name>USER_AGENT</name></name></expr></argument>,
                                                          <argument><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>isMultiDevice</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                          <argument><expr><call><name><name>Optional</name><operator>.</operator><name>fromNullable</name></name><argument_list>(<argument><expr><call><name><name>IncomingMessageObserver</name><operator>.</operator><name>getPipe</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                                                          <argument><expr><call><name><name>Optional</name><operator>.</operator><name>fromNullable</name></name><argument_list>(<argument><expr><call><name><name>IncomingMessageObserver</name><operator>.</operator><name>getUnidentifiedPipe</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                                                          <argument><expr><call><name><name>Optional</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SecurityEventListener</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>messageSender</name><operator>.</operator><name>setMessagePipe</name></name><argument_list>(<argument><expr><call><name><name>IncomingMessageObserver</name><operator>.</operator><name>getPipe</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>IncomingMessageObserver</name><operator>.</operator><name>getUnidentifiedPipe</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>messageSender</name><operator>.</operator><name>setIsMultiDevice</name></name><argument_list>(<argument><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>isMultiDevice</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>

    <return>return <expr><name><name>this</name><operator>.</operator><name>messageSender</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Provides</name></annotation>
  <specifier>synchronized</specifier> <type><name>SignalServiceMessageReceiver</name></type> <name>provideSignalMessageReceiver</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>messageReceiver</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><name>SleepTimer</name></type> <name>sleepTimer</name> <init>=  <expr><ternary><condition><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>isFcmDisabled</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><operator>new</operator> <call><name>RealtimeSleepTimer</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><operator>new</operator> <call><name>UptimeSleepTimer</name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>messageReceiver</name></name> <operator>=</operator> <operator>new</operator> <call><name>SignalServiceMessageReceiver</name><argument_list>(<argument><expr><call><name><name>networkAccess</name><operator>.</operator><name>getConfiguration</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                              <argument><expr><operator>new</operator> <call><name>DynamicCredentialsProvider</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>,
                                                              <argument><expr><name><name>BuildConfig</name><operator>.</operator><name>USER_AGENT</name></name></expr></argument>,
                                                              <argument><expr><operator>new</operator> <call><name>PipeConnectivityListener</name><argument_list>()</argument_list></call></expr></argument>,
                                                              <argument><expr><name>sleepTimer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <return>return <expr><name><name>this</name><operator>.</operator><name>messageReceiver</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Provides</name></annotation>
  <specifier>synchronized</specifier> <type><name>SignalServiceNetworkAccess</name></type> <name>provideSignalServiceNetworkAccess</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>networkAccess</name></expr>;</return>
  }</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>DynamicCredentialsProvider</name> <super><implements>implements <name>CredentialsProvider</name></implements></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>DynamicCredentialsProvider</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getApplicationContext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>String</name></type> <name>getUser</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getLocalNumber</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>String</name></type> <name>getPassword</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getPushServerPassword</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>String</name></type> <name>getSignalingKey</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>getSignalingKey</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
  }</block></class>

  <class><specifier>private</specifier> class <name>PipeConnectivityListener</name> <super><implements>implements <name>ConnectivityListener</name></implements></super> <block>{

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onConnected</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"onConnected()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onConnecting</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>i</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"onConnecting()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onDisconnected</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"onDisconnected()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onAuthenticationFailure</name><parameter_list>()</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>w</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"onAuthenticationFailure()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>TextSecurePreferences</name><operator>.</operator><name>setUnauthorizedReceived</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>EventBus</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>post</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ReminderUpdateEvent</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

  }</block></class>

}</block></class>
</unit>
