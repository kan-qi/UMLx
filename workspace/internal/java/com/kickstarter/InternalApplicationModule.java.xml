<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\internal\java\com\kickstarter\InternalApplicationModule.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>SharedPreferences</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>ApiEndpoint</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>BuildCheck</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>InternalTools</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>InternalToolsType</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>preferences</name><operator>.</operator><name>StringPreference</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>preferences</name><operator>.</operator><name>StringPreferenceType</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>ApiEndpointPreference</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>dagger</name><operator>.</operator><name>Module</name></name>;</import>
<import>import <name><name>dagger</name><operator>.</operator><name>Provides</name></name>;</import>

<class><annotation>@<name>Module</name><argument_list>(<argument><expr><name>includes</name> <operator>=</operator> <name><name>ApplicationModule</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> <specifier>final</specifier> class <name>InternalApplicationModule</name> <block>{
  <function><annotation>@<name>Provides</name></annotation>
  <annotation>@<name>Singleton</name></annotation>
  <type><name>ApiEndpoint</name></type> <name>provideApiEndpoint</name><parameter_list>(<parameter><decl><type><annotation>@<name>ApiEndpointPreference</name></annotation> <specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>StringPreferenceType</name></type> <name>apiEndpointPreference</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>ApiEndpoint</name><operator>.</operator><name>from</name></name><argument_list>(<argument><expr><call><name><name>apiEndpointPreference</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Provides</name></annotation>
  <annotation>@<name>Singleton</name></annotation>
  <annotation>@<name>ApiEndpointPreference</name></annotation>
  <annotation>@<name>NonNull</name></annotation> <type><name>StringPreferenceType</name></type> <name>provideApiEndpointPreference</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>SharedPreferences</name></type> <name>sharedPreferences</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>StringPreference</name><argument_list>(<argument><expr><name>sharedPreferences</name></expr></argument>, <argument><expr><literal type="string">"debug_api_endpoint"</literal></expr></argument>, <argument><expr><call><name><name>ApiEndpoint</name><operator>.</operator><name>PRODUCTION</name><operator>.</operator><name>url</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Provides</name></annotation>
  <type><name>BuildCheck</name></type> <name>provideBuildCheck</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>BuildCheck</name><operator>.</operator><name>DEFAULT</name></name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Provides</name></annotation>
  <annotation>@<name>Singleton</name></annotation>
  <annotation>@<name>NonNull</name></annotation>
  <type><name>InternalToolsType</name></type> <name>providesInternalToolsType</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>InternalTools</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
