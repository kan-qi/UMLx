<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\mijack\Log4jHelper.java"><package>package <name>mijack</name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Environment</name></name>;</import>

<import>import <name><name>de</name><operator>.</operator><name>mindpipe</name><operator>.</operator><name>android</name><operator>.</operator><name>logging</name><operator>.</operator><name>log4j</name><operator>.</operator><name>LogConfigurator</name></name>;</import>

<class><specifier>public</specifier> class <name>Log4jHelper</name> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <specifier>static</specifier> <name>LogConfigurator</name></type> <name>mLogConfigrator</name> <init>= <expr><operator>new</operator> <call><name>LogConfigurator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <static>static <block>{
        <expr_stmt><expr><call><name>configureLog4j</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></static>

    <function><specifier>private</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>configureLog4j</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>fileName</name> <init>= <expr><call><name><name>Environment</name><operator>.</operator><name>getExternalStorageDirectory</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <literal type="string">"log4j.log"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>filePattern</name> <init>= <expr><literal type="string">"%d - [%c] - %p : %m%n"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>maxBackupSize</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>maxFileSize</name> <init>= <expr><literal type="number">1024</literal> <operator>*</operator> <literal type="number">1024</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>configure</name><argument_list>( <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>filePattern</name></expr></argument>, <argument><expr><name>maxBackupSize</name></expr></argument>, <argument><expr><name>maxFileSize</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>configure</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>filePattern</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxBackupSize</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>maxFileSize</name></decl></parameter> )</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>mLogConfigrator</name><operator>.</operator><name>setFileName</name></name><argument_list>( <argument><expr><name>fileName</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mLogConfigrator</name><operator>.</operator><name>setMaxFileSize</name></name><argument_list>( <argument><expr><name>maxFileSize</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mLogConfigrator</name><operator>.</operator><name>setFilePattern</name></name><argument_list>(<argument><expr><name>filePattern</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mLogConfigrator</name><operator>.</operator><name>setMaxBackupSize</name></name><argument_list>(<argument><expr><name>maxBackupSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mLogConfigrator</name><operator>.</operator><name>setUseLogCatAppender</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mLogConfigrator</name><operator>.</operator><name>configure</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    }</block></function>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name></type> <name>getLogger</name><parameter_list>( <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter> )</parameter_list> <block>{
        <decl_stmt><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name></type> <name>logger</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>( <argument><expr><name>name</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><name>logger</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
