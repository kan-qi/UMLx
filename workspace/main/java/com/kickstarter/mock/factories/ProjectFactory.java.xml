<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\mock\factories\ProjectFactory.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>factories</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Backing</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Project</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Reward</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>ProjectFactory</name> <block>{
  <constructor><specifier>private</specifier> <name>ProjectFactory</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>project</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>creator</name> <init>= <expr><call><name><name>UserFactory</name><operator>.</operator><name>creator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>slug</name> <init>= <expr><literal type="string">"slug-1"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>projectUrl</name> <init>= <expr><literal type="string">"https://www.kickstarter.com/projects/"</literal> <operator>+</operator> <call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>creator</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>slug</name></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Project</name><operator>.</operator><name>Urls</name><operator>.</operator><name>Web</name></name></type> <name>web</name> <init>= <expr><call><name><name>Project</name><operator>.</operator><name>Urls</name><operator>.</operator><name>Web</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>project</name><argument_list>(<argument><expr><name>projectUrl</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>rewards</name><argument_list>(<argument><expr><name>projectUrl</name> <operator>+</operator> <literal type="string">"/rewards"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>updates</name><argument_list>(<argument><expr><name>projectUrl</name> <operator>+</operator> <literal type="string">"/posts"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>Project</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>backersCount</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>blurb</name><argument_list>(<argument><expr><literal type="string">"Some blurb"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>category</name><argument_list>(<argument><expr><call><name><name>CategoryFactory</name><operator>.</operator><name>category</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>creator</name><argument_list>(<argument><expr><call><name><name>UserFactory</name><operator>.</operator><name>creator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>country</name><argument_list>(<argument><expr><literal type="string">"US"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>createdAt</name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currency</name><argument_list>(<argument><expr><literal type="string">"USD"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currencySymbol</name><argument_list>(<argument><expr><literal type="string">"$"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currentCurrency</name><argument_list>(<argument><expr><literal type="string">"USD"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currencyTrailingCode</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>fxRate</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>goal</name><argument_list>(<argument><expr><literal type="number">100.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>id</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"Some Name"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledged</name><argument_list>(<argument><expr><literal type="number">50.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>photo</name><argument_list>(<argument><expr><call><name><name>PhotoFactory</name><operator>.</operator><name>photo</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>staffPick</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>state</name><argument_list>(<argument><expr><name><name>Project</name><operator>.</operator><name>STATE_LIVE</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>staticUsdRate</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>slug</name><argument_list>(<argument><expr><name>slug</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>updatedAt</name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>urls</name><argument_list>(<argument><expr><call><name><name>Project</name><operator>.</operator><name>Urls</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>web</name><argument_list>(<argument><expr><name>web</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>video</name><argument_list>(<argument><expr><call><name><name>VideoFactory</name><operator>.</operator><name>video</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>launchedAt</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DateTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>minusDays</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>deadline</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DateTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>plusDays</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>backedProject</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Project</name></type> <name>project</name> <init>= <expr><call><name>project</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Reward</name></type> <name>reward</name> <init>= <expr><call><name><name>RewardFactory</name><operator>.</operator><name>reward</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Backing</name></type> <name>backing</name> <init>= <expr><call><name><name>Backing</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>amount</name><argument_list>(<argument><expr><literal type="number">10.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>backerId</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>id</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>sequence</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>reward</name><argument_list>(<argument><expr><name>reward</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>rewardId</name><argument_list>(<argument><expr><call><name><name>reward</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledgedAt</name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>projectCountry</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>country</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>projectId</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>shippingAmount</name><argument_list>(<argument><expr><literal type="number">0.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>status</name><argument_list>(<argument><expr><name><name>Backing</name><operator>.</operator><name>STATUS_PLEDGED</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>project</name>
      <operator>.</operator><name>toBuilder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>backing</name><argument_list>(<argument><expr><name>backing</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>isBacking</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>backedProjectWithRewardLimited</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Project</name></type> <name>project</name> <init>= <expr><call><name>project</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Reward</name></type> <name>reward</name> <init>= <expr><call><name><name>RewardFactory</name><operator>.</operator><name>limited</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Backing</name></type> <name>backing</name> <init>= <expr><call><name><name>Backing</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>amount</name><argument_list>(<argument><expr><literal type="number">10.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>backerId</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>id</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>sequence</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>reward</name><argument_list>(<argument><expr><name>reward</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>rewardId</name><argument_list>(<argument><expr><call><name><name>reward</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledgedAt</name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>projectCountry</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>country</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>projectId</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>shippingAmount</name><argument_list>(<argument><expr><literal type="number">0.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>status</name><argument_list>(<argument><expr><name><name>Backing</name><operator>.</operator><name>STATUS_PLEDGED</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>project</name>
      <operator>.</operator><name>toBuilder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>backing</name><argument_list>(<argument><expr><name>backing</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>isBacking</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>backedProjectWithRewardLimitReached</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Project</name></type> <name>project</name> <init>= <expr><call><name>project</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Reward</name></type> <name>reward</name> <init>= <expr><call><name><name>RewardFactory</name><operator>.</operator><name>limitReached</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Backing</name></type> <name>backing</name> <init>= <expr><call><name><name>Backing</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>amount</name><argument_list>(<argument><expr><literal type="number">10.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>backerId</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>id</name><argument_list>(<argument><expr><call><name><name>IdFactory</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>sequence</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>reward</name><argument_list>(<argument><expr><name>reward</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>rewardId</name><argument_list>(<argument><expr><call><name><name>reward</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledgedAt</name><argument_list>(<argument><expr><call><name><name>DateTime</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>projectCountry</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>country</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>projectId</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>shippingAmount</name><argument_list>(<argument><expr><literal type="number">0.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>status</name><argument_list>(<argument><expr><name><name>Backing</name><operator>.</operator><name>STATUS_PLEDGED</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>project</name>
      <operator>.</operator><name>toBuilder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>backing</name><argument_list>(<argument><expr><name>backing</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>isBacking</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>halfWayProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"halfwayProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>goal</name><argument_list>(<argument><expr><literal type="number">100.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledged</name><argument_list>(<argument><expr><literal type="number">50.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>allTheWayProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"allTheWayProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>goal</name><argument_list>(<argument><expr><literal type="number">100.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledged</name><argument_list>(<argument><expr><literal type="number">100.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>doubledGoalProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"doubledGoalProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>goal</name><argument_list>(<argument><expr><literal type="number">100.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>pledged</name><argument_list>(<argument><expr><literal type="number">200.0f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>failedProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"failedProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>state</name><argument_list>(<argument><expr><name><name>Project</name><operator>.</operator><name>STATE_FAILED</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>caProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"caProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>country</name><argument_list>(<argument><expr><literal type="string">"CA"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currentCurrency</name><argument_list>(<argument><expr><literal type="string">"CAD"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currencySymbol</name><argument_list>(<argument><expr><literal type="string">"$"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currency</name><argument_list>(<argument><expr><literal type="string">"CAD"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>staticUsdRate</name><argument_list>(<argument><expr><literal type="number">0.75f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>mxCurrencyCAProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"mxCurrencyCAProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>country</name><argument_list>(<argument><expr><literal type="string">"CA"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currentCurrency</name><argument_list>(<argument><expr><literal type="string">"MX$"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currencySymbol</name><argument_list>(<argument><expr><literal type="string">"$"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currency</name><argument_list>(<argument><expr><literal type="string">"CAD"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>staticUsdRate</name><argument_list>(<argument><expr><literal type="number">0.75f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>ukProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"ukProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>country</name><argument_list>(<argument><expr><literal type="string">"UK"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currentCurrency</name><argument_list>(<argument><expr><literal type="string">"GBP"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currencySymbol</name><argument_list>(<argument><expr><literal type="string">"Â£"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>currency</name><argument_list>(<argument><expr><literal type="string">"GBP"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>staticUsdRate</name><argument_list>(<argument><expr><literal type="number">1.5f</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>almostCompletedProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"almostCompleteProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>deadline</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DateTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>plusDays</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>Project</name></type> <name>successfulProject</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"successfulProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>deadline</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DateTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>minus</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>state</name><argument_list>(<argument><expr><name><name>Project</name><operator>.</operator><name>STATE_SUCCESSFUL</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Project</name></type> <name>featured</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"featuredProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>featuredAt</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DateTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Project</name></type> <name>saved</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"savedProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>isStarred</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Project</name></type> <name>staffPick</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>project</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><literal type="string">"staffPickProject"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>staffPick</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
