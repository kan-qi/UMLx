<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\mock\factories\ApiExceptionFactory.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>factories</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>ApiException</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>ErrorEnvelope</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>okhttp3</name><operator>.</operator><name>ResponseBody</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>Observable</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>ApiExceptionFactory</name> <block>{
  <constructor><specifier>private</specifier> <name>ApiExceptionFactory</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>ApiException</name></type> <name>badRequestException</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>ErrorEnvelope</name></type> <name>envelope</name> <init>= <expr><call><name><name>ErrorEnvelope</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>errorMessages</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><literal type="string">"bad request"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>httpCode</name><argument_list>(<argument><expr><literal type="number">400</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ResponseBody</name></type> <name>body</name> <init>= <expr><call><name><name>ResponseBody</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>retrofit2</name><operator>.</operator><name><name>Response</name><argument_list type="generic">&lt;<argument><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>response</name> <init>= <expr><call><name><name>retrofit2</name><operator>.</operator><name>Response</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name>body</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>ApiException</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>ApiException</name></type> <name>apiError</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>ErrorEnvelope</name></type> <name>errorEnvelope</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>ResponseBody</name></type> <name>body</name> <init>= <expr><call><name><name>ResponseBody</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Gson</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toJson</name><argument_list>(<argument><expr><name>errorEnvelope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>retrofit2</name><operator>.</operator><name><name>Response</name><argument_list type="generic">&lt;<argument><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>response</name> <init>= <expr><call><name><name>retrofit2</name><operator>.</operator><name>Response</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><call><name><name>errorEnvelope</name><operator>.</operator><name>httpCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>body</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>ApiException</name><argument_list>(<argument><expr><name>errorEnvelope</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>ApiException</name></type> <name>invalidLoginException</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>ErrorEnvelope</name></type> <name>envelope</name> <init>= <expr><call><name><name>ErrorEnvelope</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>errorMessages</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><literal type="string">"Invalid login."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>httpCode</name><argument_list>(<argument><expr><literal type="number">401</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>ksrCode</name><argument_list>(<argument><expr><name><name>ErrorEnvelope</name><operator>.</operator><name>INVALID_XAUTH_LOGIN</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>ResponseBody</name></type> <name>body</name> <init>= <expr><call><name><name>ResponseBody</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Gson</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toJson</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>retrofit2</name><operator>.</operator><name><name>Response</name><argument_list type="generic">&lt;<argument><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>response</name> <init>= <expr><call><name><name>retrofit2</name><operator>.</operator><name>Response</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><call><name><name>envelope</name><operator>.</operator><name>httpCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>body</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>ApiException</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>ApiException</name></type> <name>tfaRequired</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>ErrorEnvelope</name></type> <name>envelope</name> <init>= <expr><call><name><name>ErrorEnvelope</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>ksrCode</name><argument_list>(<argument><expr><name><name>ErrorEnvelope</name><operator>.</operator><name>TFA_REQUIRED</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>httpCode</name><argument_list>(<argument><expr><literal type="number">403</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>errorMessages</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><literal type="string">"Two-factor authentication required."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ResponseBody</name></type> <name>body</name> <init>= <expr><call><name><name>ResponseBody</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Gson</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toJson</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>retrofit2</name><operator>.</operator><name><name>Response</name><argument_list type="generic">&lt;<argument><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>response</name> <init>= <expr><call><name><name>retrofit2</name><operator>.</operator><name>Response</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><call><name><name>envelope</name><operator>.</operator><name>httpCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>body</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>ApiException</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>ApiException</name></type> <name>tfaFailed</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>ErrorEnvelope</name></type> <name>envelope</name> <init>= <expr><call><name><name>ErrorEnvelope</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>ksrCode</name><argument_list>(<argument><expr><name><name>ErrorEnvelope</name><operator>.</operator><name>TFA_FAILED</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>httpCode</name><argument_list>(<argument><expr><literal type="number">400</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ResponseBody</name></type> <name>body</name> <init>= <expr><call><name><name>ResponseBody</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Gson</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toJson</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>retrofit2</name><operator>.</operator><name><name>Response</name><argument_list type="generic">&lt;<argument><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>response</name> <init>= <expr><call><name><name>retrofit2</name><operator>.</operator><name>Response</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><call><name><name>envelope</name><operator>.</operator><name>httpCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>body</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>ApiException</name><argument_list>(<argument><expr><name>envelope</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
