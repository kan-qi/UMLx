<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\mock\factories\AvatarFactory.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>mock</name><operator>.</operator><name>factories</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Avatar</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>AvatarFactory</name> <block>{
  <constructor><specifier>private</specifier> <name>AvatarFactory</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Avatar</name></type> <name>avatar</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>baseUrl</name> <init>= <expr><literal type="string">"https://www.kickstarter.com/avatars/12345678/"</literal></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>Avatar</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>medium</name><argument_list>(<argument><expr><name>baseUrl</name> <operator>+</operator> <literal type="string">"medium.jpg"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>small</name><argument_list>(<argument><expr><name>baseUrl</name> <operator>+</operator> <literal type="string">"small.jpg"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>thumb</name><argument_list>(<argument><expr><name>baseUrl</name> <operator>+</operator> <literal type="string">"thumb.jpg"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
