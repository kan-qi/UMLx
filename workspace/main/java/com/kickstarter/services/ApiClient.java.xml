<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\services\ApiClient.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>Config</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>operators</name><operator>.</operator><name>ApiErrorOperator</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>operators</name><operator>.</operator><name>Operators</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ObjectUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Activity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Backing</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Category</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Comment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Empty</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Location</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Message</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>MessageThread</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Project</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>ProjectNotification</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>SurveyResponse</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Update</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>BackingBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>CommentBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>LoginWithFacebookBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>MessageBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>ProjectNotificationBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>PushTokenBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>RegisterWithFacebookBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>ResetPasswordBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>SettingsBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>SignupBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apirequests</name><operator>.</operator><name>XauthBody</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>AccessTokenEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>ActivityEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>CategoriesEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>CommentsEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>DiscoverEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>MessageThreadEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>MessageThreadsEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>ProjectStatsEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>ProjectsEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>StarEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>data</name><operator>.</operator><name>Mailbox</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>data</name><operator>.</operator><name>MessageSubject</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>retrofit2</name><operator>.</operator><name>Response</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>Observable</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>Schedulers</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>BooleanUtils</name><operator>.</operator><name>isTrue</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>ApiClient</name> <super><implements>implements <name>ApiClientType</name></implements></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>ApiService</name></type> <name>service</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Gson</name></type> <name>gson</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ApiClient</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>ApiService</name></type> <name>service</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Gson</name></type> <name>gson</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>gson</name></name> <operator>=</operator> <name>gson</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>service</name></name> <operator>=</operator> <name>service</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Config</name></argument>&gt;</argument_list></name></type> <name>config</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>config</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>ActivityEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchActivities</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>fetchActivities</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>ActivityEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchActivities</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Integer</name></type> <name>count</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>categories</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_BACKING</name></name></expr></argument>,
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_CANCELLATION</name></name></expr></argument>,
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_FAILURE</name></name></expr></argument>,
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_LAUNCH</name></name></expr></argument>,
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_SUCCESS</name></name></expr></argument>,
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_UPDATE</name></name></expr></argument>,
      <argument><expr><name><name>Activity</name><operator>.</operator><name>CATEGORY_FOLLOW</name></name></expr></argument>
    )</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>activities</name></name><argument_list>(<argument><expr><name>categories</name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>ActivityEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchActivitiesWithPaginationPath</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>paginationPath</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>activities</name></name><argument_list>(<argument><expr><name>paginationPath</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Category</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>fetchCategories</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>categories</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>map</name><argument_list>(<argument><expr><name>CategoriesEnvelope</name><operator>::</operator><name>categories</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Category</name></argument>&gt;</argument_list></name></type> <name>fetchCategory</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>category</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Category</name></argument>&gt;</argument_list></name></type> <name>fetchCategory</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Category</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name>fetchCategory</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>category</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></type> <name>fetchCurrentUser</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>currentUser</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Location</name></argument>&gt;</argument_list></name></type> <name>fetchLocation</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>param</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name><operator>.</operator><name>location</name></name><argument_list>(<argument><expr><name>param</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>ProjectNotification</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>fetchProjectNotifications</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projectNotifications</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>&gt;</argument_list></name></type> <name>fetchProject</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>param</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>project</name></name><argument_list>(<argument><expr><name>param</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>&gt;</argument_list></name></type> <name>fetchProject</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name>fetchProject</name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>startWith</name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>ProjectsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchProjects</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isMember</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projects</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>isMember</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>DiscoverEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchProjects</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DiscoveryParams</name></type> <name>params</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projects</name></name><argument_list>(<argument><expr><call><name><name>params</name><operator>.</operator><name>queryParams</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>DiscoverEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchProjects</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>paginationUrl</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projects</name></name><argument_list>(<argument><expr><name>paginationUrl</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>ProjectStatsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchProjectStats</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projectStats</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Backing</name></argument>&gt;</argument_list></name></type> <name>fetchProjectBacking</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>User</name></type> <name>user</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projectBacking</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>user</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>CommentsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchComments</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>projectComments</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>CommentsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchComments</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Update</name></type> <name>update</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>updateComments</name></name><argument_list>(<argument><expr><call><name><name>update</name><operator>.</operator><name>projectId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>update</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>CommentsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchComments</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>paginationPath</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>paginatedProjectComments</name></name><argument_list>(<argument><expr><name>paginationPath</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>MessageThreadEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchMessagesForBacking</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Backing</name></type> <name>backing</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>messagesForBacking</name></name><argument_list>(<argument><expr><call><name><name>backing</name><operator>.</operator><name>projectId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>backing</name><operator>.</operator><name>backerId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>MessageThreadEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchMessagesForThread</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>MessageThread</name></type> <name>messageThread</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>messagesForThread</name></name><argument_list>(<argument><expr><call><name><name>messageThread</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>MessageThreadEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchMessagesForThread</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Long</name></type> <name>messageThreadId</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>messagesForThread</name></name><argument_list>(<argument><expr><name>messageThreadId</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>MessageThreadsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchMessageThreads</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Mailbox</name></type> <name>mailbox</name></decl></parameter>)</parameter_list> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Observable</name><argument_list type="generic">&lt;<argument><name><name>Response</name><argument_list type="generic">&lt;<argument><name>MessageThreadsEnvelope</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>apiResponse</name> <init>= <expr><ternary><condition><expr><name>project</name> <operator>==</operator> <literal type="null">null</literal></expr>
      ?</condition><then> <expr><call><name><name>this</name><operator>.</operator><name>service</name><operator>.</operator><name>messageThreads</name></name><argument_list>(<argument><expr><call><name><name>mailbox</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>
      </then><else>: <expr><call><name><name>this</name><operator>.</operator><name>service</name><operator>.</operator><name>messageThreads</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>mailbox</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>apiResponse</name>
      <operator>.</operator><name>lift</name></name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>MessageThreadsEnvelope</name></argument>&gt;</argument_list></name></type> <name>fetchMessageThreadsWithPaginationPath</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>paginationPath</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>paginatedMessageThreads</name></name><argument_list>(<argument><expr><name>paginationPath</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>SurveyResponse</name></argument>&gt;</argument_list></name></type> <name>fetchSurveyResponse</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>long</name></type> <name>surveyResponseId</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>surveyResponse</name></name><argument_list>(<argument><expr><name>surveyResponseId</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>SurveyResponse</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>fetchUnansweredSurveys</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>unansweredSurveys</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Update</name></argument>&gt;</argument_list></name></type> <name>fetchUpdate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>projectParam</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>updateParam</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>update</name></name><argument_list>(<argument><expr><name>projectParam</name></expr></argument>, <argument><expr><name>updateParam</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Update</name></argument>&gt;</argument_list></name></type> <name>fetchUpdate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Update</name></type> <name>update</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>projectParam</name> <init>= <expr><call><name><name>ObjectUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>update</name><operator>.</operator><name>projectId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>updateParam</name> <init>= <expr><call><name><name>ObjectUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>update</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name>fetchUpdate</name><argument_list>(<argument><expr><name>projectParam</name></expr></argument>, <argument><expr><name>updateParam</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>startWith</name><argument_list>(<argument><expr><name>update</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>AccessTokenEnvelope</name></argument>&gt;</argument_list></name></type> <name>loginWithFacebook</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>accessToken</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>login</name></name><argument_list>(<argument><expr><call><name><name>LoginWithFacebookBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>accessToken</name><argument_list>(<argument><expr><name>accessToken</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>AccessTokenEnvelope</name></argument>&gt;</argument_list></name></type> <name>loginWithFacebook</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>fbAccessToken</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>code</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>login</name></name><argument_list>(<argument><expr><call><name><name>LoginWithFacebookBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>accessToken</name><argument_list>(<argument><expr><name>fbAccessToken</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>code</name><argument_list>(<argument><expr><name>code</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>AccessTokenEnvelope</name></argument>&gt;</argument_list></name></type> <name>login</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>email</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>password</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>login</name></name><argument_list>(<argument><expr><call><name><name>XauthBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>email</name><argument_list>(<argument><expr><name>email</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>password</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>AccessTokenEnvelope</name></argument>&gt;</argument_list></name></type> <name>login</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>email</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>password</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>code</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>login</name></name><argument_list>(<argument><expr><call><name><name>XauthBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>email</name><argument_list>(<argument><expr><name>email</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>password</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>code</name><argument_list>(<argument><expr><name>code</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>MessageThread</name></argument>&gt;</argument_list></name></type> <name>markAsRead</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>MessageThread</name></type> <name>messageThread</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>markAsRead</name></name><argument_list>(<argument><expr><call><name><name>messageThread</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Comment</name></argument>&gt;</argument_list></name></type> <name>postComment</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>body</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>postProjectComment</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>CommentBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>body</name><argument_list>(<argument><expr><name>body</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Comment</name></argument>&gt;</argument_list></name></type> <name>postComment</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Update</name></type> <name>update</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>body</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>postUpdateComment</name></name><argument_list>(<argument><expr><call><name><name>update</name><operator>.</operator><name>projectId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>update</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>CommentBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>body</name><argument_list>(<argument><expr><name>body</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Empty</name></argument>&gt;</argument_list></name></type> <name>registerPushToken</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>token</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>registerPushToken</name></name><argument_list>(<argument><expr><call><name><name>PushTokenBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>token</name><argument_list>(<argument><expr><name>token</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>pushServer</name><argument_list>(<argument><expr><literal type="string">"development"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>AccessTokenEnvelope</name></argument>&gt;</argument_list></name></type> <name>registerWithFacebook</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>fbAccessToken</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>sendNewsletters</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>login</name></name><argument_list>(<argument><expr><call><name><name>RegisterWithFacebookBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>accessToken</name><argument_list>(<argument><expr><name>fbAccessToken</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>sendNewsletters</name><argument_list>(<argument><expr><name>sendNewsletters</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>newsletterOptIn</name><argument_list>(<argument><expr><name>sendNewsletters</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></type> <name>resetPassword</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>email</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>resetPassword</name></name><argument_list>(<argument><expr><call><name><name>ResetPasswordBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>email</name><argument_list>(<argument><expr><name>email</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Message</name></argument>&gt;</argument_list></name></type> <name>sendMessage</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>MessageSubject</name></type> <name>messageSubject</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>body</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>MessageBody</name></type> <name>messageBody</name> <init>= <expr><call><name><name>MessageBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>body</name><argument_list>(<argument><expr><name>body</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><call><name><name>messageSubject</name>
      <operator>.</operator><name>value</name></name><argument_list>(
        <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>backing</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>service</name>
          <operator>.</operator><name>sendMessageToBacking</name></name><argument_list>(<argument><expr><call><name><name>backing</name><operator>.</operator><name>projectId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>backing</name><operator>.</operator><name>backerId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>messageBody</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>,
        <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>messageThread</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>service</name>
          <operator>.</operator><name>sendMessageToThread</name></name><argument_list>(<argument><expr><call><name><name>messageThread</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>messageBody</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>,
        <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>project</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>service</name>
          <operator>.</operator><name>sendMessageToProject</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>messageBody</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>
      )</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>AccessTokenEnvelope</name></argument>&gt;</argument_list></name></type> <name>signup</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>email</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>passwordConfirmation</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>sendNewsletters</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>signup</name></name><argument_list>(
        <argument><expr><call><name><name>SignupBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>name</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>email</name><argument_list>(<argument><expr><name>email</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>password</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>passwordConfirmation</name><argument_list>(<argument><expr><name>passwordConfirmation</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>sendNewsletters</name><argument_list>(<argument><expr><name>sendNewsletters</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>newsletterOptIn</name><argument_list>(<argument><expr><name>sendNewsletters</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>&gt;</argument_list></name></type> <name>saveProject</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>starProject</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>map</name><argument_list>(<argument><expr><name>StarEnvelope</name><operator>::</operator><name>project</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>&gt;</argument_list></name></type> <name>toggleProjectSave</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>toggleProjectStar</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>param</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>map</name><argument_list>(<argument><expr><name>StarEnvelope</name><operator>::</operator><name>project</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>Backing</name></argument>&gt;</argument_list></name></type> <name>postBacking</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Backing</name></type> <name>backing</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>checked</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>putProjectBacking</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>backing</name><operator>.</operator><name>backerId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>BackingBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>backer</name><argument_list>(<argument><expr><call><name><name>backing</name><operator>.</operator><name>backerId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>id</name><argument_list>(<argument><expr><call><name><name>backing</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>backerCompletedAt</name><argument_list>(<argument><expr><ternary><condition><expr><name>checked</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>ProjectNotification</name></argument>&gt;</argument_list></name></type> <name>updateProjectNotifications</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>ProjectNotification</name></type> <name>projectNotification</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>checked</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>updateProjectNotifications</name></name><argument_list>(<argument><expr><call><name><name>projectNotification</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>ProjectNotificationBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>email</name><argument_list>(<argument><expr><name>checked</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>mobile</name><argument_list>(<argument><expr><name>checked</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></type> <name>updateUserSettings</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>User</name></type> <name>user</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>service</name>
      <operator>.</operator><name>updateUserSettings</name></name><argument_list>(
        <argument><expr><call><name><name>SettingsBody</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>optedOutOfRecommendations</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>optedOutOfRecommendations</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfBackings</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfBackings</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfComments</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfComments</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfCreatorEdu</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfCreatorEdu</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfFollower</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfFollower</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfFriendActivity</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfFriendActivity</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfMessages</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfMessages</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfPostLikes</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfPostLikes</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyMobileOfUpdates</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyMobileOfUpdates</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfBackings</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfBackings</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfComments</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfComments</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfCreatorDigest</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfCreatorDigest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfCreatorEdu</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfCreatorEdu</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfFollower</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfFollower</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfFriendActivity</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfFriendActivity</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfMessages</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfMessages</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>notifyOfUpdates</name><argument_list>(<argument><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>notifyOfUpdates</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>alumniNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>alumniNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>artsCultureNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>artsCultureNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>filmNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>filmNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>gamesNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>gamesNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>happeningNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>happeningNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>inventNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>inventNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>musicNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>musicNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>promoNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>promoNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>publishingNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>publishingNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>showPublicProfile</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>showPublicProfile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>social</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>social</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>weeklyNewsletter</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>isTrue</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>weeklyNewsletter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>lift</name><argument_list>(<argument><expr><call><name>apiErrorOperator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Utility to create a new {@link ApiErrorOperator}, saves us from littering references to gson throughout the client.
   */</comment>
  <function><specifier>private</specifier> <annotation>@<name><name>NonNull</name> <argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></annotation> <type><name><name>ApiErrorOperator</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>apiErrorOperator</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>Operators</name><operator>.</operator><name>apiError</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>gson</name></name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
