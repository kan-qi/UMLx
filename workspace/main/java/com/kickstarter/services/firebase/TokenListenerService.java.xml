<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\services\firebase\TokenListenerService.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>firebase</name></name>;</package>


<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>firebase</name><operator>.</operator><name>messaging</name><operator>.</operator><name>FirebaseMessagingService</name></name>;</import>


<import>import <name><name>timber</name><operator>.</operator><name>log</name><operator>.</operator><name>Timber</name></name>;</import>

<class><specifier>public</specifier> class <name>TokenListenerService</name> <super><extends>extends <name>FirebaseMessagingService</name></extends></super> <block>{

  <comment type="block" format="javadoc">/**
   * Called if the InstanceID token is updated. This can occur in a variety of scenarios - the
   * InstanceID service might periodically request that we refresh a token every 6 months, or
   * it could force a refresh if a token is invalidated (e.g. security issues, device information
   * is no longer valid. When a token refresh event is received, we create a new register intent
   * to fetch the latest token and update it on the backend.
   * &lt;p&gt;
   * This call is generated by the InstanceID service, not by the app.
   */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onNewToken</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>s</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onNewToken</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Timber</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>s</name> <operator>+</operator> <literal type="string">"Token refreshed, creating new RegisterService intent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>DispatcherKt</name><operator>.</operator><name>dispatchJob</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>RegisterService</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>RegisterService</name><operator>.</operator><name>REGISTER_SERVICE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
