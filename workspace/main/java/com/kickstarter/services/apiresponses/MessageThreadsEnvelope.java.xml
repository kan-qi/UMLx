<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\services\apiresponses\MessageThreadsEnvelope.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Parcelable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>AutoGson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>MessageThread</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>auto</name><operator>.</operator><name>parcel</name><operator>.</operator><name>AutoParcel</name></name>;</import>

<class><annotation>@<name>AutoGson</name></annotation>
<annotation>@<name>AutoParcel</name></annotation>
<specifier>public</specifier> <specifier>abstract</specifier> class <name>MessageThreadsEnvelope</name> <super><implements>implements <name>Parcelable</name></implements></super> <block>{
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>MessageThread</name></argument>&gt;</argument_list></name></type> <name>messageThreads</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>UrlsEnvelope</name></type> <name>urls</name><parameter_list>()</parameter_list>;</function_decl>

  <class><annotation>@<name>AutoGson</name></annotation>
  <annotation>@<name>AutoParcel</name></annotation>
  <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>UrlsEnvelope</name> <super><implements>implements <name>Parcelable</name></implements></super> <block>{
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>ApiEnvelope</name></type> <name>api</name><parameter_list>()</parameter_list>;</function_decl>

    <class><annotation>@<name>AutoGson</name></annotation>
    <annotation>@<name>AutoParcel</name></annotation>
    <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>ApiEnvelope</name> <super><implements>implements <name>Parcelable</name></implements></super> <block>{
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>moreMessageThreads</name><parameter_list>()</parameter_list>;</function_decl>

      <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
      <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
        <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>moreMessageThreads</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>ApiEnvelope</name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
      }</block></class>

      <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Builder</name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_MessageThreadsEnvelope_UrlsEnvelope_ApiEnvelope</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call></expr>;</return>
      }</block></function>
    }</block></class>

    <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
    <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>api</name><parameter_list>(<parameter><decl><type><name>ApiEnvelope</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>UrlsEnvelope</name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
    }</block></class>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Builder</name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_MessageThreadsEnvelope_UrlsEnvelope</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>
  }</block></class>

  <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
  <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>messageThreads</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>MessageThread</name></argument>&gt;</argument_list></name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>urls</name><parameter_list>(<parameter><decl><type><name>UrlsEnvelope</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>MessageThreadsEnvelope</name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></class>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Builder</name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_MessageThreadsEnvelope</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>toBuilder</name><parameter_list>()</parameter_list>;</function_decl>

}</block></class>
</unit>
