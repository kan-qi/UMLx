<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\BuildCheck.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>WebClientType</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>InternalBuildEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>DiscoveryViewModel</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>android</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>AndroidSchedulers</name></name>;</import>
<import>import <name><name>timber</name><operator>.</operator><name>log</name><operator>.</operator><name>Timber</name></name>;</import>

<interface><specifier>public</specifier> interface <name>BuildCheck</name> <block>{
  <function_decl><type><name>void</name></type> <name>bind</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>DiscoveryViewModel</name><operator>.</operator><name>ViewModel</name></name></type> <name>viewModel</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>WebClientType</name></type> <name>client</name></decl></parameter>)</parameter_list>;</function_decl>

  <decl_stmt><decl><type><name>BuildCheck</name></type> <name>DEFAULT</name> <init>= <expr><lambda><parameter_list>(<parameter><decl><name>viewModel</name></decl></parameter>, <parameter><decl><name>client</name></decl></parameter>)</parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>client</name><operator>.</operator><name>pingBeta</name></name><argument_list>()</argument_list></call>
    <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><name>InternalBuildEnvelope</name><operator>::</operator><name>newerBuildAvailable</name></expr></argument>)</argument_list></call>
    <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name><name>viewModel</name><operator>.</operator><name>bindToLifecycle</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
    <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
    <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>viewModel</name><operator>.</operator><name>inputs</name></name><operator>::</operator><name>newerBuildIsAvailable</name></expr></argument>, <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>Timber</name><operator>.</operator><name>e</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr></block></lambda></expr></init></decl>;</decl_stmt>
}</block></interface>
</unit>
