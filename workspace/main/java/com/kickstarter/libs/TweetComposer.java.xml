<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\TweetComposer.java"><comment type="block">/*
 * Copyright (C) 2015 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ***
 *
 * Original: https://github.com/twitter/twitter-kit-android/blob/a9ff5134a736d10f70331ddea4db35c13cb86c89/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
 * Modifications: Kickstarter have added some modifiers and annotations. References to `java.net.URL` have also been
 *   changed to `android.net.URI`.
 */</comment>

<package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>pm</name><operator>.</operator><name>PackageManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>pm</name><operator>.</operator><name>ResolveInfo</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The TweetComposer Kit provides a lightweight mechanism for creating intents to interact with the installed Twitter app or a browser.
 */</comment>
<class><specifier>public</specifier> class <name>TweetComposer</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>MIME_TYPE_PLAIN_TEXT</name> <init>= <expr><literal type="string">"text/plain"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>MIME_TYPE_JPEG</name> <init>= <expr><literal type="string">"image/jpeg"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TWITTER_PACKAGE_NAME</name> <init>= <expr><literal type="string">"com.twitter.android"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>WEB_INTENT</name> <init>= <expr><literal type="string">"https://twitter.com/intent/tweet?text=%s&amp;url=%s"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * The TweetComposer Builder will use the installed Twitter instance and fall back to a browser
   */</comment>
  <class><specifier>public</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>String</name></type> <name>text</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>Uri</name></type> <name>uri</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>Uri</name></type> <name>imageUri</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Initializes a new {@link TweetComposer.Builder}
     */</comment>
    <constructor><specifier>public</specifier> <name>Builder</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="block" format="javadoc">/**
     * Sets Text for Tweet Intent, no length validation is performed
     */</comment>
    <function><specifier>public</specifier> <type><name>Builder</name></type> <name>text</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>text</name></decl></parameter>)</parameter_list> <block>{
      <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>text</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"text already set."</literal></expr></argument>)</argument_list></call></expr>;</throw>
      }</block></then></if>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>text</name></name> <operator>=</operator> <name>text</name></expr>;</expr_stmt>

      <return>return <expr><name>this</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Sets Uri for Tweet Intent, no length validation is performed
     */</comment>
    <function><specifier>public</specifier> <type><name>Builder</name></type> <name>uri</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Uri</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{
      <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>uri</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"url already set."</literal></expr></argument>)</argument_list></call></expr>;</throw>
      }</block></then></if>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>uri</name></name> <operator>=</operator> <name>uri</name></expr>;</expr_stmt>

      <return>return <expr><name>this</name></expr>;</return>
    }</block></function>
    <comment type="block" format="javadoc">/**
     * Sets Image {@link android.net.Uri} for the Tweet. Only valid if the Twitter App is
     * installed.
     * The Uri should be a file Uri to a local file (e.g. &lt;pre&gt;&lt;code&gt;Uri.fromFile(someExternalStorageFile)&lt;/code&gt;&lt;/pre&gt;))
     */</comment>
    <function><specifier>public</specifier> <type><name>Builder</name></type> <name>image</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Uri</name></type> <name>imageUri</name></decl></parameter>)</parameter_list> <block>{
      <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>imageUri</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"imageUri already set."</literal></expr></argument>)</argument_list></call></expr>;</throw>
      }</block></then></if>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>imageUri</name></name> <operator>=</operator> <name>imageUri</name></expr>;</expr_stmt>

      <return>return <expr><name>this</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Creates {@link android.content.Intent} based on data in {@link TweetComposer.Builder}
     * @return an Intent to the Twitter for Android or a web intent.
     */</comment>
    <function><specifier>public</specifier> <type><name>Intent</name></type> <name>createIntent</name><parameter_list>()</parameter_list> <block>{
      <decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><call><name>createTwitterIntent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if>if <condition>(<expr><name>intent</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><name>intent</name> <operator>=</operator> <call><name>createWebIntent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <return>return <expr><name>intent</name></expr>;</return>
    }</block></function>

    <function><type><name>Intent</name></type> <name>createTwitterIntent</name><parameter_list>()</parameter_list> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name><name>Intent</name><operator>.</operator><name>ACTION_SEND</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <decl_stmt><decl><type><specifier>final</specifier> <name>StringBuilder</name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>text</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>uri</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <if>if <condition>(<expr><call><name><name>builder</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
          <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>uri</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name><name>Intent</name><operator>.</operator><name>EXTRA_TEXT</name></name></expr></argument>, <argument><expr><call><name><name>builder</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><name>MIME_TYPE_PLAIN_TEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>imageUri</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name><name>Intent</name><operator>.</operator><name>EXTRA_STREAM</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>imageUri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><name>MIME_TYPE_JPEG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>

      <decl_stmt><decl><type><specifier>final</specifier> <name>PackageManager</name></type> <name>packManager</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>context</name><operator>.</operator><name>getPackageManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ResolveInfo</name></argument>&gt;</argument_list></name></type> <name>resolvedInfoList</name> <init>= <expr><call><name><name>packManager</name><operator>.</operator><name>queryIntentActivities</name></name><argument_list>(<argument><expr><name>intent</name></expr></argument>,
        <argument><expr><name><name>PackageManager</name><operator>.</operator><name>MATCH_DEFAULT_ONLY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <for>for <control>(<init><decl><type><name>ResolveInfo</name></type> <name>resolveInfo</name><range>: <expr><name>resolvedInfoList</name></expr></range></decl></init>)</control><block>{
        <if>if <condition>(<expr><call><name><name>resolveInfo</name><operator>.</operator><name>activityInfo</name><operator>.</operator><name>packageName</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>TWITTER_PACKAGE_NAME</name></expr></argument>)</argument_list></call></expr>)</condition><then><block>{
          <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>setClassName</name></name><argument_list>(<argument><expr><name><name>resolveInfo</name><operator>.</operator><name>activityInfo</name><operator>.</operator><name>packageName</name></name></expr></argument>,
            <argument><expr><name><name>resolveInfo</name><operator>.</operator><name>activityInfo</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <return>return <expr><name>intent</name></expr>;</return>
        }</block></then></if>
      }</block></for>

      <return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></function>

    <function><type><name>Intent</name></type> <name>createWebIntent</name><parameter_list>()</parameter_list> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>uri</name> <init>= <expr><ternary><condition><expr><name><name>this</name><operator>.</operator><name>uri</name></name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">""</literal></expr> </then><else>: <expr><call><name><name>this</name><operator>.</operator><name>uri</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>


      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>tweetUrl</name> <init>=
        <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>WEB_INTENT</name></expr></argument>, <argument><expr><call><name><name>Uri</name><operator>.</operator><name>encode</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>text</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name><name>Intent</name><operator>.</operator><name>ACTION_VIEW</name></name></expr></argument>, <argument><expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>tweetUrl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Starts the intent created in {@link TweetComposer.Builder#createIntent()}
     */</comment>
    <function><specifier>public</specifier> <type><name>void</name></type> <name>show</name><parameter_list>()</parameter_list> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><call><name>createIntent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>context</name><operator>.</operator><name>startActivity</name></name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
  }</block></class>
}</block></class>

</unit>
