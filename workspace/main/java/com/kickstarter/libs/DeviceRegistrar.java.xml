<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\DeviceRegistrar.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>ApplicationContext</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>PlayServicesCapability</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>firebase</name><operator>.</operator><name>DispatcherKt</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>firebase</name><operator>.</operator><name>RegisterService</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>firebase</name><operator>.</operator><name>UnregisterService</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>



<class><specifier>public</specifier> <specifier>final</specifier> class <name>DeviceRegistrar</name> <super><implements>implements <name>DeviceRegistrarType</name></implements></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>PlayServicesCapability</name></type> <name>playServicesCapability</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>ApplicationContext</name></annotation> <annotation>@<name>NonNull</name></annotation> <type><name>Context</name></type> <name>context</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>TOPIC_GLOBAL</name> <init>= <expr><literal type="string">"global"</literal></expr></init></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>DeviceRegistrar</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>PlayServicesCapability</name></type> <name>playServicesCapability</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>ApplicationContext</name></annotation> <annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>playServicesCapability</name></name> <operator>=</operator> <name>playServicesCapability</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
  }</block></constructor>

  <comment type="block" format="javadoc">/**
   * If Play Services is available on this device, start a service to register it with Google Cloud Messaging.
   */</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>registerDevice</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>playServicesCapability</name><operator>.</operator><name>isCapable</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <return>return;</return>
    }</block></then></if>
    <expr_stmt><expr><call><name><name>DispatcherKt</name><operator>.</operator><name>dispatchJob</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>context</name></name></expr></argument>, <argument><expr><name><name>RegisterService</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>RegisterService</name><operator>.</operator><name>REGISTER_SERVICE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * If Play Services is available on this device, start a service to unregister it with Google Cloud Messaging.
   */</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>unregisterDevice</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>playServicesCapability</name><operator>.</operator><name>isCapable</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <return>return;</return>
    }</block></then></if>
    <expr_stmt><expr><call><name><name>DispatcherKt</name><operator>.</operator><name>dispatchJob</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>context</name></name></expr></argument>, <argument><expr><name><name>UnregisterService</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>UnregisterService</name><operator>.</operator><name>UNREGISTER_SERVICE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
