<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\utils\SocialUtils.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSString</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>SocialUtils</name> <block>{
  <constructor><specifier>private</specifier> <name>SocialUtils</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>friendBackingActivityTitle</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>friendName</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <name>long</name></type> <name>categoryId</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>KSString</name></type> <name>ksString</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>str</name></decl>;</decl_stmt>

    <switch>switch <condition>(<expr><operator>(</operator><name>int</name><operator>)</operator> <name>categoryId</name></expr>)</condition> <block>{
      <case>case <expr><literal type="number">1</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_art_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">3</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_comics_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">26</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_crafts_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">6</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_dance_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">7</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_design_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">9</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_fashion_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">11</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_film_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">10</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_food_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">12</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_games_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">13</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_journalism_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">14</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_music_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">15</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_photography_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">18</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_publishing_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">16</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_tech_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">17</literal></expr>:</case>
        <expr_stmt><expr><name>str</name> <operator>=</operator> <call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>activity_friend_backed_theater_project</name></name></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><literal type="string">"friend_name"</literal></expr></argument>,
          <argument><expr><name>friendName</name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <default>default:</default> <expr_stmt><expr><name>str</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
    }</block></switch>

    <return>return <expr><name>str</name></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Returns a namepile for a list of friends.
   */</comment>
  <function><specifier>public</specifier> <specifier>static</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>String</name></type> <name>projectCardFriendNamepile</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>List</name><argument_list type="generic">&lt;<argument><name>User</name></argument>&gt;</argument_list></name></type> <name>friends</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>KSString</name></type> <name>ksString</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>friendName</name></decl>;</decl_stmt>
    <if>if <condition>(<expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>friendName</name> <operator>=</operator> <ternary><condition><expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><call><name><name>friends</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <comment type="line">//if there are 3 friends, we should combine the first 2 friend names using the delimiter</comment>
      <comment type="line">//and if there are more than 3, we should combine all of them</comment>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>delimiter</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_social_friends_separator</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" "</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>joinedFriends</name> <init>= <expr><call><name><name>TextUtils</name><operator>.</operator><name>join</name></name><argument_list>(<argument><expr><name>delimiter</name></expr></argument>, <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>friends</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>friends</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>friendName</name> <operator>=</operator> <ternary><condition><expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">3</literal></expr> ?</condition><then> <expr><call><name><name>joinedFriends</name><operator>.</operator><name>concat</name></name><argument_list>(<argument><expr><call><name><name>delimiter</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>joinedFriends</name></expr></else></ternary></expr>;</expr_stmt>
    }</block></else></if>

    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>secondFriendName</name></decl>;</decl_stmt>
    <if>if <condition>(<expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">2</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>secondFriendName</name> <operator>=</operator> <ternary><condition><expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><call><name><name>friends</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>friends</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><name>secondFriendName</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
    }</block></else></if>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>remainingCount</name> <init>= <expr><call><name><name>NumberUtils</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">//since we show 3 friends at max, the remaining number needs to be adjusted</comment>
    <return>return <expr><call><name><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"discovery_baseball_card_social_friends_are_backers"</literal></expr></argument>, <argument><expr><ternary><condition><expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">3</literal></expr> ?</condition><then> <expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr> </then><else>: <expr><call><name><name>friends</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></argument>,
      <argument><expr><literal type="string">"friend_name"</literal></expr></argument>, <argument><expr><name>friendName</name></expr></argument>,
      <argument><expr><literal type="string">"second_friend_name"</literal></expr></argument>, <argument><expr><name>secondFriendName</name></expr></argument>,
      <argument><expr><literal type="string">"remaining_count"</literal></expr></argument>, <argument><expr><name>remainingCount</name></expr></argument>
    )</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
