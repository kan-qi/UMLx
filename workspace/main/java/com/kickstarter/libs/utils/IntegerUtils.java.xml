<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\utils\IntegerUtils.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name></name>;</package>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>IntegerUtils</name> <block>{
  <constructor><specifier>private</specifier> <name>IntegerUtils</name><parameter_list>()</parameter_list> <block>{}</block></constructor>

  <comment type="block" format="javadoc">/**
   * Returns `false` if `value` is `null` or `0`, and `true` otherwise.
   */</comment>
  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>isNonZero</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Integer</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>value</name> <operator>!=</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Returns `true` if `value` is zero, and false otherwise, including when `value` is `null`.
   */</comment>
  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>isZero</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Integer</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>value</name> <operator>==</operator> <literal type="number">0</literal></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Returns `value` if not null, and `0` otherwise.
   */</comment>
  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>int</name></type> <name>intValueOrZero</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Integer</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
    <return>return <expr><ternary><condition><expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>value</name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</return>
  }</block></function>
}</block></class>
</unit>
