<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\AndroidPayCapability.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>common</name><operator>.</operator><name>api</name><operator>.</operator><name>GoogleApiClient</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>Wallet</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>ApplicationContext</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>PlayServicesCapability</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>AndroidPayCapability</name> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><name>boolean</name></type> <name>isCapable</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>AndroidPayCapability</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isCapable</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isCapable</name></name> <operator>=</operator> <name>isCapable</name></expr>;</expr_stmt>
  }</block></constructor>

  <constructor><specifier>public</specifier> <name>AndroidPayCapability</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>PlayServicesCapability</name></type> <name>playServicesCapability</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>ApplicationContext</name></annotation> <annotation>@<name>NonNull</name></annotation> <name>Context</name></type> <name>applicationContext</name></decl></parameter>)</parameter_list> <block>{

    <if>if <condition>(<expr><call><name><name>playServicesCapability</name><operator>.</operator><name>isCapable</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>GoogleApiClient</name></type> <name>googleApiClient</name> <init>= <expr><operator>new</operator> <call><name><name>GoogleApiClient</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>applicationContext</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addApi</name><argument_list>(<argument><expr><name><name>Wallet</name><operator>.</operator><name>API</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>Wallet</name><operator>.</operator><name>WalletOptions</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>googleApiClient</name><operator>.</operator><name>connect</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Wallet</name><operator>.</operator><name>Payments</name><operator>.</operator><name>isReadyToPay</name></name><argument_list>(<argument><expr><name>googleApiClient</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setResultCallback</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>result</name></decl></parameter></parameter_list> -&gt; <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isCapable</name></name> <operator>=</operator> <call><name><name>result</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isSuccess</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>result</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>googleApiClient</name><operator>.</operator><name>disconnect</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isCapable</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    }</block></else></if>
  }</block></constructor>

  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isCapable</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>isCapable</name></name></expr>;</return>
  }</block></function>
}</block></class>
</unit>
