<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\TrackingClientType.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>KoalaUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>TrackingClientType</name> <block>{
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>void</name></type> <name>track</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>eventName</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>additionalProperties</name></decl></parameter>)</parameter_list>;</function_decl>

  <function><specifier>public</specifier> <specifier>final</specifier> <type><name>void</name></type> <name>track</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>eventName</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>track</name><argument_list>(<argument><expr><name>eventName</name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>defaultProperties</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>hashMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>userIsLoggedIn</name> <init>= <expr><call><name>loggedInUser</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>userIsLoggedIn</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>putAll</name></name><argument_list>(<argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>userProperties</name></name><argument_list>(<argument><expr><call><name>loggedInUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"android_pay_capable"</literal></expr></argument>, <argument><expr><call><name>isAndroidPayCapable</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"android_uuid"</literal></expr></argument>, <argument><expr><call><name>androidUUID</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"app_version"</literal></expr></argument>, <argument><expr><call><name>versionName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"brand"</literal></expr></argument>, <argument><expr><call><name>brand</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"client_platform"</literal></expr></argument>, <argument><expr><literal type="string">"android"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"client_type"</literal></expr></argument>, <argument><expr><literal type="string">"native"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"device_fingerprint"</literal></expr></argument>, <argument><expr><call><name>androidUUID</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"device_format"</literal></expr></argument>, <argument><expr><call><name>deviceFormat</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"device_orientation"</literal></expr></argument>, <argument><expr><call><name>deviceOrientation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"distinct_id"</literal></expr></argument>, <argument><expr><call><name>androidUUID</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"google_play_services"</literal></expr></argument>, <argument><expr><ternary><condition><expr><call><name>isGooglePlayServicesAvailable</name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><literal type="string">"available"</literal></expr> </then><else>: <expr><literal type="string">"unavailable"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"koala_lib"</literal></expr></argument>, <argument><expr><literal type="string">"kickstarter_android"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"manufacturer"</literal></expr></argument>, <argument><expr><call><name>manufacturer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"model"</literal></expr></argument>, <argument><expr><call><name>model</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"mp_lib"</literal></expr></argument>, <argument><expr><literal type="string">"android"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"os"</literal></expr></argument>, <argument><expr><literal type="string">"Android"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"os_version"</literal></expr></argument>, <argument><expr><call><name>OSVersion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"time"</literal></expr></argument>, <argument><expr><call><name>time</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hashMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"user_logged_in"</literal></expr></argument>, <argument><expr><name>userIsLoggedIn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>hashMap</name></expr>;</return>
  }</block></function>

  <function><annotation>@<name>NonNull</name></annotation> <type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>combinedProperties</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>additionalProperties</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>combinedProperties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>additionalProperties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>combinedProperties</name><operator>.</operator><name>putAll</name></name><argument_list>(<argument><expr><call><name>defaultProperties</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>combinedProperties</name></expr>;</return>
  }</block></function>

  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>androidUUID</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>brand</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>deviceFormat</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>deviceOrientation</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type> <name>isAndroidPayCapable</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type> <name>isGooglePlayServicesAvailable</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>User</name></type> <name>loggedInUser</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>manufacturer</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>model</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>OSVersion</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>Long</name></type> <name>time</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>versionName</name><parameter_list>()</parameter_list>;</function_decl>
}</block></class>
</unit>
