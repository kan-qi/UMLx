<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\Build.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>pm</name><operator>.</operator><name>PackageInfo</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>BuildConfig</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTimeZone</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>Build</name> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>PackageInfo</name></type> <name>packageInfo</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>Build</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>PackageInfo</name></type> <name>packageInfo</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>packageInfo</name></name> <operator>=</operator> <name>packageInfo</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>String</name></type> <name>applicationId</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>packageInfo</name><operator>.</operator><name>packageName</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>DateTime</name></type> <name>dateTime</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name>DateTime</name><argument_list>(<argument><expr><name><name>BuildConfig</name><operator>.</operator><name>BUILD_DATE</name></name></expr></argument>, <argument><expr><name><name>DateTimeZone</name><operator>.</operator><name>UTC</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZone</name><argument_list>(<argument><expr><call><name><name>DateTimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>isInternal</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>BuildConfig</name><operator>.</operator><name>FLAVOR</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"internal"</literal></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>isExternal</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>!</operator><call><name>isInternal</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Returns `true` if the build is compiled in debug mode, `false` otherwise.
   */</comment>
  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isDebug</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>BuildConfig</name><operator>.</operator><name>DEBUG</name></name></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Returns `true` if the build is compiled in release mode, `false` otherwise.
   */</comment>
  <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isRelease</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>!</operator><name><name>BuildConfig</name><operator>.</operator><name>DEBUG</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>sha</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>BuildConfig</name><operator>.</operator><name>GIT_SHA</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>Integer</name></type> <name>versionCode</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>packageInfo</name><operator>.</operator><name>versionCode</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>versionName</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>packageInfo</name><operator>.</operator><name>versionName</name></name></expr>;</return>
  }</block></function>

  <function><specifier>public</specifier> <type><name>String</name></type> <name>variant</name><parameter_list>()</parameter_list> <block>{
    <comment type="line">// e.g. internalDebug, externalRelease</comment>
    <return>return <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name><name>BuildConfig</name><operator>.</operator><name>FLAVOR</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>BuildConfig</name><operator>.</operator><name>BUILD_TYPE</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>US</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>BuildConfig</name><operator>.</operator><name>BUILD_TYPE</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
