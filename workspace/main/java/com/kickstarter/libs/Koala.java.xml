<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\libs\Koala.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>KoalaUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Activity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Project</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Update</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>DiscoveryParams</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>PushNotificationEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>data</name><operator>.</operator><name>LoginReason</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>data</name><operator>.</operator><name>Mailbox</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>Koala</name> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>TrackingClientType</name></type> <name>client</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>Koala</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>TrackingClientType</name></type> <name>client</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>client</name></name> <operator>=</operator> <name>client</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>public</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>TrackingClientType</name></type> <name>client</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>this</name><operator>.</operator><name>client</name></name></expr>;</return>
  }</block></function>

  <comment type="line">// APPLICATION LIFECYCLE</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAppOpen</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"App Open"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAppClose</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"App Close"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackMemoryWarning</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"App Memory Warning"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackOpenedAppBanner</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Opened App Banner"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// ANDROID PAY</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackShowAndroidPaySheet</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Android Pay Show Sheet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAndroidPayFinished</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Android Pay Finished"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAndroidPayCanceled</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Android Pay Canceled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// BACKING</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedPledgeInfo</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_PLEDGE_INFO</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// DISCOVERY</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackDiscovery</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DiscoveryParams</name></type> <name>params</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isOnboardingVisible</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>discoveryParamsProperties</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"discover_onboarding_is_visible"</literal></expr></argument>, <argument><expr><name>isOnboardingVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Discover List View"</literal></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackDiscoveryFilters</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Discover Switch Modal"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"modal_type"</literal></expr></argument>, <argument><expr><literal type="string">"filters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackDiscoveryFilterSelected</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DiscoveryParams</name></type> <name>params</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Discover Modal Selected Filter"</literal></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>discoveryParamsProperties</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackDiscoveryRefreshTriggered</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>TRIGGERED_REFRESH</name></name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><literal type="string">"swipe"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Tracks a project show event.
   *
   * @param intentRefTag (nullable) The ref tag present in the activity upon displaying the project.
   * @param cookieRefTag (nullable) The ref tag extracted from the cookie store upon viewing the project.
   */</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackProjectShow</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>RefTag</name></type> <name>intentRefTag</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>RefTag</name></type> <name>cookieRefTag</name></decl></parameter>)</parameter_list> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>intentRefTag</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"ref_tag"</literal></expr></argument>, <argument><expr><call><name><name>intentRefTag</name><operator>.</operator><name>tag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><name>cookieRefTag</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"referrer_credit"</literal></expr></argument>, <argument><expr><call><name><name>cookieRefTag</name><operator>.</operator><name>tag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <comment type="line">// Deprecated event</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_PAGE</name></name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_PROJECT_PAGE</name></name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// PROJECT STAR</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackProjectStar</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// Deprecated events</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><ternary><condition><expr><call><name><name>project</name><operator>.</operator><name>isStarred</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_STAR</name></name></expr> </then><else>: <expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_UNSTAR</name></name></expr></else></ternary></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><ternary><condition><expr><call><name><name>project</name><operator>.</operator><name>isStarred</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><name><name>KoalaEvent</name><operator>.</operator><name>STARRED_PROJECT</name></name></expr> </then><else>: <expr><name><name>KoalaEvent</name><operator>.</operator><name>UNSTARRED_PROJECT</name></name></expr></else></ternary></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// COMMENTS</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackLoadedOlderComments</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Update</name></type> <name>update</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>KoalaContext</name><operator>.</operator><name>Comments</name></name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>loggedInUser</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><ternary><condition><expr><name>update</name> <operator>==</operator> <literal type="null">null</literal></expr>
      ?</condition><then> <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>loggedInUser</name></expr></argument>)</argument_list></call></expr>
      </then><else>: <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>updateProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>update</name></expr></argument>, <argument><expr><name>loggedInUser</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getTrackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>LOADED_OLDER_COMMENTS</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * @deprecated Use {@link #trackLoadedOlderComments(Project, Update, KoalaContext.Comments)} instead.
   */</comment>
  <function><annotation>@<name>Deprecated</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>trackLoadedOlderProjectComments</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_COMMENT_LOAD_OLDER</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackPostedComment</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Update</name></type> <name>update</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>KoalaContext</name><operator>.</operator><name>CommentDialog</name></name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>loggedInUser</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><ternary><condition><expr><name>update</name> <operator>==</operator> <literal type="null">null</literal></expr>
      ?</condition><then> <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>loggedInUser</name></expr></argument>)</argument_list></call></expr>
      </then><else>: <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>updateProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>update</name></expr></argument>, <argument><expr><name>loggedInUser</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getTrackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>POSTED_COMMENT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * @deprecated Use {@link #trackPostedComment(Project, Update, KoalaContext.CommentDialog)} instead.
   */</comment>
  <function><annotation>@<name>Deprecated</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>trackProjectCommentCreate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_COMMENT_CREATE</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * @deprecated Use {@link #trackViewedComments(Project, Update, KoalaContext.Comments)} instead.
   */</comment>
  <function><annotation>@<name>Deprecated</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>trackProjectCommentsView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_COMMENT_VIEW</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedComments</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Update</name></type> <name>update</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>KoalaContext</name><operator>.</operator><name>Comments</name></name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>loggedInUser</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><ternary><condition><expr><name>update</name> <operator>==</operator> <literal type="null">null</literal></expr>
      ?</condition><then> <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>loggedInUser</name></expr></argument>)</argument_list></call></expr>
      </then><else>: <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>updateProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>update</name></expr></argument>, <argument><expr><name>loggedInUser</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getTrackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_COMMENTS</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// ACTIVITY</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackActivityView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>pageCount</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>pageCount</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>ACTIVITY_VIEW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>ACTIVITY_LOAD_MORE</name></name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
        <block>{
          <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"page_count"</literal></expr></argument>, <argument><expr><name>pageCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block>
      }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <comment type="line">// SEARCH</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSearchView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_SEARCH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// deprecated</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>DISCOVER_SEARCH_LEGACY</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSearchResults</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>pageCount</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>pageCount</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
        <block>{
          <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"search_term"</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block>
      }</block></class></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>LOADED_SEARCH_RESULTS</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// deprecated</comment>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>DISCOVER_SEARCH_RESULTS_LEGACY</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
        <block>{
          <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"search_term"</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"page_count"</literal></expr></argument>, <argument><expr><name>pageCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block>
      }</block></class></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>LOADED_MORE_SEARCH_RESULTS</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// deprecated</comment>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>DISCOVER_SEARCH_RESULTS_LOAD_MORE_LEGACY</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackClearedSearchTerm</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>CLEARED_SEARCH_TERM</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackActivityTapped</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Activity</name></type> <name>activity</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>ACTIVITY_VIEW_ITEM</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>activityProperties</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// SESSION EVENTS</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackLoginRegisterTout</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>LoginReason</name></type> <name>loginReason</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Application Login or Signup"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"intent"</literal></expr></argument>, <argument><expr><call><name><name>loginReason</name><operator>.</operator><name>trackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackLoginSuccess</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>LOGIN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackLoginError</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>ERRORED_USER_LOGIN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackTwoFactorAuthView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>TWO_FACTOR_AUTH_CONFIRM_VIEW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackTwoFactorResendCode</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>TWO_FACTOR_AUTH_RESEND_CODE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackRegisterFormView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>USER_SIGNUP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackRegisterError</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>ERRORED_USER_SIGNUP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackRegisterSuccess</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>NEW_USER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackResetPasswordFormView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Forgot Password View"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackResetPasswordSuccess</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Forgot Password Requested"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackResetPasswordError</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Forgot Password Errored"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackFacebookConfirmation</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>FACEBOOK_CONFIRM</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackFacebookLoginSuccess</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Facebook Login"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackFacebookLoginError</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Errored Facebook Login"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackLogout</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Logout"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSignupNewsletterToggle</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>sendNewsletters</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>SIGNUP_NEWSLETTER_TOGGLE</name></name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"send_newsletters"</literal></expr></argument>, <argument><expr><name>sendNewsletters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// SETTINGS</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackChangedEmail</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>CHANGED_EMAIL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackChangedPassword</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>CHANGED_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackContactEmailClicked</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Contact Email Clicked"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCreatedPassword</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>CREATED_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackDeletePaymentMethod</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>DELETED_PAYMENT_METHOD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackErroredDeletePaymentMethod</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>ERRORED_DELETE_PAYMENT_METHOD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackFailedPaymentMethodCreation</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>FAILED_PAYMENT_METHOD_CREATION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackNewsletterToggle</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>sendNewsletter</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>sendNewsletter</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Newsletter Subscribe"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Newsletter Unsubscribe"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackResentVerificationEmail</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>RESENT_VERIFICATION_EMAIL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSavedPaymentMethod</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>SAVED_PAYMENT_METHOD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSelectedChosenCurrency</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>selectedCurrency</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>SELECTED_CHOSEN_CURRENCY</name></name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"user_chosen_currency"</literal></expr></argument>, <argument><expr><name>selectedCurrency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSettingsView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_SETTINGS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedAccount</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_ACCOUNT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedAddNewCard</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_ADD_NEW_CARD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedChangedEmail</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_CHANGE_EMAIL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedChangedPassword</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_CHANGE_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedCreatedPassword</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_CREATE_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedNotifications</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_NOTIFICATIONS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedNewsletter</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_NEWSLETTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedPaymentMethods</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_PAYMENT_METHODS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedPrivacy</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_PRIVACY</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// CHECKOUT</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutNext</name><parameter_list>()</parameter_list> <block>{ <comment type="line">// rewards webview and top nav</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Next"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutCancel</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Cancel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutLoadFailed</name><parameter_list>()</parameter_list> <block>{
    <comment type="line">// TODO: set up error props</comment>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutShowShareSheet</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Show Share Sheet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutCancelShareSheet</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Cancel Share Sheet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutShowFacebookShareView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Show Share"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"share_type"</literal></expr></argument>, <argument><expr><literal type="string">"facebook"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutShowTwitterShareView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Show Share"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"share_type"</literal></expr></argument>, <argument><expr><literal type="string">"twitter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutShareFinished</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Share Finished"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutFinishJumpToDiscovery</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Finished Discover More"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCheckoutFinishJumpToProject</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Finished Discover Open Project"</literal></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// SHARE</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackShowProjectShareSheet</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><name><name>KoalaContext</name><operator>.</operator><name>Share</name><operator>.</operator><name>PROJECT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// deprecated</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>PROJECT_SHOW_SHARE_SHEET_LEGACY</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>SHOWED_SHARE_SHEET</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackCancelProjectShareSheet</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Project Cancel Share Sheet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackShowProjectFacebookShareView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Project Show Share"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"share_type"</literal></expr></argument>, <argument><expr><literal type="string">"facebook"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackShowProjectTwitterShareView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Project Show Share"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"share_type"</literal></expr></argument>, <argument><expr><literal type="string">"twitter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackProjectFacebookShare</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Project Share"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"share_type"</literal></expr></argument>, <argument><expr><literal type="string">"facebook"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackProjectTwitterShare</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Project Share"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"share_type"</literal></expr></argument>, <argument><expr><literal type="string">"twitter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// MESSAGES</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSentMessage</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>KoalaContext</name><operator>.</operator><name>Message</name></name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getTrackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>SENT_MESSAGE</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedMailbox</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Mailbox</name></type> <name>mailbox</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>RefTag</name></type> <name>intentRefTag</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><ternary><condition><expr><name>project</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>intentRefTag</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"ref_tag"</literal></expr></argument>, <argument><expr><call><name><name>intentRefTag</name><operator>.</operator><name>tag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <switch>switch <condition>(<expr><name>mailbox</name></expr>)</condition> <block>{
      <case>case <expr><name>INBOX</name></expr>:</case>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_MESSAGE_INBOX</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><name>SENT</name></expr>:</case>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_SENT_MESSAGES</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    }</block></switch>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedMessageThread</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_MESSAGE_THREAD</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// PROFILE</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackProfileView</name><parameter_list>()</parameter_list> <block>{
    <comment type="line">// deprecated</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>PROFILE_VIEW_MY</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_PROFILE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// RATING</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAppRatingNow</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Finished Alert App Store Rating Rate Now"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAppRatingRemindLater</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Finished Alert App Store Rating Remind Later"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackAppRatingNoThanks</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Checkout Finished Alert App Store Rating No Thanks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// VIDEO</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackVideoStart</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><literal type="string">"Project Video Start"</literal></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// PROJECT UPDATES</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedUpdate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>KoalaContext</name><operator>.</operator><name>Update</name></name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getTrackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_UPDATE</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedUpdates</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_UPDATES</name></name></expr></argument>, <argument><expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// PUSH NOTIFICATIONS</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackPushNotification</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>PushNotificationEnvelope</name></type> <name>envelope</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <block>{
        <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"notification_type"</literal></expr></argument>, <argument><expr><literal type="string">"push"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr><call><name><name>envelope</name><operator>.</operator><name>activity</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
          <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"notification_subject"</literal></expr></argument>, <argument><expr><literal type="string">"activity"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><literal type="string">"notification_activity_category"</literal></expr></argument>, <argument><expr><call><name><name>envelope</name><operator>.</operator><name>activity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>category</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
      }</block>
    }</block></class></expr></init></decl>;</decl_stmt>

    <comment type="line">// deprecated</comment>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>NOTIFICATION_OPENED_LEGACY</name></name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>OPENED_NOTIFICATION</name></name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// WEBVIEWS</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackOpenedExternalLink</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>KoalaContext</name><operator>.</operator><name>ExternalLink</name></name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getTrackingString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>OPENED_EXTERNAL_LINK</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// DEEP LINK</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackContinueUserActivityAndOpenedDeepLink</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>CONTINUE_USER_ACTIVITY</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>OPENED_DEEP_LINK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="line">// CREATOR DASHBOARD</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackOpenedProjectSwitcher</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>OPENED_PROJECT_SWITCHER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackSwitchedProjects</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>SWITCHED_PROJECTS</name></name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>trackViewedProjectDashboard</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>KoalaUtils</name><operator>.</operator><name>projectProperties</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>loggedInUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>client</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name><name>KoalaEvent</name><operator>.</operator><name>VIEWED_PROJECT_DASHBOARD</name></name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
