<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\activities\LoginToutActivity.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>activities</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>Activity</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Button</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>facebook</name><operator>.</operator><name>AccessToken</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>ActivityRequestCodes</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>BaseActivity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>RequiresActivityViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ObjectUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>ErrorEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>IntentKey</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>toolbars</name><operator>.</operator><name>LoginToolbar</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>views</name><operator>.</operator><name>LoginPopupMenu</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>LoginToutViewModel</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>Bind</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindString</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>OnClick</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>Observable</name></name>;</import>
<import>import <name><name>rx</name><operator>.</operator><name>android</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>AndroidSchedulers</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>TransitionUtils</name><operator>.</operator><name>slideInFromRight</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>TransitionUtils</name><operator>.</operator><name>transition</name></name>;</import>

<class><annotation>@<name>RequiresActivityViewModel</name><argument_list>(<argument><expr><name><name>LoginToutViewModel</name><operator>.</operator><name>ViewModel</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> <specifier>final</specifier> class <name>LoginToutActivity</name> <super><extends>extends <name><name>BaseActivity</name><argument_list type="generic">&lt;<argument><name><name>LoginToutViewModel</name><operator>.</operator><name>ViewModel</name></name></argument>&gt;</argument_list></name></extends></super> <block>{
  <decl_stmt><decl><annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>disclaimer_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>disclaimerTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>login_button</name></name></expr></argument>)</argument_list></annotation> <type><name>Button</name></type> <name>loginButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>facebook_login_button</name></name></expr></argument>)</argument_list></annotation> <type><name>Button</name></type> <name>facebookButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>sign_up_button</name></name></expr></argument>)</argument_list></annotation> <type><name>Button</name></type> <name>signupButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>help_button</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>helpButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>login_toolbar</name></name></expr></argument>)</argument_list></annotation> <type><name>LoginToolbar</name></type> <name>loginToolbar</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>login_tout_navbar_title</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>loginOrSignUpString</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>login_errors_title</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>loginErrorTitleString</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>login_errors_unable_to_log_in</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>unableToLoginString</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>general_error_oops</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>errorTitleString</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>login_tout_errors_facebook_authorization_exception_message</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>troubleLoggingInString</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>login_tout_errors_facebook_authorization_exception_button</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>tryAgainString</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>setContentView</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>login_tout_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ButterKnife</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>loginToolbar</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>loginOrSignUpString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>finishWithSuccessfulResult</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>finishWithSuccessfulResult</name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>startLoginActivity</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>startLogin</name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>startSignupActivity</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>startSignup</name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>startFacebookConfirmationActivity</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>ua</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>startFacebookConfirmationActivity</name><argument_list>(<argument><expr><name><name>ua</name><operator>.</operator><name>first</name></name></expr></argument>, <argument><expr><name><name>ua</name><operator>.</operator><name>second</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>showFacebookAuthorizationErrorDialog</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>ViewUtils</name><operator>.</operator><name>showDialog</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>errorTitleString</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>troubleLoggingInString</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>tryAgainString</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>showErrorMessageToasts</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>showToast</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>startTwoFactorChallenge</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>startTwoFactorFacebookChallenge</name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>showUnauthorizedErrorDialog</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>errorMessage</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>ViewUtils</name><operator>.</operator><name>showDialog</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>loginErrorTitleString</name></name></expr></argument>, <argument><expr><name>errorMessage</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>showErrorMessageToasts</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>showMissingFacebookEmailErrorToast</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>map</name><argument_list>(<argument><expr><call><name><name>ObjectUtils</name><operator>.</operator><name>coalesceWith</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>unableToLoginString</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>mergeWith</name><argument_list>(
        <argument><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>showFacebookInvalidAccessTokenErrorToast</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>map</name><argument_list>(<argument><expr><call><name><name>ObjectUtils</name><operator>.</operator><name>coalesceWith</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>unableToLoginString</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
      )</argument_list></call></expr>;</return>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>disclaimer_text_view</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>disclaimerTextViewClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><operator>new</operator> <call><name>LoginPopupMenu</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>helpButton</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>show</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>facebook_login_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>facebookLoginClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>facebookLoginClick</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>,
      <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name>getResources</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStringArray</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>array</name><operator>.</operator><name>facebook_permissions_array</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>login_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>loginButtonClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>loginClick</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>sign_up_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>signupButtonClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>signupClick</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>finishWithSuccessfulResult</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name>setResult</name><argument_list>(<argument><expr><name><name>Activity</name><operator>.</operator><name>RESULT_OK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>finish</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>startFacebookConfirmationActivity</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>ErrorEnvelope</name><operator>.</operator><name>FacebookUser</name></name></type> <name>facebookUser</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>accessTokenString</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>FacebookConfirmationActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>FACEBOOK_USER</name></name></expr></argument>, <argument><expr><name>facebookUser</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>FACEBOOK_TOKEN</name></name></expr></argument>, <argument><expr><name>accessTokenString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>LOGIN_FLOW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>transition</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>slideInFromRight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>startLogin</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>LoginActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>LOGIN_FLOW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>transition</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>slideInFromRight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>startSignup</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>SignupActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>LOGIN_FLOW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>transition</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>slideInFromRight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>startTwoFactorFacebookChallenge</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>TwoFactorActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>FACEBOOK_LOGIN</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>FACEBOOK_TOKEN</name></name></expr></argument>, <argument><expr><call><name><name>AccessToken</name><operator>.</operator><name>getCurrentAccessToken</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getToken</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>LOGIN_FLOW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>transition</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>slideInFromRight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
