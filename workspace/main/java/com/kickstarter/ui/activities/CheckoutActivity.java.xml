<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\activities\CheckoutActivity.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>activities</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>annotation</name><operator>.</operator><name>SuppressLint</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>Html</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>webkit</name><operator>.</operator><name>WebView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>common</name><operator>.</operator><name>api</name><operator>.</operator><name>GoogleApiClient</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>FullWallet</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>FullWalletRequest</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>MaskedWallet</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>MaskedWalletRequest</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>Wallet</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>WalletConstants</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>fragment</name><operator>.</operator><name>SupportWalletFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>fragment</name><operator>.</operator><name>WalletFragmentInitParams</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>fragment</name><operator>.</operator><name>WalletFragmentMode</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>wallet</name><operator>.</operator><name>fragment</name><operator>.</operator><name>WalletFragmentOptions</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>ActivityRequestCodes</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>AndroidPayCapability</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>BaseActivity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSCurrency</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSString</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>models</name><operator>.</operator><name>AndroidPayAuthorizedPayload</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>models</name><operator>.</operator><name>AndroidPayPayload</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>RequiresActivityViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>AndroidPayUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>AnimationUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>BooleanUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ObjectUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Project</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>KSUri</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>KSWebViewClient</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>RequestHandler</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>IntentKey</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>data</name><operator>.</operator><name>LoginReason</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>toolbars</name><operator>.</operator><name>KSToolbar</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>views</name><operator>.</operator><name>ConfirmDialog</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>views</name><operator>.</operator><name>KSWebView</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>CheckoutViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>squareup</name><operator>.</operator><name>picasso</name><operator>.</operator><name>Picasso</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>appcompat</name><operator>.</operator><name>app</name><operator>.</operator><name>AlertDialog</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>Bind</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindColor</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindString</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>OnClick</name></name>;</import>
<import>import <name><name>okhttp3</name><operator>.</operator><name>Request</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>transformers</name><operator>.</operator><name>Transformers</name><operator>.</operator><name>observeForUI</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>TransitionUtils</name><operator>.</operator><name>slideInFromLeft</name></name>;</import>

<class><annotation>@<name>RequiresActivityViewModel</name><argument_list>(<argument><expr><name><name>CheckoutViewModel</name><operator>.</operator><name>ViewModel</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> <specifier>final</specifier> class <name>CheckoutActivity</name> <super><extends>extends <name><name>BaseActivity</name><argument_list type="generic">&lt;<argument><name><name>CheckoutViewModel</name><operator>.</operator><name>ViewModel</name></name></argument>&gt;</argument_list></name></extends> <implements>implements <name><name>KSWebViewClient</name><operator>.</operator><name>Delegate</name></name></implements></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Project</name></type> <name>project</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>checkout_toolbar</name></name></expr></argument>)</argument_list></annotation> <type><name>KSToolbar</name></type> <name>checkoutToolbar</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>web_view</name></name></expr></argument>)</argument_list></annotation> <type><name>KSWebView</name></type> <name>webView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>checkout_loading_indicator</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>loadingIndicatorView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>confirmation_group</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>confirmationGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledge_disclaimer</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>pledgeDisclaimerTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>terms_and_privacy</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>termsAndPrivacyTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>backer_101</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>backer101TextView</name></decl>;</decl_stmt>

  <comment type="line">// Android pay summary bindings</comment>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>android_pay_instrument_description</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>androidPayInstrumentDescriptionTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>android_pay_email</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>androidPayEmailTextView</name></decl>;</decl_stmt>

  <comment type="line">// Project context view bindings</comment>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_context_image_view</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageView</name></type> <name>contextPhotoImageView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_context_creator_name</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>creatorNameTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_context_project_name</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>projectNameTextView</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>profile_settings_about_terms</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>termsOfUseString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>profile_settings_about_privacy</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>privacyPolicyString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_checkout_android_pay_pledge_disclaimer</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>pledgeDisclaimerString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_checkout_android_pay_terms_and_privacy</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>termsAndPrivacyString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_checkout_android_pay_backer_101</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>backer101String</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_creator_by_creator</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>projectCreatorByCreatorString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_checkout_android_pay_error_title</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>androidPayErrorTitleString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_checkout_android_pay_error_message</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>androidPayErrorMessageString</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindColor</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>color</name><operator>.</operator><name>white</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>whiteColor</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>KSCurrency</name></type> <name>ksCurrency</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>KSString</name></type> <name>ksString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>Gson</name></type> <name>gson</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>AndroidPayCapability</name></type> <name>androidPayCapability</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>Build</name></type> <name>build</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>SupportWalletFragment</name></type> <name>walletFragment</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>SupportWalletFragment</name></type> <name>confirmationWalletFragment</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>GoogleApiClient</name></type> <name>googleApiClient</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>boolean</name></type> <name>isInAndroidPayFlow</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setContentView</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>checkout_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ButterKnife</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>androidPayCapability</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>androidPayCapability</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>build</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ksCurrency</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>ksCurrency</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ksString</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>ksString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>gson</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>gson</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>webView</name><operator>.</operator><name>client</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setDelegate</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>webView</name><operator>.</operator><name>client</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>registerRequestHandlers</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(
      <argument><expr><operator>new</operator> <call><name>RequestHandler</name><argument_list>(<argument><expr><name>KSUri</name><operator>::</operator><name>isCheckoutThanksUri</name></expr></argument>, <argument><expr><name>this</name><operator>::</operator><name>handleCheckoutThanksUriRequest</name></expr></argument>)</argument_list></call></expr></argument>,
      <argument><expr><operator>new</operator> <call><name>RequestHandler</name><argument_list>(<argument><expr><name>KSUri</name><operator>::</operator><name>isNewGuestCheckoutUri</name></expr></argument>, <argument><expr><name>this</name><operator>::</operator><name>handleSignupUriRequest</name></expr></argument>)</argument_list></call></expr></argument>,
      <argument><expr><operator>new</operator> <call><name>RequestHandler</name><argument_list>(<argument><expr><name>KSUri</name><operator>::</operator><name>isSignupUri</name></expr></argument>, <argument><expr><name>this</name><operator>::</operator><name>handleSignupUriRequest</name></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>project</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>p</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><name><name>this</name><operator>.</operator><name>project</name></name> <operator>=</operator> <name>p</name></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>title</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>checkoutToolbar</name></name><operator>::</operator><name>setTitle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>isAndroidPayAvailable</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><name>BooleanUtils</name><operator>::</operator><name>isTrue</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>take</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>setGoogleApiClient</name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>isAndroidPayAvailable</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><name>BooleanUtils</name><operator>::</operator><name>isTrue</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>take</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>prepareWalletFragment</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>showAndroidPaySheet</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><name>ObjectUtils</name><operator>::</operator><name>isNotNull</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>showAndroidPaySheet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>displayAndroidPayConfirmation</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>showOrHideAndroidPayConfirmation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>updateAndroidPayConfirmation</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>wp</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>updateAndroidPayConfirmation</name><argument_list>(<argument><expr><name><name>wp</name><operator>.</operator><name>first</name></name></expr></argument>, <argument><expr><name><name>wp</name><operator>.</operator><name>second</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>popActivityOffStack</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>popActivity</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>attemptAndroidPayConfirmation</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>wp</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>attemptAndroidPayConfirmation</name></name><argument_list>(<argument><expr><name><name>wp</name><operator>.</operator><name>first</name></name></expr></argument>, <argument><expr><name><name>wp</name><operator>.</operator><name>second</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>completeAndroidPay</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>androidPayComplete</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>androidPayError</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>showAndroidPayError</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>onResume</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onResume</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>url</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>take</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><operator>!</operator><name><name>this</name><operator>.</operator><name>isInAndroidPayFlow</name></name></expr></block></lambda></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>webView</name></name><operator>::</operator><name>loadUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>back</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isInAndroidPayFlow</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>backButtonClicked</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>popActivity</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>back</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * This method is called from {@link com.kickstarter.services.KSWebViewClient} when an Android Pay
   * payload has been obtained from the webview.
   */</comment>
  <function><specifier>public</specifier> <type><name>void</name></type> <name>takeAndroidPayPayloadString</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>payloadString</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>takePayloadString</name></name><argument_list>(<argument><expr><name>payloadString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>boolean</name></type> <name>handleCheckoutThanksUriRequest</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>WebView</name></type> <name>webView</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>ThanksActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>PROJECT</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>project</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>startActivityWithTransition</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_in_right</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>fade_out_slide_out_left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>boolean</name></type> <name>handleSignupUriRequest</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>WebView</name></type> <name>webView</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>LoginToutActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>LOGIN_REASON</name></name></expr></argument>, <argument><expr><name><name>LoginReason</name><operator>.</operator><name>BACK_PROJECT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>LOGIN_FLOW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Call when the android pay sheet should be shown.
   */</comment>
  <function><specifier>private</specifier> <type><name>void</name></type> <name>showAndroidPaySheet</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>AndroidPayPayload</name></type> <name>payload</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>walletFragment</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <return>return;</return>
    }</block></then></if>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>isInAndroidPayFlow</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>MaskedWalletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>createMaskedWalletRequest</name></name><argument_list>(<argument><expr><name>payload</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>walletFragment</name><operator>.</operator><name>initialize</name></name><argument_list>(
      <argument><expr><call><name><name>WalletFragmentInitParams</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>setMaskedWalletRequest</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setMaskedWalletRequestCode</name><argument_list>(<argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>CHECKOUT_ACTIVITY_WALLET_REQUEST</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>triggerAndroidPaySheet</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>walletFragment</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Creates and injects a wallet fragment into the activity.
   */</comment>
  <function><specifier>private</specifier> <type><name>void</name></type> <name>prepareWalletFragment</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>WalletFragmentOptions</name></type> <name>walletFragmentOptions</name> <init>= <expr><call><name><name>WalletFragmentOptions</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>setEnvironment</name><argument_list>(<argument><expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>environment</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>build</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>setTheme</name><argument_list>(<argument><expr><name><name>WalletConstants</name><operator>.</operator><name>THEME_LIGHT</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>setMode</name><argument_list>(<argument><expr><name><name>WalletFragmentMode</name><operator>.</operator><name>BUY_BUTTON</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>walletFragment</name></name> <operator>=</operator> <call><name><name>SupportWalletFragment</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>walletFragmentOptions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>getSupportFragmentManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>beginTransaction</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>masked_wallet_fragment</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>walletFragment</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>commit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setGoogleApiClient</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>googleApiClient</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>GoogleApiClient</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>enableAutoManage</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>addApi</name><argument_list>(<argument><expr><name><name>Wallet</name><operator>.</operator><name>API</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>Wallet</name><operator>.</operator><name>WalletOptions</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>setEnvironment</name><argument_list>(<argument><expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>environment</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>build</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setTheme</name><argument_list>(<argument><expr><name><name>WalletConstants</name><operator>.</operator><name>THEME_LIGHT</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>showOrHideAndroidPayConfirmation</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>visible</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>visible</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>webView</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>confirmationGroup</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>VISIBLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>webView</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>VISIBLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>confirmationGroup</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Call when a masked wallet has been obtained and the content in the android pay confirmation should be rendered.
   */</comment>
  <function><specifier>private</specifier> <type><name>void</name></type> <name>updateAndroidPayConfirmation</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>MaskedWallet</name></type> <name>maskedWallet</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>AndroidPayPayload</name></type> <name>payload</name></decl></parameter>)</parameter_list> <block>{

    <expr_stmt><expr><call><name><name>Picasso</name><operator>.</operator><name>with</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>load</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>project</name><operator>.</operator><name>photo</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>full</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>contextPhotoImageView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectNameTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>project</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>creatorNameTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
      <argument><expr><name><name>this</name><operator>.</operator><name>projectCreatorByCreatorString</name></name></expr></argument>,
      <argument><expr><literal type="string">"creator_name"</literal></expr></argument>,
      <argument><expr><call><name><name>this</name><operator>.</operator><name>project</name><operator>.</operator><name>creator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>
    )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>termsAndPrivacyTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>Html</name><operator>.</operator><name>fromHtml</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>termsAndPrivacyString</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>backer101TextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>Html</name><operator>.</operator><name>fromHtml</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>backer101String</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if>if <condition>(<expr><name>maskedWallet</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>androidPayEmailTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>maskedWallet</name><operator>.</operator><name>getEmail</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>paymentDescriptions</name> <init>= <expr><call><name><name>maskedWallet</name><operator>.</operator><name>getPaymentDescriptions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if>if <condition>(<expr><name><name>paymentDescriptions</name><operator>.</operator><name>length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>androidPayInstrumentDescriptionTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>paymentDescriptions</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>
    }</block></then></if>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>pledgeDisclaimerTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>Html</name><operator>.</operator><name>fromHtml</name></name><argument_list>(
      <argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
        <argument><expr><name><name>this</name><operator>.</operator><name>pledgeDisclaimerString</name></name></expr></argument>,
        <argument><expr><literal type="string">"charge_amount"</literal></expr></argument>,
        <argument><expr><call><name><name>this</name><operator>.</operator><name>ksCurrency</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><call><name><name>Float</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>payload</name><operator>.</operator><name>cart</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>totalPrice</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>project</name></name></expr></argument>)</argument_list></call></expr></argument>
      )</argument_list></call></expr></argument>
    )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>confirmationWalletFragment</name></name> <operator>=</operator> <call><name><name>SupportWalletFragment</name><operator>.</operator><name>newInstance</name></name><argument_list>(
      <argument><expr><call><name><name>WalletFragmentOptions</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>setEnvironment</name><argument_list>(<argument><expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>environment</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>build</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setTheme</name><argument_list>(<argument><expr><name><name>WalletConstants</name><operator>.</operator><name>THEME_LIGHT</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setMode</name><argument_list>(<argument><expr><name><name>WalletFragmentMode</name><operator>.</operator><name>SELECTION_DETAILS</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>confirmationWalletFragment</name><operator>.</operator><name>initialize</name></name><argument_list>(
      <argument><expr><call><name><name>WalletFragmentInitParams</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>setMaskedWallet</name><argument_list>(<argument><expr><name>maskedWallet</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setMaskedWalletRequestCode</name><argument_list>(<argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>CHECKOUT_ACTIVITY_WALLET_CHANGE_REQUEST</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>getSupportFragmentManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>beginTransaction</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>confirmation_masked_wallet_fragment</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>confirmationWalletFragment</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>commit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>attemptAndroidPayConfirmation</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>MaskedWallet</name></type> <name>maskedWallet</name></decl></parameter>,
    <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>AndroidPayPayload</name></type> <name>payload</name></decl></parameter>)</parameter_list> <block>{

    <decl_stmt><decl><type><specifier>final</specifier> <name>FullWalletRequest</name></type> <name>fullWalletRequest</name> <init>= <expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>createFullWalletRequest</name></name><argument_list>(
      <argument><expr><call><name><name>maskedWallet</name><operator>.</operator><name>getGoogleTransactionId</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><name>payload</name></expr></argument>
    )</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>Wallet</name><operator>.</operator><name>Payments</name><operator>.</operator><name>loadFullWallet</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>googleApiClient</name></name></expr></argument>, <argument><expr><name>fullWalletRequest</name></expr></argument>,
      <argument><expr><name><name>ActivityRequestCodes</name><operator>.</operator><name>CHECKOUT_ACTIVITY_WALLET_OBTAINED_FULL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>SuppressLint</name><argument_list>(<argument><expr><literal type="string">"NewApi"</literal></expr></argument>)</argument_list></annotation>
  <specifier>private</specifier> <type><name>void</name></type> <name>androidPayComplete</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>FullWallet</name></type> <name>fullWallet</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>AndroidPayAuthorizedPayload</name></type> <name>authorizedPayload</name> <init>= <expr><call><name><name>AndroidPayUtils</name>
      <operator>.</operator><name>authorizedPayloadFromFullWallet</name></name><argument_list>(<argument><expr><name>fullWallet</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>gson</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>json</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>gson</name><operator>.</operator><name>toJson</name></name><argument_list>(<argument><expr><name>authorizedPayload</name></expr></argument>, <argument><expr><name><name>AndroidPayAuthorizedPayload</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// TODO: is this an injection problem?</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>javascript</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"checkout_android_pay_next(%s);"</literal></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>webView</name><operator>.</operator><name>evaluateJavascript</name></name><argument_list>(<argument><expr><name>javascript</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>showAndroidPayError</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Integer</name></type> <name>error</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>ConfirmDialog</name></type> <name>dialog</name> <init>= <expr><operator>new</operator> <call><name>ConfirmDialog</name><argument_list>(<argument><expr><name>this</name></expr></argument>,
      <argument><expr><name><name>this</name><operator>.</operator><name>androidPayErrorTitleString</name></name> <operator>+</operator> <literal type="string">" ("</literal> <operator>+</operator> <call><name><name>error</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">")"</literal></expr></argument>,
      <argument><expr><name><name>this</name><operator>.</operator><name>androidPayErrorMessageString</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>setOnDismissListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>d</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>back</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>back_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>toolbarBackButtonClicked</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>backButtonClicked</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>android_pay_confirmation_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>androidPayConfirmationClicked</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>confirmAndroidPayClicked</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>android_pay_change</name></name></expr></argument>)</argument_list></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>androidPayChangeClicked</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>confirmationWalletFragment</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>AndroidPayUtils</name><operator>.</operator><name>triggerAndroidPaySheet</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>confirmationWalletFragment</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>terms_and_privacy</name></name></expr></argument>)</argument_list></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>termsAndPrivacyClicked</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>CharSequence</name><index>[]</index></name></type> <name>items</name> <init>= <expr><operator>new</operator> <name><name>CharSequence</name><index>[]</index></name> <block>{
      <expr><name><name>this</name><operator>.</operator><name>termsOfUseString</name></name></expr>,
      <expr><name><name>this</name><operator>.</operator><name>privacyPolicyString</name></name></expr>
    }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><operator>new</operator> <call><name><name>AlertDialog</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>setItems</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>__</name></decl></parameter>, <parameter><decl><name>which</name></decl></parameter>)</parameter_list> -&gt; <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>which</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
          <expr_stmt><expr><name>intent</name> <operator>=</operator> <operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>HelpActivity</name><operator>.</operator><name>Terms</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
          <expr_stmt><expr><name>intent</name> <operator>=</operator> <operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>HelpActivity</name><operator>.</operator><name>Privacy</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <expr_stmt><expr><call><name>startActivityWithTransition</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, 
          <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_in_right</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>fade_out_slide_out_left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></lambda></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>show</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>backer_101</name></name></expr></argument>)</argument_list></annotation>
  <specifier>protected</specifier> <type><name>void</name></type> <name>backer101Clicked</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>WebViewActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>URL</name></name></expr></argument>, <argument><expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>project</name><operator>.</operator><name>webProjectUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>buildUpon</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>appendEncodedPath</name><argument_list>(<argument><expr><literal type="string">"pledge/big_print"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>startActivityWithTransition</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_in_right</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>fade_out_slide_out_left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>webViewExternalLinkActivated</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>KSWebViewClient</name></type> <name>webViewClient</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>webViewOnPageStarted</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>KSWebViewClient</name></type> <name>webViewClient</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>loadingIndicatorView</name><operator>.</operator><name>startAnimation</name></name><argument_list>(<argument><expr><call><name><name>AnimationUtils</name><operator>.</operator><name>INSTANCE</name><operator>.</operator><name>appearAnimation</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>webViewOnPageFinished</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>KSWebViewClient</name></type> <name>webViewClient</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>loadingIndicatorView</name><operator>.</operator><name>startAnimation</name></name><argument_list>(<argument><expr><call><name><name>AnimationUtils</name><operator>.</operator><name>INSTANCE</name><operator>.</operator><name>disappearAnimation</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>webViewPageIntercepted</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>KSWebViewClient</name></type> <name>webViewClient</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>pageIntercepted</name></name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>protected</specifier> <annotation>@<name>Nullable</name></annotation> <type><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>exitTransition</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><call><name>slideInFromLeft</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>
}</block></class>
</unit>
