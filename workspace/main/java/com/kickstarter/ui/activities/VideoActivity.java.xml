<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\activities\VideoActivity.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>activities</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ProgressBar</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>C</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ExoPlayer</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ExoPlayerFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>Player</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>source</name><operator>.</operator><name>ExtractorMediaSource</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>source</name><operator>.</operator><name>MediaSource</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>source</name><operator>.</operator><name>hls</name><operator>.</operator><name>HlsMediaSource</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>AdaptiveTrackSelection</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>DefaultTrackSelector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>trackselection</name><operator>.</operator><name>TrackSelection</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>ui</name><operator>.</operator><name>PlayerView</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>upstream</name><operator>.</operator><name>DefaultHttpDataSourceFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>exoplayer2</name><operator>.</operator><name>util</name><operator>.</operator><name>Util</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>BaseActivity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>Build</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>RequiresActivityViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>transformers</name><operator>.</operator><name>Transformers</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>interceptors</name><operator>.</operator><name>WebRequestInterceptor</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>VideoViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>trello</name><operator>.</operator><name>rxlifecycle</name><operator>.</operator><name>ActivityEvent</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>Bind</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>

<class><annotation>@<name>RequiresActivityViewModel</name><argument_list>(<argument><expr><name><name>VideoViewModel</name><operator>.</operator><name>ViewModel</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> <specifier>final</specifier> class <name>VideoActivity</name> <super><extends>extends <name><name>BaseActivity</name><argument_list type="generic">&lt;<argument><name><name>VideoViewModel</name><operator>.</operator><name>ViewModel</name></name></argument>&gt;</argument_list></name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><name>Build</name></type> <name>build</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>ExoPlayer</name></type> <name>player</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>long</name></type> <name>playerPosition</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><name>DefaultTrackSelector</name></type> <name>trackSelector</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>video_player_layout</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>rootView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>player_view</name></name></expr></argument>)</argument_list></annotation> <type><name>PlayerView</name></type> <name>playerView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>loading_indicator</name></name></expr></argument>)</argument_list></annotation> <type><name>ProgressBar</name></type> <name>loadingIndicatorProgressBar</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setContentView</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>video_player_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ButterKnife</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>build</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>preparePlayerWithUrl</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name><name>Transformers</name><operator>.</operator><name>takeWhen</name></name><argument_list>(<argument><expr><call><name>lifecycle</name><argument_list>()</argument_list></call><operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><name><name>ActivityEvent</name><operator>.</operator><name>RESUME</name></name><operator>::</operator><name>equals</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>preparePlayer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onDestroy</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onDestroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>releasePlayer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onPause</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onPause</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>releasePlayer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>onWindowFocusChanged</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>hasFocus</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onWindowFocusChanged</name></name><argument_list>(<argument><expr><name>hasFocus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr><name>hasFocus</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>rootView</name><operator>.</operator><name>setSystemUiVisibility</name></name><argument_list>(<argument><expr><call><name>systemUIFlags</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>int</name></type> <name>systemUIFlags</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name><name>View</name><operator>.</operator><name>SYSTEM_UI_FLAG_LAYOUT_STABLE</name></name>
      <operator>|</operator> <name><name>View</name><operator>.</operator><name>SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</name></name>
      <operator>|</operator> <name><name>View</name><operator>.</operator><name>SYSTEM_UI_FLAG_FULLSCREEN</name></name>
      <operator>|</operator> <name><name>View</name><operator>.</operator><name>SYSTEM_UI_FLAG_IMMERSIVE</name></name></expr>;</return>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>onStateChanged</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>playbackState</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>playbackState</name> <operator>==</operator> <name><name>Player</name><operator>.</operator><name>STATE_ENDED</name></name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name>finish</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if>if <condition>(<expr><name>playbackState</name> <operator>==</operator> <name><name>Player</name><operator>.</operator><name>STATE_BUFFERING</name></name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>loadingIndicatorProgressBar</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>VISIBLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>loadingIndicatorProgressBar</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>preparePlayer</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>videoUrl</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>TrackSelection</name><operator>.</operator><name>Factory</name></name></type> <name>adaptiveTrackSelectionFactory</name> <init>= <expr><operator>new</operator> <call><name><name>AdaptiveTrackSelection</name><operator>.</operator><name>Factory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>trackSelector</name></name> <operator>=</operator> <operator>new</operator> <call><name>DefaultTrackSelector</name><argument_list>(<argument><expr><name>adaptiveTrackSelectionFactory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>player</name></name> <operator>=</operator> <call><name><name>ExoPlayerFactory</name><operator>.</operator><name>newSimpleInstance</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>trackSelector</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>playerView</name><operator>.</operator><name>setPlayer</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>player</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>addListener</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>eventListener</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>seekTo</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>playerPosition</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>playerIsResuming</name> <init>= <expr><name><name>this</name><operator>.</operator><name>playerPosition</name></name> <operator>!=</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>prepare</name></name><argument_list>(<argument><expr><call><name>getMediaSource</name><argument_list>(<argument><expr><name>videoUrl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>playerIsResuming</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>setPlayWhenReady</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>MediaSource</name></type> <name>getMediaSource</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>videoUrl</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>DefaultHttpDataSourceFactory</name></type> <name>dataSourceFactory</name> <init>= <expr><operator>new</operator> <call><name>DefaultHttpDataSourceFactory</name><argument_list>(<argument><expr><call><name><name>WebRequestInterceptor</name><operator>.</operator><name>userAgent</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>build</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Uri</name></type> <name>videoUri</name> <init>= <expr><call><name><name>Uri</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>videoUrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>fileType</name> <init>= <expr><call><name><name>Util</name><operator>.</operator><name>inferContentType</name></name><argument_list>(<argument><expr><name>videoUri</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>fileType</name> <operator>==</operator> <name><name>C</name><operator>.</operator><name>TYPE_HLS</name></name></expr>)</condition><then> <block>{
      <return>return <expr><operator>new</operator> <call><name><name>HlsMediaSource</name><operator>.</operator><name>Factory</name></name><argument_list>(<argument><expr><name>dataSourceFactory</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createMediaSource</name><argument_list>(<argument><expr><name>videoUri</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then> <else>else <block>{
      <return>return <expr><operator>new</operator> <call><name><name>ExtractorMediaSource</name><operator>.</operator><name>Factory</name></name><argument_list>(<argument><expr><name>dataSourceFactory</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createMediaSource</name><argument_list>(<argument><expr><name>videoUri</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>releasePlayer</name><parameter_list>()</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>player</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>playerPosition</name></name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>getCurrentPosition</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>removeListener</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>eventListener</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>player</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>trackSelector</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>player</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <decl_stmt><decl><specifier>private</specifier> <annotation>@<name>NonNull</name></annotation> <type><name><name>Player</name><operator>.</operator><name>EventListener</name></name></type> <name>eventListener</name> <init>=
    <expr><operator>new</operator> <class><super><name><name>Player</name><operator>.</operator><name>EventListener</name></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <specifier>public</specifier> <type><name>void</name></type> <name>onPlayerStateChanged</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>playWhenReady</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>playbackState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>onStateChanged</name><argument_list>(<argument><expr><name>playbackState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></function>
    }</block></class></expr></init></decl>;</decl_stmt>
}</block></class>
</unit>
