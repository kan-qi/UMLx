<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\viewholders\CreatorDashboardReferrerBreakdownViewHolder.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSCurrency</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Project</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>apiresponses</name><operator>.</operator><name>ProjectStatsEnvelope</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>CreatorDashboardReferrerBreakdownHolderViewModel</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>RoundingMode</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>constraintlayout</name><operator>.</operator><name>widget</name><operator>.</operator><name>ConstraintLayout</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>Bind</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindDimen</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>transformers</name><operator>.</operator><name>Transformers</name><operator>.</operator><name>observeForUI</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ObjectUtils</name><operator>.</operator><name>requireNonNull</name></name>;</import>

<class><specifier>public</specifier> class <name>CreatorDashboardReferrerBreakdownViewHolder</name> <super><extends>extends <name>KSViewHolder</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>CreatorDashboardReferrerBreakdownHolderViewModel</name><operator>.</operator><name>ViewModel</name></name></type> <name>viewModel</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>amount_pledged_via_custom_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>amountPledgedViaCustomTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>amount_pledged_via_external_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>amountPledgedViaExternalTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>amount_pledged_via_kickstarter_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>amountPledgedViaKickstarterTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>dashboard_referrer_breakdown_empty_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>emptyCopyTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>percent_via_custom_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>percentCustomTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>percent_via_external_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>percentExternalTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>percent_via_kickstarter_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>percentKickstarterTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_custom</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaCustomLayout</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_custom_bar</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaCustomBar</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_custom_indicator</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaCustomIndicator</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_external</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaExternalLayout</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_external_bar</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaExternalBar</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_external_indicator</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaExternalIndicator</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_kickstarter_bar</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaKickstarterBar</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_kickstarter_indicator</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaKickstarterIndicator</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged_via_kickstarter</name></name></expr></argument>)</argument_list></annotation> <type><name>View</name></type> <name>pledgedViaKickstarterLayout</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>referrer_breakdown_chart_layout</name></name></expr></argument>)</argument_list></annotation> <type><name>ConstraintLayout</name></type> <name>referrerBreakdownLayout</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>grid_1</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>grid1Pixels</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>grid_3</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>grid3Pixels</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>KSCurrency</name></type> <name>ksCurrency</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>CreatorDashboardReferrerBreakdownViewHolder</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>view</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ButterKnife</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ksCurrency</name></name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>environment</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>ksCurrency</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>viewModel</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>CreatorDashboardReferrerBreakdownHolderViewModel</name><operator>.</operator><name>ViewModel</name></name><argument_list>(<argument><expr><call><name>environment</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>breakdownViewIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>referrerBreakdownLayout</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>emptyViewIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>emptyCopyTextView</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>customReferrerPercent</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>percent</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>setReferrerWidth</name><argument_list>(<argument><expr><name>percent</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaCustomBar</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaCustomIndicator</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>customReferrerPercentText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>percentCustomTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>externalReferrerPercent</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>percent</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>setReferrerWidth</name><argument_list>(<argument><expr><name>percent</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalBar</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalIndicator</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>externalReferrerPercent</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>flipIndicatorIfStatsOffScreen</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalIndicator</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalLayout</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>externalReferrerPercentText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>percentExternalTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>kickstarterReferrerPercent</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>percent</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>setReferrerWidth</name><argument_list>(<argument><expr><name>percent</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaKickstarterBar</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaKickstarterIndicator</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>kickstarterReferrerPercentText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>percentKickstarterTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>pledgedViaCustomLayoutIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>gone</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>hideReferrer</name></name><argument_list>(<argument><expr><name>gone</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaCustomLayout</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaCustomBar</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaCustomIndicator</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>pledgedViaExternalLayoutIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>gone</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>hideReferrer</name></name><argument_list>(<argument><expr><name>gone</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalLayout</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalBar</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaExternalIndicator</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>pledgedViaKickstarterLayoutIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>gone</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>hideReferrer</name></name><argument_list>(<argument><expr><name>gone</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaKickstarterLayout</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaKickstarterBar</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>pledgedViaKickstarterIndicator</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectAndCustomReferrerPledgedAmount</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>pa</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>setAmountPledgedTextViewText</name></name><argument_list>(<argument><expr><name>pa</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>amountPledgedViaCustomTextView</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectAndExternalReferrerPledgedAmount</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>pa</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>setAmountPledgedTextViewText</name></name><argument_list>(<argument><expr><name>pa</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>amountPledgedViaExternalTextView</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectAndKickstarterReferrerPledgedAmount</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>pa</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>setAmountPledgedTextViewText</name></name><argument_list>(<argument><expr><name>pa</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>amountPledgedViaKickstarterTextView</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setReferrerWidth</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Float</name></type> <name>percent</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>bar</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>indicator</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name></type> <name>barLayoutParams</name> <init>= <expr><operator>(</operator><name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name><operator>)</operator> <call><name><name>bar</name><operator>.</operator><name>getLayoutParams</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>barLayoutParams</name><operator>.</operator><name>horizontalWeight</name></name> <operator>=</operator> <name>percent</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bar</name><operator>.</operator><name>setLayoutParams</name></name><argument_list>(<argument><expr><name>barLayoutParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>adjustIndicatorMarginForShortBar</name><argument_list>(<argument><expr><name>bar</name></expr></argument>, <argument><expr><name>indicator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>adjustIndicatorMarginForShortBar</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>bar</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>indicator</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>bar</name><operator>.</operator><name>post</name></name><argument_list>(<argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{
      <if>if <condition>(<expr><call><name><name>bar</name><operator>.</operator><name>getMeasuredWidth</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name><name>this</name><operator>.</operator><name>grid3Pixels</name></name></expr>)</condition><then> <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name></type> <name>indicatorLayoutParams</name> <init>= <expr><operator>(</operator><name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name><operator>)</operator> <call><name><name>indicator</name><operator>.</operator><name>getLayoutParams</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>indicatorLayoutParams</name><operator>.</operator><name>startToStart</name></name> <operator>=</operator> <call><name><name>bar</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>indicatorLayoutParams</name><operator>.</operator><name>endToEnd</name></name> <operator>=</operator> <call><name><name>bar</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>indicator</name><operator>.</operator><name>setLayoutParams</name></name><argument_list>(<argument><expr><name>indicatorLayoutParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>
    }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>flipIndicatorIfStatsOffScreen</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>indicator</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>stats</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>post</name></name><argument_list>(<argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>leftVisibleEdgeOfBreakdownView</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>referrerBreakdownLayout</name><operator>.</operator><name>getLeft</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>this</name><operator>.</operator><name>referrerBreakdownLayout</name><operator>.</operator><name>getPaddingLeft</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if>if <condition>(<expr><call><name><name>stats</name><operator>.</operator><name>getLeft</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>leftVisibleEdgeOfBreakdownView</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>indicator</name><operator>.</operator><name>setScaleX</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name></type> <name>indicatorLayoutParams</name> <init>= <expr><operator>(</operator><name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name><operator>)</operator> <call><name><name>indicator</name><operator>.</operator><name>getLayoutParams</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>indicatorLayoutParams</name><operator>.</operator><name>setMarginStart</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>grid3Pixels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>indicator</name><operator>.</operator><name>setLayoutParams</name></name><argument_list>(<argument><expr><name>indicatorLayoutParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><specifier>final</specifier> <name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name></type> <name>statsLayoutParams</name> <init>= <expr><operator>(</operator><name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name></name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>getLayoutParams</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>statsLayoutParams</name><operator>.</operator><name>startToEnd</name></name> <operator>=</operator> <call><name><name>indicator</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>statsLayoutParams</name><operator>.</operator><name>setMarginStart</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>grid1Pixels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>statsLayoutParams</name><operator>.</operator><name>endToStart</name></name> <operator>=</operator> <name><name>ConstraintLayout</name><operator>.</operator><name>LayoutParams</name><operator>.</operator><name>UNSET</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>setLayoutParams</name></name><argument_list>(<argument><expr><name>statsLayoutParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>
    }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>hideReferrer</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>gone</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>layout</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>bar</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>indicator</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name>layout</name></expr></argument>, <argument><expr><name>gone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name>bar</name></expr></argument>, <argument><expr><name>gone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name>indicator</name></expr></argument>, <argument><expr><name>gone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>bindData</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Object</name></type> <name>data</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Pair</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>, <argument><name>ProjectStatsEnvelope</name></argument>&gt;</argument_list></name></type> <name>projectAndStats</name> <init>= <expr><call><name>requireNonNull</name><argument_list>(<argument><expr><operator>(</operator><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>, <argument><name>ProjectStatsEnvelope</name></argument>&gt;</argument_list></name><operator>)</operator> <name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>projectAndStatsInput</name></name><argument_list>(<argument><expr><name>projectAndStats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setAmountPledgedTextViewText</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Pair</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>, <argument><name>Float</name></argument>&gt;</argument_list></name></type> <name>projectAndAmount</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>TextView</name></type> <name>textview</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>amountString</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>ksCurrency</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>projectAndAmount</name><operator>.</operator><name>second</name></name></expr></argument>, <argument><expr><name><name>projectAndAmount</name><operator>.</operator><name>first</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>RoundingMode</name><operator>.</operator><name>DOWN</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>textview</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>amountString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
