<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\viewholders\ProjectViewHolder.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>drawable</name><operator>.</operator><name>Drawable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>Html</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewGroup</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Button</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageButton</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ProgressBar</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>BaseActivity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSString</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>transformations</name><operator>.</operator><name>CircleTransformation</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>NumberUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ProjectUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>SocialUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Photo</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Project</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>IntentKey</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>activities</name><operator>.</operator><name>ProjectSocialActivity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>ProjectHolderViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>squareup</name><operator>.</operator><name>picasso</name><operator>.</operator><name>Picasso</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>core</name><operator>.</operator><name>content</name><operator>.</operator><name>ContextCompat</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>Bind</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindColor</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindDimen</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindDrawable</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindString</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>OnClick</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>transformers</name><operator>.</operator><name>Transformers</name><operator>.</operator><name>observeForUI</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>DateTimeUtils</name><operator>.</operator><name>mediumDate</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>DateTimeUtils</name><operator>.</operator><name>mediumDateShortTime</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ObjectUtils</name><operator>.</operator><name>requireNonNull</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name><operator>.</operator><name>getScreenDensity</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name><operator>.</operator><name>getScreenHeightDp</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name><operator>.</operator><name>getScreenWidthDp</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>ProjectViewHolder</name> <super><extends>extends <name>KSViewHolder</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><name><name>ProjectHolderViewModel</name><operator>.</operator><name>ViewModel</name></name></type> <name>viewModel</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Delegate</name></type> <name>delegate</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>KSString</name></type> <name>ksString</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>avatar</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageView</name></type> <name>avatarImageView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>backers_count</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>backersCountTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>backing_group</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>backingViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>back_project_button</name></name></expr></argument>)</argument_list></annotation> <annotation>@<name>Nullable</name></annotation> <type><name>Button</name></type> <name>backProjectButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>blurb_view</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>blurbViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>blurb</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>blurbTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>category</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>categoryTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>comments_count</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>commentsCountTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>usd_conversion_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>conversionTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>creator_name</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>creatorNameTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>deadline_countdown_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>deadlineCountdownTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>deadline_countdown_unit_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>deadlineCountdownUnitTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>featured</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>featuredTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>featured_group</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>featuredViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_disclaimer_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>projectDisclaimerTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goal</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>goalTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>land_overlay_text</name></name></expr></argument>)</argument_list></annotation> <annotation>@<name>Nullable</name></annotation> <type><name>ViewGroup</name></type> <name>landOverlayTextViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>location</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>locationTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>manage_pledge_button</name></name></expr></argument>)</argument_list></annotation> <annotation>@<name>Nullable</name></annotation> <type><name>Button</name></type> <name>managePledgeButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>name_creator_view</name></name></expr></argument>)</argument_list></annotation> <annotation>@<name>Nullable</name></annotation> <type><name>ViewGroup</name></type> <name>nameCreatorViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>percentage_funded</name></name></expr></argument>)</argument_list></annotation> <type><name>ProgressBar</name></type> <name>percentageFundedProgressBar</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_photo</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageView</name></type> <name>photoImageView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>play_button_overlay</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageButton</name></type> <name>playButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pledged</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>pledgedTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_metadata_view_group</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>projectMetadataViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_name</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>projectNameTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_social_image</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageView</name></type> <name>projectSocialImageView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_social_text</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>projectSocialTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_stats_view</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>projectStatsViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_social_view</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>projectSocialViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_state_header_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>projectStateHeaderTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_state_subhead_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>projectStateSubheadTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>project_state_view_group</name></name></expr></argument>)</argument_list></annotation> <type><name>ViewGroup</name></type> <name>projectStateViewGroup</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>view_pledge_button</name></name></expr></argument>)</argument_list></annotation> <annotation>@<name>Nullable</name></annotation> <type><name>Button</name></type> <name>viewPledgeButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>updates_count</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>updatesCountTextView</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindColor</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>color</name><operator>.</operator><name>green_alpha_20</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>greenAlpha50Color</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindColor</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>color</name><operator>.</operator><name>ksr_grey_400</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>ksrGrey400</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>grid_1</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>grid1Dimen</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>grid_2</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>grid2Dimen</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>grid_3</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>grid3Dimen</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>grid_4</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>grid4Dimen</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDrawable</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>click_indicator_light_masked</name></name></expr></argument>)</argument_list></annotation> <type><name>Drawable</name></type> <name>clickIndicatorLightMaskedDrawable</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDrawable</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>gray_gradient</name></name></expr></argument>)</argument_list></annotation> <type><name>Drawable</name></type> <name>grayGradientDrawable</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_creator_by_creator_html</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>byCreatorString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>discovery_baseball_card_blurb_read_more</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>blurbReadMoreString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>discovery_baseball_card_stats_convert_from_pledged_of_goal</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>convertedFromString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>discovery_baseball_card_metadata_featured_project</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>featuredInString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_disclaimer_goal_not_reached</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>projectDisclaimerGoalNotReachedString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_disclaimer_goal_reached</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>projectDisclaimerGoalReachedString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_funding_canceled</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundingCanceledString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_funding_project_canceled_by_creator</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundingCanceledByCreatorString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_project_was_successfully_funded_on_deadline</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>successfullyFundedOnDeadlineString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_funding_suspended</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundingSuspendedString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_funding_project_suspended</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundingProjectSuspendedString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_funding_unsuccessful</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundingUnsuccessfulString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_project_funding_goal_not_reached</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundingGoalNotReachedString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>project_status_funded</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fundedString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>discovery_baseball_card_stats_pledged_of_goal</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>pledgedOfGoalString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>discovery_baseball_card_stats_pledged_of_goal_short</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>ofGoalString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>discovery_baseball_card_stats_backers</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>backersString</name></decl>;</decl_stmt>

  <interface><specifier>public</specifier> interface <name>Delegate</name> <block>{
    <function_decl><type><name>void</name></type> <name>projectViewHolderBackProjectClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderBlurbClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderCommentsClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderCreatorClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderManagePledgeClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderUpdatesClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderVideoStarted</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>projectViewHolderViewPledgeClicked</name><parameter_list>(<parameter><decl><type><name>ProjectViewHolder</name></type> <name>viewHolder</name></decl></parameter>)</parameter_list>;</function_decl>
  }</block></interface>

  <constructor><specifier>public</specifier> <name>ProjectViewHolder</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>view</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Delegate</name></type> <name>delegate</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>viewModel</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>ProjectHolderViewModel</name><operator>.</operator><name>ViewModel</name></name><argument_list>(<argument><expr><call><name>environment</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>delegate</name></name> <operator>=</operator> <name>delegate</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ksString</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>ksString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ButterKnife</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>avatarPhotoUrl</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>url</name></decl></parameter></parameter_list> -&gt;
        <block type="pseudo"><expr><call><name><name>Picasso</name><operator>.</operator><name>with</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>load</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>transform</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CircleTransformation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>avatarImageView</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>backersCountTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>backersCountTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>backingViewGroupIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>backingViewGroup</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>blurbTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>blurb</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>blurbTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>Html</name><operator>.</operator><name>fromHtml</name></name><argument_list>(<argument><expr><call><name><name>TextUtils</name><operator>.</operator><name>htmlEncode</name></name><argument_list>(<argument><expr><name>blurb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>categoryTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>categoryTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>commentsCountTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>commentsCountTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>creatorNameTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>name</name></decl></parameter></parameter_list> -&gt;
        <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>creatorNameTextView</name><operator>.</operator><name>setText</name></name><argument_list>(
          <argument><expr><call><name><name>Html</name><operator>.</operator><name>fromHtml</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>byCreatorString</name></name></expr></argument>, <argument><expr><literal type="string">"creator_name"</literal></expr></argument>, <argument><expr><call><name><name>TextUtils</name><operator>.</operator><name>htmlEncode</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>deadlineCountdownTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>deadlineCountdownTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>featuredTextViewRootCategory</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>c</name></decl></parameter></parameter_list> -&gt;
        <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>featuredTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>featuredInString</name></name></expr></argument>, <argument><expr><literal type="string">"category_name"</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>featuredViewGroupIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>featuredViewGroup</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>goalStringForTextView</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setGoalTextView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>locationTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>locationTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectOutput</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>p</name></decl></parameter></parameter_list> -&gt; <block>{
        <comment type="line">// todo: break down these helpers</comment>
        <expr_stmt><expr><call><name>setLandscapeOverlayText</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setLandscapeActionButton</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setStatsContentDescription</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>deadlineCountdownUnitTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>ProjectUtils</name><operator>.</operator><name>deadlineCountdownDetail</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>ksString</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>percentageFundedProgress</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>percentageFundedProgressBar</name></name><operator>::</operator><name>setProgress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>percentageFundedProgressBarIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>percentageFundedProgressBar</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>playButtonIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>playButton</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>pledgedTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>pledgedTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectDisclaimerGoalNotReachedString</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setProjectDisclaimerGoalNotReachedString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectDisclaimerGoalReachedDateTime</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setProjectDisclaimerGoalReachedString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectDisclaimerTextViewIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectDisclaimerTextView</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectMetadataViewGroupBackgroundDrawableInt</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>d</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>projectMetadataViewGroup</name><operator>.</operator><name>setBackground</name></name><argument_list>(<argument><expr><call><name><name>ContextCompat</name><operator>.</operator><name>getDrawable</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectMetadataViewGroupIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectMetadataViewGroup</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectNameTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectNameTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectPhoto</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setProjectPhoto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectSocialTextViewFriends</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>friends</name></decl></parameter></parameter_list> -&gt;
         <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>projectSocialTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>SocialUtils</name><operator>.</operator><name>projectCardFriendNamepile</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>friends</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>ksString</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectSocialImageViewIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectSocialImageView</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectSocialImageViewUrl</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>url</name></decl></parameter></parameter_list> -&gt;
        <block type="pseudo"><expr><call><name><name>Picasso</name><operator>.</operator><name>with</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>load</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>transform</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CircleTransformation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectSocialImageView</name></name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectSocialViewGroupIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectSocialViewGroup</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectStateViewGroupBackgroundColorInt</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>c</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>projectStateViewGroup</name><operator>.</operator><name>setBackgroundColor</name></name><argument_list>(<argument><expr><call><name><name>ContextCompat</name><operator>.</operator><name>getColor</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>projectStateViewGroupIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectStateViewGroup</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>setCanceledProjectStateView</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>setCanceledProjectStateView</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>setProjectSocialClickListener</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>setProjectSocialClickListener</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>setSuccessfulProjectStateView</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setSuccessfulProjectStateView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>setSuspendedProjectStateView</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>setSuspendedProjectStateView</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>setUnsuccessfulProjectStateView</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setUnsuccessfulProjectStateView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>shouldSetDefaultStatsMargins</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setStatsMargins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>startProjectSocialActivity</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>startProjectSocialActivity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>updatesCountTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>updatesCountTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>conversionPledgedAndGoalText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setConvertedCurrencyView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>conversionTextViewIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>conversionTextView</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>bindData</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Object</name></type> <name>data</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
    <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>final</specifier> <name><name>Pair</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>projectAndCountry</name> <init>= <expr><call><name>requireNonNull</name><argument_list>(<argument><expr><operator>(</operator><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>Project</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><operator>)</operator> <name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>configureWith</name></name><argument_list>(<argument><expr><name>projectAndCountry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setConvertedCurrencyView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>pledgedAndGoal</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>conversionTextView</name><operator>.</operator><name>setText</name></name><argument_list>(
      <argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
        <argument><expr><name><name>this</name><operator>.</operator><name>convertedFromString</name></name></expr></argument>, <argument><expr><literal type="string">"pledged"</literal></expr></argument>, <argument><expr><name><name>pledgedAndGoal</name><operator>.</operator><name>first</name></name></expr></argument>, <argument><expr><literal type="string">"goal"</literal></expr></argument>, <argument><expr><name><name>pledgedAndGoal</name><operator>.</operator><name>second</name></name></expr></argument>
      )</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  }</block></function><empty_stmt>;</empty_stmt>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setGoalTextView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>goalString</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>goalText</name> <init>= <expr><ternary><condition><expr><call><name><name>ViewUtils</name><operator>.</operator><name>isFontScaleLarge</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>
      ?</condition><then> <expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>ofGoalString</name></name></expr></argument>, <argument><expr><literal type="string">"goal"</literal></expr></argument>, <argument><expr><name>goalString</name></expr></argument>)</argument_list></call></expr>
      </then><else>: <expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>pledgedOfGoalString</name></name></expr></argument>, <argument><expr><literal type="string">"goal"</literal></expr></argument>, <argument><expr><name>goalString</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>goalTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>goalText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setProjectPhoto</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Photo</name></type> <name>photo</name></decl></parameter>)</parameter_list> <block>{
    <comment type="line">// Account for the grid2 start and end margins.</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>targetImageWidth</name> <init>= <expr><call>(<name>int</name>) <argument_list>(<argument><expr><call><name>getScreenWidthDp</name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>*</operator> <call><name>getScreenDensity</name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>this</name><operator>.</operator><name>grid2Dimen</name></name> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>targetImageHeight</name> <init>= <expr><call><name><name>ProjectUtils</name><operator>.</operator><name>photoHeightFromWidthRatio</name></name><argument_list>(<argument><expr><name>targetImageWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>photoImageView</name><operator>.</operator><name>setMaxHeight</name></name><argument_list>(<argument><expr><name>targetImageHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>Picasso</name><operator>.</operator><name>with</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>load</name><argument_list>(<argument><expr><call><name><name>photo</name><operator>.</operator><name>full</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>resize</name><argument_list>(<argument><expr><name>targetImageWidth</name></expr></argument>, <argument><expr><name>targetImageHeight</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>centerCrop</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>placeholder</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>grayGradientDrawable</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>photoImageView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setCanceledProjectStateView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateHeaderTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundingCanceledString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateSubheadTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundingCanceledByCreatorString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setProjectDisclaimerGoalReachedString</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DateTime</name></type> <name>deadline</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectDisclaimerTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
      <argument><expr><name><name>this</name><operator>.</operator><name>projectDisclaimerGoalReachedString</name></name></expr></argument>,
      <argument><expr><literal type="string">"deadline"</literal></expr></argument>,
      <argument><expr><call><name>mediumDateShortTime</name><argument_list>(<argument><expr><name>deadline</name></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setProjectDisclaimerGoalNotReachedString</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>DateTime</name></argument>&gt;</argument_list></name></type> <name>goalAndDeadline</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectDisclaimerTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(
      <argument><expr><name><name>this</name><operator>.</operator><name>projectDisclaimerGoalNotReachedString</name></name></expr></argument>,
      <argument><expr><literal type="string">"goal_currency"</literal></expr></argument>,
      <argument><expr><name><name>goalAndDeadline</name><operator>.</operator><name>first</name></name></expr></argument>,
      <argument><expr><literal type="string">"deadline"</literal></expr></argument>,
      <argument><expr><call><name>mediumDateShortTime</name><argument_list>(<argument><expr><name><name>goalAndDeadline</name><operator>.</operator><name>second</name></name></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setProjectSocialClickListener</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectSocialViewGroup</name><operator>.</operator><name>setBackground</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>clickIndicatorLightMaskedDrawable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectSocialViewGroup</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>projectSocialViewGroupClicked</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setSuccessfulProjectStateView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DateTime</name></type> <name>stateChangedAt</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateHeaderTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundedString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateSubheadTextView</name><operator>.</operator><name>setText</name></name><argument_list>(
      <argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>successfullyFundedOnDeadlineString</name></name></expr></argument>, <argument><expr><literal type="string">"deadline"</literal></expr></argument>, <argument><expr><call><name>mediumDate</name><argument_list>(<argument><expr><name>stateChangedAt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setSuspendedProjectStateView</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateHeaderTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundingSuspendedString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateSubheadTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundingProjectSuspendedString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setUnsuccessfulProjectStateView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DateTime</name></type> <name>stateChangedAt</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateHeaderTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundingUnsuccessfulString</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>projectStateSubheadTextView</name><operator>.</operator><name>setText</name></name><argument_list>(
      <argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fundingGoalNotReachedString</name></name></expr></argument>, <argument><expr><literal type="string">"deadline"</literal></expr></argument>, <argument><expr><call><name>mediumDate</name><argument_list>(<argument><expr><name>stateChangedAt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setStatsMargins</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>shouldSetDefaultMargins</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>shouldSetDefaultMargins</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setLinearViewGroupMargins</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectStatsViewGroup</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid3Dimen</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid2Dimen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setLinearViewGroupMargins</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>projectStatsViewGroup</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid3Dimen</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid4Dimen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>startProjectSocialActivity</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>BaseActivity</name></type> <name>activity</name> <init>= <expr><operator>(</operator><name>BaseActivity</name><operator>)</operator> <call><name>context</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ProjectSocialActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>PROJECT</name></name></expr></argument>, <argument><expr><name>project</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>activity</name><operator>.</operator><name>startActivity</name></name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>activity</name><operator>.</operator><name>overridePendingTransition</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>slide_in_right</name></name></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>anim</name><operator>.</operator><name>fade_out_slide_out_left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Nullable</name></annotation> <annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>back_project_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>backProjectButtonOnClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderBackProjectClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><block>{<expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>blurb_view</name></name></expr>, <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>campaign</name></name></expr></argument>}</block></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>blurbClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderBlurbClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>comments</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>commentsClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderCommentsClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><block>{<expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>creator_name</name></name></expr>, <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>creator_info</name></name></expr></argument>}</block></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>creatorNameClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderCreatorClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Nullable</name></annotation> <annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>manage_pledge_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>managePledgeOnClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderManagePledgeClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>play_button_overlay</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>playButtonClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderVideoStarted</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>Nullable</name></annotation> <annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>view_pledge_button</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>viewPledgeOnClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderViewPledgeClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><annotation>@<name>OnClick</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>updates</name></name></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>updatesClick</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>delegate</name><operator>.</operator><name>projectViewHolderUpdatesClicked</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Set landscape project action buttons in the ViewHolder rather than Activity.
   */</comment>
  <function><specifier>private</specifier> <type><name>void</name></type> <name>setLandscapeActionButton</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>backProjectButton</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>this</name><operator>.</operator><name>managePledgeButton</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>this</name><operator>.</operator><name>viewPledgeButton</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>ProjectUtils</name><operator>.</operator><name>setActionButton</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>backProjectButton</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>managePledgeButton</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>viewPledgeButton</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
  }</block></function>

  <comment type="block" format="javadoc">/**
   * Set top margin of overlay text based on landscape screen height, scaled by screen density.
   */</comment>
  <function><specifier>private</specifier> <type><name>void</name></type> <name>setLandscapeOverlayText</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>landOverlayTextViewGroup</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>this</name><operator>.</operator><name>nameCreatorViewGroup</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><call><name>getScreenHeightDp</name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>float</name></type> <name>densityOffset</name> <init>= <expr><call><name>context</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResources</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDisplayMetrics</name><argument_list>()</argument_list></call><operator>.</operator><name>density</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>float</name></type> <name>topMargin</name> <init>= <expr><operator>(</operator><operator>(</operator><name>screenHeight</name> <operator>/</operator> <literal type="number">3</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <name>densityOffset</name><operator>)</operator> <operator>-</operator> <name><name>this</name><operator>.</operator><name>grid4Dimen</name></name></expr></init></decl>;</decl_stmt>  <comment type="line">// offset for toolbar</comment>
      <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setRelativeViewGroupMargins</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>landOverlayTextViewGroup</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid4Dimen</name></name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>topMargin</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid4Dimen</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if>if <condition>(<expr><operator>!</operator><call><name><name>project</name><operator>.</operator><name>hasVideo</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setRelativeViewGroupMargins</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>nameCreatorViewGroup</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid2Dimen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
        <expr_stmt><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setRelativeViewGroupMargins</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>nameCreatorViewGroup</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>grid1Dimen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>
    }</block></then></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setStatsContentDescription</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Project</name></type> <name>project</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>backersCountContentDescription</name> <init>= <expr><call><name><name>NumberUtils</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>backersCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">" "</literal> <operator>+</operator>  <name><name>this</name><operator>.</operator><name>backersString</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>pledgedContentDescription</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>pledgedTextView</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" "</literal> <operator>+</operator> <call><name><name>this</name><operator>.</operator><name>goalTextView</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>deadlineCountdownContentDescription</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>deadlineCountdownTextView</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" "</literal> <operator>+</operator> <call><name><name>this</name><operator>.</operator><name>deadlineCountdownUnitTextView</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>backersCountTextView</name><operator>.</operator><name>setContentDescription</name></name><argument_list>(<argument><expr><name>backersCountContentDescription</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>pledgedTextView</name><operator>.</operator><name>setContentDescription</name></name><argument_list>(<argument><expr><name>pledgedContentDescription</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>deadlineCountdownTextView</name><operator>.</operator><name>setContentDescription</name></name><argument_list>(<argument><expr><name>deadlineCountdownContentDescription</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
