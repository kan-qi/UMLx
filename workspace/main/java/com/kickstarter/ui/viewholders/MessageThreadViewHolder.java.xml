<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\viewholders\MessageThreadViewHolder.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>Typeface</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>drawable</name><operator>.</operator><name>Drawable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ImageView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>jakewharton</name><operator>.</operator><name>rxbinding</name><operator>.</operator><name>view</name><operator>.</operator><name>RxView</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KSString</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>KoalaContext</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>transformations</name><operator>.</operator><name>CircleTransformation</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>DateTimeUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>StringUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ViewUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>MessageThread</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>IntentKey</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>activities</name><operator>.</operator><name>MessagesActivity</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>viewmodels</name><operator>.</operator><name>MessageThreadHolderViewModel</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>squareup</name><operator>.</operator><name>picasso</name><operator>.</operator><name>Picasso</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>cardview</name><operator>.</operator><name>widget</name><operator>.</operator><name>CardView</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>Bind</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindDimen</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindDrawable</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>BindString</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>rx</name><operator>.</operator><name>transformers</name><operator>.</operator><name>Transformers</name><operator>.</operator><name>observeForUI</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ObjectUtils</name><operator>.</operator><name>requireNonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>MessageThreadViewHolder</name> <super><extends>extends <name>KSViewHolder</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name><name>MessageThreadHolderViewModel</name><operator>.</operator><name>ViewModel</name></name></type> <name>viewModel</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>message_thread_date_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>dateTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>message_thread_body_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>messageBodyTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>message_thread_card_view</name></name></expr></argument>)</argument_list></annotation> <type><name>CardView</name></type> <name>messageThreadCardView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>message_thread_unread_count_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>unreadCountTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>participant_avatar_image_view</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageView</name></type> <name>participantAvatarImageView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>participant_name_text_view</name></name></expr></argument>)</argument_list></annotation> <type><name>TextView</name></type> <name>participantNameTextView</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>Bind</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>unread_indicator_image_view</name></name></expr></argument>)</argument_list></annotation> <type><name>ImageView</name></type> <name>unreadIndicatorImageView</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>card_elevation</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>cardElevationDimen</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDimen</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>dimen</name><operator>.</operator><name>card_no_elevation</name></name></expr></argument>)</argument_list></annotation> <type><name>int</name></type> <name>cardNoElevationDimen</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDrawable</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>click_indicator_light</name></name></expr></argument>)</argument_list></annotation> <type><name>Drawable</name></type> <name>clickIndicatorLightDrawable</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindDrawable</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>drawable</name><operator>.</operator><name>message_thread_click_indicator</name></name></expr></argument>)</argument_list></annotation> <type><name>Drawable</name></type> <name>messageThreadClickIndicator</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>font_family_sans_serif_medium</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>fontFamilyMediumString</name></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>protected</specifier> <annotation>@<name>BindString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>unread_count_unread</name></name></expr></argument>)</argument_list></annotation> <type><name>String</name></type> <name>unreadCountUnreadString</name></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>private</specifier> <type><name>KSString</name></type> <name>ksString</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>MessageThreadViewHolder</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>view</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ksString</name></name> <operator>=</operator> <call><name>environment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>ksString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>viewModel</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>MessageThreadHolderViewModel</name><operator>.</operator><name>ViewModel</name></name><argument_list>(<argument><expr><call><name>environment</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ButterKnife</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>RxView</name><operator>.</operator><name>clicks</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>messageThreadCardView</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>__</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>messageThreadCardViewClicked</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>cardViewIsElevated</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setCardViewElevation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>dateDateTime</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setDateTextView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>dateTextViewIsMediumWeight</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setDateTextViewFontFamily</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>messageBodyTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>messageBodyTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>participantAvatarUrl</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setParticipantAvatarImageView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>participantNameTextViewIsMediumWeight</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setParticipantNameTextViewFontFamily</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>participantNameTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>participantNameTextView</name></name><operator>::</operator><name>setText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>startMessagesActivity</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>startMessagesActivity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>unreadCountTextViewIsGone</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>unreadCountTextView</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>unreadCountTextViewText</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setUnreadCountTextView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>outputs</name><operator>.</operator><name>unreadIndicatorViewHidden</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>bindToLifecycle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>compose</name><argument_list>(<argument><expr><call><name>observeForUI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><call><name><name>ViewUtils</name><operator>.</operator><name>setGone</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>unreadIndicatorImageView</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <type><name>void</name></type> <name>bindData</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>Nullable</name></annotation> <name>Object</name></type> <name>data</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>MessageThread</name></type> <name>messageThread</name> <init>= <expr><call><name>requireNonNull</name><argument_list>(<argument><expr><operator>(</operator><name>MessageThread</name><operator>)</operator> <name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>viewModel</name><operator>.</operator><name>inputs</name><operator>.</operator><name>configureWith</name></name><argument_list>(<argument><expr><name>messageThread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setCardViewElevation</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isElevated</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>isElevated</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>messageThreadCardView</name><operator>.</operator><name>setCardElevation</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>cardElevationDimen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>messageThreadCardView</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>clickIndicatorLightDrawable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>messageThreadCardView</name><operator>.</operator><name>setCardElevation</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>cardNoElevationDimen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>messageThreadCardView</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>messageThreadClickIndicator</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setDateTextView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>DateTime</name></type> <name>date</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>dateTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>DateTimeUtils</name><operator>.</operator><name>relative</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>ksString</name></name></expr></argument>, <argument><expr><name>date</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setDateTextViewFontFamily</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isMediumWeight</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>isMediumWeight</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>dateTextView</name><operator>.</operator><name>setTypeface</name></name><argument_list>(<argument><expr><call><name><name>Typeface</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fontFamilyMediumString</name></name></expr></argument>, <argument><expr><name><name>Typeface</name><operator>.</operator><name>NORMAL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>dateTextView</name><operator>.</operator><name>setTypeface</name></name><argument_list>(<argument><expr><name><name>Typeface</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>startMessagesActivity</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>MessageThread</name></type> <name>messageThread</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>MessagesActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>MESSAGE_THREAD</name></name></expr></argument>, <argument><expr><name>messageThread</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>putExtra</name><argument_list>(<argument><expr><name><name>IntentKey</name><operator>.</operator><name>KOALA_CONTEXT</name></name></expr></argument>, <argument><expr><name><name>KoalaContext</name><operator>.</operator><name>Message</name><operator>.</operator><name>MESSAGES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>context</name><argument_list>()</argument_list></call><operator>.</operator><call><name>startActivity</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setParticipantAvatarImageView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>avatarUrl</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>Picasso</name><operator>.</operator><name>with</name></name><argument_list>(<argument><expr><call><name>context</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>load</name><argument_list>(<argument><expr><name>avatarUrl</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>transform</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CircleTransformation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>into</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>participantAvatarImageView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setParticipantNameTextViewFontFamily</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isMediumWeight</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><name>isMediumWeight</name></expr>)</condition><then> <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participantNameTextView</name><operator>.</operator><name>setTypeface</name></name><argument_list>(<argument><expr><call><name><name>Typeface</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>fontFamilyMediumString</name></name></expr></argument>, <argument><expr><name><name>Typeface</name><operator>.</operator><name>NORMAL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then> <else>else <block>{
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>participantNameTextView</name><operator>.</operator><name>setTypeface</name></name><argument_list>(<argument><expr><name><name>Typeface</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
  }</block></function>

  <function><specifier>private</specifier> <type><name>void</name></type> <name>setUnreadCountTextView</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>String</name></type> <name>unreadCount</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>unreadCountTextView</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>StringUtils</name><operator>.</operator><name>wrapInParentheses</name></name><argument_list>(<argument><expr><name>unreadCount</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>unreadCountTextView</name><operator>.</operator><name>setContentDescription</name></name><argument_list>(
      <argument><expr><call><name><name>this</name><operator>.</operator><name>ksString</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>unreadCountUnreadString</name></name></expr></argument>, <argument><expr><literal type="string">"unread_count"</literal></expr></argument>, <argument><expr><name>unreadCount</name></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
