<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\adapters\data\NavigationDrawerData.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>adapters</name><operator>.</operator><name>data</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ListUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>Category</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>DiscoveryParams</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>auto</name><operator>.</operator><name>parcel</name><operator>.</operator><name>AutoParcel</name></name>;</import>

<class><annotation>@<name>AutoParcel</name></annotation>
<specifier>public</specifier> <specifier>abstract</specifier> class <name>NavigationDrawerData</name> <block>{
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>User</name></type> <name>user</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Section</name></argument>&gt;</argument_list></name></type> <name>sections</name><parameter_list>()</parameter_list>;</function_decl>

  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Category</name></type> <name>expandedCategory</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>DiscoveryParams</name></type> <name>selectedParams</name><parameter_list>()</parameter_list>;</function_decl>

  <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
  <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>user</name><parameter_list>(<parameter><decl><type><name>User</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>sections</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Section</name></argument>&gt;</argument_list></name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>expandedCategory</name><parameter_list>(<parameter><decl><type><name>Category</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>selectedParams</name><parameter_list>(<parameter><decl><type><name>DiscoveryParams</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>NavigationDrawerData</name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></class>
  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Builder</name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_NavigationDrawerData</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>user</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>expandedCategory</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>selectedParams</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>sections</name><argument_list>(<argument><expr><call><name><name>ListUtils</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>toBuilder</name><parameter_list>()</parameter_list>;</function_decl>

  <class><annotation>@<name>AutoParcel</name></annotation>
  <specifier>static</specifier> <specifier>public</specifier> <specifier>abstract</specifier> class <name>Section</name> <block>{
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type> <name>expandable</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type> <name>expanded</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Section</name><operator>.</operator><name>Row</name></name></argument>&gt;</argument_list></name></type> <name>rows</name><parameter_list>()</parameter_list>;</function_decl>

    <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
    <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>Section</name><operator>.</operator><name>Builder</name></name></type> <name>expandable</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>Section</name><operator>.</operator><name>Builder</name></name></type> <name>expanded</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>Section</name><operator>.</operator><name>Builder</name></name></type> <name>rows</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Section</name><operator>.</operator><name>Row</name></name></argument>&gt;</argument_list></name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Section</name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
    }</block></class>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name><name>Section</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_NavigationDrawerData_Section</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>expandable</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>expanded</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>rows</name><argument_list>(<argument><expr><call><name><name>ListUtils</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>Section</name><operator>.</operator><name>Builder</name></name></type> <name>toBuilder</name><parameter_list>()</parameter_list>;</function_decl>

    <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isCategoryFilter</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><call><name>rows</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <call><name>rows</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>params</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isCategorySet</name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <type><name>boolean</name></type> <name>isTopFilter</name><parameter_list>()</parameter_list> <block>{
      <return>return <expr><operator>!</operator><call><name>isCategoryFilter</name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <class><annotation>@<name>AutoParcel</name></annotation>
    <specifier>static</specifier> <specifier>public</specifier> <specifier>abstract</specifier> class <name>Row</name> <block>{
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>DiscoveryParams</name></type> <name>params</name><parameter_list>()</parameter_list>;</function_decl>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type> <name>selected</name><parameter_list>()</parameter_list>;</function_decl>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>boolean</name></type> <name>rootIsExpanded</name><parameter_list>()</parameter_list>;</function_decl>

      <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
      <specifier>public</specifier> <specifier>static</specifier> <specifier>abstract</specifier> class <name>Builder</name> <block>{
        <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>params</name><parameter_list>(<parameter><decl><type><name>DiscoveryParams</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>selected</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>rootIsExpanded</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>Section</name><operator>.</operator><name>Row</name></name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
      }</block></class>
      <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Builder</name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_NavigationDrawerData_Section_Row</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>params</name><argument_list>(<argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>selected</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>rootIsExpanded</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
      }</block></function>
      <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name><name>Section</name><operator>.</operator><name>Row</name><operator>.</operator><name>Builder</name></name></type> <name>toBuilder</name><parameter_list>()</parameter_list>;</function_decl>
    }</block></class>
  }</block></class>
}</block></class>
</unit>
