<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\ui\adapters\ThanksAdapter.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>adapters</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>utils</name><operator>.</operator><name>ProjectUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>services</name><operator>.</operator><name>DiscoveryParams</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>adapters</name><operator>.</operator><name>data</name><operator>.</operator><name>ThanksData</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name><operator>.</operator><name>EmptyViewHolder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name><operator>.</operator><name>KSViewHolder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name><operator>.</operator><name>ProjectCardViewHolder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name><operator>.</operator><name>ThanksCategoryViewHolder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>ui</name><operator>.</operator><name>viewholders</name><operator>.</operator><name>ThanksShareViewHolder</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>LayoutRes</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>ThanksAdapter</name> <super><extends>extends <name>KSAdapter</name></extends></super> <block>{
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>SECTION_SHARE_VIEW</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>SECTION_RECOMMENDED_PROJECTS_VIEW</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>SECTION_CATEGORY_VIEW</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><specifier>public</specifier> <type><specifier>final</specifier> <name>Delegate</name></type> <name>delegate</name></decl>;</decl_stmt>

  <interface><specifier>public</specifier> interface <name>Delegate</name> <super><extends>extends <name><name>ProjectCardViewHolder</name><operator>.</operator><name>Delegate</name></name>, <name><name>ThanksCategoryViewHolder</name><operator>.</operator><name>Delegate</name></name></extends></super> <block>{}</block></interface>

  <constructor><specifier>public</specifier> <name>ThanksAdapter</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>Delegate</name></type> <name>delegate</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>delegate</name></name> <operator>=</operator> <name>delegate</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>insertSection</name><argument_list>(<argument><expr><name>SECTION_SHARE_VIEW</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>insertSection</name><argument_list>(<argument><expr><name>SECTION_RECOMMENDED_PROJECTS_VIEW</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>insertSection</name><argument_list>(<argument><expr><name>SECTION_CATEGORY_VIEW</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></constructor>

  <function><specifier>protected</specifier> <annotation>@<name>LayoutRes</name></annotation> <type><name>int</name></type> <name>layout</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>SectionRow</name></type> <name>sectionRow</name></decl></parameter>)</parameter_list> <block>{
    <if>if <condition>(<expr><call><name><name>sectionRow</name><operator>.</operator><name>section</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>SECTION_SHARE_VIEW</name></expr>)</condition><then> <block>{
      <return>return <expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>thanks_share_view</name></name></expr>;</return>
    }</block></then> <elseif>else <if>if <condition>(<expr><call><name><name>sectionRow</name><operator>.</operator><name>section</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>SECTION_RECOMMENDED_PROJECTS_VIEW</name></expr>)</condition><then> <block>{
      <return>return <expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>project_card_view</name></name></expr>;</return>
    }</block></then></if></elseif> <else>else <block>{
      <return>return <expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>thanks_category_view</name></name></expr>;</return>
    }</block></else></if>
  }</block></function>

  <function><specifier>protected</specifier> <annotation>@<name>NonNull</name></annotation> <type><name>KSViewHolder</name></type> <name>viewHolder</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>LayoutRes</name></annotation> <name>int</name></type> <name>layout</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>view</name></decl></parameter>)</parameter_list> <block>{
    <switch>switch<condition>(<expr><name>layout</name></expr>)</condition> <block>{
      <case>case <expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>thanks_share_view</name></name></expr>:</case>
        <return>return <expr><operator>new</operator> <call><name>ThanksShareViewHolder</name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</return>
      <case>case <expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>project_card_view</name></name></expr>:</case>
        <return>return <expr><operator>new</operator> <call><name>ProjectCardViewHolder</name><argument_list>(<argument><expr><name>view</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>delegate</name></name></expr></argument>)</argument_list></call></expr>;</return>
      <case>case <expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>thanks_category_view</name></name></expr>:</case>
        <return>return <expr><operator>new</operator> <call><name>ThanksCategoryViewHolder</name><argument_list>(<argument><expr><name>view</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>delegate</name></name></expr></argument>)</argument_list></call></expr>;</return>
      <default>default:</default>
        <return>return <expr><operator>new</operator> <call><name>EmptyViewHolder</name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></switch>
  }</block></function>

  <function><specifier>public</specifier> <type><name>void</name></type> <name>takeData</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <annotation>@<name>NonNull</name></annotation> <name>ThanksData</name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><call><name>setSection</name><argument_list>(<argument><expr><name>SECTION_SHARE_VIEW</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><call><name><name>data</name><operator>.</operator><name>getBackedProject</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setSection</name><argument_list>(<argument><expr><name>SECTION_RECOMMENDED_PROJECTS_VIEW</name></expr></argument>, <argument><expr><call><name><name>ProjectUtils</name><operator>.</operator><name>combineProjectsAndParams</name></name><argument_list>(<argument><expr><call><name><name>data</name><operator>.</operator><name>getRecommendedProjects</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>DiscoveryParams</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setSection</name><argument_list>(<argument><expr><name>SECTION_CATEGORY_VIEW</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><call><name><name>data</name><operator>.</operator><name>getCategory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>notifyDataSetChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }</block></function>
}</block></class>
</unit>
