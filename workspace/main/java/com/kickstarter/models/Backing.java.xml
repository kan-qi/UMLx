<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\kickstarter\app\src\main\java\com\kickstarter\models\Backing.java"><package>package <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>models</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Parcelable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>kickstarter</name><operator>.</operator><name>libs</name><operator>.</operator><name>qualifiers</name><operator>.</operator><name>AutoGson</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>joda</name><operator>.</operator><name>time</name><operator>.</operator><name>DateTime</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Retention</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>RetentionPolicy</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>androidx</name><operator>.</operator><name>annotation</name><operator>.</operator><name>StringDef</name></name>;</import>
<import>import <name><name>auto</name><operator>.</operator><name>parcel</name><operator>.</operator><name>AutoParcel</name></name>;</import>

<class><annotation>@<name>AutoGson</name></annotation>
<annotation>@<name>AutoParcel</name></annotation>
<specifier>public</specifier> <specifier>abstract</specifier> class <name>Backing</name> <super><implements>implements <name>Parcelable</name></implements></super> <block>{
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>float</name></type> <name>amount</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>User</name></type> <name>backer</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>String</name></type> <name>backerNote</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>long</name></type> <name>backerId</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>DateTime</name></type> <name>backerCompletedAt</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>DateTime</name></type> <name>completedAt</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>long</name></type> <name>id</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Location</name></type> <name>location</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>DateTime</name></type> <name>pledgedAt</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Project</name></type> <name>project</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>String</name></type> <name>projectCountry</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>long</name></type> <name>projectId</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Reward</name></type> <name>reward</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Nullable</name></annotation> <type><name>Long</name></type> <name>rewardId</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>long</name></type> <name>sequence</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>float</name></type> <name>shippingAmount</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <annotation>@<name>Status</name></annotation> <type><name>String</name></type> <name>status</name><parameter_list>()</parameter_list>;</function_decl>

  <class><annotation>@<name><name>AutoParcel</name><operator>.</operator><name>Builder</name></name></annotation>
  <specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>Builder</name> <block>{
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>amount</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>backer</name><parameter_list>(<parameter><decl><type><name>User</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>backerNote</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>backerId</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>backerCompletedAt</name><parameter_list>(<parameter><decl><type><name>DateTime</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>completedAt</name><parameter_list>(<parameter><decl><type><name>DateTime</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>id</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>location</name><parameter_list>(<parameter><decl><type><name>Location</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>pledgedAt</name><parameter_list>(<parameter><decl><type><name>DateTime</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>project</name><parameter_list>(<parameter><decl><type><name>Project</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>projectCountry</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>projectId</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>reward</name><parameter_list>(<parameter><decl><type><name>Reward</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>rewardId</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>sequence</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>shippingAmount</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>status</name><parameter_list>(<parameter><decl><type><annotation>@<name>Status</name></annotation> <name>String</name></type> <name>__</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Backing</name></type> <name>build</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></class>

  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Builder</name></type> <name>builder</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>AutoParcel_Backing</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></function>

  <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>Builder</name></type> <name>toBuilder</name><parameter_list>()</parameter_list>;</function_decl>

  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>STATUS_CANCELED</name>      <init>= <expr><literal type="string">"canceled"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>STATUS_COLLECTED</name>     <init>= <expr><literal type="string">"collected"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>STATUS_DROPPED</name>       <init>= <expr><literal type="string">"dropped"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>STATUS_ERRORED</name>       <init>= <expr><literal type="string">"errored"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>STATUS_PLEDGED</name>       <init>= <expr><literal type="string">"pledged"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>STATUS_PREAUTH</name>       <init>= <expr><literal type="string">"preauth"</literal></expr></init></decl>;</decl_stmt>

  <annotation_defn><annotation>@<name>Retention</name><argument_list>(<argument><expr><name><name>RetentionPolicy</name><operator>.</operator><name>SOURCE</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>StringDef</name><argument_list>(<argument><expr><block>{<expr><name>STATUS_CANCELED</name></expr>, <argument><expr><name>STATUS_COLLECTED</name></expr></argument>, <argument><expr><name>STATUS_DROPPED</name></expr></argument>, <argument><expr><name>STATUS_ERRORED</name></expr></argument>, <argument><expr><name>STATUS_PLEDGED</name></expr></argument>, <argument><expr><name>STATUS_PREAUTH</name></expr></argument>}</block></expr></argument>)</argument_list></annotation>
  <specifier>public</specifier> @interface <name>Status</name> <block>{}</block></annotation_defn>
}</block></class>
</unit>
