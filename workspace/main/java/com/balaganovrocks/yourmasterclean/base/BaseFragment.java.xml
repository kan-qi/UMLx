<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\superCleanMaster\app\src\main\java\com\balaganovrocks\yourmasterclean\base\BaseFragment.java"><package>package <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>base</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>annotation</name><operator>.</operator><name>SuppressLint</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>app</name><operator>.</operator><name>Fragment</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>utils</name><operator>.</operator><name>T</name></name>;</import>


<class><annotation>@<name>SuppressLint</name><argument_list>(<argument><expr><literal type="string">"NewApi"</literal></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>BaseFragment</name> <super><extends>extends <name>Fragment</name></extends></super> <block>{

	<comment type="block" format="javadoc">/** éè¿Classè·³è½¬çé¢ **/</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>startActivity</name><parameter_list>(<parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>cls</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>cls</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/** å«æBundleéè¿Classè·³è½¬çé¢ **/</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>startActivity</name><parameter_list>(<parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>cls</name></decl></parameter>, <parameter><decl><type><name>Bundle</name></type> <name>bundle</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>setClass</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>cls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>bundle</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtras</name></name><argument_list>(<argument><expr><name>bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/** éè¿Actionè·³è½¬çé¢ **/</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>startActivity</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>action</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/** å«æBundleéè¿Actionè·³è½¬çé¢ **/</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>startActivity</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>Bundle</name></type> <name>bundle</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>setAction</name></name><argument_list>(<argument><expr><name>action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>bundle</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtras</name></name><argument_list>(<argument><expr><name>bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * åå¸
	 * 
	 * @param message
	 */</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>showShort</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>T</name><operator>.</operator><name>showShort</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>protected</specifier> <type><name>void</name></type> <name>showLong</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>T</name><operator>.</operator><name>showLong</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
}</block></class>
</unit>
