<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\superCleanMaster\app\src\main\java\com\balaganovrocks\yourmasterclean\swipeback\SwipeBackPreferenceActivity.java">
<package>package <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>swipeback</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>preference</name><operator>.</operator><name>PreferenceActivity</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>

<class><specifier>public</specifier> class <name>SwipeBackPreferenceActivity</name> <super><extends>extends <name>PreferenceActivity</name></extends> <implements>implements <name>SwipeBackActivityBase</name></implements></super> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><name>SwipeBackActivityHelper</name></type> <name>mHelper</name></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mHelper</name> <operator>=</operator> <operator>new</operator> <call><name>SwipeBackActivityHelper</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mHelper</name><operator>.</operator><name>onActivityCreate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <type><name>void</name></type> <name>onPostCreate</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onPostCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mHelper</name><operator>.</operator><name>onPostCreate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>View</name></type> <name>findViewById</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>View</name></type> <name>v</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>v</name> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>mHelper</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then>
            <block type="pseudo"><return>return <expr><call><name><name>mHelper</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return></block></then></if>
        <return>return <expr><name>v</name></expr>;</return>
    }</block></function>
    
    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>SwipeBackLayout</name></type> <name>getSwipeBackLayout</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><call><name><name>mHelper</name><operator>.</operator><name>getSwipeBackLayout</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>
    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>setSwipeBackEnable</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>enable</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>getSwipeBackLayout</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setEnableGesture</name><argument_list>(<argument><expr><name>enable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>scrollToFinishActivity</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>getSwipeBackLayout</name><argument_list>()</argument_list></call><operator>.</operator><call><name>scrollToFinishActivity</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
