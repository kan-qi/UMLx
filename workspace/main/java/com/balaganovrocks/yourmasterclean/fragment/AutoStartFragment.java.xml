<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\superCleanMaster\app\src\main\java\com\balaganovrocks\yourmasterclean\fragment\AutoStartFragment.java"><package>package <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>fragment</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Handler</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Message</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Nullable</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>LayoutInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewGroup</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Button</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>LinearLayout</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ListView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>base</name><operator>.</operator><name>BaseFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>adapter</name><operator>.</operator><name>AutoStartAdapter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>base</name><operator>.</operator><name>BaseFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>model</name><operator>.</operator><name>AutoStartInfo</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>utils</name><operator>.</operator><name>BootStartUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>utils</name><operator>.</operator><name>RootUtil</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>utils</name><operator>.</operator><name>ShellUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>utils</name><operator>.</operator><name>T</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>butterknife</name><operator>.</operator><name>ButterKnife</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>InjectView</name></name>;</import>
<import>import <name><name>butterknife</name><operator>.</operator><name>OnClick</name></name>;</import>


<class><specifier>public</specifier> class <name>AutoStartFragment</name> <super><extends>extends <name>BaseFragment</name></extends></super> <block>{


<comment type="line">//   Context mContext;</comment>
<comment type="line">//   public static final int REFRESH_BT = 111;</comment>
<comment type="line">//   private static final String ARG_POSITION = "position";</comment>
<comment type="line">//   private int position; // 0:æ®éè½¯ä»¶ï¼2 ç³»ç»è½¯ä»¶</comment>
<comment type="line">//   AutoStartAdapter mAutoStartAdapter;</comment>

<comment type="line">//   @InjectView(R.id.listview)</comment>
<comment type="line">//   ListView listview;</comment>

<comment type="line">//   @InjectView(R.id.bottom_lin)</comment>
<comment type="line">//   LinearLayout bottom_lin;</comment>

<comment type="line">//   @InjectView(R.id.disable_button)</comment>
<comment type="line">//   Button disableButton;</comment>
<comment type="line">//   @InjectView(R.id.topText)</comment>
<comment type="line">//   TextView topText;</comment>
<comment type="line">//   List&lt;AutoStartInfo&gt; isSystemAuto = null;</comment>
<comment type="line">//   List&lt;AutoStartInfo&gt; noSystemAuto = null;</comment>
<comment type="line">//   private int canDisableCom;</comment>


<comment type="line">//   private Handler mHandler = new Handler() {</comment>


<comment type="line">//       public void handleMessage(Message msg) {</comment>
<comment type="line">//           switch (msg.what) {</comment>
<comment type="line">//               case REFRESH_BT:</comment>
<comment type="line">//                   refeshButoom();</comment>

<comment type="line">//                   break;</comment>
<comment type="line">//           }</comment>
<comment type="line">//       }</comment>
<comment type="line">//   };</comment>

<comment type="line">//   @Override</comment>
<comment type="line">//   public void onCreate(Bundle savedInstanceState) {</comment>
<comment type="line">//       super.onCreate(savedInstanceState);</comment>

<comment type="line">//       position = getArguments().getInt(ARG_POSITION);</comment>
<comment type="line">//   }</comment>

<comment type="line">//   @Override</comment>
<comment type="line">//   public View onCreateView(LayoutInflater inflater,</comment>
<comment type="line">//                            @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {</comment>
<comment type="line">//       // TODO Auto-generated method stub</comment>

<comment type="line">//       View view = inflater.inflate(R.layout.fragment_auto_start, container, false);</comment>
<comment type="line">//       ButterKnife.inject(this, view);</comment>
<comment type="line">//       mContext = getActivity();</comment>

<comment type="line">//       return view;</comment>
<comment type="line">//   }</comment>


<comment type="line">//   @Override</comment>
<comment type="line">//   public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {</comment>
<comment type="line">//       super.onViewCreated(view, savedInstanceState);</comment>

<comment type="line">//       fillData();</comment>
<comment type="line">//   }</comment>

<comment type="line">//   @OnClick(R.id.disable_button)</comment>
<comment type="line">//   public void onClickDisable() {</comment>
<comment type="line">//     RootUtil.preparezlsu(mContext);</comment>
<comment type="line">//      disableAPP();</comment>

<comment type="line">//   }</comment>

<comment type="line">//   private void disableAPP() {</comment>
<comment type="line">//       List&lt;String&gt; mSring = new ArrayList&lt;&gt;();</comment>
<comment type="line">//       for (AutoStartInfo auto : noSystemAuto) {</comment>
<comment type="line">//           if (auto.isEnable()) {</comment>
<comment type="line">//               String packageReceiverList[] = auto.getPackageReceiver().toString().split(";");</comment>
<comment type="line">//               for (int j = 0; j &lt; packageReceiverList.length; j++) {</comment>
<comment type="line">//                   String cmd = "pm disable " + packageReceiverList[j];</comment>
<comment type="line">//                   //é¨åreceiveråå«$ç¬¦å·ï¼éè¦åè¿ä¸æ­¥å¤çï¼ç¨"$"æ¿æ¢æ$</comment>
<comment type="line">//                   cmd = cmd.replace("$", "\"" + "$" + "\"");</comment>
<comment type="line">//                   //æ§è¡å½ä»¤</comment>
<comment type="line">//                   mSring.add(cmd);</comment>
<comment type="line">//               }</comment>
<comment type="line">//           }</comment>
<comment type="line">//       }</comment>

<comment type="line">//       ShellUtils.CommandResult mCommandResult = ShellUtils.execCommand(mSring, true, true);</comment>
<comment type="line">//       if (mCommandResult.result == 0) {</comment>
<comment type="line">//           T.showLong(mContext,</comment>
<comment type="line">//                   "ÐÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ Ð¿Ð¾Ð»Ð½Ð¾ÑÑÑÑ Ð·Ð°Ð¿ÑÐµÑÐµÐ½Ð¾");</comment>
<comment type="line">//           for (AutoStartInfo auto : noSystemAuto) {</comment>
<comment type="line">//               if (auto.isEnable()) {</comment>
<comment type="line">//                   auto.setEnable(false);</comment>
<comment type="line">//               }</comment>
<comment type="line">//           }</comment>
<comment type="line">//           mAutoStartAdapter.notifyDataSetChanged();</comment>
<comment type="line">//           refeshButoom();</comment>
<comment type="line">//       } else {</comment>
<comment type="line">//           T.showLong(mContext,</comment>
<comment type="line">//                   "Ð­ÑÐ° ÑÑÐ½ÐºÑÐ¸Ñ Ð´Ð¾Ð»Ð¶Ð½Ð° Ð¿Ð¾Ð»ÑÑÐ¸ÑÑ ÑÐ°Ð·ÑÐµÑÐµÐ½Ð¸Ðµ ÑÐ¸ÑÑÐµÐ¼Ð½Ð¾Ð³Ð¾ ÐºÐ¾ÑÐ½Ñ, ÑÐ°Ð·ÑÐµÑÐ¸ÑÑ root-Ð´Ð¾ÑÑÑÐ¿.");</comment>
<comment type="line">//       }</comment>
<comment type="line">//   }</comment>


<comment type="line">//   private void fillData() {</comment>

<comment type="line">//       if (position == 0) {</comment>
<comment type="line">//           topText.setText("\n" +</comment>
<comment type="line">//                   "Ð¡Ð»ÐµÐ´ÑÑÑÐµÐ¼Ñ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼Ð½Ð¾Ð¼Ñ Ð¾Ð±ÐµÑÐ¿ÐµÑÐµÐ½Ð¸Ñ Ð·Ð°Ð¿ÑÐµÑÐ°ÐµÑÑÑ ÑÐ°Ð¼Ð¾Ð·Ð°Ð¿ÑÑÐº,Ð£Ð»ÑÑÑÐµÐ½Ð¸Ðµ ÑÐºÐ¾ÑÐ¾ÑÑÐ¸ Ð´Ð²Ð¸Ð¶ÐµÐ½Ð¸Ñ");</comment>

<comment type="line">//       } else {</comment>
<comment type="line">//           topText.setText("\n" +</comment>
<comment type="line">//                   "ÐÐ°Ð¿ÑÐµÑÐµÐ½Ð¾ Ð·Ð°Ð¿ÑÑÐºÐ°ÐµÐ¼Ð¾Ðµ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼Ð½Ð¾Ðµ Ð¾Ð±ÐµÑÐ¿ÐµÑÐµÐ½Ð¸Ðµ Ð´Ð»Ñ ÑÐ¸ÑÑÐµÐ¼Ð½Ð¾Ð³Ð¾ ÑÐ´ÑÐ°,\n" +</comment>
<comment type="line">//                   "ÐÑÐ´ÐµÑ Ð²Ð»Ð¸ÑÑÑ Ð½Ð° Ð½Ð¾ÑÐ¼Ð°Ð»ÑÐ½Ð¾Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ðµ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°,ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ°, Ð±ÑÐ´ÑÑÐµ Ð¾ÑÑÐ¾ÑÐ¾Ð¶Ð½Ñ");</comment>

<comment type="line">//       }</comment>

<comment type="line">//       List&lt;AutoStartInfo&gt; mAutoStartInfo = BootStartUtils.fetchAutoApps(mContext);</comment>

<comment type="line">//       //   List&lt;AutoStartInfo&gt; mAutoStartInfo = BootStartUtils.fetchInstalledApps(mContext);</comment>
<comment type="line">//       noSystemAuto = new ArrayList&lt;&gt;();</comment>
<comment type="line">//       isSystemAuto = new ArrayList&lt;&gt;();</comment>

<comment type="line">//       for (AutoStartInfo a : mAutoStartInfo) {</comment>
<comment type="line">//           if (a.isSystem()) {</comment>

<comment type="line">//               isSystemAuto.add(a);</comment>
<comment type="line">//           } else {</comment>
<comment type="line">//               noSystemAuto.add(a);</comment>
<comment type="line">//           }</comment>
<comment type="line">//       }</comment>

<comment type="line">//       if (position == 0) {</comment>
<comment type="line">//           mAutoStartAdapter = new AutoStartAdapter(mContext, noSystemAuto, mHandler);</comment>
<comment type="line">//           listview.setAdapter(mAutoStartAdapter);</comment>
<comment type="line">//           refeshButoom();</comment>
<comment type="line">//       } else {</comment>

<comment type="line">//           mAutoStartAdapter = new AutoStartAdapter(mContext, isSystemAuto, null);</comment>
<comment type="line">//           listview.setAdapter(mAutoStartAdapter);</comment>

<comment type="line">//       }</comment>


<comment type="line">//   }</comment>

<comment type="line">//   private void refeshButoom() {</comment>
<comment type="line">//       if (position == 0) {</comment>
<comment type="line">//           canDisableCom = 0;</comment>
<comment type="line">//           for (AutoStartInfo autoS : noSystemAuto) {</comment>
<comment type="line">//               if (autoS.isEnable()) {</comment>
<comment type="line">//                   canDisableCom++;</comment>
<comment type="line">//               }</comment>
<comment type="line">//           }</comment>
<comment type="line">//           if (canDisableCom &gt; 0) {</comment>
<comment type="line">//               bottom_lin.setVisibility(View.VISIBLE);</comment>
<comment type="line">//               disableButton.setText("ÐÐ¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¾Ð¿ÑÐ¸Ð¼Ð¸Ð·Ð¸ÑÐ¾Ð²Ð°Ð½Ð°" + canDisableCom + "\n" +</comment>
<comment type="line">//                       "ÑÐ°Ð·Ð´ÐµÐ»");</comment>
<comment type="line">//           } else {</comment>
<comment type="line">//               bottom_lin.setVisibility(View.GONE);</comment>
<comment type="line">//           }</comment>
<comment type="line">//       }</comment>

<comment type="line">//   }</comment>

<comment type="line">//   @Override</comment>
<comment type="line">//   public void onDestroyView() {</comment>
<comment type="line">//       super.onDestroyView();</comment>
<comment type="line">//       ButterKnife.reset(this);</comment>
<comment type="line">//   }</comment>

}</block></class>
</unit>
