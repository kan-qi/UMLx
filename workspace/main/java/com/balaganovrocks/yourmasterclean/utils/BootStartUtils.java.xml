<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\superCleanMaster\app\src\main\java\com\balaganovrocks\yourmasterclean\utils\BootStartUtils.java"><comment type="block">/*
 * Copyright (C) 2012 www.amsoft.cn
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>utils</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ComponentName</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>pm</name><operator>.</operator><name>ApplicationInfo</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>pm</name><operator>.</operator><name>PackageManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>pm</name><operator>.</operator><name>ResolveInfo</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>graphics</name><operator>.</operator><name>drawable</name><operator>.</operator><name>Drawable</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>model</name><operator>.</operator><name>AutoStartInfo</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>


<comment type="line">// TODO: Auto-generated Javadoc</comment>

<class><specifier>public</specifier> class <name>BootStartUtils</name> <block>{

    <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>BOOT_START_PERMISSION</name> <init>= <expr><literal type="string">"android.permission.RECEIVE_BOOT_COMPLETED"</literal></expr></init></decl>;</decl_stmt>
    <comment type="line">// private Context mContext;</comment>

    <constructor><specifier>public</specifier> <name>BootStartUtils</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
        <comment type="line">//   mContext = context;</comment>
    }</block></constructor>

    <comment type="block" format="javadoc">/**
     * ãã      * è·åAndroidå¼æºå¯å¨åè¡¨
     */</comment>


    <function><specifier>public</specifier> <specifier>static</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AutoStartInfo</name></argument>&gt;</argument_list></name></type> <name>fetchInstalledApps</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>mContext</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>PackageManager</name></type> <name>pm</name> <init>= <expr><call><name><name>mContext</name><operator>.</operator><name>getPackageManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ApplicationInfo</name></argument>&gt;</argument_list></name></type> <name>appInfo</name> <init>= <expr><call><name><name>pm</name><operator>.</operator><name>getInstalledApplications</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>ApplicationInfo</name></argument>&gt;</argument_list></name></type> <name>appInfoIterator</name> <init>= <expr><call><name><name>appInfo</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AutoStartInfo</name></argument>&gt;</argument_list></name></type> <name>appList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>AutoStartInfo</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>appInfo</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><call><name><name>appInfoIterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
            <decl_stmt><decl><type><name>ApplicationInfo</name></type> <name>app</name> <init>= <expr><call><name><name>appInfoIterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>flag</name> <init>= <expr><call><name><name>pm</name><operator>.</operator><name>checkPermission</name></name><argument_list>(
                    <argument><expr><name>BOOT_START_PERMISSION</name></expr></argument>, <argument><expr><name><name>app</name><operator>.</operator><name>packageName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>flag</name> <operator>==</operator> <name><name>PackageManager</name><operator>.</operator><name>PERMISSION_GRANTED</name></name></expr>)</condition><then> <block>{
                <decl_stmt><decl><type><name>AutoStartInfo</name></type> <name>appMap</name> <init>= <expr><operator>new</operator> <call><name>AutoStartInfo</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>label</name> <init>= <expr><call><name><name>pm</name><operator>.</operator><name>getApplicationLabel</name></name><argument_list>(<argument><expr><name>app</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Drawable</name></type> <name>icon</name> <init>= <expr><call><name><name>pm</name><operator>.</operator><name>getApplicationIcon</name></name><argument_list>(<argument><expr><name>app</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>packageName</name> <init>= <expr><name><name>app</name><operator>.</operator><name>packageName</name></name></expr></init></decl>;</decl_stmt>
                <if>if <condition>(<expr><operator>(</operator><name><name>app</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name><name>ApplicationInfo</name><operator>.</operator><name>FLAG_SYSTEM</name></name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
                    <expr_stmt><expr><call><name><name>appMap</name><operator>.</operator><name>setSystem</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <comment type="line">//abAppProcessInfo.isSystem = true;</comment>
                }</block></then> <else>else <block>{
                    <expr_stmt><expr><call><name><name>appMap</name><operator>.</operator><name>setSystem</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <comment type="line">// abAppProcessInfo.isSystem = false;</comment>
                }</block></else></if>

                <comment type="line">//  appMap.setDesc(desc);</comment>
                <expr_stmt><expr><call><name><name>appMap</name><operator>.</operator><name>setIcon</name></name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>appMap</name><operator>.</operator><name>setPackageName</name></name><argument_list>(<argument><expr><name>packageName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>appMap</name><operator>.</operator><name>setLabel</name></name><argument_list>(<argument><expr><name>label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <expr_stmt><expr><call><name><name>appList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>appMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></while>
        <return>return <expr><name>appList</name></expr>;</return>
    }</block></function>


    <function><specifier>public</specifier> <specifier>static</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AutoStartInfo</name></argument>&gt;</argument_list></name></type> <name>fetchAutoApps</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>mContext</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>PackageManager</name></type> <name>pm</name> <init>= <expr><call><name><name>mContext</name><operator>.</operator><name>getPackageManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name><name>Intent</name><operator>.</operator><name>ACTION_BOOT_COMPLETED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ResolveInfo</name></argument>&gt;</argument_list></name></type> <name>resolveInfoList</name> <init>= <expr><call><name><name>pm</name><operator>.</operator><name>queryBroadcastReceivers</name></name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><name><name>PackageManager</name><operator>.</operator><name>GET_DISABLED_COMPONENTS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AutoStartInfo</name></argument>&gt;</argument_list></name></type> <name>appList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>AutoStartInfo</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>appName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>packageReceiver</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Drawable</name></type> <name>icon</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>isSystem</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>isenable</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><call><name><name>resolveInfoList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{

            <expr_stmt><expr><name>appName</name> <operator>=</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>loadLabel</name><argument_list>(<argument><expr><name>pm</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>packageReceiver</name> <operator>=</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>packageName</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>name</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>icon</name> <operator>=</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>loadIcon</name><argument_list>(<argument><expr><name>pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>ComponentName</name></type> <name>mComponentName1</name> <init>= <expr><operator>new</operator> <call><name>ComponentName</name><argument_list>(<argument><expr><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>packageName</name></name></expr></argument>, <argument><expr><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if>if <condition>(<expr><call><name><name>pm</name><operator>.</operator><name>getComponentEnabledSetting</name></name><argument_list>(<argument><expr><name>mComponentName1</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then> <block>{

                <expr_stmt><expr><name>isenable</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
            }</block></then> <else>else <block>{
                <expr_stmt><expr><name>isenable</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            }</block></else></if>
            <if>if <condition>(<expr><operator>(</operator><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>applicationInfo</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name><name>ApplicationInfo</name><operator>.</operator><name>FLAG_SYSTEM</name></name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>isSystem</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            }</block></then> <else>else <block>{
                <expr_stmt><expr><name>isSystem</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
            }</block></else></if>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
                <decl_stmt><decl><type><name>AutoStartInfo</name></type> <name>mAutoStartInfo</name> <init>= <expr><operator>new</operator> <call><name>AutoStartInfo</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if>if <condition>(<expr><call><name><name>appName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>loadLabel</name><argument_list>(<argument><expr><name>pm</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
                    <expr_stmt><expr><name>packageReceiver</name> <operator>=</operator> <name>packageReceiver</name> <operator>+</operator> <literal type="string">";"</literal> <operator>+</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>packageName</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>name</name></name></expr>;</expr_stmt>
                }</block></then> <else>else <block>{
                    <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setLabel</name></name><argument_list>(<argument><expr><name>appName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setSystem</name></name><argument_list>(<argument><expr><name>isSystem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setEnable</name></name><argument_list>(<argument><expr><name>isenable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setIcon</name></name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setPackageReceiver</name></name><argument_list>(<argument><expr><name>packageReceiver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt><expr><call><name><name>appList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>mAutoStartInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name>appName</name> <operator>=</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>loadLabel</name><argument_list>(<argument><expr><name>pm</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name>packageReceiver</name> <operator>=</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>packageName</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>name</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name>icon</name> <operator>=</operator> <call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>loadIcon</name><argument_list>(<argument><expr><name>pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name>ComponentName</name></type> <name>mComponentName2</name> <init>= <expr><operator>new</operator> <call><name>ComponentName</name><argument_list>(<argument><expr><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>packageName</name></name></expr></argument>, <argument><expr><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if>if <condition>(<expr><call><name><name>pm</name><operator>.</operator><name>getComponentEnabledSetting</name></name><argument_list>(<argument><expr><name>mComponentName2</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then> <block>{

                        <expr_stmt><expr><name>isenable</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
                    }</block></then> <else>else <block>{
                        <expr_stmt><expr><name>isenable</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                    }</block></else></if>

                    <if>if <condition>(<expr><operator>(</operator><call><name><name>resolveInfoList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><name><name>activityInfo</name><operator>.</operator><name>applicationInfo</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name><name>ApplicationInfo</name><operator>.</operator><name>FLAG_SYSTEM</name></name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
                        <expr_stmt><expr><name>isSystem</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                    }</block></then> <else>else <block>{
                        <expr_stmt><expr><name>isSystem</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
                    }</block></else></if>

                }</block></else></if>

            }</block></for>
            <decl_stmt><decl><type><name>AutoStartInfo</name></type> <name>mAutoStartInfo</name> <init>= <expr><operator>new</operator> <call><name>AutoStartInfo</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setLabel</name></name><argument_list>(<argument><expr><name>appName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setSystem</name></name><argument_list>(<argument><expr><name>isSystem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setEnable</name></name><argument_list>(<argument><expr><name>isenable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setIcon</name></name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>mAutoStartInfo</name><operator>.</operator><name>setPackageReceiver</name></name><argument_list>(<argument><expr><name>packageReceiver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>appList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>mAutoStartInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        }</block></then></if>


<comment type="line">//        for (ResolveInfo resolveInfo : resolveInfoList) {</comment>
<comment type="line">//</comment>
<comment type="line">//</comment>
<comment type="line">//            ComponentName mComponentName = new ComponentName(resolveInfo.activityInfo.packageName, resolveInfo.activityInfo.name);</comment>
<comment type="line">//</comment>
<comment type="line">//</comment>
<comment type="line">//            if (pm.getComponentEnabledSetting(mComponentName) == PackageManager.COMPONENT_ENABLED_STATE_DISABLED) {</comment>
<comment type="line">//</comment>
<comment type="line">//</comment>
<comment type="line">//                as.setEnable(false);</comment>
<comment type="line">//            } else {</comment>
<comment type="line">//                as.setEnable(true);</comment>
<comment type="line">//            }</comment>
<comment type="line">//</comment>
<comment type="line">//            if ((resolveInfo.activityInfo.applicationInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) != 0) {</comment>
<comment type="line">//                as.setSystem(true);</comment>
<comment type="line">//            } else {</comment>
<comment type="line">//                as.setSystem(false);</comment>
<comment type="line">//            }</comment>
<comment type="line">//            as.setIcon(resolveInfo.loadIcon(pm));</comment>
<comment type="line">//            as.setPackageName(resolveInfo.activityInfo.packageName);</comment>
<comment type="line">//            as.setLabel(resolveInfo.loadLabel(pm).toString());</comment>
<comment type="line">//            appList.add(as);</comment>

        <comment type="line">//   Log.i("yzy", "COMPONENT_ENABLED_STATE:" + pm.getComponentEnabledSetting(mComponentName) + "\tpackageName:" + resolveInfo.activityInfo.packageName);</comment>

        <comment type="line">//}</comment>

        <return>return <expr><name>appList</name></expr>;</return>
    }</block></function>
}</block></class></unit>
