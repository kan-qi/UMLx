<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\superCleanMaster\app\src\main\java\com\balaganovrocks\yourmasterclean\ui\ResultActivity.java"><package>package <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>ui</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>Activity</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>net</name><operator>.</operator><name>Uri</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>nfc</name><operator>.</operator><name>Tag</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Button</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>ads</name><operator>.</operator><name>AdListener</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>ads</name><operator>.</operator><name>AdRequest</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>ads</name><operator>.</operator><name>AdSize</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>android</name><operator>.</operator><name>gms</name><operator>.</operator><name>ads</name><operator>.</operator><name>AdView</name></name>;</import>

<import>import static <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ContentValues</name><operator>.</operator><name>TAG</name></name>;</import>

<class><specifier>public</specifier> class <name>ResultActivity</name> <super><extends>extends <name>Activity</name></extends></super> <block>{
    <decl_stmt><decl><specifier>private</specifier> <type><name>AdView</name></type> <name>mAdView</name></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setContentView</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>activity_result</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Button</name></type> <name>btngo_to_saving_battery</name> <init>= <expr><operator>(</operator><name>Button</name><operator>)</operator><call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goto_saving_battery</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Button</name></type> <name>btngoto_memory_clean</name> <init>= <expr><operator>(</operator><name>Button</name><operator>)</operator><call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goto_memory_clean</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Button</name></type> <name>btngoto_rate_app</name> <init>= <expr><operator>(</operator><name>Button</name><operator>)</operator><call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goto_rate_app</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>btngo_to_saving_battery</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><name>onClickListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>btngoto_memory_clean</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><name>onClickListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>btngoto_rate_app</name><operator>.</operator><name>setOnClickListener</name></name><argument_list>(<argument><expr><name>onClickListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>mAdView</name> <operator>=</operator> <call><name>findViewById</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>adView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>AdRequest</name></type> <name>adRequest</name> <init>= <expr><operator>new</operator> <call><name><name>AdRequest</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>mAdView</name><operator>.</operator><name>loadAd</name></name><argument_list>(<argument><expr><name>adRequest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>AdSize</name></type> <name>adSize</name> <init>= <expr><operator>new</operator> <call><name>AdSize</name><argument_list>(<argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><literal type="number">250</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>adSize</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>AdSize</name><operator>.</operator><name>BANNER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>mAdView</name><operator>.</operator><name>setAdListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AdListener</name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <specifier>public</specifier> <type><name>void</name></type> <name>onAdLoaded</name><parameter_list>()</parameter_list> <block>{
                <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>,<argument><expr><literal type="string">"onAdLoaded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line">// Code to be executed when an ad finishes loading.</comment>
            }</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <specifier>public</specifier> <type><name>void</name></type> <name>onAdFailedToLoad</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>errorCode</name></decl></parameter>)</parameter_list> <block>{
                <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>,<argument><expr><literal type="string">"onAdFailedToLoad"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// Code to be executed when an ad request fails.</comment>
            }</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <specifier>public</specifier> <type><name>void</name></type> <name>onAdOpened</name><parameter_list>()</parameter_list> <block>{
                <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>,<argument><expr><literal type="string">"onAdOpened"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// Code to be executed when an ad opens an overlay that</comment>
                <comment type="line">// covers the screen.</comment>
            }</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <specifier>public</specifier> <type><name>void</name></type> <name>onAdLeftApplication</name><parameter_list>()</parameter_list> <block>{
                <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>,<argument><expr><literal type="string">"onAdLeftApplication"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// Code to be executed when the user has left the app.</comment>
            }</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <specifier>public</specifier> <type><name>void</name></type> <name>onAdClosed</name><parameter_list>()</parameter_list> <block>{
                <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>d</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>,<argument><expr><literal type="string">"onAdClosed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// Code to be executed when when the user is about to return</comment>
                <comment type="line">// to the app after tapping on an ad.</comment>
            }</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>


    <decl_stmt><decl><specifier>private</specifier> <type><name><name>View</name><operator>.</operator><name>OnClickListener</name></name></type> <name>onClickListener</name> <init>= <expr><operator>new</operator> <class><super><name><name>View</name><operator>.</operator><name>OnClickListener</name></name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <specifier>public</specifier> <type><name>void</name></type> <name>onClick</name><parameter_list>(<parameter><decl><type><name>View</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{
            <switch>switch<condition>(<expr><call><name><name>v</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{
                <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goto_saving_battery</name></name></expr>:</case>
                    <decl_stmt><decl><type><name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><call><name><name>v</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>BatterySavingActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// do something</comment>
                    <break>break;</break>
                <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goto_memory_clean</name></name></expr>:</case>
                    <decl_stmt><decl><type><name>Intent</name></type> <name>intent2</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><call><name><name>v</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>MemoryCleanActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><name>intent2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// do something</comment>
                    <break>break;</break>
                <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>goto_rate_app</name></name></expr>:</case>
                  <comment type="line">//  Intent browserIntent = new</comment>
                  <comment type="line">//          Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com"));</comment>
                  <comment type="line">//  startActivity(browserIntent);</comment>
                    <break>break;</break>
            }</block></switch>

        }</block></function>
    }</block></class></expr></init></decl>;</decl_stmt>
}</block></class>
</unit>
