<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\superCleanMaster\app\src\main\java\com\balaganovrocks\yourmasterclean\widget\stickyheader\HeaderAnimator.java"><package>package <name><name>com</name><operator>.</operator><name>balaganovrocks</name><operator>.</operator><name>yourmasterclean</name><operator>.</operator><name>widget</name><operator>.</operator><name>stickyheader</name></name>;</package>


<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>HeaderAnimator</name> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><name>View</name></type> <name>mHeader</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>int</name></type> <name>mMinHeightHeader</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>int</name></type> <name>mHeightHeader</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>private</specifier> <type><name>int</name></type> <name>mMaxTransaction</name></decl>;</decl_stmt>

    <function_decl><specifier>public</specifier> <specifier>abstract</specifier> <type><name>void</name></type> <name>onScroll</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>scrolledY</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Called by the {@link it.carlom.stikkyheader.core.StikkyHeader} to set the {@link com.balaganovrocks.yourmasterclean.widget.stickyheader.HeaderAnimator} up
     */</comment>
    <function><type><name>void</name></type> <name>setupAnimator</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>header</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>minHeightHeader</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>heightHeader</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>maxTransaction</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mHeader</name></name> <operator>=</operator> <name>header</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mMinHeightHeader</name></name> <operator>=</operator> <name>minHeightHeader</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mHeightHeader</name></name> <operator>=</operator> <name>heightHeader</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mMaxTransaction</name></name> <operator>=</operator> <name>maxTransaction</name></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>onAnimatorAttached</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onAnimatorReady</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Called after that the animator is attached to the header
     */</comment>
    <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>void</name></type> <name>onAnimatorAttached</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Called after that the animator is attached and ready
     */</comment>
    <function_decl><specifier>protected</specifier> <specifier>abstract</specifier> <type><name>void</name></type> <name>onAnimatorReady</name><parameter_list>()</parameter_list>;</function_decl>

    <function><specifier>public</specifier> <type><name>View</name></type> <name>getHeader</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>mHeader</name></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <type><name>int</name></type> <name>getMinHeightHeader</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>mMinHeightHeader</name></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <type><name>int</name></type> <name>getHeightHeader</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>mHeightHeader</name></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <type><name>int</name></type> <name>getMaxTransaction</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>mMaxTransaction</name></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>float</name></type> <name>clamp</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>min</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>max</name></decl></parameter>)</parameter_list> <block>{
        <return>return <expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>min</name></expr></argument>, <argument><expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><name>max</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>
