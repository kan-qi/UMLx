<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\util\GravatarUtils.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>UnsupportedEncodingException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigInteger</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>MessageDigest</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>NoSuchAlgorithmException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>

<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name><operator>.</operator><name>US</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Helper to get a gravatar hash for an email
 */</comment>
<class><specifier>public</specifier> class <name>GravatarUtils</name> <block>{

    <comment type="block" format="javadoc">/**
     * Length of generated hash
     */</comment>
    <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>int</name></type> <name>HASH_LENGTH</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Charset used for hashing
     */</comment>
    <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>CHARSET</name> <init>= <expr><literal type="string">"CP1252"</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Algorithm used for hashing
     */</comment>
    <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>MessageDigest</name></type> <name>MD5</name></decl>;</decl_stmt>

    <static>static <block>{
        <decl_stmt><decl><type><name>MessageDigest</name></type> <name>digest</name></decl>;</decl_stmt>
        <try>try <block>{
            <expr_stmt><expr><name>digest</name> <operator>=</operator> <call><name><name>MessageDigest</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><literal type="string">"MD5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchAlgorithmException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
            <expr_stmt><expr><name>digest</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        }</block></catch></try>
        <expr_stmt><expr><name>MD5</name> <operator>=</operator> <name>digest</name></expr>;</expr_stmt>
    }</block></static>

    <function><specifier>private</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>digest</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.digest(String)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><name>MD5</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.digest(String)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>}</block>
        }</block></then></if>

        <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl>;</decl_stmt>
        <try>try <block>{
            <expr_stmt><expr><name>bytes</name> <operator>=</operator> <call><name><name>value</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name>CHARSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch>catch <parameter_list>(<parameter><decl><type><name>UnsupportedEncodingException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.digest(String)"</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>}</block>
        }</block></catch></try>

        <synchronized>synchronized <init>(<expr><name>MD5</name></expr>)</init> <block>{
            <expr_stmt><expr><call><name><name>MD5</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>bytes</name> <operator>=</operator> <call><name><name>MD5</name><operator>.</operator><name>digest</name></name><argument_list>(<argument><expr><name>bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></synchronized>

        <decl_stmt><decl><type><name>String</name></type> <name>hashed</name> <init>= <expr><operator>new</operator> <call><name>BigInteger</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>bytes</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>padding</name> <init>= <expr><name>HASH_LENGTH</name> <operator>-</operator> <call><name><name>hashed</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>padding</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.digest(String)"</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>hashed</name></expr>;</return>}</block>
        }</block></then></if>

        <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>zeros</name> <init>= <expr><operator>new</operator> <name><name>char</name><index>[<expr><name>padding</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>fill</name></name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.digest(String)"</literal></expr></argument>,<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>zeros</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>hashed</name></expr>;</return>}</block>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Get avatar hash for specified e-mail address
     *
     * @param email
     * @return hash
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>getHash</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>email</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.getHash(String)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>email</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.getHash(String)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>}</block>
        }</block></then></if>
        <expr_stmt><expr><name>email</name> <operator>=</operator> <call><name><name>email</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>(<argument><expr><name>US</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.util.GravatarUtils.getHash(String)"</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><ternary><condition><expr><call><name><name>email</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><call><name>digest</name><argument_list>(<argument><expr><name>email</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr>;</return>}</block>
    }</block></function>
}</block></class>
</unit>
