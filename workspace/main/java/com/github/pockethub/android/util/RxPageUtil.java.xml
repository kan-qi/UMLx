<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\util\RxPageUtil.java"><package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>core</name><operator>.</operator><name>GitHubRequest</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>Page</name></name>;</import>

<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>Observable</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>android</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>AndroidSchedulers</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>Schedulers</name></name>;</import>
<import>import <name><name>retrofit2</name><operator>.</operator><name>Response</name></name>;</import>

<class><specifier>public</specifier> class <name>RxPageUtil</name> <block>{

    <function><specifier>public</specifier> <specifier>static</specifier>  <parameter_list type="generic">&lt;<parameter><name>B</name></parameter>&gt;</parameter_list> <type><name><name>Observable</name><argument_list type="generic">&lt;<argument><name><name>Page</name><argument_list type="generic">&lt;<argument><name>B</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getAllPages</name><parameter_list>(
            <parameter><decl><type><name><name>GitHubRequest</name><argument_list type="generic">&lt;<argument><name><name>Response</name><argument_list type="generic">&lt;<argument><name><name>Page</name><argument_list type="generic">&lt;<argument><name>B</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>pagedSingleCall</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{

        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"Observable&lt;Page&lt;B&gt;&gt; com.github.pockethub.android.util.RxPageUtil.getAllPages(com.github.pockethub.android.core.GitHubRequest,GitHubRequest&lt;Response&lt;Page&lt;B&gt;&gt;&gt;,int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"Observable&lt;Page&lt;B&gt;&gt; com.github.pockethub.android.util.RxPageUtil.getAllPages(com.github.pockethub.android.core.GitHubRequest,GitHubRequest&lt;Response&lt;Page&lt;B&gt;&gt;&gt;,int)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>pagedSingleCall</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>flatMapObservable</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>response</name></decl></parameter></parameter_list> -&gt; <block>{
                    <decl_stmt><decl><type><name><name>Page</name><argument_list type="generic">&lt;<argument><name>B</name></argument>&gt;</argument_list></name></type> <name>page</name> <init>= <expr><call><name><name>response</name><operator>.</operator><name>body</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if>if <condition>(<expr><call><name><name>page</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"Observable&lt;Page&lt;B&gt;&gt; com.github.pockethub.android.util.RxPageUtil.getAllPages(com.github.pockethub.android.core.GitHubRequest,GitHubRequest&lt;Response&lt;Page&lt;B&gt;&gt;&gt;,int)"</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>Observable</name><operator>.</operator><name>just</name></name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</return>}</block>
                    }</block></then></if>

                    <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"Observable&lt;Page&lt;B&gt;&gt; com.github.pockethub.android.util.RxPageUtil.getAllPages(com.github.pockethub.android.core.GitHubRequest,GitHubRequest&lt;Response&lt;Page&lt;B&gt;&gt;&gt;,int)"</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>Observable</name><operator>.</operator><name>just</name></name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call>
                            <operator>.</operator><call><name>concatWith</name><argument_list>(<argument><expr><call><name>getAllPages</name><argument_list>(<argument><expr><name>pagedSingleCall</name></expr></argument>, <argument><expr><call><name><name>page</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>}</block>

                }</block></lambda></expr></argument>)</argument_list></call></expr>;</return>}</block>
    }</block></function>
}</block></class>
</unit>
