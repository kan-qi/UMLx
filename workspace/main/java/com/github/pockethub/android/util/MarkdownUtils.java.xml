<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\util\MarkdownUtils.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name><operator>.</operator><name>US</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Utilities for dealing with Markdown files
 */</comment>
<class><specifier>public</specifier> class <name>MarkdownUtils</name> <block>{

  <decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>MARKDOWN_EXTENSIONS</name> <init>= <expr><block>{ <expr><literal type="string">".md"</literal></expr>, <expr><literal type="string">".mkdn"</literal></expr>,
          <expr><literal type="string">".mdwn"</literal></expr>, <expr><literal type="string">".mdown"</literal></expr>, <expr><literal type="string">".markdown"</literal></expr>, <expr><literal type="string">".mkd"</literal></expr>, <expr><literal type="string">".mkdown"</literal></expr>, <expr><literal type="string">".ron"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Is the the given file name a Markdown file?
   *
   * @param name
   * @return true if the name has a markdown extension, false otherwise
   */</comment>
  <function><specifier>public</specifier> <specifier>static</specifier> <type><name>boolean</name></type> <name>isMarkdown</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{
      <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.util.MarkdownUtils.isMarkdown(String)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
          <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.util.MarkdownUtils.isMarkdown(String)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">false</literal></expr>;</return>}</block>
      }</block></then></if>

      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>name</name><operator>.</operator><name>toLowerCase</name></name><argument_list>(<argument><expr><name>US</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>extension</name> <range>: <expr><name>MARKDOWN_EXTENSIONS</name></expr></range></decl></init>)</control> <block>{
          <if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><name>extension</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
              <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.util.MarkdownUtils.isMarkdown(String)"</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">true</literal></expr>;</return>}</block>
          }</block></then></if>
      }</block></for>

      <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.util.MarkdownUtils.isMarkdown(String)"</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">false</literal></expr>;</return>}</block>
  }</block></function>
}</block></class>
</unit>
