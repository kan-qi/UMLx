<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\util\PermissionsUtils.java"><package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>Activity</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>StringRes</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>app</name><operator>.</operator><name>ActivityCompat</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v4</name><operator>.</operator><name>app</name><operator>.</operator><name>Fragment</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>afollestad</name><operator>.</operator><name>materialdialogs</name><operator>.</operator><name>MaterialDialog</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Created by savio on 2017-01-08.
 */</comment>
<class><specifier>public</specifier> class <name>PermissionsUtils</name> <block>{

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>askForPermission</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Activity</name></type> <name>activity</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>requestCode</name></decl></parameter>,
                                        <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>permission</name></decl></parameter>, <parameter><decl><type><annotation>@<name>StringRes</name></annotation> <specifier>final</specifier> <name>int</name></type> <name>askTitle</name></decl></parameter>,
                                        <parameter><decl><type><annotation>@<name>StringRes</name></annotation> <specifier>final</specifier> <name>int</name></type> <name>askContent</name></decl></parameter>)</parameter_list> <block>{

        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.PermissionsUtils.askForPermission(android.app.Activity,int,String,@StringRes  int,@StringRes  int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><call><name><name>ActivityCompat</name><operator>.</operator><name>shouldShowRequestPermissionRationale</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>, <argument><expr><name>permission</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>title</name><argument_list>(<argument><expr><name>askTitle</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>content</name><argument_list>(<argument><expr><name>askContent</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>positiveText</name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>yes</name></name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>negativeText</name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>no</name></name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>onPositive</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>dialog</name></decl></parameter>, <parameter><decl><name>which</name></decl></parameter>)</parameter_list> -&gt;
                            <block type="pseudo"><expr><call><name><name>ActivityCompat</name><operator>.</operator><name>requestPermissions</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>,
                                    <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><name>permission</name></expr>}</block></expr></argument>, <argument><expr><name>requestCode</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><call><name><name>ActivityCompat</name><operator>.</operator><name>requestPermissions</name></name><argument_list>(<argument><expr><name>activity</name></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><name>permission</name></expr>}</block></expr></argument>, <argument><expr><name>requestCode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.PermissionsUtils.askForPermission(android.app.Activity,int,String,@StringRes  int,@StringRes  int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>askForPermission</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Fragment</name></type> <name>fragment</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>requestCode</name></decl></parameter>,
                                        <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>permission</name></decl></parameter>, <parameter><decl><type><annotation>@<name>StringRes</name></annotation> <specifier>final</specifier> <name>int</name></type> <name>askTitle</name></decl></parameter>,
                                        <parameter><decl><type><annotation>@<name>StringRes</name></annotation> <specifier>final</specifier> <name>int</name></type> <name>askContent</name></decl></parameter>)</parameter_list> <block>{

        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.PermissionsUtils.askForPermission(android.support.v4.app.Fragment,int,String,@StringRes  int,@StringRes  int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><call><name><name>fragment</name><operator>.</operator><name>shouldShowRequestPermissionRationale</name></name><argument_list>(<argument><expr><name>permission</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><call><name><name>fragment</name><operator>.</operator><name>getActivity</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>title</name><argument_list>(<argument><expr><name>askTitle</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>content</name><argument_list>(<argument><expr><name>askContent</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>positiveText</name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>yes</name></name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>negativeText</name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>no</name></name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>onPositive</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>dialog</name></decl></parameter>, <parameter><decl><name>which</name></decl></parameter>)</parameter_list> -&gt;
                            <block type="pseudo"><expr><call><name><name>fragment</name><operator>.</operator><name>requestPermissions</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><name>permission</name></expr>}</block></expr></argument>, <argument><expr><name>requestCode</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><call><name><name>fragment</name><operator>.</operator><name>requestPermissions</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><name>permission</name></expr>}</block></expr></argument>, <argument><expr><name>requestCode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.util.PermissionsUtils.askForPermission(android.support.v4.app.Fragment,int,String,@StringRes  int,@StringRes  int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
