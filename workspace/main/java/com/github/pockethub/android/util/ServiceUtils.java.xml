<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\util\ServiceUtils.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>res</name><operator>.</operator><name>Resources</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>TypedValue</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>Display</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>WindowManager</name></name>;</import>

<import>import static <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name><operator>.</operator><name>WINDOW_SERVICE</name></name>;</import>
<import>import static <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>TypedValue</name><operator>.</operator><name>COMPLEX_UNIT_DIP</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Helpers for dealing with system services
 */</comment>
<class><specifier>public</specifier> class <name>ServiceUtils</name> <block>{

    <comment type="block" format="javadoc">/**
     * Get default display
     *
     * @param context
     * @return display
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Display</name></type> <name>getDisplay</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.view.Display com.github.pockethub.android.util.ServiceUtils.getDisplay(android.content.Context)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.view.Display com.github.pockethub.android.util.ServiceUtils.getDisplay(android.content.Context)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><operator>(</operator><operator>(</operator><name>WindowManager</name><operator>)</operator> <call><name><name>context</name><operator>.</operator><name>getSystemService</name></name><argument_list>(<argument><expr><name>WINDOW_SERVICE</name></expr></argument>)</argument_list></call><operator>)</operator>
                <operator>.</operator><call><name>getDefaultDisplay</name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Get default display
     *
     * @param view
     * @return display
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Display</name></type> <name>getDisplay</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>view</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.view.Display com.github.pockethub.android.util.ServiceUtils.getDisplay(android.view.View)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.view.Display com.github.pockethub.android.util.ServiceUtils.getDisplay(android.view.View)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name>getDisplay</name><argument_list>(<argument><expr><call><name><name>view</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Get default display width
     *
     * @param context
     * @return display
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>int</name></type> <name>getDisplayWidth</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"int com.github.pockethub.android.util.ServiceUtils.getDisplayWidth(android.content.Context)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"int com.github.pockethub.android.util.ServiceUtils.getDisplayWidth(android.content.Context)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name>getDisplay</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getWidth</name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Get default display width
     *
     * @param view
     * @return display
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>int</name></type> <name>getDisplayWidth</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>View</name></type> <name>view</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"int com.github.pockethub.android.util.ServiceUtils.getDisplayWidth(android.view.View)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"int com.github.pockethub.android.util.ServiceUtils.getDisplayWidth(android.view.View)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name>getDisplayWidth</name><argument_list>(<argument><expr><call><name><name>view</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>
