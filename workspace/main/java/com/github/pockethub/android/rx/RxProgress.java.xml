<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\rx\RxProgress.java"><package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>rx</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>StringRes</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>afollestad</name><operator>.</operator><name>materialdialogs</name><operator>.</operator><name>MaterialDialog</name></name>;</import>

<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>SingleTransformer</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>RxProgress</name> <block>{

    <constructor><specifier>private</specifier> <name>RxProgress</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.rx.RxProgress.RxProgress()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.rx.RxProgress.RxProgress()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><throw>throw <expr><operator>new</operator> <call><name>AssertionError</name><argument_list>(<argument><expr><literal type="string">"No instances."</literal></expr></argument>)</argument_list></call></expr>;</throw>
    }</block></constructor>

    <function><specifier>public</specifier> <specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>U</name></parameter>&gt;</parameter_list> <type><name><name>SingleTransformer</name><argument_list type="generic">&lt;<argument><name>U</name></argument>, <argument><name>U</name></argument>&gt;</argument_list></name></type> <name>bindToLifecycle</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><annotation>@<name>StringRes</name></annotation> <name>int</name></type> <name>stringRes</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"SingleTransformer&lt;U, U&gt; com.github.pockethub.android.rx.RxProgress.bindToLifecycle(android.content.Context,android.content.Context,@StringRes int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"SingleTransformer&lt;U, U&gt; com.github.pockethub.android.rx.RxProgress.bindToLifecycle(android.content.Context,android.content.Context,@StringRes int)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name>bindToLifecycle</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name>stringRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>U</name></parameter>&gt;</parameter_list> <type><name><name>SingleTransformer</name><argument_list type="generic">&lt;<argument><name>U</name></argument>, <argument><name>U</name></argument>&gt;</argument_list></name></type> <name>bindToLifecycle</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>CharSequence</name></type> <name>message</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"SingleTransformer&lt;U, U&gt; com.github.pockethub.android.rx.RxProgress.bindToLifecycle(android.content.Context,android.content.Context,CharSequence)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"SingleTransformer&lt;U, U&gt; com.github.pockethub.android.rx.RxProgress.bindToLifecycle(android.content.Context,android.content.Context,CharSequence)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><lambda><parameter_list type="pseudo"><parameter><decl><name>upstream</name></decl></parameter></parameter_list> -&gt; <block>{
            <decl_stmt><decl><type><specifier>final</specifier> <name>MaterialDialog</name></type> <name>progressDialog</name> <init>= <expr><operator>new</operator> <call><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>content</name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>progress</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"SingleTransformer&lt;U, U&gt; com.github.pockethub.android.rx.RxProgress.bindToLifecycle(android.content.Context,android.content.Context,CharSequence)"</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>upstream</name>
                    <operator>.</operator><name>doOnSubscribe</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>disposable</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>progressDialog</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>doOnSuccess</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>u</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>progressDialog</name><operator>.</operator><name>dismiss</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call>
                    <operator>.</operator><call><name>doOnError</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>throwable</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>progressDialog</name><operator>.</operator><name>dismiss</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</return>}</block>
        }</block></lambda></expr>;</return>}</block>
    }</block></function>
}</block></class>
</unit>
