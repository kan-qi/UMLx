<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\core\user\UserEventMatcher.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>core</name><operator>.</operator><name>user</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>GitHubEvent</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>GitHubEventType</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>payload</name><operator>.</operator><name>FollowPayload</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Matches a {@link User} in an {@link GitHubEvent}
 */</comment>
<class><specifier>public</specifier> class <name>UserEventMatcher</name> <block>{

    <comment type="block" format="javadoc">/**
     * Pair of users in an {@link GitHubEvent}
     */</comment>
    <class><specifier>public</specifier> <specifier>static</specifier> class <name>UserPair</name> <block>{

        <comment type="block" format="javadoc">/**
         * Actor in event
         */</comment>
        <decl_stmt><decl><specifier>public</specifier> <type><specifier>final</specifier> <name>User</name></type> <name>from</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * User being acted upon
         */</comment>
        <decl_stmt><decl><specifier>public</specifier> <type><specifier>final</specifier> <name>User</name></type> <name>to</name></decl>;</decl_stmt>

        <constructor><specifier>private</specifier> <name>UserPair</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>User</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>User</name></type> <name>to</name></decl></parameter>)</parameter_list> <block>{
            <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.core.user.UserEventMatcher$UserPair.UserPair(com.meisolsson.githubsdk.model.User,com.meisolsson.githubsdk.model.User)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><name><name>this</name><operator>.</operator><name>from</name></name> <operator>=</operator> <name>from</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>to</name></name> <operator>=</operator> <name>to</name></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.core.user.UserEventMatcher$UserPair.UserPair(com.meisolsson.githubsdk.model.User,com.meisolsson.githubsdk.model.User)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>
    }</block></class>

    <comment type="block" format="javadoc">/**
     * Get {@link UserPair} from event
     *
     * @param event
     * @return user or null if event doesn't apply
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>UserPair</name></type> <name>getUsers</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>GitHubEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.core.user.UserEventMatcher$UserPair com.github.pockethub.android.core.user.UserEventMatcher.getUsers(com.meisolsson.githubsdk.model.GitHubEvent)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><name>event</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>event</name><operator>.</operator><name>payload</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.core.user.UserEventMatcher$UserPair com.github.pockethub.android.core.user.UserEventMatcher.getUsers(com.meisolsson.githubsdk.model.GitHubEvent)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>}</block>
        }</block></then></if>

        <decl_stmt><decl><type><name>GitHubEventType</name></type> <name>type</name> <init>= <expr><call><name><name>event</name><operator>.</operator><name>type</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><call><name><name>GitHubEventType</name><operator>.</operator><name>FollowEvent</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>User</name></type> <name>from</name> <init>= <expr><call><name><name>event</name><operator>.</operator><name>actor</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>User</name></type> <name>to</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FollowPayload</name><operator>)</operator> <call><name><name>event</name><operator>.</operator><name>payload</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>target</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>from</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>to</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.core.user.UserEventMatcher$UserPair com.github.pockethub.android.core.user.UserEventMatcher.getUsers(com.meisolsson.githubsdk.model.GitHubEvent)"</literal></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><operator>new</operator> <call><name>UserPair</name><argument_list>(<argument><expr><name>from</name></expr></argument>, <argument><expr><name>to</name></expr></argument>)</argument_list></call></expr>;</return>}</block>
            }</block></then></if>
        }</block></then></if>

        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.core.user.UserEventMatcher$UserPair com.github.pockethub.android.core.user.UserEventMatcher.getUsers(com.meisolsson.githubsdk.model.GitHubEvent)"</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>}</block>
    }</block></function>
}</block></class>
</unit>
