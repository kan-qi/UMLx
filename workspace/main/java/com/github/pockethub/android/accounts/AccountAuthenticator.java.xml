<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\accounts\AccountAuthenticator.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>accounts</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>AbstractAccountAuthenticator</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>Account</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>AccountAuthenticatorResponse</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>NetworkErrorException</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>BuildConfig</name></name>;</import>

<import>import static <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>AccountManager</name><operator>.</operator><name>KEY_ACCOUNT_AUTHENTICATOR_RESPONSE</name></name>;</import>
<import>import static <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>AccountManager</name><operator>.</operator><name>KEY_BOOLEAN_RESULT</name></name>;</import>
<import>import static <name><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>AccountManager</name><operator>.</operator><name>KEY_INTENT</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>BuildConfig</name><operator>.</operator><name>ACCOUNT_TYPE</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>LoginActivity</name><operator>.</operator><name>PARAM_AUTHTOKEN_TYPE</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>accounts</name><operator>.</operator><name>LoginActivity</name><operator>.</operator><name>PARAM_USERNAME</name></name>;</import>

<class><specifier>public</specifier> class <name>AccountAuthenticator</name> <super><extends>extends <name>AbstractAccountAuthenticator</name></extends></super> <block>{

    <decl_stmt><decl><specifier>private</specifier> <type><name>Context</name></type> <name>context</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AccountAuthenticator</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.accounts.AccountAuthenticator.AccountAuthenticator(android.content.Context)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"com.github.pockethub.android.accounts.AccountAuthenticator.AccountAuthenticator(android.content.Context)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="block" format="javadoc">/**
     * The user has requested to add a new account to the system. We return an
     * intent that will launch our login screen if the user has not logged in
     * yet, otherwise our activity will just pass the user's credentials on to
     * the account manager.
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>Bundle</name></type> <name>addAccount</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>AccountAuthenticatorResponse</name></type> <name>response</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>accountType</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>authTokenType</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>requiredFeatures</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>options</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>NetworkErrorException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.addAccount(android.accounts.AccountAuthenticatorResponse,String,String,[String,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>LoginActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name>PARAM_AUTHTOKEN_TYPE</name></expr></argument>, <argument><expr><name>authTokenType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name>KEY_ACCOUNT_AUTHENTICATOR_RESPONSE</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>bundle</name> <init>= <expr><operator>new</operator> <call><name>Bundle</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>bundle</name><operator>.</operator><name>putParcelable</name></name><argument_list>(<argument><expr><name>KEY_INTENT</name></expr></argument>, <argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.addAccount(android.accounts.AccountAuthenticatorResponse,String,String,[String,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>bundle</name></expr>;</return>}</block>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>Bundle</name></type> <name>confirmCredentials</name><parameter_list>(
            <parameter><decl><type><specifier>final</specifier> <name>AccountAuthenticatorResponse</name></type> <name>response</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Account</name></type> <name>account</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>options</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>Bundle</name></type> <name>editProperties</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>AccountAuthenticatorResponse</name></type> <name>response</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>accountType</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.editProperties(android.accounts.AccountAuthenticatorResponse,String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.editProperties(android.accounts.AccountAuthenticatorResponse,String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>Bundle</name></type> <name>getAuthToken</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>AccountAuthenticatorResponse</name></type> <name>response</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>Account</name></type> <name>account</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>authTokenType</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>options</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>NetworkErrorException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>String</name></type> <name>getAuthTokenLabel</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>authTokenType</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.accounts.AccountAuthenticator.getAuthTokenLabel(String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><call><name><name>ACCOUNT_TYPE</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>authTokenType</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.accounts.AccountAuthenticator.getAuthTokenLabel(String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>authTokenType</name></expr>;</return>}</block>
        }</block></then> <else>else <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"String com.github.pockethub.android.accounts.AccountAuthenticator.getAuthTokenLabel(String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="null">null</literal></expr>;</return>}</block>
        }</block></else></if>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>Bundle</name></type> <name>hasFeatures</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>AccountAuthenticatorResponse</name></type> <name>response</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>Account</name></type> <name>account</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>features</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>NetworkErrorException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,[String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>Bundle</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>putBoolean</name></name><argument_list>(<argument><expr><name>KEY_BOOLEAN_RESULT</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,[String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>result</name></expr>;</return>}</block>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>Bundle</name></type> <name>updateCredentials</name><parameter_list>(
            <parameter><decl><type><specifier>final</specifier> <name>AccountAuthenticatorResponse</name></type> <name>response</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Account</name></type> <name>account</name></decl></parameter>,
            <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>authTokenType</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>options</name></decl></parameter>)</parameter_list> <block>{

        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><specifier>final</specifier> <name>Intent</name></type> <name>intent</name> <init>= <expr><operator>new</operator> <call><name>Intent</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>LoginActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name>PARAM_AUTHTOKEN_TYPE</name></expr></argument>, <argument><expr><name>authTokenType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name>KEY_ACCOUNT_AUTHENTICATOR_RESPONSE</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name><name>account</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>intent</name><operator>.</operator><name>putExtra</name></name><argument_list>(<argument><expr><name>PARAM_USERNAME</name></expr></argument>, <argument><expr><name><name>account</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <decl_stmt><decl><type><specifier>final</specifier> <name>Bundle</name></type> <name>bundle</name> <init>= <expr><operator>new</operator> <call><name>Bundle</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>bundle</name><operator>.</operator><name>putParcelable</name></name><argument_list>(<argument><expr><name>KEY_INTENT</name></expr></argument>, <argument><expr><name>intent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.os.Bundle com.github.pockethub.android.accounts.AccountAuthenticator.updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>bundle</name></expr>;</return>}</block>
    }</block></function>
}</block></class>
</unit>
