<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\ui\commit\CommitFileComparator.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>commit</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>GitHubFile</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>

<import>import static <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>String</name><operator>.</operator><name>CASE_INSENSITIVE_ORDER</name></name>;</import>


<comment type="block" format="javadoc">/**
 * Comparator for commit files
 */</comment>
<class><specifier>public</specifier> class <name>CommitFileComparator</name> <super><implements>implements <name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>GitHubFile</name></argument>&gt;</argument_list></name></implements></super> <block>{

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>GitHubFile</name></type> <name>lhs</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>GitHubFile</name></type> <name>rhs</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"int com.github.pockethub.android.ui.commit.CommitFileComparator.compare(com.meisolsson.githubsdk.model.GitHubFile,com.meisolsson.githubsdk.model.GitHubFile)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>String</name></type> <name>lPath</name> <init>= <expr><call><name><name>lhs</name><operator>.</operator><name>filename</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>lSlash</name> <init>= <expr><call><name><name>lPath</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>lSlash</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>lPath</name> <operator>=</operator> <call><name><name>lPath</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name>lSlash</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <decl_stmt><decl><type><name>String</name></type> <name>rPath</name> <init>= <expr><call><name><name>rhs</name><operator>.</operator><name>filename</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>rSlash</name> <init>= <expr><call><name><name>rPath</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>rSlash</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>rPath</name> <operator>=</operator> <call><name><name>rPath</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name>rSlash</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"int com.github.pockethub.android.ui.commit.CommitFileComparator.compare(com.meisolsson.githubsdk.model.GitHubFile,com.meisolsson.githubsdk.model.GitHubFile)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>CASE_INSENSITIVE_ORDER</name><operator>.</operator><name>compare</name></name><argument_list>(<argument><expr><name>lPath</name></expr></argument>, <argument><expr><name>rPath</name></expr></argument>)</argument_list></call></expr>;</return>}</block>
    }</block></function>
}</block></class>
</unit>
