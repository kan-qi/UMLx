<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\ui\commit\CommitDiffListFragment.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>commit</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ClipData</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>ClipboardManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>annotation</name><operator>.</operator><name>NonNull</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>LinearLayoutManager</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>widget</name><operator>.</operator><name>RecyclerView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>text</name><operator>.</operator><name>TextUtils</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>LayoutInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>Menu</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>MenuInflater</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>MenuItem</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>View</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>view</name><operator>.</operator><name>ViewGroup</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>ProgressBar</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>TextView</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>widget</name><operator>.</operator><name>Toast</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>afollestad</name><operator>.</operator><name>materialdialogs</name><operator>.</operator><name>MaterialDialog</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>core</name><operator>.</operator><name>commit</name><operator>.</operator><name>RefreshCommitTaskFactory</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>rx</name><operator>.</operator><name>AutoDisposeUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>base</name><operator>.</operator><name>BaseFragment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>LoadingItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitCommentItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>TextItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitFileHeaderItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitFileLineItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitHeaderItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>item</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitParentItem</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>Commit</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>GitHubFile</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>Repository</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>core</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitStore</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>core</name><operator>.</operator><name>commit</name><operator>.</operator><name>CommitUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>core</name><operator>.</operator><name>commit</name><operator>.</operator><name>FullCommitFile</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>AvatarLoader</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>HttpImageGetter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>InfoUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>ShareUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>ToastUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>git</name><operator>.</operator><name>GitComment</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>git</name><operator>.</operator><name>GitCommit</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>xwray</name><operator>.</operator><name>groupie</name><operator>.</operator><name>GroupAdapter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>xwray</name><operator>.</operator><name>groupie</name><operator>.</operator><name>Item</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>xwray</name><operator>.</operator><name>groupie</name><operator>.</operator><name>OnItemClickListener</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>xwray</name><operator>.</operator><name>groupie</name><operator>.</operator><name>Section</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>butterknife</name><operator>.</operator><name>BindView</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>android</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>AndroidSchedulers</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>Schedulers</name></name>;</import>

<import>import static <name><name>android</name><operator>.</operator><name>app</name><operator>.</operator><name>Activity</name><operator>.</operator><name>RESULT_OK</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>Intents</name><operator>.</operator><name>EXTRA_BASE</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>Intents</name><operator>.</operator><name>EXTRA_COMMENT</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>Intents</name><operator>.</operator><name>EXTRA_REPOSITORY</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>RequestCodes</name><operator>.</operator><name>COMMENT_CREATE</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Fragment to display commit details with diff output
 */</comment>
<class><specifier>public</specifier> class <name>CommitDiffListFragment</name> <super><extends>extends <name>BaseFragment</name></extends> <implements>implements <name>OnItemClickListener</name></implements></super> <block>{


    <decl_stmt><decl><annotation>@<name>BindView</name><argument_list>(<argument><expr><name><name>android</name><operator>.</operator><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>list</name></name></expr></argument>)</argument_list></annotation>
    <specifier>protected</specifier> <type><name>RecyclerView</name></type> <name>list</name></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>BindView</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>pb_loading</name></name></expr></argument>)</argument_list></annotation>
    <specifier>protected</specifier> <type><name>ProgressBar</name></type> <name>progress</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>DiffStyler</name></type> <name>diffStyler</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Repository</name></type> <name>repository</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>String</name></type> <name>base</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Commit</name></type> <name>commit</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>GitComment</name></argument>&gt;</argument_list></name></type> <name>comments</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FullCommitFile</name></argument>&gt;</argument_list></name></type> <name>files</name></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
    <specifier>protected</specifier> <type><name>AvatarLoader</name></type> <name>avatars</name></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
    <specifier>protected</specifier> <type><name>CommitStore</name></type> <name>store</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>GroupAdapter</name></type> <name>adapter</name> <init>= <expr><operator>new</operator> <call><name>GroupAdapter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Section</name></type> <name>mainSection</name> <init>= <expr><operator>new</operator> <call><name>Section</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Section</name></type> <name>commitSection</name> <init>= <expr><operator>new</operator> <call><name>Section</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Section</name></type> <name>filesSection</name> <init>= <expr><operator>new</operator> <call><name>Section</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Section</name></type> <name>commentSection</name> <init>= <expr><operator>new</operator> <call><name>Section</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
    <specifier>protected</specifier> <type><name>RefreshCommitTaskFactory</name></type> <name>refreshCommitTaskFactory</name></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
    <specifier>protected</specifier> <type><name>HttpImageGetter</name></type> <name>commentImageGetter</name></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onCreate(android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Bundle</name></type> <name>args</name> <init>= <expr><call><name>getArguments</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>base</name> <operator>=</operator> <call><name><name>args</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name>EXTRA_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>args</name><operator>.</operator><name>getParcelable</name></name><argument_list>(<argument><expr><name>EXTRA_REPOSITORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>mainSection</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>commitSection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mainSection</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filesSection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mainSection</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>commentSection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>adapter</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>mainSection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>adapter</name><operator>.</operator><name>setOnItemClickListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onCreate(android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onActivityCreated</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onActivityCreated(android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onActivityCreated</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>commit</name> <operator>=</operator> <call><name><name>store</name><operator>.</operator><name>getCommit</name></name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr><name>files</name> <operator>==</operator> <literal type="null">null</literal>
                <operator>||</operator> <operator>(</operator><name>commit</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>commit</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>commentCount</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>comments</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>mainSection</name><operator>.</operator><name>setFooter</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LoadingItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>loading_files_and_comments</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <if>if <condition>(<expr><name>commit</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>comments</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>files</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>updateList</name><argument_list>(<argument><expr><name>commit</name></expr></argument>, <argument><expr><name>comments</name></expr></argument>, <argument><expr><name>files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <if>if <condition>(<expr><name>commit</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>updateHeader</name><argument_list>(<argument><expr><name>commit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name>refreshCommit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></else></if><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onActivityCreated(android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onViewCreated</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>view</name></decl></parameter>, <parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onViewCreated(@NonNull View,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onViewCreated</name></name><argument_list>(<argument><expr><name>view</name></expr></argument>, <argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>diffStyler</name> <operator>=</operator> <operator>new</operator> <call><name>DiffStyler</name><argument_list>(<argument><expr><call><name>getResources</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>setLayoutManager</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LinearLayoutManager</name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>setAdapter</name></name><argument_list>(<argument><expr><name>adapter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onViewCreated(@NonNull View,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>View</name></type> <name>onCreateView</name><parameter_list>(<parameter><decl><type><name>LayoutInflater</name></type> <name>inflater</name></decl></parameter>, <parameter><decl><type><name>ViewGroup</name></type> <name>container</name></decl></parameter>, <parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.support.v7.widget.RecyclerView com.github.pockethub.android.ui.commit.CommitDiffListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.support.v7.widget.RecyclerView com.github.pockethub.android.ui.commit.CommitDiffListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>inflater</name><operator>.</operator><name>inflate</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>fragment_commit_diff_list</name></name></expr></argument>, <argument><expr><name>container</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>addComment</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>GitComment</name></type> <name>comment</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.addComment(com.meisolsson.githubsdk.model.git.GitComment)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><name>comments</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>files</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>comments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>comment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>GitCommit</name></type> <name>rawCommit</name> <init>= <expr><call><name><name>commit</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>rawCommit</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>rawCommit</name> <operator>=</operator> <call><name><name>rawCommit</name><operator>.</operator><name>toBuilder</name></name><argument_list>()</argument_list></call>
                        <operator>.</operator><call><name>commentCount</name><argument_list>(<argument><expr><call><name><name>rawCommit</name><operator>.</operator><name>commentCount</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call>
                        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name>commit</name> <operator>=</operator> <call><name><name>commit</name><operator>.</operator><name>toBuilder</name></name><argument_list>()</argument_list></call>
                        <operator>.</operator><call><name>commit</name><argument_list>(<argument><expr><name>rawCommit</name></expr></argument>)</argument_list></call>
                        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name>commentImageGetter</name><operator>.</operator><name>encode</name></name><argument_list>(<argument><expr><name>comment</name></expr></argument>, <argument><expr><call><name><name>comment</name><operator>.</operator><name>bodyHtml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>updateItems</name><argument_list>(<argument><expr><name>comments</name></expr></argument>, <argument><expr><name>files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><call><name>refreshCommit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></else></if><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.addComment(com.meisolsson.githubsdk.model.git.GitComment)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onActivityResult</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>requestCode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>resultCode</name></decl></parameter>, <parameter><decl><type><name>Intent</name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onActivityResult(int,int,android.content.Intent)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><name>RESULT_OK</name> <operator>==</operator> <name>resultCode</name> <operator>&amp;&amp;</operator> <name>COMMENT_CREATE</name> <operator>==</operator> <name>requestCode</name>
                <operator>&amp;&amp;</operator> <name>data</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>GitComment</name></type> <name>comment</name> <init>= <expr><call><name><name>data</name><operator>.</operator><name>getParcelableExtra</name></name><argument_list>(<argument><expr><name>EXTRA_COMMENT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>addComment</name><argument_list>(<argument><expr><name>comment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onActivityResult(int,int,android.content.Intent)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return;</return>}</block>
        }</block></then></if>

        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onActivityResult</name></name><argument_list>(<argument><expr><name>requestCode</name></expr></argument>, <argument><expr><name>resultCode</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onCreateOptionsMenu</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Menu</name></type> <name>optionsMenu</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>MenuInflater</name></type> <name>inflater</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>inflater</name><operator>.</operator><name>inflate</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>menu</name><operator>.</operator><name>fragment_commit_view</name></name></expr></argument>, <argument><expr><name>optionsMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>boolean</name></type> <name>onOptionsItemSelected</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>MenuItem</name></type> <name>item</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isAdded</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">false</literal></expr>;</return>}</block>
        }</block></then></if>

        <switch>switch <condition>(<expr><call><name><name>item</name><operator>.</operator><name>getItemId</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
            <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>m_refresh</name></name></expr>:</case>
                <expr_stmt><expr><call><name>refreshCommit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">true</literal></expr>;</return>}</block>
            <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>m_copy_hash</name></name></expr>:</case>
                <expr_stmt><expr><call><name>copyHashToClipboard</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">true</literal></expr>;</return>}</block>
            <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>m_comment</name></name></expr>:</case>
                <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(
                        <argument><expr><call><name><name>CreateCommentActivity</name><operator>.</operator><name>createIntent</name></name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><name>base</name></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><name>COMMENT_CREATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">true</literal></expr>;</return>}</block>
            <case>case <expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>m_share</name></name></expr>:</case>
                <expr_stmt><expr><call><name>shareCommit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><literal type="boolean">true</literal></expr>;</return>}</block>
            <default>default:</default>
                <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"boolean com.github.pockethub.android.ui.commit.CommitDiffListFragment.onOptionsItemSelected(android.view.MenuItem)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>super</name><operator>.</operator><name>onOptionsItemSelected</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</return>}</block>
        }</block></switch>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>copyHashToClipboard</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.copyHashToClipboard()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>ClipboardManager</name></type> <name>manager</name> <init>= <expr><operator>(</operator><name>ClipboardManager</name><operator>)</operator> <call><name>getActivity</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSystemService</name><argument_list>(<argument><expr><name><name>Context</name><operator>.</operator><name>CLIPBOARD_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>ClipData</name></type> <name>clip</name> <init>= <expr><call><name><name>ClipData</name><operator>.</operator><name>newPlainText</name></name><argument_list>(<argument><expr><literal type="string">"hash"</literal></expr></argument>, <argument><expr><call><name><name>commit</name><operator>.</operator><name>sha</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>setPrimaryClip</name></name><argument_list>(<argument><expr><name>clip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Toast</name><operator>.</operator><name>makeText</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>toast_msg_copied</name></name></expr></argument>, <argument><expr><name><name>Toast</name><operator>.</operator><name>LENGTH_SHORT</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>show</name><argument_list>()</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.copyHashToClipboard()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>shareCommit</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.shareCommit()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>String</name></type> <name>id</name> <init>= <expr><call><name><name>InfoUtils</name><operator>.</operator><name>createRepoId</name></name><argument_list>(<argument><expr><name>repository</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><call><name><name>ShareUtils</name><operator>.</operator><name>create</name></name><argument_list>(
                <argument><expr><literal type="string">"Commit "</literal> <operator>+</operator> <call><name><name>CommitUtils</name><operator>.</operator><name>abbreviate</name></name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">" on "</literal> <operator>+</operator> <name>id</name></expr></argument>,
                <argument><expr><literal type="string">"https://github.com/"</literal> <operator>+</operator> <name>id</name> <operator>+</operator> <literal type="string">"/commit/"</literal> <operator>+</operator> <name>base</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.shareCommit()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>refreshCommit</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.refreshCommit()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>refreshCommitTaskFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>repository</name></expr></argument>, <argument><expr><name>base</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>refresh</name><argument_list>()</argument_list></call>
                <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>as</name><argument_list>(<argument><expr><call><name><name>AutoDisposeUtils</name><operator>.</operator><name>bindToLifecycle</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>full</name></decl></parameter></parameter_list> -&gt; <block>{
                    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>GitHubFile</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name><name>full</name><operator>.</operator><name>getCommit</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>files</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>diffStyler</name><operator>.</operator><name>setFiles</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if>if <condition>(<expr><name>files</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                        <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>CommitFileComparator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>

                    <expr_stmt><expr><call><name>updateList</name><argument_list>(<argument><expr><call><name><name>full</name><operator>.</operator><name>getCommit</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>full</name></expr></argument>, <argument><expr><call><name><name>full</name><operator>.</operator><name>getFiles</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></lambda></expr></argument>, <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block>{
                    <expr_stmt><expr><call><name><name>ToastUtils</name><operator>.</operator><name>show</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>error_commit_load</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>progress</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.refreshCommit()"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>addCommitParents</name><parameter_list>(<parameter><decl><type><name>Commit</name></type> <name>commit</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.addCommitParents(com.meisolsson.githubsdk.model.Commit)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Commit</name></argument>&gt;</argument_list></name></type> <name>parents</name> <init>= <expr><call><name><name>commit</name><operator>.</operator><name>parents</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>parents</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>parents</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.addCommitParents(com.meisolsson.githubsdk.model.Commit)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return;</return>}</block>
        }</block></then></if>

        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CommitParentItem</name></argument>&gt;</argument_list></name></type> <name>items</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Commit</name></type> <name>parent</name> <range>: <expr><name>parents</name></expr></range></decl></init>)</control> <block>{
            <expr_stmt><expr><call><name><name>items</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitParentItem</name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><call><name><name>commitSection</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><name>items</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>updateHeader</name><parameter_list>(<parameter><decl><type><name>Commit</name></type> <name>commit</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.updateHeader(com.meisolsson.githubsdk.model.Commit)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>progress</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>setVisibility</name></name><argument_list>(<argument><expr><name><name>View</name><operator>.</operator><name>VISIBLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>mainSection</name><operator>.</operator><name>setHeader</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitHeaderItem</name><argument_list>(<argument><expr><name>avatars</name></expr></argument>, <argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>commit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addCommitParents</name><argument_list>(<argument><expr><name>commit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.updateHeader(com.meisolsson.githubsdk.model.Commit)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>updateList</name><parameter_list>(<parameter><decl><type><name>Commit</name></type> <name>commit</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>GitComment</name></argument>&gt;</argument_list></name></type> <name>comments</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FullCommitFile</name></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.updateList(com.meisolsson.githubsdk.model.Commit,List&lt;GitComment&gt;,List&lt;FullCommitFile&gt;)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isAdded</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
            <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.updateList(com.meisolsson.githubsdk.model.Commit,List&lt;GitComment&gt;,List&lt;FullCommitFile&gt;)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return;</return>}</block>
        }</block></then></if>

        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>commit</name></name> <operator>=</operator> <name>commit</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>comments</name></name> <operator>=</operator> <name>comments</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>files</name></name> <operator>=</operator> <name>files</name></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>updateHeader</name><argument_list>(<argument><expr><name>commit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>mainSection</name><operator>.</operator><name>removeFooter</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>filesSection</name><operator>.</operator><name>setHeader</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>TextItem</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>commit_file_details_header</name></name></expr></argument>,
                        <argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>tv_commit_file_summary</name></name></expr></argument>, <argument><expr><call><name><name>CommitUtils</name><operator>.</operator><name>formatStats</name></name><argument_list>(<argument><expr><call><name><name>commit</name><operator>.</operator><name>files</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>updateItems</name><argument_list>(<argument><expr><name>comments</name></expr></argument>, <argument><expr><name>files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>updateItems</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>GitComment</name></argument>&gt;</argument_list></name></type> <name>comments</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FullCommitFile</name></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.updateItems(List&lt;GitComment&gt;,List&lt;FullCommitFile&gt;)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>filesSection</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><call><name>createFileSections</name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CommitCommentItem</name></argument>&gt;</argument_list></name></type> <name>items</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>GitComment</name></type> <name>comment</name> <range>: <expr><name>comments</name></expr></range></decl></init>)</control> <block>{
            <expr_stmt><expr><call><name><name>items</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitCommentItem</name><argument_list>(<argument><expr><name>avatars</name></expr></argument>, <argument><expr><name>commentImageGetter</name></expr></argument>, <argument><expr><name>comment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><call><name><name>commentSection</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><name>items</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.updateItems(List&lt;GitComment&gt;,List&lt;FullCommitFile&gt;)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Section</name></argument>&gt;</argument_list></name></type> <name>createFileSections</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FullCommitFile</name></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"List&lt;Section&gt; com.github.pockethub.android.ui.commit.CommitDiffListFragment.createFileSections(List&lt;FullCommitFile&gt;)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Section</name></argument>&gt;</argument_list></name></type> <name>sections</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>FullCommitFile</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{
            <decl_stmt><decl><type><name>Section</name></type> <name>section</name> <init>= <expr><operator>new</operator> <call><name>Section</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitFileHeaderItem</name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CharSequence</name></argument>&gt;</argument_list></name></type> <name>lines</name> <init>= <expr><call><name><name>diffStyler</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>getFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>filename</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>number</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>CharSequence</name></type> <name>line</name> <range>: <expr><name>lines</name></expr></range></decl></init>)</control> <block>{
                <expr_stmt><expr><call><name><name>section</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitFileLineItem</name><argument_list>(<argument><expr><name>diffStyler</name></expr></argument>, <argument><expr><name>line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <for>for <control>(<init><decl><type><name>GitComment</name></type> <name>comment</name> <range>: <expr><call><name><name>file</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>number</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{
                    <expr_stmt><expr><call><name><name>section</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitCommentItem</name><argument_list>(<argument><expr><name>avatars</name></expr></argument>, <argument><expr><name>commentImageGetter</name></expr></argument>, <argument><expr><name>comment</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>
                <expr_stmt><expr><name>number</name><operator>++</operator></expr>;</expr_stmt>
            }</block></for>

            <expr_stmt><expr><call><name><name>sections</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>

        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"List&lt;Section&gt; com.github.pockethub.android.ui.commit.CommitDiffListFragment.createFileSections(List&lt;FullCommitFile&gt;)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><name>sections</name></expr>;</return>}</block>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>showFileOptions</name><parameter_list>(<parameter><decl><type><name>CharSequence</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>position</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>GitHubFile</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{

        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.showFileOptions(CharSequence,int,com.meisolsson.githubsdk.model.GitHubFile)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name><name>MaterialDialog</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><call><name>getActivity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>title</name><argument_list>(<argument><expr><call><name><name>CommitUtils</name><operator>.</operator><name>getName</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier>final</specifier> <name><name>MaterialDialog</name><index>[]</index></name></type> <name>dialogHolder</name> <init>= <expr><operator>new</operator> <name><name>MaterialDialog</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>View</name></type> <name>view</name> <init>= <expr><call><name>getActivity</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLayoutInflater</name><argument_list>()</argument_list></call><operator>.</operator><call><name>inflate</name><argument_list>(
                <argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>diff_line_dialog</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>TextView</name></type> <name>diff</name> <init>= <expr><operator>(</operator><name>TextView</name><operator>)</operator> <call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>tv_diff</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>diff</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>diffStyler</name><operator>.</operator><name>updateColors</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><operator>(</operator><operator>(</operator><name>TextView</name><operator>)</operator> <call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>tv_commit</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>setText</name><argument_list>(<argument><expr><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>commit_prefix</name></name></expr></argument>)</argument_list></call>
                <operator>+</operator> <call><name><name>CommitUtils</name><operator>.</operator><name>abbreviate</name></name><argument_list>(<argument><expr><name>commit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>ll_view_area</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setOnClickListener</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>v</name></decl></parameter></parameter_list> -&gt; <block>{
            <expr_stmt><expr><name><name>dialogHolder</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>dismiss</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>openFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>view</name><operator>.</operator><name>findViewById</name></name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>ll_comment_area</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setOnClickListener</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>v</name></decl></parameter></parameter_list> -&gt; <block>{
            <expr_stmt><expr><name><name>dialogHolder</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>dismiss</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>startActivityForResult</name><argument_list>(<argument><expr><call><name><name>CreateCommentActivity</name>
                            <operator>.</operator><name>createIntent</name></name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><call><name><name>commit</name><operator>.</operator><name>sha</name></name><argument_list>()</argument_list></call></expr></argument>,
                                    <argument><expr><call><name><name>file</name><operator>.</operator><name>filename</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><name>COMMENT_CREATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>customView</name></name><argument_list>(<argument><expr><name>view</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>negativeText</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>cancel</name></name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>onNegative</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>dialog</name></decl></parameter>, <parameter><decl><name>which</name></decl></parameter>)</parameter_list> -&gt; <block type="pseudo"><expr><call><name><name>dialog</name><operator>.</operator><name>dismiss</name></name><argument_list>()</argument_list></call></expr></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>MaterialDialog</name></type> <name>dialog</name> <init>= <expr><call><name><name>builder</name><operator>.</operator><name>build</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>dialogHolder</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>dialog</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>setCanceledOnTouchOutside</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.showFileOptions(CharSequence,int,com.meisolsson.githubsdk.model.GitHubFile)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><specifier>private</specifier> <type><name>void</name></type> <name>openFile</name><parameter_list>(<parameter><decl><type><name>GitHubFile</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.openFile(com.meisolsson.githubsdk.model.GitHubFile)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>filename</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>sha</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><call><name><name>CommitFileViewActivity</name><operator>.</operator><name>createIntent</name></name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><name>base</name></expr></argument>,
                    <argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.openFile(com.meisolsson.githubsdk.model.GitHubFile)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc">/**
     * Select previous file by scanning backwards from the current position
     *
     * @param position
     * @param item
     * @param adapter
     */</comment>
    <function><specifier>private</specifier> <type><name>void</name></type> <name>selectPreviousFile</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>position</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>GroupAdapter</name></type> <name>adapter</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.selectPreviousFile(int,Object,com.xwray.groupie.GroupAdapter)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>CharSequence</name></type> <name>line</name></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CharSequence</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>line</name> <operator>=</operator> <operator>(</operator><name>CharSequence</name><operator>)</operator> <name>item</name></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><name>line</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        }</block></else></if>

        <decl_stmt><decl><type><name>int</name></type> <name>linePosition</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><operator>--</operator><name>position</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{
            <expr_stmt><expr><name>item</name> <operator>=</operator> <call><name><name>adapter</name><operator>.</operator><name>getItem</name></name><argument_list>(<argument><expr><name>position</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CommitFileHeaderItem</name></expr>)</condition><then> <block>{
                <if>if <condition>(<expr><name>line</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                    <expr_stmt><expr><call><name>showFileOptions</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>linePosition</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>CommitFileHeaderItem</name><operator>)</operator> <name>item</name><operator>)</operator><operator>.</operator><call><name>getFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <break>break;</break>
            }</block></then> <elseif>else <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CharSequence</name></expr>)</condition><then> <block>{
                <if>if <condition>(<expr><name>line</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
                    <expr_stmt><expr><name>linePosition</name><operator>++</operator></expr>;</expr_stmt>
                }</block></then> <else>else <block>{
                    <expr_stmt><expr><name>line</name> <operator>=</operator> <operator>(</operator><name>CharSequence</name><operator>)</operator> <name>item</name></expr>;</expr_stmt>
                }</block></else></if>
            }</block></then></if></elseif></if>
        }</block></while><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.selectPreviousFile(int,Object,com.xwray.groupie.GroupAdapter)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <type><name>void</name></type> <name>onItemClick</name><parameter_list>(<parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>Item</name></type> <name>item</name></decl></parameter>, <parameter><decl><type><annotation>@<name>NonNull</name></annotation> <name>View</name></type> <name>view</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onItemClick(@NonNull Item,@NonNull View)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>int</name></type> <name>position</name> <init>= <expr><call><name><name>adapter</name><operator>.</operator><name>getAdapterPosition</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CommitParentItem</name></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>String</name></type> <name>sha</name> <init>= <expr><operator>(</operator><operator>(</operator><name>CommitParentItem</name><operator>)</operator> <name>item</name><operator>)</operator><operator>.</operator><call><name>getCommit</name><argument_list>()</argument_list></call><operator>.</operator><call><name>sha</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>startActivity</name><argument_list>(<argument><expr><call><name><name>CommitViewActivity</name><operator>.</operator><name>createIntent</name></name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><name>sha</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <elseif>else <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CommitFileHeaderItem</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>openFile</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>CommitFileHeaderItem</name><operator>)</operator> <name>item</name><operator>)</operator><operator>.</operator><call><name>getFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></elseif> <elseif>else <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CharSequence</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>selectPreviousFile</name><argument_list>(<argument><expr><name>position</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>adapter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></elseif> <elseif>else <if>if <condition>(<expr><name>item</name> <operator>instanceof</operator> <name>CommitCommentItem</name></expr>)</condition><then> <block>{
            <if>if <condition>(<expr><operator>!</operator><call><name><name>TextUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>CommitCommentItem</name><operator>)</operator> <name>item</name><operator>)</operator><operator>.</operator><call><name>getComment</name><argument_list>()</argument_list></call><operator>.</operator><call><name>path</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>selectPreviousFile</name><argument_list>(<argument><expr><name>position</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>adapter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then></if></elseif></if><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.commit.CommitDiffListFragment.onItemClick(@NonNull Item,@NonNull View)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
