<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="D:\AndroidAnalysis\Instrumentation-apps\PocketHub\app\src\main\java\com\github\pockethub\android\ui\gist\CreateCommentActivity.java"><comment type="block">/*
 * Copyright (c) 2015 PocketHub
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>gist</name></name>;</package>

<import>import <name><name>android</name><operator>.</operator><name>content</name><operator>.</operator><name>Intent</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>os</name><operator>.</operator><name>Bundle</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>support</name><operator>.</operator><name>v7</name><operator>.</operator><name>app</name><operator>.</operator><name>ActionBar</name></name>;</import>
<import>import <name><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>Log</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>rx</name><operator>.</operator><name>AutoDisposeUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>core</name><operator>.</operator><name>ServiceGenerator</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>Gist</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>Intents</name><operator>.</operator><name>Builder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>util</name><operator>.</operator><name>ToastUtils</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>model</name><operator>.</operator><name>request</name><operator>.</operator><name>CommentRequest</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>meisolsson</name><operator>.</operator><name>githubsdk</name><operator>.</operator><name>service</name><operator>.</operator><name>gists</name><operator>.</operator><name>GistCommentService</name></name>;</import>

<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>android</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>AndroidSchedulers</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>reactivex</name><operator>.</operator><name>schedulers</name><operator>.</operator><name>Schedulers</name></name>;</import>

<import>import static <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>Intents</name><operator>.</operator><name>EXTRA_GIST</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Activity to create a comment on a {@link Gist}
 */</comment>
<class><specifier>public</specifier> class <name>CreateCommentActivity</name> <super><extends>extends
        <name><name>com</name><operator>.</operator><name>github</name><operator>.</operator><name>pockethub</name><operator>.</operator><name>android</name><operator>.</operator><name>ui</name><operator>.</operator><name>comment</name><operator>.</operator><name>CreateCommentActivity</name></name></extends></super> <block>{

    <comment type="block" format="javadoc">/**
     * Create intent to create a comment
     *
     * @param gist
     * @return intent
     */</comment>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>Intent</name></type> <name>createIntent</name><parameter_list>(<parameter><decl><type><name>Gist</name></type> <name>gist</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"android.content.Intent com.github.pockethub.android.ui.gist.CreateCommentActivity.createIntent(com.meisolsson.githubsdk.model.Gist)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>Builder</name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name>Builder</name><argument_list>(<argument><expr><literal type="string">"gist.comment.create.VIEW"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>gist</name></name><argument_list>(<argument><expr><name>gist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <block>{<expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logStaticMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"android.content.Intent com.github.pockethub.android.ui.gist.CreateCommentActivity.createIntent(com.meisolsson.githubsdk.model.Gist)"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><return>return <expr><call><name><name>builder</name><operator>.</operator><name>toIntent</name></name><argument_list>()</argument_list></call></expr>;</return>}</block>
    }</block></function>

    <decl_stmt><decl><specifier>private</specifier> <type><name>Gist</name></type> <name>gist</name></decl>;</decl_stmt>

    <decl_stmt><decl><specifier>private</specifier> <type><name>String</name></type> <name>TAG</name> <init>= <expr><literal type="string">"CreateCommentActivity"</literal></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <type><name>void</name></type> <name>onCreate</name><parameter_list>(<parameter><decl><type><name>Bundle</name></type> <name>savedInstanceState</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.gist.CreateCommentActivity.onCreate(android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCreate</name></name><argument_list>(<argument><expr><name>savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setContentView</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>layout</name><operator>.</operator><name>pager_with_tabs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>gist</name> <operator>=</operator> <call><name>getParcelableExtra</name><argument_list>(<argument><expr><name>EXTRA_GIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>ActionBar</name></type> <name>actionBar</name> <init>= <expr><call><name>getSupportActionBar</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>actionBar</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><call><name>getString</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>string</name><operator>.</operator><name>gist_title</name></name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name><name>gist</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>User</name></type> <name>user</name> <init>= <expr><call><name><name>gist</name><operator>.</operator><name>owner</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>user</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>actionBar</name><operator>.</operator><name>setSubtitle</name></name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>login</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><call><name><name>avatars</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>actionBar</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.gist.CreateCommentActivity.onCreate(android.os.Bundle)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <type><name>void</name></type> <name>createComment</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>comment</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodEnter</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.gist.CreateCommentActivity.createComment(String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>CommentRequest</name></type> <name>commentRequest</name> <init>= <expr><call><name><name>CommentRequest</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
                <operator>.</operator><call><name>body</name><argument_list>(<argument><expr><name>comment</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>ServiceGenerator</name><operator>.</operator><name>createService</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>GistCommentService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>createGistComment</name><argument_list>(<argument><expr><call><name><name>gist</name><operator>.</operator><name>id</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>commentRequest</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>subscribeOn</name><argument_list>(<argument><expr><call><name><name>Schedulers</name><operator>.</operator><name>io</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>observeOn</name><argument_list>(<argument><expr><call><name><name>AndroidSchedulers</name><operator>.</operator><name>mainThread</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>as</name><argument_list>(<argument><expr><call><name><name>AutoDisposeUtils</name><operator>.</operator><name>bindToLifecycle</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>subscribe</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>response</name></decl></parameter></parameter_list> -&gt; <block type="pseudo"><expr><call><name>finish</name><argument_list>(<argument><expr><call><name><name>response</name><operator>.</operator><name>body</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>, <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>error</name></decl></parameter></parameter_list> -&gt; <block>{
                    <expr><call><name><name>Log</name><operator>.</operator><name>e</name></name><argument_list>(<argument><expr><name>TAG</name></expr></argument>, <argument><expr><literal type="string">"Exception creating comment on gist"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>;

                    <argument><expr><call><name><name>ToastUtils</name><operator>.</operator><name>show</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name><name>error</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;<argument><expr><call><name><name>com</name><operator>.</operator><name>mijack</name><operator>.</operator><name>Xlog</name><operator>.</operator><name>logMethodExit</name></name><argument_list>(<argument><expr><literal type="string">"void com.github.pockethub.android.ui.gist.CreateCommentActivity.createComment(String)"</literal></expr></argument>,<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
                }</block></function>)</block>;</class>
    }
}
</unit>
