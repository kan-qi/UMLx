<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Jan 14 00:51:23 PST 2019 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>MethodSourceSinkDefinition.CallType (soot-infoflow 2.6.1 API)</title>
<meta name="date" content="2019-01-14">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="MethodSourceSinkDefinition.CallType (soot-infoflow 2.6.1 API)";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":9,"i1":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MethodSourceSinkDefinition.CallType.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.html" title="class in soot.jimple.infoflow.sourcesSinks.definitions"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/NullSourceSinkDefinitionProvider.html" title="class in soot.jimple.infoflow.sourcesSinks.definitions"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" target="_top">Frames</a></li>
<li><a href="MethodSourceSinkDefinition.CallType.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">soot.jimple.infoflow.sourcesSinks.definitions</div>
<h2 title="Enum MethodSourceSinkDefinition.CallType" class="title">Enum MethodSourceSinkDefinition.CallType</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">java.lang.Enum</a>&lt;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a>&gt;</li>
<li>
<ul class="inheritance">
<li>soot.jimple.infoflow.sourcesSinks.definitions.MethodSourceSinkDefinition.CallType</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="http://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</a>&lt;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a>&gt;</dd>
</dl>
<dl>
<dt>Enclosing class:</dt>
<dd><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.html" title="class in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition</a></dd>
</dl>
<hr>
<br>
<pre>public static enum <span class="typeNameLabel">MethodSourceSinkDefinition.CallType</span>
extends <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</a>&lt;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a>&gt;</pre>
<div class="block">Enumeration containing the different types of method invocations that can be
 defined as sources or sinks</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Steven Arzt</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== ENUM CONSTANT SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="enum.constant.summary">
<!--   -->
</a>
<h3>Enum Constant Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Enum Constant Summary table, listing enum constants, and an explanation">
<caption><span>Enum Constants</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Enum Constant and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html#Callback">Callback</a></span></code>
<div class="block">The method is a callback that is invoked by the Android operating system</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html#MethodCall">MethodCall</a></span></code>
<div class="block">The app calls the method</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html#Return">Return</a></span></code>
<div class="block">All return values in the method are considered (only supported as sink)</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static <a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html#valueOf-java.lang.String-">valueOf</a></span>(<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;name)</code>
<div class="block">Returns the enum constant of this type with the specified name.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a>[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html#values--">values</a></span>()</code>
<div class="block">Returns an array containing the constants of this enum type, in
the order they are declared.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Enum">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</a></h3>
<code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#clone--" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#compareTo-E-" title="class or interface in java.lang">compareTo</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#finalize--" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#getDeclaringClass--" title="class or interface in java.lang">getDeclaringClass</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#hashCode--" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#name--" title="class or interface in java.lang">name</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#ordinal--" title="class or interface in java.lang">ordinal</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#toString--" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html?is-external=true#valueOf-java.lang.Class-java.lang.String-" title="class or interface in java.lang">valueOf</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ ENUM CONSTANT DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="enum.constant.detail">
<!--   -->
</a>
<h3>Enum Constant Detail</h3>
<a name="MethodCall">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MethodCall</h4>
<pre>public static final&nbsp;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a> MethodCall</pre>
<div class="block">The app calls the method</div>
</li>
</ul>
<a name="Callback">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Callback</h4>
<pre>public static final&nbsp;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a> Callback</pre>
<div class="block">The method is a callback that is invoked by the Android operating system</div>
</li>
</ul>
<a name="Return">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Return</h4>
<pre>public static final&nbsp;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a> Return</pre>
<div class="block">All return values in the method are considered (only supported as sink)</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="values--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>values</h4>
<pre>public static&nbsp;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a>[]&nbsp;values()</pre>
<div class="block">Returns an array containing the constants of this enum type, in
the order they are declared.  This method may be used to iterate
over the constants as follows:
<pre>
for (MethodSourceSinkDefinition.CallType c : MethodSourceSinkDefinition.CallType.values())
&nbsp;   System.out.println(c);
</pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>an array containing the constants of this enum type, in the order they are declared</dd>
</dl>
</li>
</ul>
<a name="valueOf-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>valueOf</h4>
<pre>public static&nbsp;<a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" title="enum in soot.jimple.infoflow.sourcesSinks.definitions">MethodSourceSinkDefinition.CallType</a>&nbsp;valueOf(<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;name)</pre>
<div class="block">Returns the enum constant of this type with the specified name.
The string must match <i>exactly</i> an identifier used to declare an
enum constant in this type.  (Extraneous whitespace characters are 
not permitted.)</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>name</code> - the name of the enum constant to be returned.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the enum constant with the specified name</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</a></code> - if this enum type has no constant with the specified name</dd>
<dd><code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</a></code> - if the argument is null</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MethodSourceSinkDefinition.CallType.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.html" title="class in soot.jimple.infoflow.sourcesSinks.definitions"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../../../soot/jimple/infoflow/sourcesSinks/definitions/NullSourceSinkDefinitionProvider.html" title="class in soot.jimple.infoflow.sourcesSinks.definitions"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?soot/jimple/infoflow/sourcesSinks/definitions/MethodSourceSinkDefinition.CallType.html" target="_top">Frames</a></li>
<li><a href="MethodSourceSinkDefinition.CallType.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#enum.constant.summary">Enum Constants</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#enum.constant.detail">Enum Constants</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small>Copyright &#169; 2019. All rights reserved.</small></p>
</body>
</html>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          s.alltheapps.views.swipeable.HorizontallySwipeableLayout$HorizontallyScrollingManipulator: void <init>(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout,android.content.Context)>":["<java.lang.Object: void <init>()>","<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout$HorizontallyScrollingManipulator$1: void <init>(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout$HorizontallyScrollingManipulator)>","<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector: void setScrollListener(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector$OnHorizontallyScrollListener)>","<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector: void <init>(android.content.Context)>"],"<com.rufuslabs.alltheapps.AllTheAppsLayout$5: void <init>(com.rufuslabs.alltheapps.AllTheAppsLayout)>":["<java.lang.Object: void <init>()>"],"<com.rufuslabs.alltheapps.views.pages.AppInfoView: void <init>(android.content.Context)>":["<android.widget.TextView: void setTextColor(int)>","<com.rufuslabs.alltheapps.views.pages.AppInfoView$1: void <init>(com.rufuslabs.alltheapps.views.pages.AppInfoView)>","<android.widget.TextView: void setText(java.lang.CharSequence)>","<android.view.ViewGroup$LayoutParams: void <init>(int,int)>","<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>","<android.widget.TextView: void setGravity(int)>","<android.widget.ImageView: void setDrawingCacheEnabled(boolean)>","<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>","<android.widget.TextView: void setLines(int)>","<android.widget.LinearLayout: void setOrientation(int)>","<android.widget.LinearLayout: void addView(android.view.View)>","<android.widget.ImageView$ScaleType: void <clinit>()>","<android.widget.LinearLayout: void setGravity(int)>","<android.widget.TextView: void <init>(android.content.Context)>","<android.widget.LinearLayout: void <init>(android.content.Context)>","<android.widget.ImageView: void setImageResource(int)>","<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>","<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>","<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>","<android.widget.ImageView: void <init>(android.content.Context)>","<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>"],"<java.lang.Object: java.lang.Class getClass()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: boolean addAppInfoToFavorites(com.rufuslabs.alltheapps.managers.benns.AppInfo)>":["<com.rufuslabs.alltheapps.managers.benns.AppInfo: java.lang.String getPkg()>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: org.json.JSONObject toJSONObject()>","<org.json.JSONObject: java.lang.String getString(java.lang.String)>","<org.json.JSONArray: java.lang.String toString()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void putAppsLayouts(java.util.List)>","<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>","<org.json.JSONArray: int length()>","<org.json.JSONArray: void <init>(java.lang.String)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List loadAppsLayouts()>","<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>","<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"],"<java.lang.RuntimeException: void <init>(java.lang.String)>":["<java.lang.Exception: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingTop()>":["<android.view.ViewGroup: android.content.res.Resources getResources()>","<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void putAppsLayouts(java.util.List)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<org.json.JSONArray: java.lang.String toString()>","<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>","<org.json.JSONArray: void <init>()>","<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"],"<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector$GestureListener: void <init>(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector,com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector$GestureListener)>":["<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector$GestureListener: void <init>(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector)>"],"<dummyMainClass: com.rufuslabs.alltheapps.AllTheAppsActivity$PagesRefreshBroadcast dummyMainMethod_AllTheAppsActivity$PagesRefreshBroadcast(android.content.Intent)>":["<com.rufuslabs.alltheapps.AllTheAppsActivity$PagesRefreshBroadcast: void <init>(com.rufuslabs.alltheapps.AllTheAppsActivity)>","<com.rufuslabs.alltheapps.AllTheAppsActivity: void <init>()>","<com.rufuslabs.alltheapps.AllTheAppsActivity$PagesRefreshBroadcast: void onReceive(android.content.Context,android.content.Intent)>"],"<dummyMainClass: com.rufuslabs.alltheapps.AllTheAppsActivity dummyMainMethod_AllTheAppsActivity(android.content.Intent)>":["<com.rufuslabs.alltheapps.AllTheAppsActivity: void onPause()>","<com.rufuslabs.alltheapps.views.pages.AppsPage$1: boolean onLongClick(android.view.View)>","<com.rufuslabs.alltheapps.views.pages.AppsPage$1: void <init>(com.rufuslabs.alltheapps.views.pages.AppsPage)>","<com.rufuslabs.alltheapps.managers.AppPagesManager$AppPagesManagerState: void <init>()>","<com.rufuslabs.alltheapps.views.pages.AppsPage: void <init>(android.content.Context)>","<com.rufuslabs.alltheapps.AllTheAppsActivity: boolean onCreateOptionsMenu(android.view.Menu)>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: void <init>()>","<com.rufuslabs.alltheapps.views.pages.AppInfoView$2: void onClick(android.view.View)>","<com.rufuslabs.alltheapps.views.pages.AppInfoView$2: void <init>(com.rufuslabs.alltheapps.views.pages.AppInfoView,com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<com.rufuslabs.alltheapps.AllTheAppsActivity: void <init>()>","<com.rufuslabs.alltheapps.AllTheAppsActivity: void onCreate(android.os.Bundle)>","<com.rufuslabs.alltheapps.AllTheAppsActivity: void onStop()>","<com.rufuslabs.alltheapps.AllTheAppsActivity: void onStart()>","<com.rufuslabs.alltheapps.views.pages.AppInfoView: void <init>(android.content.Context)>","<com.rufuslabs.alltheapps.managers.AppPagesManager$AppPagesManagerState: void onCreate(android.os.Bundle)>","<com.rufuslabs.alltheapps.AllTheAppsActivity: void onResume()>"],"<org.json.JSONArray: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.AllTheAppsActivity: void onStart()>":["<android.content.IntentFilter: void <init>(java.lang.String)>","<com.rufuslabs.alltheapps.views.AppsPanel: void reloadPages()>","<android.app.Activity: void onStart()>","<android.content.IntentFilter: void <clinit>()>","<android.view.ContextThemeWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>"],"<java.lang.String: java.lang.String valueOf(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.AllTheAppsLayout$1: void <init>(com.rufuslabs.alltheapps.AllTheAppsLayout)>":["<java.lang.Object: void <init>()>"],"<org.json.JSONObject: java.lang.String getString(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.managers.SystemAppsDBHelper: boolean isDefaultSystemApp(java.lang.String)>":["<com.rufuslabs.alltheapps.managers.SystemAppsDBHelper: com.rufuslabs.alltheapps.managers.SystemAppsDBHelper$SystemAppRecord get(java.lang.String)>"],"<com.rufuslabs.alltheapps.views.AppsPanel: void initViews(android.content.Context,int)>":["<com.rufuslabs.alltheapps.views.AppsPanel$1: void <init>(com.rufuslabs.alltheapps.views.AppsPanel)>","<android.view.ViewGroup$LayoutParams: void <init>(int,int)>","<android.view.View: void setBackgroundColor(int)>","<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>","<com.rufuslabs.alltheapps.views.PageIndicator: void <init>(android.content.Context,com.rufuslabs.alltheapps.views.PageIndicator$Pageable,int)>","<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: void <init>(android.content.Context,int)>","<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>","<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: void setOnPageTurnListener(com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller$OnPageTurnListener)>"],"<org.json.JSONArray: int length()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void upgrade()>":["<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"],"<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.views.PageIndicator: void <init>(android.content.Context,com.rufuslabs.alltheapps.views.PageIndicator$Pageable,int)>":["<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>","<android.graphics.Paint: void setAlpha(int)>","<android.view.View: void <init>(android.content.Context)>","<android.view.View: void setBackgroundColor(int)>","<android.graphics.Paint: void <init>()>","<com.rufuslabs.alltheapps.views.PageIndicator: int getDefaultMargin()>","<com.rufuslabs.alltheapps.views.PageIndicator: int getDefaultRadius()>","<android.graphics.Paint$Style: void <clinit>()>","<android.graphics.Paint: void setAntiAlias(boolean)>"],"<com.rufuslabs.alltheapps.AllTheAppsLayout$5: void onAppsPageLoaded(com.rufuslabs.alltheapps.views.pages.AppsPage)>":["<com.rufuslabs.alltheapps.hoover.HooverListenedViewFactory: void setViewHooverable(android.view.View,boolean)>","<com.rufuslabs.alltheapps.AllTheAppsLayout$5$2: void <init>(com.rufuslabs.alltheapps.AllTheAppsLayout$5)>","<com.rufuslabs.alltheapps.hoover.HooverListenedViewFactory: void setViewGroupPropagatable(android.view.ViewGroup,boolean)>","<com.rufuslabs.alltheapps.AllTheAppsLayout$5$1: void <init>(com.rufuslabs.alltheapps.AllTheAppsLayout$5)>","<com.rufuslabs.alltheapps.hoover.HooverListenedViewFactory: void applyHooverListener(android.view.View,com.rufuslabs.alltheapps.hoover.HooverListenedViewFactory$OnHooverListener)>","<com.rufuslabs.alltheapps.AllTheAppsLayout$5$3: void <init>(com.rufuslabs.alltheapps.AllTheAppsLayout$5)>"],"<com.rufuslabs.alltheapps.AllTheAppsLayout: void <init>(android.content.Context,com.rufuslabs.alltheapps.managers.AppPagesManager,int)>":["<com.rufuslabs.alltheapps.views.AppsPanel: void <init>(android.content.Context,com.rufuslabs.alltheapps.managers.AppPagesManager,int)>"],"<com.rufuslabs.alltheapps.AllTheAppsActivity$PagesRefreshBroadcast: void <init>(com.rufuslabs.alltheapps.AllTheAppsActivity)>":["<android.content.BroadcastReceiver: void <init>()>"],"<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingLeft()>":["<android.view.ViewGroup: android.content.res.Resources getResources()>","<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>"],"<com.rufuslabs.alltheapps.managers.AppPagesManager: void <init>(android.content.Context,com.rufuslabs.alltheapps.managers.AppPagesManager$AppPagesManagerState)>":["<android.content.BroadcastReceiver: void <init>()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <clinit>()>","<com.rufuslabs.alltheapps.managers.AppPagesManager: void setCurrentlyDisplayed(int)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <init>(android.content.Context)>"],"<com.rufuslabs.alltheapps.managers.AppPagesManager: void onReceive(android.content.Context,android.content.Intent)>":["<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List addAppInfo(com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: boolean addAppInfoToFavorites(com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: java.lang.String getAppLabel()>","<android.content.Intent: void <init>(java.lang.String)>","<java.lang.StringBuilder: void <init>(java.lang.String)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void upgrade()>","<android.content.Intent: java.lang.String getAction()>","<java.lang.StringBuilder: java.lang.String toString()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <clinit>()>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: void <init>(android.content.pm.PackageManager,java.lang.String)>","<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>","<java.lang.String: void <clinit>()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: boolean removeAppInfoFromFavorites(com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void removeAppInfo(java.lang.String)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <init>(android.content.Context)>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<android.content.Intent: android.net.Uri getData()>","<android.content.Intent: void <clinit>()>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper$1: void <init>(com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper,android.content.pm.PackageManager)>":["<java.lang.Object: void <init>()>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void removeAppInfo(java.lang.String)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void putAppsLayouts(java.util.List)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List loadAppsLayouts()>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <init>(android.content.Context)>":["<java.lang.Object: void <init>()>"],"<com.rufuslabs.alltheapps.views.pages.AppInfoView: void <init>(android.content.Context,com.rufuslabs.alltheapps.managers.benns.AppInfo)>":["<android.widget.ImageView: void setScaleY(float)>","<android.widget.TextView: void setText(java.lang.CharSequence)>","<android.widget.ImageView: void setScaleX(float)>","<com.rufuslabs.alltheapps.views.pages.AppInfoView$2: void <init>(com.rufuslabs.alltheapps.views.pages.AppInfoView,com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<android.widget.ImageView: void setMinimumHeight(int)>","<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>","<android.widget.TextView: void setTextSize(float)>","<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>","<com.rufuslabs.alltheapps.views.pages.AppInfoView: void <init>(android.content.Context)>"],"<org.json.JSONObject: void <init>()>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<java.lang.Object: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Object: void finalize()>"],"<org.json.JSONObject: void <clinit>()>":["<org.json.JSONObject: void <clinit>()>"],"<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: void setPageDisplayed(int)>":["<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: int getGravity()>","<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: int getTotalPages()>","<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: void setCurrentlyDisplayed(int)>"],"<com.rufuslabs.alltheapps.managers.benns.AppInfo: void <init>(android.content.pm.PackageManager,android.content.pm.ResolveInfo)>":["<java.lang.Object: void <init>()>"],"<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: int getTotalPages()>":["<android.widget.FrameLayout: int getChildCount()>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List loadAppsLayouts()>":["<com.rufuslabs.alltheapps.managers.benns.AppInfo: void <init>(org.json.JSONObject)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <clinit>()>","<org.json.JSONArray: java.lang.Object get(int)>","<java.util.ArrayList: void <init>()>","<org.json.JSONArray: int length()>","<com.rufuslabs.alltheapps.managers.benns.AppsLayout: void <init>(org.json.JSONArray)>","<org.json.JSONArray: void <init>(java.lang.String)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.rufuslabs.alltheapps.managers.benns.AppsLayout: boolean add(com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<com.rufuslabs.alltheapps.managers.benns.AppsLayout: void <init>(int,int)>","<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>","<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"],"<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout$HorizontallyScrollingManipulator$1: void <init>(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout$HorizontallyScrollingManipulator)>":["<android.os.Handler: void <init>()>"],"<com.rufuslabs.alltheapps.views.pages.AppsPage: void init()>":["<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingRight()>","<android.view.ViewGroup: void setPadding(int,int,int,int)>","<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingTop()>","<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingLeft()>","<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingBottom()>","<android.view.ViewGroup: void setBackgroundColor(int)>"],"<com.rufuslabs.alltheapps.views.pages.AppsPage: int getPagePaddingBottom()>":["<android.view.ViewGroup: android.content.res.Resources getResources()>","<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>"],"<com.rufuslabs.alltheapps.AllTheAppsActivity: void onStop()>":["<android.view.ContextThemeWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>","<android.app.Activity: void onStop()>"],"<com.rufuslabs.alltheapps.views.swipeable.AppsPageScroller: void <init>(android.content.Context,int)>":["<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout: void <init>(android.content.Context)>","<java.util.ArrayList: void <init>()>"],"<com.rufuslabs.alltheapps.managers.AppPagesManager: int getCurrentlyDisplayed()>":["<com.rufuslabs.alltheapps.managers.AppPagesManager$AppPagesManagerState: int access$4(com.rufuslabs.alltheapps.managers.AppPagesManager$AppPagesManagerState)>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List addAppInfo(com.rufuslabs.alltheapps.managers.benns.AppInfo)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void <clinit>()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void putAppsLayouts(java.util.List)>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List loadAppsLayouts()>","<com.rufuslabs.alltheapps.managers.benns.AppsLayout: boolean add(com.rufuslabs.alltheapps.managers.benns.AppInfo)>","<com.rufuslabs.alltheapps.managers.benns.AppsLayout: void <init>(int,int)>"],"<com.rufuslabs.alltheapps.views.pages.AppsPage: void addAppInfoView(com.rufuslabs.alltheapps.views.pages.AppInfoView)>":["<android.view.ViewGroup: void addView(android.view.View)>","<com.rufuslabs.alltheapps.views.pages.AppsPage$1: void <init>(com.rufuslabs.alltheapps.views.pages.AppsPage)>","<android.widget.LinearLayout: void setOnLongClickListener(android.view.View$OnLongClickListener)>","<android.widget.LinearLayout: void setDrawingCacheEnabled(boolean)>"],"<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout: void <init>(android.content.Context)>":["<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeableLayout: void init()>","<android.widget.FrameLayout: void <init>(android.content.Context)>"],"<com.rufuslabs.alltheapps.managers.AppPagesManager: void store()>":["<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void putAppsLayouts(java.util.List)>","<com.rufuslabs.alltheapps.managers.AppPagesManager$AppPagesManagerState: java.util.List getAppsLayouts()>"],"<org.json.JSONArray: void <init>(java.lang.String)>":["<java.lang.Object: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: boolean removeAppInfoFromFavorites(com.rufuslabs.alltheapps.managers.benns.AppInfo)>":["<java.lang.Object: java.lang.Class getClass()>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: java.lang.String getPkg()>","<org.json.JSONArray: java.lang.Object remove(int)>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: void setCls(java.lang.String)>","<org.json.JSONArray: java.lang.String toString()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: void putAppsLayouts(java.util.List)>","<org.json.JSONArray: void <init>(java.lang.String)>","<org.json.JSONArray: int length()>","<com.rufuslabs.alltheapps.managers.AppsLayoutDBHelper: java.util.List loadAppsLayouts()>","<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>","<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"],"<com.rufuslabs.alltheapps.views.pages.AppInfoView$2: void onClick(android.view.View)>":["<com.rufuslabs.alltheapps.managers.benns.AppInfo: java.lang.String getPkg()>","<android.content.Intent: android.content.Intent setFlags(int)>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: java.lang.String getCls()>","<com.rufuslabs.alltheapps.managers.benns.AppInfo: boolean isEmpty()>","<android.content.Intent: void <init>()>","<android.content.ComponentName: void <clinit>()>","<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>","<android.app.Activity: void startActivity(android.content.Intent)>","<com.rufuslabs.alltheapps.views.pages.AppInfoView: android.content.Context access$1(com.rufuslabs.alltheapps.views.pages.AppInfoView)>","<com.rufuslabs.alltheapps.views.pages.AppInfoView: com.rufuslabs.alltheapps.managers.benns.AppInfo access$0(com.rufuslabs.alltheapps.views.pages.AppInfoView)>","<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>","<android.content.Intent: void <clinit>()>"],"<com.rufuslabs.alltheapps.AllTheAppsLayout$5$3: void <init>(com.rufuslabs.alltheapps.AllTheAppsLayout$5)>":["<java.lang.Object: void <init>()>"],"<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector$GestureDetector: void <init>(com.rufuslabs.alltheapps.views.swipeable.HorizontallySwipeDetector$GestureListener)>":["<java.lang.Object: void <init>()>"]}