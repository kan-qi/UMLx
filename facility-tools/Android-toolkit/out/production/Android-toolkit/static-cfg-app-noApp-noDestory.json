<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Jan 14 00:51:14 PST 2019 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>InfoflowConfiguration.PathConfiguration (soot-infoflow 2.6.1 API)</title>
<meta name="date" content="2019-01-14">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="InfoflowConfiguration.PathConfiguration (soot-infoflow 2.6.1 API)";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/InfoflowConfiguration.PathConfiguration.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathBuildingAlgorithm.html" title="enum in soot.jimple.infoflow"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathReconstructionMode.html" title="enum in soot.jimple.infoflow"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html" target="_top">Frames</a></li>
<li><a href="InfoflowConfiguration.PathConfiguration.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">soot.jimple.infoflow</div>
<h2 title="Class InfoflowConfiguration.PathConfiguration" class="title">Class InfoflowConfiguration.PathConfiguration</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>soot.jimple.infoflow.InfoflowConfiguration.PathConfiguration</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Enclosing class:</dt>
<dd><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.html" title="class in soot.jimple.infoflow">InfoflowConfiguration</a></dd>
</dl>
<hr>
<br>
<pre>public static class <span class="typeNameLabel">InfoflowConfiguration.PathConfiguration</span>
extends <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre>
<div class="block">The configuration that defines how FlowDroid shall handle between sources and
 sinks</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Steven Arzt</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#PathConfiguration--">PathConfiguration</a></span>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#equals-java.lang.Object-">equals</a></span>(<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;obj)</code>&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getMaxCallStackSize--">getMaxCallStackSize</a></span>()</code>
<div class="block">Gets the maximum call stack size.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getMaxPathLength--">getMaxPathLength</a></span>()</code>
<div class="block">Gets the maximum size for taint propagation paths.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getMaxPathsPerAbstraction--">getMaxPathsPerAbstraction</a></span>()</code>
<div class="block">Gets the maximum number of paths that shall be recorded per abstraction.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathBuildingAlgorithm.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathBuildingAlgorithm</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getPathBuildingAlgorithm--">getPathBuildingAlgorithm</a></span>()</code>
<div class="block">Gets the algorithm that shall be used for reconstructing the propagation
 paths between source and sink</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getPathReconstructionBatchSize--">getPathReconstructionBatchSize</a></span>()</code>
<div class="block">Gets the number of paths that shall be reconstructed in one batch.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathReconstructionMode.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathReconstructionMode</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getPathReconstructionMode--">getPathReconstructionMode</a></span>()</code>
<div class="block">Gets the mode that defines how the paths between sources and sinks shall be
 reconstructed</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getPathReconstructionTimeout--">getPathReconstructionTimeout</a></span>()</code>
<div class="block">Gets the timeout in seconds after which path reconstruction shall be aborted.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#getSequentialPathProcessing--">getSequentialPathProcessing</a></span>()</code>
<div class="block">Gets whether FlowDroid shall perform sequential path reconstruction instead
 of running all reconstruction tasks concurrently.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#hashCode--">hashCode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#merge-soot.jimple.infoflow.InfoflowConfiguration.PathConfiguration-">merge</a></span>(<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html" title="class in soot.jimple.infoflow">InfoflowConfiguration.PathConfiguration</a>&nbsp;pathConfig)</code>
<div class="block">Copies the settings of the given configuration into this configuration object</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#mustKeepStatements--">mustKeepStatements</a></span>()</code>
<div class="block">Gets whether the analysis must keep statements along the path</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setMaxCallStackSize-int-">setMaxCallStackSize</a></span>(int&nbsp;maxCallStackSize)</code>
<div class="block">Sets the maximum call stack size.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setMaxPathLength-int-">setMaxPathLength</a></span>(int&nbsp;maxPathLength)</code>
<div class="block">Sets the maximum size for taint propagation paths.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setMaxPathsPerAbstraction-int-">setMaxPathsPerAbstraction</a></span>(int&nbsp;maxPathsPerAbstraction)</code>
<div class="block">Sets the maximum number of paths that shall be recorded per abstraction.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setPathBuildingAlgorithm-soot.jimple.infoflow.InfoflowConfiguration.PathBuildingAlgorithm-">setPathBuildingAlgorithm</a></span>(<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathBuildingAlgorithm.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathBuildingAlgorithm</a>&nbsp;pathBuildingAlgorithm)</code>
<div class="block">Sets the algorithm that shall be used for reconstructing the propagation
 paths between source and sink</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setPathReconstructionBatchSize-int-">setPathReconstructionBatchSize</a></span>(int&nbsp;pathReconstructionBatchSize)</code>
<div class="block">Sets the number of paths that shall be reconstructed in one batch.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setPathReconstructionMode-soot.jimple.infoflow.InfoflowConfiguration.PathReconstructionMode-">setPathReconstructionMode</a></span>(<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathReconstructionMode.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathReconstructionMode</a>&nbsp;pathReconstructionMode)</code>
<div class="block">Sets the mode that defines how the paths between sources and sinks shall be
 reconstructed</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setPathReconstructionTimeout-long-">setPathReconstructionTimeout</a></span>(long&nbsp;timeout)</code>
<div class="block">Sets the timeout in seconds after which path reconstruction shall be aborted.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html#setSequentialPathProcessing-boolean-">setSequentialPathProcessing</a></span>(boolean&nbsp;sequentialPathProcessing)</code>
<div class="block">Sets whether FlowDroid shall perform sequential path reconstruction instead
 of running all reconstruction tasks concurrently.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone--" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="PathConfiguration--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>PathConfiguration</h4>
<pre>public&nbsp;PathConfiguration()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="merge-soot.jimple.infoflow.InfoflowConfiguration.PathConfiguration-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>merge</h4>
<pre>public&nbsp;void&nbsp;merge(<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html" title="class in soot.jimple.infoflow">InfoflowConfiguration.PathConfiguration</a>&nbsp;pathConfig)</pre>
<div class="block">Copies the settings of the given configuration into this configuration object</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pathConfig</code> - The other configuration object</dd>
</dl>
</li>
</ul>
<a name="getSequentialPathProcessing--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSequentialPathProcessing</h4>
<pre>public&nbsp;boolean&nbsp;getSequentialPathProcessing()</pre>
<div class="block">Gets whether FlowDroid shall perform sequential path reconstruction instead
 of running all reconstruction tasks concurrently. This can reduce the memory
 consumption, but will likely take longer when memory is not an issue.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>True if the path reconstruction tasks shall be run sequentially,
         false for running them in parallel</dd>
</dl>
</li>
</ul>
<a name="setSequentialPathProcessing-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSequentialPathProcessing</h4>
<pre>public&nbsp;void&nbsp;setSequentialPathProcessing(boolean&nbsp;sequentialPathProcessing)</pre>
<div class="block">Sets whether FlowDroid shall perform sequential path reconstruction instead
 of running all reconstruction tasks concurrently. This can reduce the memory
 consumption, but will likely take longer when memory is not an issue.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sequentialPathProcessing</code> - True if the path reconstruction tasks shall
                                 be run sequentially, false for running them
                                 in parallel</dd>
</dl>
</li>
</ul>
<a name="getPathReconstructionMode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPathReconstructionMode</h4>
<pre>public&nbsp;<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathReconstructionMode.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathReconstructionMode</a>&nbsp;getPathReconstructionMode()</pre>
<div class="block">Gets the mode that defines how the paths between sources and sinks shall be
 reconstructed</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The mode that defines how the paths between sources and sinks shall
         be reconstructed</dd>
</dl>
</li>
</ul>
<a name="setPathReconstructionMode-soot.jimple.infoflow.InfoflowConfiguration.PathReconstructionMode-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPathReconstructionMode</h4>
<pre>public&nbsp;void&nbsp;setPathReconstructionMode(<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathReconstructionMode.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathReconstructionMode</a>&nbsp;pathReconstructionMode)</pre>
<div class="block">Sets the mode that defines how the paths between sources and sinks shall be
 reconstructed</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pathReconstructionMode</code> - The mode that defines how the paths between
                               sources and sinks shall be reconstructed</dd>
</dl>
</li>
</ul>
<a name="getPathBuildingAlgorithm--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPathBuildingAlgorithm</h4>
<pre>public&nbsp;<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathBuildingAlgorithm.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathBuildingAlgorithm</a>&nbsp;getPathBuildingAlgorithm()</pre>
<div class="block">Gets the algorithm that shall be used for reconstructing the propagation
 paths between source and sink</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The algorithm that shall be used for reconstructing the propagation
         paths between source and sink</dd>
</dl>
</li>
</ul>
<a name="setPathBuildingAlgorithm-soot.jimple.infoflow.InfoflowConfiguration.PathBuildingAlgorithm-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPathBuildingAlgorithm</h4>
<pre>public&nbsp;void&nbsp;setPathBuildingAlgorithm(<a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathBuildingAlgorithm.html" title="enum in soot.jimple.infoflow">InfoflowConfiguration.PathBuildingAlgorithm</a>&nbsp;pathBuildingAlgorithm)</pre>
<div class="block">Sets the algorithm that shall be used for reconstructing the propagation
 paths between source and sink</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pathBuildingAlgorithm</code> - The algorithm that shall be used for
                              reconstructing the propagation paths between
                              source and sink</dd>
</dl>
</li>
</ul>
<a name="setMaxCallStackSize-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMaxCallStackSize</h4>
<pre>public&nbsp;void&nbsp;setMaxCallStackSize(int&nbsp;maxCallStackSize)</pre>
<div class="block">Sets the maximum call stack size. If the call stack grows longer than this
 amount of entries, the respective path will no longer be followed.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>maxCallStackSize</code> - The maximum call stack size</dd>
</dl>
</li>
</ul>
<a name="getMaxCallStackSize--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxCallStackSize</h4>
<pre>public&nbsp;int&nbsp;getMaxCallStackSize()</pre>
<div class="block">Gets the maximum call stack size. If the call stack grows longer than this
 amount of entries, the respective path will no longer be followed.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The maximum call stack size</dd>
</dl>
</li>
</ul>
<a name="getMaxPathLength--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxPathLength</h4>
<pre>public&nbsp;int&nbsp;getMaxPathLength()</pre>
<div class="block">Gets the maximum size for taint propagation paths. If a path is growing
 longer than this limit, the path reconstruction is aborted and the respective
 path is skipped.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The maximum length of a taint propagtation path3</dd>
</dl>
</li>
</ul>
<a name="setMaxPathLength-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMaxPathLength</h4>
<pre>public&nbsp;void&nbsp;setMaxPathLength(int&nbsp;maxPathLength)</pre>
<div class="block">Sets the maximum size for taint propagation paths. If a path is growing
 longer than this limit, the path reconstruction is aborted and the respective
 path is skipped.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>maxPathLenfgth</code> - The maximum length of a taint propagtation path3</dd>
</dl>
</li>
</ul>
<a name="getMaxPathsPerAbstraction--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxPathsPerAbstraction</h4>
<pre>public&nbsp;int&nbsp;getMaxPathsPerAbstraction()</pre>
<div class="block">Gets the maximum number of paths that shall be recorded per abstraction. If
 this threshold is reached, all further paths will be discarded.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The maximum number of paths that shall be recorded per abstraction.</dd>
</dl>
</li>
</ul>
<a name="setMaxPathsPerAbstraction-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMaxPathsPerAbstraction</h4>
<pre>public&nbsp;void&nbsp;setMaxPathsPerAbstraction(int&nbsp;maxPathsPerAbstraction)</pre>
<div class="block">Sets the maximum number of paths that shall be recorded per abstraction. If
 this threshold is reached, all further paths will be discarded.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>maxPathsPerAbstraction</code> - The maximum number of paths that shall be
                               recorded per abstraction.</dd>
</dl>
</li>
</ul>
<a name="getPathReconstructionTimeout--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPathReconstructionTimeout</h4>
<pre>public&nbsp;long&nbsp;getPathReconstructionTimeout()</pre>
<div class="block">Gets the timeout in seconds after which path reconstruction shall be aborted.
 This timeout is applied after the data flow analysis has been completed. If
 incremental path reconstruction is used, it is applied for the remaining path
 reconstruction after the data flow analysis has been completed. If
 incremental path reconstruction is not used, the timeout is applied to the
 complete path reconstruction phase, because it does not overlap with the data
 flow analysis phase in this case.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The timeout in seconds after which the path reconstruction shall be
         aborted</dd>
</dl>
</li>
</ul>
<a name="setPathReconstructionTimeout-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPathReconstructionTimeout</h4>
<pre>public&nbsp;void&nbsp;setPathReconstructionTimeout(long&nbsp;timeout)</pre>
<div class="block">Sets the timeout in seconds after which path reconstruction shall be aborted.
 This timeout is applied after the data flow analysis has been completed. If
 incremental path reconstruction is used, it is applied for the remaining path
 reconstruction after the data flow analysis has been completed. If
 incremental path reconstruction is not used, the timeout is applied to the
 complete path reconstruction phase, because it does not overlap with the data
 flow analysis phase in this case.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>timeout</code> - The timeout in seconds after which the path reconstruction
                shall be aborted</dd>
</dl>
</li>
</ul>
<a name="getPathReconstructionBatchSize--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPathReconstructionBatchSize</h4>
<pre>public&nbsp;int&nbsp;getPathReconstructionBatchSize()</pre>
<div class="block">Gets the number of paths that shall be reconstructed in one batch. Reduce
 this value to lower memory pressure during path reconstruction.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The number of paths that shall be reconstructed in one batch</dd>
</dl>
</li>
</ul>
<a name="setPathReconstructionBatchSize-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPathReconstructionBatchSize</h4>
<pre>public&nbsp;void&nbsp;setPathReconstructionBatchSize(int&nbsp;pathReconstructionBatchSize)</pre>
<div class="block">Sets the number of paths that shall be reconstructed in one batch. Reduce
 this value to lower memory pressure during path reconstruction.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pathReconstructionBatchSize</code> - The number of paths that shall be
                                    reconstructed in one batch</dd>
</dl>
</li>
</ul>
<a name="mustKeepStatements--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mustKeepStatements</h4>
<pre>public&nbsp;boolean&nbsp;mustKeepStatements()</pre>
<div class="block">Gets whether the analysis must keep statements along the path</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>True if the analysis must keep statements along th path, false
         otherwise</dd>
</dl>
</li>
</ul>
<a name="hashCode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hashCode</h4>
<pre>public&nbsp;int&nbsp;hashCode()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang">hashCode</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></code></dd>
</dl>
</li>
</ul>
<a name="equals-java.lang.Object-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>equals</h4>
<pre>public&nbsp;boolean&nbsp;equals(<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;obj)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang">equals</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/InfoflowConfiguration.PathConfiguration.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathBuildingAlgorithm.html" title="enum in soot.jimple.infoflow"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../soot/jimple/infoflow/InfoflowConfiguration.PathReconstructionMode.html" title="enum in soot.jimple.infoflow"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?soot/jimple/infoflow/InfoflowConfiguration.PathConfiguration.html" target="_top">Frames</a></li>
<li><a href="InfoflowConfiguration.PathConfiguration.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small>Copyright &#169; 2019. All rights reserved.</small></p>
</body>
</html>
                                                                                                                                                                                                                                                                                                                                                                                                                                            ()>","<com.jaredrummler.android.processes.models.ProcFile: void <clinit>()>","<java.io.File: void <clinit>()>","<com.jaredrummler.android.processes.models.Cgroup$1: void <init>()>"],"<com.astuetz.PagerSlidingTabStrip$PageListener: void <init>(com.astuetz.PagerSlidingTabStrip,com.astuetz.PagerSlidingTabStrip$1)>":["<com.astuetz.PagerSlidingTabStrip$PageListener: void <init>(com.astuetz.PagerSlidingTabStrip)>"],"<zyqu.com.boostdroid.module.Connectivity: boolean isConnected(android.content.Context)>":["<zyqu.com.boostdroid.module.Connectivity: android.net.NetworkInfo getNetworkInfo(android.content.Context)>"],"<java.lang.Throwable: java.lang.String toString()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<zyqu.com.boostdroid.database.SharedPreferenceManager: android.content.SharedPreferences getSharedPreference(android.content.Context)>":["<zyqu.com.boostdroid.database.SharedPreferenceManager: void <clinit>()>"],"<dummyMainClass: zyqu.com.boostdroid.LongService dummyMainMethod_LongService(android.content.Intent)>":["<zyqu.com.boostdroid.LongService: void <init>()>","<zyqu.com.boostdroid.LongService: boolean onUnbind(android.content.Intent)>","<zyqu.com.boostdroid.LongService: int onStartCommand(android.content.Intent,int,int)>","<zyqu.com.boostdroid.LongService: android.os.IBinder onBind(android.content.Intent)>","<zyqu.com.boostdroid.LongService: void <clinit>()>","<zyqu.com.boostdroid.LongService: void onDestroy()>"],"<com.astuetz.pagerslidingtabstrip.R$styleable: void <clinit>()>":["<com.astuetz.pagerslidingtabstrip.R$styleable: void <clinit>()>"],"<zyqu.com.boostdroid.LongService: void <init>()>":["<zyqu.com.boostdroid.LongService$1: void <init>(zyqu.com.boostdroid.LongService)>","<zyqu.com.boostdroid.LongService$LocalBinder: void <init>(zyqu.com.boostdroid.LongService)>","<android.os.Handler: void <init>()>","<android.app.Service: void <init>()>"],"<java.lang.Object: void <init>()>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Object: void finalize()>"],"<zyqu.com.boostdroid.ProcessManager: void <clinit>()>":["<zyqu.com.boostdroid.ProcessManager: void <clinit>()>"],"<zyqu.com.boostdroid.Receiver.SleepReceiver: boolean access$300(zyqu.com.boostdroid.Receiver.SleepReceiver)>":["<zyqu.com.boostdroid.Receiver.SleepReceiver: boolean isScreenOn()>"],"<java.lang.String: boolean startsWith(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<zyqu.com.boostdroid.database.UsageDBHandler: void <clinit>()>":["<zyqu.com.boostdroid.database.UsageDBHandler: void <clinit>()>"],"<zyqu.com.boostdroid.Receiver.SleepReceiver: void onReceive(android.content.Context,android.content.Intent)>":["<zyqu.com.boostdroid.ProcessManager: void <init>()>","<zyqu.com.boostdroid.database.SharedPreferenceManager: boolean getAutoBoost(android.content.Context)>","<android.util.Log: int d(java.lang.String,java.lang.String)>","<zyqu.com.boostdroid.ProcessManager: void <clinit>()>","<zyqu.com.boostdroid.Receiver.SleepReceiver: void startLog()>","<zyqu.com.boostdroid.Receiver.SleepReceiver: void stopLog()>","<java.lang.String: boolean equals(java.lang.Object)>","<zyqu.com.boostdroid.ProcessManager: void clearMemo(android.content.Context)>","<zyqu.com.boostdroid.Receiver.SleepReceiver: void <clinit>()>"],"<zyqu.com.boostdroid.Receiver.SleepReceiver: void <clinit>()>":["<zyqu.com.boostdroid.Receiver.SleepReceiver: void <clinit>()>"],"<com.jaredrummler.android.processes.models.Status: java.lang.String getValue(java.lang.String)>":["<java.lang.StringBuilder: java.lang.String toString()>","<java.lang.String: java.lang.String[] split(java.lang.String)>","<java.lang.String: boolean startsWith(java.lang.String)>","<java.lang.String: java.lang.String trim()>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"],"<java.lang.Exception: void <init>(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>"],"<com.jaredrummler.android.processes.models.AndroidProcess: com.jaredrummler.android.processes.models.Cgroup cgroup()>":["<com.jaredrummler.android.processes.models.Cgroup: com.jaredrummler.android.processes.models.Cgroup get(int)>","<com.jaredrummler.android.processes.models.Cgroup: void <clinit>()>","<com.jaredrummler.android.processes.models.ProcFile: void <clinit>()>","<java.io.File: void <clinit>()>"],"<zyqu.com.boostdroid.database.UsageDBHandler: void logUsage(java.util.List)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<zyqu.com.boostdroid.database.UsageDBHandler: void write2db(com.jaredrummler.android.processes.models.AndroidAppProcess)>"],"<dummyMainClass: zyqu.com.boostdroid.MainActivity dummyMainMethod_MainActivity(android.content.Intent)>":["<android.view.View: void <clinit>()>","<zyqu.com.boostdroid.MainActivity: void onCreate(android.os.Bundle)>","<com.astuetz.PagerSlidingTabStrip: void <clinit>()>","<com.astuetz.PagerSlidingTabStrip: void onDraw(android.graphics.Canvas)>","<zyqu.com.boostdroid.MainActivity: void <init>()>","<com.astuetz.PagerSlidingTabStrip: void onRestoreInstanceState(android.os.Parcelable)>","<com.astuetz.PagerSlidingTabStrip: void <init>(android.content.Context)>","<com.astuetz.PagerSlidingTabStrip: android.os.Parcelable onSaveInstanceState()>"],"<com.jaredrummler.android.processes.models.Status: int getUid()>":["<java.lang.String: java.lang.String[] split(java.lang.String)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<com.jaredrummler.android.processes.models.Status: java.lang.String getValue(java.lang.String)>"],"<zyqu.com.boostdroid.MainActivity: void onCreate(android.os.Bundle)>":["<android.support.v7.app.AppCompatActivity: android.content.ComponentName startService(android.content.Intent)>","<android.support.v7.app.AppCompatActivity: void setContentView(int)>","<android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>","<android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)>","<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>","<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>","<android.content.Intent: void <clinit>()>","<zyqu.com.boostdroid.UI.MainFragmentPagerAdapter: void <init>(android.support.v4.app.FragmentManager)>"],"<zyqu.com.boostdroid.ProcessManager: void clearMemo(android.content.Context)>":["<android.util.Log: int d(java.lang.String,java.lang.String)>","<zyqu.com.boostdroid.ProcessManager: void <clinit>()>","<java.lang.StringBuilder: java.lang.String toString()>","<zyqu.com.boostdroid.ProcessManager: int getMemoAvail(android.content.Context)>","<java.util.ArrayList: java.util.Iterator iterator()>","<java.lang.String: boolean equals(java.lang.Object)>","<zyqu.com.boostdroid.ProcessManager: java.util.List getRunningApps(android.content.Context)>","<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>","<java.lang.StringBuilder: void <init>()>","<java.lang.StringBuilder: java.lang.StringBuilder append(int)>","<android.util.Log: int e(java.lang.String,java.lang.String)>","<java.lang.Throwable: java.lang.String toString()>"],"<java.lang.String: boolean equals(java.lang.Object)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<zyqu.com.boostdroid.ProcessManager: java.util.List getRunningApps(android.content.Context)>":["<java.util.ArrayList: java.util.Iterator iterator()>","<com.jaredrummler.android.processes.ProcessManager: java.util.List getRunningForegroundApps(android.content.Context)>","<java.util.ArrayList: boolean add(java.lang.Object)>","<com.jaredrummler.android.processes.ProcessManager: java.util.List getRunningAppProcesses()>"],"<zyqu.com.boostdroid.database.DateTimeManager: java.util.Date String2Date(java.lang.String)>":["<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>","<zyqu.com.boostdroid.database.DateTimeManager: void <clinit>()>"],"<com.jaredrummler.android.processes.ProcessManager: java.util.List getRunningForegroundApps(android.content.Context)>":["<java.io.File: java.io.File[] listFiles()>","<java.io.File: java.lang.String getName()>","<com.jaredrummler.android.processes.models.AndroidProcess: void <clinit>()>","<com.jaredrummler.android.processes.models.AndroidAppProcess: java.lang.String getPackageName()>","<java.util.ArrayList: boolean add(java.lang.Object)>","<java.lang.String: boolean contains(java.lang.CharSequence)>","<java.io.File: boolean isDirectory()>","<com.jaredrummler.android.processes.models.AndroidAppProcess: void <init>(int)>","<java.lang.Integer: void <clinit>()>","<java.lang.Integer: int parseInt(java.lang.String)>","<java.util.ArrayList: void <init>()>","<java.io.File: void <clinit>()>","<java.io.File: void <init>(java.lang.String)>","<com.jaredrummler.android.processes.models.AndroidAppProcess: void <clinit>()>"],"<com.astuetz.PagerSlidingTabStrip: void onRestoreInstanceState(android.os.Parcelable)>":["<android.widget.HorizontalScrollView: void requestLayout()>","<android.widget.HorizontalScrollView: void onRestoreInstanceState(android.os.Parcelable)>"],"<com.jaredrummler.android.processes.models.Stat$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<zyqu.com.boostdroid.Receiver.SleepReceiver: java.lang.String access$200()>":["<zyqu.com.boostdroid.Receiver.SleepReceiver: void <clinit>()>"],"<zyqu.com.boostdroid.database.SharedPreferenceManager: void logBootTime(android.content.Context)>":["<java.lang.System: long currentTimeMillis()>","<zyqu.com.boostdroid.database.SharedPreferenceManager: void <clinit>()>","<java.lang.System: void <clinit>()>","<zyqu.com.boostdroid.database.SharedPreferenceManager: android.content.SharedPreferences$Editor getSharedPreferenceditor(android.content.Context)>"],"<com.astuetz.PagerSlidingTabStrip: android.os.Parcelable onSaveInstanceState()>":["<com.astuetz.PagerSlidingTabStrip$SavedState: void <clinit>()>","<com.astuetz.PagerSlidingTabStrip$SavedState: void <init>(android.os.Parcelable)>","<android.view.View$BaseSavedState: void <clinit>()>","<android.widget.HorizontalScrollView: android.os.Parcelable onSaveInstanceState()>","<android.view.AbsSavedState: void <clinit>()>"],"<com.jaredrummler.android.processes.models.Cgroup: void <init>(java.lang.String)>":["<com.jaredrummler.android.processes.models.ControlGroup: void <init>(java.lang.String)>","<com.jaredrummler.android.processes.models.ProcFile: void <init>(java.lang.String)>","<java.lang.String: java.lang.String[] split(java.lang.String)>","<java.util.ArrayList: void <init>()>","<com.jaredrummler.android.processes.models.ControlGroup: void <clinit>()>","<java.util.ArrayList: boolean add(java.lang.Object)>"],"<zyqu.com.boostdroid.ProcessManager: int getMemoAvail(android.content.Context)>":["<android.app.ActivityManager$MemoryInfo: void <clinit>()>","<android.app.ActivityManager$MemoryInfo: void <init>()>"],"<zyqu.com.boostdroid.Receiver.BootReceiver: void <init>()>":["<android.content.BroadcastReceiver: void <init>()>"],"<java.lang.Integer: int parseInt(java.lang.String)>":["<java.lang.RuntimeException: void <init>(java.lang.String)>"],"<com.astuetz.PagerSlidingTabStrip$SavedState: void <init>(android.os.Parcelable)>":["<android.view.View$BaseSavedState: void <init>(android.os.Parcelable)>"],"<zyqu.com.boostdroid.database.SharedPreferenceManager: void <init>()>":["<java.lang.Object: void <init>()>"],"<com.astuetz.PagerSlidingTabStrip$SavedState$1: void <init>()>":["<java.lang.Object: void <init>()>"],"<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>":["<zyqu.com.boostdroid.Receiver.SleepReceiver$1: void run()>","<zyqu.com.boostdroid.LongService$1: void run()>"],"<zyqu.com.boostdroid.LongService: void <clinit>()>":["<zyqu.com.boostdroid.LongService: void <clinit>()>"]}